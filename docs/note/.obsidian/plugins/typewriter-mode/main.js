var ne=Object.defineProperty;var Oe=Object.getOwnPropertyDescriptor;var Ve=Object.getOwnPropertyNames;var We=Object.prototype.hasOwnProperty;var Be=(t,e)=>{for(var i in e)ne(t,i,{get:e[i],enumerable:!0})},Ie=(t,e,i,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of Ve(e))!We.call(t,s)&&s!==i&&ne(t,s,{get:()=>e[s],enumerable:!(r=Oe(e,s))||r.enumerable});return t};var Re=t=>Ie(ne({},"__esModule",{value:!0}),t);var qe={};Be(qe,{default:()=>Ke});module.exports=Re(qe);var G={version:null,isAnnounceUpdatesEnabled:!0,isPluginActivated:!0,isDisableInCanvasEnabled:!1,isTypewriterScrollEnabled:!0,isOnlyActivateAfterFirstInteractionEnabled:!1,isOnlyMaintainTypewriterOffsetWhenReachedEnabled:!1,isTypewriterOnlyUseCommandsEnabled:!1,typewriterOffset:.5,isKeepLinesAboveAndBelowEnabled:!1,linesAboveAndBelow:5,isMaxCharsPerLineEnabled:!1,maxCharsPerLine:64,isDimUnfocusedParagraphsEnabled:!1,dimUnfocusedEditorsBehavior:"dim",dimmedParagraphsOpacity:.25,isPauseDimUnfocusedParagraphsWhileScrollingEnabled:!0,isPauseDimUnfocusedParagraphsWhileSelectingEnabled:!0,isHighlightCurrentLineEnabled:!0,isHighlightCurrentLineOnlyInFocusedEditorEnabled:!1,currentLineHighlightStyle:"box",currentLineHighlightUnderlineThickness:1,"currentLineHighlightColor-dark":"#444","currentLineHighlightColor-light":"#ddd",doesWritingFocusShowHeader:!1,doesWritingFocusShowVignette:!0,isWritingFocusFullscreen:!0,writingFocusVignetteStyle:"box"};var u=require("obsidian");async function J(){return await(await fetch("https://raw.githubusercontent.com/davisriedel/obsidian-typewriter-mode/main/src/UpdateNotice.md")).text()}var f=class extends u.PluginSettingTab{plugin;constructor(e,i){super(e,i),this.plugin=i}display(){this.containerEl.empty(),this.containerEl.createEl("h2",{text:"Typewriter Mode Settings"}),this.containerEl.createEl("h3",{text:"Typewriter"});for(let e of Object.values(this.plugin.features.typewriter))e.registerSetting(this);this.containerEl.createEl("h3",{text:"Limit Line Width"});for(let e of Object.values(this.plugin.features.maxChar))e.registerSetting(this);this.containerEl.createEl("h3",{text:"Writing Focus"});for(let e of Object.values(this.plugin.features.writingFocus))e.registerSetting(this);this.containerEl.createEl("h3",{text:"Updates and Info"});for(let e of Object.values(this.plugin.features.updates))e.registerSetting(this);J().then(e=>{let i=this.containerEl.createDiv();this.containerEl.appendChild(i),u.MarkdownRenderer.renderMarkdown(e,i,this.app.vault.getRoot().path,new u.Component)})}};var ce=require("@codemirror/state"),l=ce.Facet.define({combine:t=>t.length===0?G:t[t.length-1]});var me=require("@codemirror/state"),w=class{constructor(e){this.view=e;this.onLoad(),this.domResizeObserver=new ResizeObserver(this.onResize.bind(this)),this.domResizeObserver.observe(this.view.dom.ownerDocument.body)}domResizeObserver=null;_isDisabled=null;isDisabled(){let{isPluginActivated:e}=this.view.state.facet(l);if(!e)return!0;if(this._isDisabled==null){let{isDisableInCanvasEnabled:i}=this.view.state.facet(l);this._isDisabled=i&&this.view.dom.ownerDocument.querySelector(".canvas-wrapper")!=null}return this._isDisabled}userEventAllowed(e){let{isTypewriterOnlyUseCommandsEnabled:i}=this.view.state.facet(l),r=/^(select|input|delete|undo|redo)(\..+)?$/,s=/^(select.pointer)$/;return i&&(r=/^(input|delete|undo|redo)(\..+)?$/,s=/^(select)(\..+)?$/),r.test(e)&&!s.test(e)}inspectTransactions(e){let i=[],r=!1;for(let a of e.transactions){a.reconfigured&&(r=!0);let d=a.annotation(me.Transaction.userEvent);d!==void 0&&i.push(d)}return i.length===0?{isReconfigured:r,isUserEvent:!1,allowedUserEvents:null}:{isReconfigured:!1,isUserEvent:!0,allowedUserEvents:i.reduce((a,d)=>a&&this.userEventAllowed(d),i.length>0)}}update(e){let{isReconfigured:i,isUserEvent:r,allowedUserEvents:s}=this.inspectTransactions(e);if(i&&this.onReconfigured(),!this.isDisabled()){if(!r){this.updateNonUserEvent();return}s?this.updateAllowedUserEvent():this.updateDisallowedUserEvent()}}onLoad(){}onReconfigured(){}updateAllowedUserEvent(){}updateDisallowedUserEvent(){}updateNonUserEvent(){}onResize(){}destroy(){var e;(e=this.domResizeObserver)==null||e.disconnect()}};var he=require("@codemirror/state"),y=he.Facet.define({combine:t=>t.length===0?{cssVariables:{},bodyAttrs:{},bodyClasses:[],persistentBodyClasses:[],allBodyClasses:[]}:t[t.length-1]});function p(t){return t.dom.ownerDocument.querySelector(".workspace-leaf.mod-active .cm-editor, .mod-inside-iframe .cm-editor")}function b(t){return t.dom.ownerDocument.querySelector(".workspace-leaf.mod-active .cm-scroller, .mod-inside-iframe .cm-scroller")}function ae(t){return t.dom.ownerDocument.querySelector(".workspace-leaf.mod-active .cm-sizer, .mod-inside-iframe .cm-sizer")}function fe(t,e){var i;return parseFloat((i=t.contentDOM.querySelector(".cm-active.cm-line"))==null?void 0:i.getCssPropertyValue(e).replace("px",""))}function ue(t){var s;let e=((s=t.coordsAtPos(t.state.selection.main.head))==null?void 0:s.top)??0,i=p(t);if(!i)return 0;let r=i.getBoundingClientRect().top;return e-r}function $e(t,e){let i=p(t);if(!i)return 0;let r=fe(t,"font-size"),s=t.state.facet(l).typewriterOffset,a=i.clientHeight*s,d=(e-r)/2;return a-d}function Ne(t){let e=fe(t,"line-height"),i=$e(t,e),r=ue(t),{isTypewriterScrollEnabled:s,isKeepLinesAboveAndBelowEnabled:a,isOnlyMaintainTypewriterOffsetWhenReachedEnabled:d}=t.state.facet(l),le=p(t),oe=b(t),m;if(!le||!oe)m=0;else if(s)m=i,d&&(m=oe.scrollTop+r<i?Math.min(i,r):i);else if(a){let{linesAboveAndBelow:de}=t.state.facet(l),pe=t.defaultLineHeight*de,ge=le.clientHeight-t.defaultLineHeight*(de+1),Ue=oe.scrollTop!==0&&r<pe,He=r>ge;Ue?m=pe:He?m=ge:m=r}else m=ue(t);return{typewriterOffset:i,scrollOffset:m,activeLineOffset:r,lineHeight:e}}function Q(t,e,i){t.requestMeasure({key:e,read:r=>Ne(r),write:(r,s)=>{window.requestAnimationFrame(()=>{i(r,s)})}})}var X=require("@codemirror/view");var we=X.ViewPlugin.fromClass(class extends w{isInitialInteraction=!0;isRenderingAllowedUserEvent=!1;onLoad(){super.onLoad(),window.addEventListener("moveByCommand",this.moveByCommand.bind(this)),this.watchEmbeddedMarkdown(),this.onReconfigured()}onReconfigured(){if(super.onReconfigured(),this.loadPerWindowProps(),this.isDisabled()){this.removeCurrentLineHighlight(),this.resetPadding(this.view);return}this.updateAfterExternalEvent()}watchEmbeddedMarkdown(){let t=".markdown-embed-content iframe.embed-iframe",e=this.view.state.facet(y);new MutationObserver(r=>{r.forEach(s=>{[].forEach.call(s.addedNodes,a=>{a.nodeType===Node.ELEMENT_NODE&&a.matches(t)&&this.loadPerWindowPropsOnElement(e,a.contentDocument.body)})})}).observe(this.view.dom.ownerDocument,{childList:!0,subtree:!0})}loadPerWindowPropsOnElement(t,e){console.log(t);for(let i of t.allBodyClasses)e.classList.remove(i);e.addClasses(t.persistentBodyClasses),this.isDisabled()||e.addClasses(t.bodyClasses),e.setCssProps(t.cssVariables),e.setAttrs(t.bodyAttrs)}getMarkdownBodies(){let t=this.view.dom.ownerDocument.querySelectorAll(".markdown-embed-content iframe.embed-iframe"),e=Array.from(t).map(i=>i.contentDocument.body);return[this.view.dom.ownerDocument.body,...e]}loadPerWindowProps(){let t=this.getMarkdownBodies(),e=this.view.state.facet(y);for(let i of t)this.loadPerWindowPropsOnElement(e,i)}removeCurrentLineHighlight(t=this.view){let e=p(t);if(!e)return;let i=e.querySelector(".ptm-current-line-highlight");i&&i.remove()}loadCurrentLineHighlight(t=this.view){let e=p(t);if(!e)return null;let i=e.querySelector(".ptm-current-line-highlight");if(!i){i=document.createElement("div");let r=t.state.facet(l);i.className=`ptm-current-line-highlight ptm-current-line-highlight-${r.currentLineHighlightStyle}`,e.appendChild(i)}return i}destroyCurrentLineHighlight(t=this.view){let e=p(t);if(!e)return;let i=e.querySelector(".ptm-current-line-highlight");i==null||i.remove()}setupWheelListener(){let t=b(this.view);t&&t.addEventListener("wheel",this.onWheel.bind(this))}updateAllowedUserEvent(){super.updateAllowedUserEvent();let t=p(this.view);t&&(t.classList.remove("ptm-wheel"),t.classList.remove("ptm-select"),this.isInitialInteraction&&(t.classList.remove("ptm-first-open"),this.isInitialInteraction=!1)),this.isRenderingAllowedUserEvent=!0,Q(this.view,"TypewriterModeUpdateAfterUserEvent",(e,i)=>{this.recenterAndMoveCurrentLineHighlight(i,e),this.isRenderingAllowedUserEvent=!1})}updateDisallowedUserEvent(){if(this.isRenderingAllowedUserEvent)return;super.updateDisallowedUserEvent();let t=p(this.view);t&&(this.isInitialInteraction&&(t.classList.remove("ptm-first-open"),this.isInitialInteraction=!1),t.classList.add("ptm-select")),Q(this.view,"TypewriterModeUpdateAfterUserEvent",({activeLineOffset:e,lineHeight:i},r)=>{let{isHighlightCurrentLineEnabled:s}=r.state.facet(l);s&&this.moveCurrentLineHighlight(r,e,i)})}updateNonUserEvent(){if(super.updateNonUserEvent(),!this.isInitialInteraction)return;let{isOnlyActivateAfterFirstInteractionEnabled:t}=this.view.state.facet(l);if(t){let e=p(this.view);e&&e.classList.add("ptm-first-open")}}moveByCommand(){let t=p(this.view);t&&t.classList.remove("ptm-select"),this.updateAllowedUserEvent()}onResize(){this.isDisabled()||(super.onResize(),this.updateAfterExternalEvent())}onWheel(){let t=p(this.view);t&&t.classList.add("ptm-wheel")}destroy(){super.destroy(),this.destroyCurrentLineHighlight();let t=b(this.view);t&&t.removeEventListener("wheel",this.onWheel),window.removeEventListener("moveByCommand",this.moveByCommand.bind(this))}updateAfterExternalEvent(){let{isTypewriterScrollEnabled:t}=this.view.state.facet(l);Q(this.view,"TypewriterModeUpdateAfterExternalEvent",(e,i)=>{this.setupWheelListener(),t&&this.setPadding(i,e.typewriterOffset),this.recenterAndMoveCurrentLineHighlight(i,e)})}moveCurrentLineHighlight(t,e,i){let r=this.loadCurrentLineHighlight(t);r&&(r.style.height=`${i}px`,r.style.top=`${e}px`)}setPadding(t,e){let{isOnlyMaintainTypewriterOffsetWhenReachedEnabled:i}=t.state.facet(l),r=ae(t);r&&(r.style.padding=i?`0 0 ${e}px 0`:`${e}px 0`)}resetPadding(t){let e=ae(t);e&&(e.style.padding="var(--file-margins)")}recenter(t,e){let i=t.state.selection.main.head,r=X.EditorView.scrollIntoView(i,{y:"start",yMargin:e}),s=t.state.update({effects:r});t.dispatch(s)}recenterAndMoveCurrentLineHighlight(t,{scrollOffset:e,lineHeight:i}){let{isTypewriterScrollEnabled:r,isKeepLinesAboveAndBelowEnabled:s,isHighlightCurrentLineEnabled:a}=t.state.facet(l);(r||s)&&this.recenter(t,e),a&&this.moveCurrentLineHighlight(t,e,i)}});var ke=require("obsidian");var ye=require("obsidian"),Z=require("obsidian");async function ze(t,e,i){let r=await fetch(`https://api.github.com/repos/${t}/${e}/releases`),s=await r.json();if(!r.ok&&"message"in s||!Array.isArray(s))throw new Error(`Failed to fetch releases: ${s.message??"Unknown error"}`);if(i==null)return s.filter(d=>!d.draft&&!d.prerelease);let a=s.findIndex(d=>d.tag_name===i);if(a===-1)throw new Error(`Could not find release with tag ${i}`);return s.slice(0,a).filter(d=>!d.draft&&!d.prerelease)}var Y=class extends Z.Modal{releases;updateNotice;constructor(e){super(app),ze("davisriedel","obsidian-typewriter-mode",e).then(i=>{if(this.releases=i,this.releases.length===0){this.close();return}J().then(r=>{this.updateNotice=r,this.display()}).catch(r=>{console.log(`Failed to fetch update notice: ${r}`),this.close()})}).catch(i=>{console.log(`Failed to fetch release notes: ${i}`),this.close()})}onOpen(){let{contentEl:e}=this;e.empty(),e.createEl("h1",{text:"Fetching release notes..."})}onClose(){let{contentEl:e}=this;e.empty()}display(){let{contentEl:e}=this;e.empty(),e.classList.add("ptm-update-modal-container");let i=e.createDiv("ptm-update-modal"),r=this.releases.map(a=>`### ${a.tag_name}

${a.body}`).join(`
---
`),s=`# Typewriter Mode updated to v${this.releases[0].tag_name}

${this.updateNotice}

## What's new?

Here's what's new since the last version you had installed:

---

${r}`;Z.MarkdownRenderer.renderMarkdown(s,i,app.vault.getRoot().path,new ye.Component)}};var c=class{constructor(e){this.plugin=e}load(){}};var n=class extends c{enable(){}disable(){}isSettingEnabled(){return this.plugin.settings.isPluginActivated}};var be=require("obsidian"),o=class extends n{toggleClass=null;isToggleClassPersistent=!1;commandTitle;getToggleClass(){return this.toggleClass}registerCommand(){this.hasCommand&&this.plugin.addCommand({id:this.setting,name:this.commandTitle,callback:this.toggle.bind(this)})}registerSetting(e){new be.Setting(e.containerEl).setName(this.settingTitle).setDesc(this.settingDesc).setClass("typewriter-mode-setting").addToggle(i=>i.setValue(this.plugin.settings[this.setting]).onChange(r=>{this.toggle(r),e.display()})).setDisabled(!this.isSettingEnabled())}load(){this.registerCommand(),this.plugin.settings[this.setting]?this.enable():this.disable()}toggle(e=null){let i=e;i===null&&(i=!this.plugin.settings[this.setting]),this.plugin.settings={...this.plugin.settings,[this.setting]:i},i?this.enable():this.disable(),this.plugin.saveSettings().then()}enable(){if(this.toggleClass){let e=this.isToggleClassPersistent?"persistentBodyClasses":"bodyClasses";this.plugin.perWindowProps[e].contains(this.toggleClass)||this.plugin.perWindowProps[e].push(this.toggleClass)}}disable(){if(this.toggleClass){let e=this.isToggleClassPersistent?"persistentBodyClasses":"bodyClasses";this.plugin.perWindowProps[e].remove(this.toggleClass)}}};function ve(t){return t.charAt(0).toUpperCase()+t.slice(1)}var ee=class extends c{load(){for(let e of["up","down"])this.plugin.addCommand({id:`move-typewriter-${e}`,name:`Move typewriter ${e}`,hotkeys:[{modifiers:["Mod"],key:e==="up"?"ArrowUp":"ArrowDown"}],editorCallback:(i,r)=>this.onCommand(i,e)})}onCommand(e,i){e.exec(`go${ve(i)}`),window.dispatchEvent(new Event("moveByCommand"))}};var g=class extends c{registerCommand(){this.plugin.addCommand({id:this.commandKey,name:this.commandTitle,callback:this.onCommand.bind(this)})}load(){this.registerCommand()}};var te=class extends g{commandKey="typewriter-scrolling-and-paragraph-dimming";commandTitle="Toggle typewriter scrolling and paragraph dimming";onCommand(){let{isTypewriterScrollEnabled:e,isDimUnfocusedParagraphsEnabled:i}=this.plugin.settings,r=e&&i;this.plugin.features.typewriter.TypewriterScroll.toggle(!r),this.plugin.features.typewriter.DimUnfocusedParagraphs.toggle(!r)}};var ie=class extends g{commandKey="writing-focus";commandTitle="Toggle writing focus";focusModeActive=!1;maximizedClass="ptm-maximized";focusModeClass="ptm-focus-mode";hideHeaderClass="ptm-writing-focus-no-header";vignetteElClass="ptm-writing-focus-vignette-element";vignetteStyleAttr="data-ptm-writing-focus-vignette-style";leftSplitCollapsed;rightSplitCollapsed;onCommand(){this.toggleFocusMode()}addVignette(e){let i=this.plugin.settings.doesWritingFocusShowHeader?e.containerEl:e.contentEl;i.classList.add(this.vignetteElClass),i.setAttr(this.vignetteStyleAttr,this.plugin.settings.writingFocusVignetteStyle)}removeVignette(e){let i=this.plugin.settings.doesWritingFocusShowHeader?e.containerEl:e.contentEl;i.removeAttribute(this.vignetteStyleAttr),i.classList.remove(this.vignetteElClass)}startFullscreen(){document.body.requestFullscreen()}exitFullscreen(){document.exitFullscreen().then()}onExitFullscreenWritingFocus(e){this.focusModeActive&&this.disableFocusMode(e)}storeSplitsValues(){this.leftSplitCollapsed=this.plugin.app.workspace.leftSplit.collapsed,this.rightSplitCollapsed=this.plugin.app.workspace.rightSplit.collapsed}collapseSplits(){this.plugin.app.workspace.leftSplit.collapse(),this.plugin.app.workspace.rightSplit.collapse()}restoreSplits(){this.leftSplitCollapsed||this.plugin.app.workspace.leftSplit.expand(),this.rightSplitCollapsed||this.plugin.app.workspace.rightSplit.expand()}removeExtraneousClasses(){this.plugin.app.workspace.containerEl.hasClass(this.maximizedClass)&&this.plugin.app.workspace.containerEl.removeClass(this.maximizedClass),document.body.classList.contains(this.focusModeClass)&&document.body.classList.remove(this.focusModeClass),document.body.classList.contains(this.hideHeaderClass)&&document.body.classList.remove(this.hideHeaderClass)}enableFocusMode(e){this.focusModeActive=!0,document.body.classList.contains(this.focusModeClass)||this.storeSplitsValues(),this.collapseSplits(),this.plugin.app.workspace.containerEl.toggleClass(this.maximizedClass,!this.plugin.app.workspace.containerEl.hasClass(this.maximizedClass)),document.body.classList.toggle(this.focusModeClass,!document.body.classList.contains(this.focusModeClass)),this.plugin.settings.doesWritingFocusShowHeader||document.body.classList.toggle(this.hideHeaderClass,!document.body.classList.contains(this.hideHeaderClass)),document.body.classList.contains(this.focusModeClass)&&Array.from(document.querySelectorAll(`.${this.focusModeClass} .workspace-split`)).forEach(i=>{let r=i;r.querySelector(".mod-active")?r.style.display="flex":r.style.display="none"}),this.plugin.settings.doesWritingFocusShowVignette&&this.addVignette(e),this.plugin.settings.isWritingFocusFullscreen&&this.startFullscreen()}disableFocusMode(e){this.removeExtraneousClasses(),document.body.classList.contains(this.focusModeClass)&&document.body.classList.remove(this.focusModeClass),this.restoreSplits(),Array.from(document.querySelectorAll(".workspace-split")).forEach(i=>{let r=i;r.style.display="flex"}),this.plugin.settings.doesWritingFocusShowVignette&&this.removeVignette(e),this.plugin.settings.isWritingFocusFullscreen&&this.exitFullscreen(),this.focusModeActive=!1}toggleFocusMode(){this.plugin.settings.isWritingFocusFullscreen&&(document.body.onfullscreenchange=()=>{document.fullscreenElement||this.onExitFullscreenWritingFocus(i)});let i=this.plugin.app.workspace.activeLeaf.view;i.getViewType()!=="empty"&&(this.focusModeActive?this.disableFocusMode(i):this.enableFocusMode(i))}async onload(){this.plugin.addRibbonIcon("enter","Toggle Writing Focus",e=>{this.toggleFocusMode()})}};var re=class extends g{commandKey="toggle-paragraph-dimming";commandTitle="Toggle paragraph dimming";onCommand(){let{isDimUnfocusedParagraphsEnabled:e}=this.plugin.settings;this.plugin.features.typewriter.DimUnfocusedParagraphs.toggle(!e)}};var se=class extends g{commandKey="toggle-typewriter";commandTitle="Toggle typewriter scrolling";onCommand(){let{isTypewriterScrollEnabled:e}=this.plugin.settings;this.plugin.features.typewriter.TypewriterScroll.toggle(!e)}};function Se(t){return[new se(t),new re(t),new te(t),new ee(t),new ie(t)].reduce((e,i)=>({...e,[i.constructor.name]:i}),{})}var Te=require("obsidian"),h=class extends n{setting;themeMode;constructor(e,i){super(e),this.themeMode=i,this.setting=`currentLineHighlightColor-${i}`}registerSetting(e){new Te.Setting(e.containerEl).setName(`Current line highlight color in ${this.themeMode} themes`).setDesc(`The color of the current line highlight in ${this.themeMode} themes`).setClass("typewriter-mode-setting").addText(i=>i.setValue(this.plugin.settings[this.setting]).onChange(r=>{this.changeCurrentLineHighlightColor(r)})).setDisabled(!this.isSettingEnabled())}load(){this.plugin.setCSSVariable(`--current-line-highlight-color-${this.themeMode}`,`${this.plugin.settings[this.setting]}`)}changeCurrentLineHighlightColor(e){this.plugin.settings[this.setting]=e,this.plugin.setCSSVariable(`--current-line-highlight-color-${this.themeMode}`,`${e}`),this.plugin.saveSettings().then()}isSettingEnabled(){return super.isSettingEnabled()&&this.plugin.settings.isHighlightCurrentLineEnabled}};var v=class extends h{constructor(e){super(e,"dark")}};var S=class extends h{constructor(e){super(e,"light")}};var Ee=require("obsidian"),T=class extends n{setting="currentLineHighlightStyle";registerSetting(e){new Ee.Setting(e.containerEl).setName("Current line highlight style").setDesc("The style of the current line highlight").setClass("typewriter-mode-setting").addDropdown(i=>i.addOption("box","Box").addOption("underline","Underline").setValue(this.plugin.settings.currentLineHighlightStyle).onChange(r=>{this.changeCurrentLineHighlightStyle(r),e.display()})).setDisabled(!this.isSettingEnabled())}changeCurrentLineHighlightStyle(e){this.plugin.settings.currentLineHighlightStyle=e,this.plugin.saveSettings().then()}isSettingEnabled(){return super.isSettingEnabled()&&this.plugin.settings.isHighlightCurrentLineEnabled}};var Ce=require("obsidian"),E=class extends n{setting="currentLineHighlightUnderlineThickness";registerSetting(e){new Ce.Setting(e.containerEl).setName("Current line underline thickness").setDesc("The thickness of the underline that highlights the current line").setClass("typewriter-mode-setting").addSlider(i=>i.setLimits(1,5,1).setDynamicTooltip().setValue(this.plugin.settings.currentLineHighlightUnderlineThickness).onChange(r=>{this.changeCurrentLineHighlightUnderlineThickness(r)})).setDisabled(!this.isSettingEnabled())}load(){this.plugin.setCSSVariable("--current-line-highlight-underline-thickness",`${this.plugin.settings.currentLineHighlightUnderlineThickness}px`)}changeCurrentLineHighlightUnderlineThickness(e){this.plugin.settings.currentLineHighlightUnderlineThickness=e,this.plugin.setCSSVariable("--current-line-highlight-underline-thickness",`${e}px`),this.plugin.saveSettings()}isSettingEnabled(){return super.isSettingEnabled()&&this.plugin.settings.isHighlightCurrentLineEnabled}};var Me=require("obsidian"),C=class extends n{setting="dimUnfocusedEditorsBehavior";registerSetting(e){new Me.Setting(e.containerEl).setName("Paragraph dimming behavior in unfocused notes").setDesc("How to dim paragraphs in notes / editors that your cursor is not on (e.g. if you have multiple notes open in split panes)").setClass("typewriter-mode-setting").addDropdown(i=>i.addOption("dim-none","Do not dim any paragraph").addOption("dim","Dim all but the previously focused paragraph").addOption("dim-all","Dim all paragraphs").setValue(this.plugin.settings.dimUnfocusedEditorsBehavior).onChange(r=>{this.changeDimUnfocusedEditorsBehavior(r),e.display()})).setDisabled(!this.isSettingEnabled())}load(){super.load(),this.plugin.perWindowProps.bodyAttrs["data-ptm-dim-unfocused-editors-behavior"]=this.plugin.settings.dimUnfocusedEditorsBehavior}changeDimUnfocusedEditorsBehavior(e){this.plugin.settings.dimUnfocusedEditorsBehavior=e,this.plugin.perWindowProps.bodyAttrs["data-ptm-dim-unfocused-editors-behavior"]=e,this.plugin.saveSettings().then()}isSettingEnabled(){return super.isSettingEnabled()&&this.plugin.settings.isDimUnfocusedParagraphsEnabled}};var M=class extends o{setting="isDimUnfocusedParagraphsEnabled";toggleClass="ptm-dim-unfocused-paragraphs";hasCommand=!0;commandTitle="Toggle dimming unfocused paragraphs";settingTitle="Dim unfocused paragraphs";settingDesc="Darkens unfocused paragraphs in the editor"};var xe=require("obsidian"),x=class extends n{setting="dimmedParagraphsOpacity";registerSetting(e){new xe.Setting(e.containerEl).setName("Opacity of dimmed paragraphs").setDesc("The opacity of dimmed paragraphs").setClass("typewriter-mode-setting").addSlider(i=>i.setLimits(0,100,5).setDynamicTooltip().setValue(this.plugin.settings.dimmedParagraphsOpacity*100).onChange(r=>{this.changeDimmedParagraphsOpacity(r/100)})).setDisabled(!this.isSettingEnabled())}load(){this.plugin.setCSSVariable("--dimmed-paragraphs-opacity",`${this.plugin.settings.dimmedParagraphsOpacity}`)}changeDimmedParagraphsOpacity(e=.25){this.plugin.settings.dimmedParagraphsOpacity=e,this.plugin.setCSSVariable("--dimmed-paragraphs-opacity",`${e}`),this.plugin.saveSettings()}isSettingEnabled(){return super.isSettingEnabled()&&this.plugin.settings.isDimUnfocusedParagraphsEnabled}};var P=class extends o{setting="isHighlightCurrentLineEnabled";toggleClass="ptm-highlight-current-line";hasCommand=!0;commandTitle="Toggle highlight current line";settingTitle="Highlight current line";settingDesc="Highlights the line that the cursor is currently on"};var D=class extends o{setting="isHighlightCurrentLineOnlyInFocusedEditorEnabled";toggleClass="ptm-highlight-current-line-only-in-active-editor";hasCommand=!1;settingTitle="Highlight current line only in focused note";settingDesc="Only show highlighted line in the note your cursor is on (e.g. if you have multiple notes open in split panes)";isSettingEnabled(){return super.isSettingEnabled()&&this.plugin.settings.isHighlightCurrentLineEnabled}};var L=class extends o{setting="isKeepLinesAboveAndBelowEnabled";hasCommand=!0;commandTitle="Toggle keeping lines above and below";settingTitle="Keep lines above and below";settingDesc="When enabled, always keeps the specified amount of lines above and below the current line in view";isSettingEnabled(){return super.isSettingEnabled()&&!this.plugin.settings.isTypewriterScrollEnabled}};var F=class extends o{setting="isMaxCharsPerLineEnabled";toggleClass="ptm-max-chars-per-line";isToggleClassPersistent=!0;hasCommand=!0;commandTitle="Toggle maximum number of characters per line";settingTitle="Limit maximum number of characters per line";settingDesc="Limits the maximum number of characters per line";isSettingEnabled(){return!0}};var Pe=require("obsidian"),A=class extends n{setting="linesAboveAndBelow";registerSetting(e){new Pe.Setting(e.containerEl).setName("Amount of lines above and below the current line").setDesc("The amount of lines to always keep above and below the current line").setClass("typewriter-mode-setting").addText(i=>i.setValue(this.plugin.settings.linesAboveAndBelow.toString()).onChange(r=>{this.changeAmountOfLinesAboveAndBelow(parseInt(r))})).setDisabled(!this.isSettingEnabled())}changeAmountOfLinesAboveAndBelow(e){this.plugin.settings.linesAboveAndBelow=e,this.plugin.saveSettings().then()}isSettingEnabled(){return super.isSettingEnabled()&&!this.plugin.settings.isTypewriterScrollEnabled&&this.plugin.settings.isKeepLinesAboveAndBelowEnabled}};var De=require("obsidian"),k=class extends n{setting="maxCharsPerLine";registerSetting(e){new De.Setting(e.containerEl).setName("Maximum number of characters per line").setDesc("The maximum number of characters per line").setClass("typewriter-mode-setting").addText(i=>i.setValue(this.plugin.settings.maxCharsPerLine.toString()).onChange(r=>{this.changeMaxCharsPerLine(parseInt(r))})).setDisabled(!this.isSettingEnabled())}load(){this.plugin.setCSSVariable("--max-chars-per-line",`${this.plugin.settings.maxCharsPerLine}ch`)}changeMaxCharsPerLine(e){this.plugin.settings.maxCharsPerLine=e,this.plugin.setCSSVariable("--max-chars-per-line",`${e}ch`),this.plugin.saveSettings()}isSettingEnabled(){return this.plugin.settings.isMaxCharsPerLineEnabled}};var U=class extends o{setting="isOnlyActivateAfterFirstInteractionEnabled";hasCommand=!1;settingTitle="Only activate after first interaction";settingDesc="Activate the focused line highlight and paragraph dimming only after the first interaction with the editor"};var H=class extends o{setting="isOnlyMaintainTypewriterOffsetWhenReachedEnabled";hasCommand=!1;settingTitle="Only maintain typewriter offset when reached";settingDesc="The line that the cursor is on will not be scrolled to the center of the editor until it the specified typewriter offset is reached. This removes the additional space at the top of the editor.";isSettingEnabled(){return super.isSettingEnabled()&&this.plugin.settings.isTypewriterScrollEnabled}};var O=class extends o{setting="isPauseDimUnfocusedParagraphsWhileScrollingEnabled";toggleClass="ptm-dim-unfocused-paragraphs-pause-while-scrolling";hasCommand=!1;settingTitle="Pause dimming unfocused paragraphs while scrolling";settingDesc="If this is enabled, paragraphs are not dimmed while scrolling";isSettingEnabled(){return super.isSettingEnabled()&&this.plugin.settings.isDimUnfocusedParagraphsEnabled}};var V=class extends o{setting="isPauseDimUnfocusedParagraphsWhileSelectingEnabled";toggleClass="ptm-dim-unfocused-paragraphs-pause-while-selecting";hasCommand=!1;settingTitle="Pause dimming unfocused paragraphs while selecting text";settingDesc="If this is enabled, paragraphs are not dimmed while selecting text";isSettingEnabled(){return super.isSettingEnabled()&&this.plugin.settings.isDimUnfocusedParagraphsEnabled}};var Le=require("obsidian"),W=class extends n{setting="typewriterOffset";registerSetting(e){new Le.Setting(e.containerEl).setName("Typewriter offset").setDesc("Positions the typewriter line at the specified percentage of the screen").setClass("typewriter-mode-setting").addSlider(i=>i.setLimits(0,100,5).setDynamicTooltip().setValue(this.plugin.settings.typewriterOffset*100).onChange(r=>{this.changeTypewriterOffset(r/100)})).setDisabled(!this.isSettingEnabled())}changeTypewriterOffset(e){this.plugin.settings.typewriterOffset=e,this.plugin.saveSettings().then()}isSettingEnabled(){return super.isSettingEnabled()&&this.plugin.settings.isTypewriterScrollEnabled}};var B=class extends o{setting="isTypewriterOnlyUseCommandsEnabled";toggleClass="ptm-typewriter-only-use-commands";hasCommand=!1;settingTitle="Do not snap typewriter with arrow keys";settingDesc="The typewriter will only snap when using this plugin's move commands. It will not snap when using the arrow keys. The move commands are by default Cmd/Ctrl+ArrowUp/ArrowDown, but you can assign your own hotkeys for the move commands in Obsidian's settings.";isSettingEnabled(){return super.isSettingEnabled()&&this.plugin.settings.isTypewriterScrollEnabled}};var I=class extends o{setting="isTypewriterScrollEnabled";toggleClass="ptm-typewriter-scroll";hasCommand=!0;commandTitle="Toggle typewriter scrolling";settingTitle="Typewriter scrolling";settingDesc="Turns typewriter scrolling on or off";isSettingEnabled(){return super.isSettingEnabled()&&!this.plugin.settings.isKeepLinesAboveAndBelowEnabled}};var R=class extends o{setting="doesWritingFocusShowHeader";hasCommand=!1;settingTitle="Show header in writing focus";settingDesc="If enabled, the header will be shown in writing focus";isSettingEnabled(){return!0}};var $=class extends o{setting="doesWritingFocusShowVignette";hasCommand=!1;settingTitle="Writing focus vignette";settingDesc="Add a vignette to the edges of the screen in writing focus";isSettingEnabled(){return!0}};var Fe=require("obsidian"),N=class extends n{setting="writingFocusVignetteStyle";registerSetting(e){new Fe.Setting(e.containerEl).setName("Writing focus vignette style").setDesc("The style of the vignette in writing focus mode").setClass("typewriter-mode-setting").addDropdown(i=>i.addOption("box","Box").addOption("column","Column").setValue(this.plugin.settings.writingFocusVignetteStyle).onChange(r=>{this.changeVignetteStyle(r),e.display()})).setDisabled(!this.isSettingEnabled())}changeVignetteStyle(e){this.plugin.settings.writingFocusVignetteStyle=e,this.plugin.saveSettings().then()}isSettingEnabled(){return this.plugin.settings.doesWritingFocusShowVignette}};var z=class extends o{setting="isAnnounceUpdatesEnabled";toggleClass="ptm-announce-updates";hasCommand=!1;settingTitle="Announce updates";settingDesc="If enabled you will get a notice with release notes whenever you install a new version of Typewriter Mode"};var K=class extends o{setting="isDisableInCanvasEnabled";toggleClass="ptm-is-disabled-in-canvas";hasCommand=!1;settingTitle="Disable the plugin in canvas";settingDesc="This will disable the plugin completely in canvas"};var q=class extends o{setting="isPluginActivated";toggleClass="ptm-plugin-activated";hasCommand=!0;commandTitle="Toggle on / off";settingTitle="Activate Typewriter Mode";settingDesc="This enables or disables all the features below.";isSettingEnabled(){return!0}};var _=class extends o{setting="isWritingFocusFullscreen";hasCommand=!1;settingTitle="Make Obsidian fullscreen in writing focus";settingDesc="If enabled, the Obsidian window will toggle to fullscreen when entering writing focus";isSettingEnabled(){return!0}};function Ae(t){return{maxChar:[new F(t),new k(t)].reduce((e,i)=>({...e,[i.constructor.name]:i}),{}),writingFocus:[new R(t),new _(t),new $(t),new N(t)].reduce((e,i)=>({...e,[i.constructor.name]:i}),{}),typewriter:[new q(t),new K(t),new I(t),new W(t),new H(t),new B(t),new L(t),new A(t),new P(t),new S(t),new v(t),new T(t),new E(t),new D(t),new M(t),new x(t),new O(t),new V(t),new C(t),new U(t)].reduce((e,i)=>({...e,[i.constructor.name]:i}),{}),updates:[new z(t)].reduce((e,i)=>({...e,[i.constructor.name]:i}),{})}}var j=class extends ke.Plugin{settings;perWindowProps={cssVariables:{},bodyClasses:[],bodyAttrs:{},allBodyClasses:[],persistentBodyClasses:[]};editorExtensions=[we,[]];features=Ae(this);commands=Se(this);async onload(){let e=await this.loadData();this.settings=Object.assign(G,e),this.perWindowProps.allBodyClasses=[];for(let i of Object.values(this.features))for(let r of Object.values(i))if(r.load(),r instanceof o){let s=r.getToggleClass();s&&this.perWindowProps.allBodyClasses.push(s)}for(let i of Object.values(this.commands))i.load();this.addSettingTab(new f(this.app,this)),this.updateFacets(),this.registerEditorExtension(this.editorExtensions),this.announceUpdate()}onunload(){for(let e of Object.values(this.features))for(let i of Object.values(e))i.disable()}updateFacets(){this.editorExtensions[1]=[l.of(this.settings),y.of(this.perWindowProps)]}async saveSettings(){await this.saveData(this.settings),this.updateFacets(),this.app.workspace.updateOptions()}setCSSVariable(e,i){this.perWindowProps.cssVariables[e]=i}announceUpdate(){let e=this.manifest.version,i=this.settings.version;if(e===i||(this.settings.version=e,this.saveSettings().then(),this.settings.isAnnounceUpdatesEnabled===!1))return;new Y(i).open()}};var Ke=j;
