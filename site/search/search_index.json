{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"notes/DMPT/00-Preface/","title":"00 Preface","text":"<p>DMPT\uff0c\u5373 Discrete Mathematics and Probability Theory\uff0c\u662f\u6211\u5728\u6821\u5185\u8bfe\u7a0b\u4fe1\u606f\u5b89\u5168\u539f\u7406\u4e0e\u6570\u5b66\u57fa\u7840\u4e2d\u6240\u5b66\u4e60\u7684\u4e3b\u8981\u5185\u5bb9\uff08\u4fe1\u606f\u5b89\u5168\u539f\u7406\u90e8\u5206\u591a\u4e3a\u4e50\u5b50\uff0czbs \u8001\u5e08\u7684\u8001\u4e1a\u52a1\u4e86\uff0c\u6709\u5174\u8da3\u4e0d\u59a8\u53bb\u542c\u542c\uff09\uff0c~~\u542c\u8bfe~~\u7684\u540c\u65f6\u5b66\u4e60\u4e86 CS70 at UC Berkeley, Spring 2024 \uff0c\u7b14\u8bb0\u4e2d\u7edd\u5927\u591a\u6570\u5185\u5bb9\u6765\u6e90\u4e8e\u6b64\u3002</p> <p>\u52aa\u529b\u9002\u5e94\u4f7f\u7528\u82f1\u8bed\u4e2d\uff0c\u603b\u4f53\u4e0a\u4f7f\u7528\u82f1\u8bed\u8bb0\u5f55\uff0c\u5fc5\u8981\u65f6\u4f7f\u7528\u4e2d\u6587\uff08\u603b\u4e0d\u80fd\u770b\u4e0d\u61c2\u5f3a\u884c copy\uff0c\u7b49\u590d\u4e60\u7684\u65f6\u5019\u6293\u8033\u6320\u816e\u5427\u2026\u2026\uff09</p> <p>\u4e0b\u9762\u662f\u4e00\u4e9b\u5728\u7b14\u8bb0\u4e2d\u51fa\u73b0\u4f46\u662f\u6bd4\u8f83\u6742\u4e71\u7684\u77e5\u8bc6\u70b9\uff1a</p> <p>abbreviation</p> <p>i.e. \u8bcd\u6e90\u662f\u62c9\u4e01\u8bed id est \uff0c\u82f1\u6587\u542b\u4e49\u4e3a that is/in other words\uff08\u5373/\u6362\u800c\u8a00\u4e4b\uff09\u3002\u6587\u7ae0\u4e2d\u53ef\u4ee5\u76f4\u63a5\u8bfb\u5b57\u6bcd\u97f3i.e,\u5168\u79f0\u53ef\u4ee5\u6309\u7167\u610f\u5927\u5229\u8bed\u7684\u8bfb\u97f3\u6765\u8bfb/id est/ e.g. \u62c9\u4e01\u8bed\u5168\u79f0 exempli gratia\uff0c\u82f1\u6587\u542b\u4e49\u4e3a for example/example given\uff08\u4e3e\u4e2a\u4f8b\u5b50\uff09\u3002\u6587\u7ae0\u4e2d\u53ef\u4ee5\u76f4\u63a5\u8bfb\u5b57\u6bcd\u97f3e.g,\u5168\u79f0\u8bfb\u97f3/\u026a\u0261\u02c8zempl\u026a \u02c8\u0261r\u0251\u02d0t\u026a\u02cc\u0251\u02d0/ etc. \u62c9\u4e01\u8bed\u5168\u79f0 et cetera\uff0c\u82f1\u6587\u542b\u4e49\u4e3a and so on/and the rest of the things\uff08\u7b49\u7b49\uff09\u6587\u7ae0\u4e2d\u8bfb\u97f3 /\u02ccet \u02c8set\u0259r\u0259; \u02cc\u026at \u02c8set\u0259r\u0259/ a.k.a. \u662f\"also know as\"\u7684\u7f29\u5199 \u8d44\u6599\u6765\u6e90\uff1a<code>https://www.zhihu.com/question/19670514/answer/1663667884</code> </p>","tags":["notes","D"]},{"location":"notes/DMPT/01-Propositional%20Logic/","title":"01 Propositional Logic","text":"<p>\u590d\u4e60 PPT \u8865\u5168\u7b14\u8bb0</p>"},{"location":"notes/DMPT/01-Propositional%20Logic/#i-introduce","title":"I Introduce","text":""},{"location":"notes/DMPT/01-Propositional%20Logic/#i1-truth-tables","title":"I.1 truth tables","text":"<p>Determine whether the following equivalences hold, by writing out truth tables.</p> <p>Here are some examples:     (we can also use Boolean algebra which is convenient)</p>"},{"location":"notes/DMPT/01-Propositional%20Logic/#i2-base-notations","title":"I.2 base notations","text":"<p>Our first building block is the notion of a proposition, which is simply a statement which is either true or false. For example </p> <p>What we should know: 1. Conjunction: P\u2227Q (\u201cP and Q\u201d). True only when both P and Q are true. 2. Disjunction: P\u2228Q (\u201cP or Q\u201d). True when at least one of P and Q is true. 3. Negation: \u00acP (\u201cnot P\u201d). True when P is false. 4. Implication: P \u21d2 Q (\u201cP implies Q\u201d). This is the same as \u201cIf P, then Q.\u201d**  (Detailed reason omission)  </p> <ol> <li>quantifiers: The universal quantifier \u2200 (\u201cfor all\u201d) and the existential quantifier \u2203 (\u201cthere exists\u201d).</li> </ol> <p>We often write a proposition in the form of something like (\u2200x \u2208 Z)(\u2203y \u2208 Z)(x &lt; y)</p> <ol> <li>when we think of two kinds of writing as equivalent, we say something like</li> <li>\u00ac(P\u2227Q) \u2261 (\u00acP\u2228 \u00acQ)</li> <li> <p>\u00ac(P\u2228Q) \u2261 (\u00acP\u2227 \u00acQ) Of course, these two formulas should be remembered since they tell us how to negate conjunctions and disjunctions</p> </li> <li> <p>about P\u2192Q, the truth table is shown below:(<code>0</code> stands for F while <code>1</code> stands for T)</p> </li> </ol> P Q P\u2192Q 0 0 1 0 1 1 1 0 0 1 1 1 8. about P\u2194Q, the truth table is shown below:(<code>0</code> stands for F while <code>1</code> stands for T) P Q P\u2194Q 0 0 1 0 1 0 1 0 0 1 1 1 ### I.3 priority of operations <p>1.\u00a0\u62ec\u53f7\u00a0()\uff1a\u65e0\u8bba\u5728\u54ea\u4e2a\u9886\u57df\uff0c\u62ec\u53f7\u59cb\u7ec8\u5177\u6709\u6700\u9ad8\u7684\u4f18\u5148\u7ea7\uff0c\u7528\u4e8e\u6539\u53d8\u9ed8\u8ba4\u7684\u4f18\u5148\u7ea7\u987a\u5e8f\u3002 2.\u00a0\u975e\u00a0~\u00a0\u00a0!\uff1a\u5728\u903b\u8f91\u8fd0\u7b97\u4e2d\uff0c\u5426\u5b9a\uff08\u903b\u8f91\u975e\u3001\u4f4d\u975e\uff09\u901a\u5e38\u5177\u6709\u8f83\u9ad8\u7684\u4f18\u5148\u7ea7\u3002 3.\u00a0\u4e0e\u00a0\u2227\uff1a\u8fd9\u5305\u62ec\u903b\u8f91\u4e0e\uff08AND\uff09\u3001\u4f4d\u4e0e\uff08&amp;\uff09\u3002\u5728\u6ca1\u6709\u62ec\u53f7\u6539\u53d8\u987a\u5e8f\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u4eec\u901a\u5e38\u5728\u5426\u5b9a\u4e4b\u540e\u7acb\u5373\u8bc4\u4f30\u3002 4.\u00a0\u5f02\u6216\u00a0\u2295\uff1a\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u9700\u8981\u8003\u8651\u5f02\u6216\u8fd0\u7b97\uff08XOR\uff09\uff0c\u5b83\u53ef\u80fd\u5728\u4e0e\u8fd0\u7b97\u548c\u6216\u8fd0\u7b97\u4e4b\u95f4\u3002 5.\u00a0\u6216\u00a0\u2228\uff1a\u8fd9\u5305\u62ec\u903b\u8f91\u6216\uff08OR\uff09\u3001\u4f4d\u6216\uff08|\uff09\u3002\u5b83\u4eec\u5728\u903b\u8f91\u4e0e\u4e4b\u540e\u8fdb\u884c\u8bc4\u4f30\u3002 6.\u00a0\u6761\u4ef6\u00a0\u2192\uff1a\u5982\u8574\u542b\uff08\u2192\uff09\u901a\u5e38\u4f18\u5148\u7ea7\u8f83\u4f4e\u3002 7.\u00a0\u53cc\u6761\u4ef6\u2194\uff1a\u53cc\u6761\u4ef6\uff08\u2194\uff09\u901a\u5e38\u5177\u6709\u6700\u4f4e\u7684\u4f18\u5148\u7ea7</p>"},{"location":"notes/DMPT/01-Propositional%20Logic/#must-memorize-formula","title":"Must memorize formula","text":""},{"location":"notes/DMPT/01-Propositional%20Logic/#logical-implication","title":"logical\u00a0implication","text":""},{"location":"notes/DMPT/01-Propositional%20Logic/#ii-practice","title":"II Practice","text":"<p>We need a lot of insight into propositions rather than just grasping concepts</p> <p>For every real number k, there is a unique real solution to $x^{3}$ = k. (\u2200k \u2208 R) (\u2203x \u2208 R)(x 3 = k)\u2227(\u2200y,z \u2208 R)(((y 3 = k)\u2227(z 3 = k)) \u21d2 (y = z)) .</p>"},{"location":"notes/DMPT/02-Proof/","title":"02 Proof","text":""},{"location":"notes/DMPT/02-Proof/#four-proof-technologies","title":"Four proof technologies","text":"<p>We will follow below (omitted for direct proof ):</p> <p>Note that the first line of our proof stated our proof technique \u2014 this is good practice for any proof, similar to how commenting code is good practice when programming.</p>"},{"location":"notes/DMPT/02-Proof/#direct-proof","title":"Direct proof\uff08\u76f4\u63a5\u8bc1\u660e\uff09","text":"<p> \u76f4\u63a5\u8bc1\u660e\uff0c\u5373\u4ece\u5df2\u77e5\u6761\u4ef6 P \u76f4\u63a5\u63a8\u7406\u8bc1\u660e\u7ed3\u8bba Q\uff0c\u65e0\u9700\u591a\u8a00</p> <p>Theorem 1 the sum of the digits of n is divisible by 3 $\\iff$ n is divisible by 3</p> <p>\u8fd9\u4e2a\u5b9a\u7406\u6211\u4eec\u81ea\u5c0f\u5b66\u5c31\u542c\u8fc7\u4f1a\u7528\uff0c\u5982\u4f55\u8bc1\u660e\uff1f</p> <p>proof of T 1  \u53d6 $a_1\u3001a_2\u3001\\cdots\u3001a_{n} \\in N^{+}$\uff0c\u90a3\u4e48 <code>the sum of the digits of n</code> \u4e5f\u5c31\u662f $\\sum a_{k}$ \uff0c\u4efb\u610f\u4e00\u4e2a\u6574\u6570\u53ef\u4ee5\u8868\u793a\u4e3a $$ n=\\sum_{k = 0}^{n} a_{k}10^{k}=\\sum a_{k}+\\sum_{k=1}^{n}a_{k}\\omega_{k}   $$ \u5176\u4e2d $\\omega_{k}$ \u662f\u4e00\u4e2a\u5404\u4f4d\u5747\u4e3a 9 \u7684 k \u4f4d\u6570\uff0c\u663e\u7136\u53ef\u88ab 3 \u6574\u9664\uff0c\u90a3\u4e48\u7ed3\u8bba\u663e\u7136\u4e86\u3002</p>"},{"location":"notes/DMPT/02-Proof/#proof-by-contraposition","title":"Proof by Contraposition\uff08\u5bf9\u4f4d\u8bc1\u660e\uff09","text":"<p> \u5bf9\u4f4d\u8bc1\u660e\uff0c\u65e2\u662f\u6c42\u8bc1\u5176\u9006\u5426\u547d\u9898\uff08\u5b83\u4e0e\u539f\u547d\u9898\u7684\u771f\u5047\u6027\u662f\u4e00\u81f4\u7684\uff09</p> <p>Theorem 2  (Pigeonhole Principle). Let n and k be positive integers. Place n objects into k boxes. If n &gt; k, then at least one box must contain multiple objects</p> <p>^44f2f4</p> <p>\u8fd9\u662f\u201c\u9e3d\u5de2\u539f\u7406\u201d\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u719f\u77e5\u7684\u201c\u62bd\u5c49\u539f\u7406\u201d\uff0c\u53cd\u8bc1\u6cd5\u5f53\u7136\u53ef\u4ee5\uff0c\u4f46\u6211\u4eec\u5c1d\u8bd5\u4f7f\u7528\u5bf9\u4f4d\u8bc1\u660e</p> <p>proof of T 2 proceed by contraposition If all boxes contain at most one object, then the number of objects is at most the number of boxes,  i.e.(== namely), n \u2264 k.</p>"},{"location":"notes/DMPT/02-Proof/#proof-by-contradiction","title":"Proof by Contradiction(\u77db\u76fe\u8bc1\u660e)","text":"<p>\u77db\u76fe\u8bc1\u660e\uff08\u5373\u53cd\u8bc1\u6cd5\uff09\u4e5f\u662f\u6bd4\u8f83\u719f\u6089\u7684\uff0c\u5373\u5047\u8bbe\u7ed3\u8bba Q \u4e0d\u6210\u7acb\uff0c\u53d1\u73b0\u6761\u4ef6 P \u662f\u201c\u4e0d\u5bf9\u7684\u201d\uff0c\u8bf4\u660e\u5047\u8bbe\u4e0d\u6210\u7acb\uff0c\u5373\u7ed3\u8bba Q \u6210\u7acb</p> <p>Theorem 3 There are infinitely many prime numbers.</p> <p>A subsidiary result that is useful in a more complex proof is called a lemma some of famous lemmas: the Pumping Lemma and the Lifting Lemma</p> <p>understand a simple lemma before we start to proof:</p> <p>Lemma 1 Every natural number greater than one is either prime or has a prime divisor</p> <p><code>one</code> is standing for <code>1</code></p> <p>\u7b80\u5355\u6765\u8bf4\u5373\u201c\u6240\u6709\u5927\u4e8e 1 \u7684\u6574\u6570\u4e0d\u662f\u7d20\u6570\u5c31\u662f\u7d20\u6570\u7684\u500d\u6570\u201d</p> <p>proof of T 3 proceed by contradiction  Suppose that Theorem 2.6 is false, i.e. that there are only finitely many primes, say k of them.   Then, we can enumerate them: p1, p2, p3, . . . , pk. Now, define number q := p1 p2 p3 . . . pk + 1, which is the product of all primes plus one. We claim that q cannot be prime. Why? Because by definition, it is larger than all the primes p1 through pk! By Lemma 2.1, we therefore conclude that q has a prime divisor, p. This will be our statement R.   Next, because p1, p2, p3, . . . , pk are all the primes, p must be equal to one of them; thus, p divides r := p1 p2 p3 . . . pk. Hence, p | q and p | r, implying p | (q \u2212 r). But q \u2212 r = 1, implying p \u2264 1, and hence p is not prime; this is the statement \u00acR. We thus have R \u2227 \u00acR, which is a contradiction, as desired.</p> <p>\u540c\u65f6\u6211\u4eec\u4e5f\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u7ed3\u8bba\uff1a\u5c0f\u4e8e\u4e00\u4e2a\u6709\u9650\u6570\u7684\u6240\u6709\u7d20\u6570\u7684\u4e58\u79ef\u52a0 1 \u540e\u4e00\u5b9a\u4e5f\u662f\u7d20\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u63a8\u51fa\u65e0\u6570\u4e2a\u7d20\u6570\u6765\uff08\u5f53\u7136\uff0c\u4e0d\u80fd\u4fdd\u8bc1\u8986\u76d6\u5230\u6bcf\u4e2a\u7d20\u6570\uff09</p> <p>How to proof that $\\sqrt{ 2 }$ is an irrational number? </p> <p>Exercise 1 Prove that if there are n \u2265 2 people at a party, then at least 2 of them have the same number of friends at the party. Assume that friendships are always reciprocated: that is, if Alice is friends with Bob, then Bob is also friends with Alice.</p> <p>proof proceed by contradiction using Pigeonhole Principle Suppose the contrary that everyone has a different number of friends at the party. Since the number of friends that each person can have ranges from 0 to n\u22121, we conclude that for every i \u2208 {0,1,...,n\u22121},  there is exactly one person who has exactly i friends at the party. In particular, there is one person who has n\u22121 friends (i.e., friends with everyone), is friends with a person who has 0 friends (i.e., friends with no one). This is a contradiction since friendship is mutual.</p>"},{"location":"notes/DMPT/02-Proof/#proof-by-cases","title":"Proof by Cases\uff08\u6848\u4f8b\u8bc1\u660e\uff09","text":"<p>Specifically, the idea behind a proof by cases is as follows:  Sometimes when we wish to prove a claim, we don\u2019t know which of a set of possible cases is true, but we know that at least one of the cases is true. What we can do then is to prove the result in both cases; then, clearly the general statement must hold</p> <p>\u7b80\u5355\u6765\u8bf4\uff0c\u5bf9\u4e8e\u4e00\u4e2a\uff08\u5b58\u5728\u6027\uff09\u547d\u9898\uff0c\u6211\u4eec\u80fd\u591f\u4e3e\u51fa\u591a\u79cd\u60c5\u51b5\uff08\u80fd\u5c06\u6240\u6709\u53ef\u80fd\u6027\u5305\u62ec\uff09\uff0c\u5e76\u8bc1\u660e\u81f3\u5c11\u6709\u4e00\u79cd\u662f\u6210\u7acb\u7684\uff0c\u90a3\u4e48\uff0c\u8fd9\u4e2a\u547d\u9898\u6210\u7acb</p> <p>Theorem 4 There exist irrational numbers x and y such that xy is rational</p> <p>proof of T 4 proceed by cases  attention, we don't assert which x ($\\sqrt{ 2 }$ or $\\sqrt{ 2 }^{\\sqrt{ 2 }}$) is right when y = $\\sqrt{ 2 }$ , but one of them must satisfy the theorem.</p>"},{"location":"notes/DMPT/02-Proof/#some-lessons","title":"Some lessons","text":"<ul> <li>Lesson #1: When writing proofs, do not assume the claim you aim to prove!</li> <li>Lesson #2 is about the number zero: In particular, never forget to consider the case where your variables take on the value 0.</li> <li>Lesson #3 says to be careful when mixing negative numbers and inequalities.</li> </ul>"},{"location":"notes/DMPT/03-Mathematical%20Induction/","title":"03 Mathematical Induction","text":""},{"location":"notes/DMPT/03-Mathematical%20Induction/#i-introduce","title":"I Introduce","text":"<p>In short, mathematical induction just likes domino, one pushes another.</p> <p>three simple steps: 1. Base Case: Prove that P(0) is true.  2. Induction Hypothesis: For arbitrary k \u2265 0, assume that P(k) is true. 3. Inductive Step: With the assumption of the Induction Hypothesis in hand, show that P(k + 1) is true</p> <p>Theorem 1 For all $n\\in N, n^{3}-n$ is divisible by 3.</p> <p>**proof ** proceed by induction  (In fact, we can proof it by cases since $n^{3}-n=(n-1)n(n+1)$, and one of the factors on the right side of the equation must be a multiple of 3, then we get it.)</p> <p>We now consider a more advanced proof by induction, which establishes a simplified version of the famous four color theorem. But it is too difficult for us to proof. Let's change it easier:</p> <p>Theorem 2 (Two Color Theorem) our \u201cmap\u201d is given by a rectangle which is divided into regions by drawing straight lines, such that each line divides the rectangle into two regions, then:using no more than two colors (say, red and blue) such that no two bordering regions have the same color(below is an example case)\\ </p> <p>proof proceed by induction we set n as the number of lines 1. Base Case (n = 0):  Clearly P(0) holds, since if we have n = 0 lines we can color the entire map using a single color. 2. Induction Hypothesis:  For some arbitrary n = k \u2265 0, assume P(k). 3. Inductive Step: Whenever we add a line, that is, P(k+1), we can always prove that P(k+1) is true by swapping parts of red and blue (as shown below)</p>"},{"location":"notes/DMPT/03-Mathematical%20Induction/#ii-strengthening-the-induction-hypothesis","title":"II Strengthening the Induction Hypothesis","text":"<p>Sometimes, our Induction Hypothesis is too \u201cweak\u201d; it does not give us enough structure to say anything meaningful, for example:</p> <p>Theorem 3 For all n \u2265 1, the sum of the first n odd numbers is a perfect square.</p> <p>In fact, we can not proof it directly. The reason is that this claim did not capture the true structure of the underlying fact we were trying to prove \u2014 it was too vague. As a result, our Induction Hypothesis wasn\u2019t strong enough to prove our desired result.</p> <p>Let us try to show the following stronger claim. </p> <p>Theorem 3'  For all n \u2265 1, the sum of the first n odd numbers is $n^{2}$ . (It is easy to proof by induction)</p>"},{"location":"notes/DMPT/03-Mathematical%20Induction/#iii-strong-induction","title":"III Strong Induction","text":"<p>Sometimes we can solve the question difficultly by using P(k) solely, that's why strong induction appears.</p> <p>strong induction: we assume the stronger statement that P(0), P(1), . . . , and P(k) are all true  </p> <p>Is there a difference between the power of strong and weak induction, i.e., can strong induction prove statements which weak induction cannot? No! Intuitively, this can be seen by returning to our dominoanalogy.</p> <p>Theorem 4  Every natural number n &gt; 1 can be written as a product of one or more primes.</p> <p>proof proceed by induction and cases Let P(n) be the proposition that n can be written as a product of primes. We will prove that P(n) is true for all n \u2265 2.  1. Base Case (n = 2): We start at n = 2. Clearly P(2) holds, since 2 is a prime number.  2. Induction Hypothesis: Assume P(n) is true for all 2 \u2264 n \u2264 k. 3. Inductive Step: Prove that n = k +1 can be written as a product of primes. We have two cases: either k +1 is a prime number, or it is not.</p> <p>For the first case, if k +1 is a prime number, then we are done since k +1 is trivially the product of one prime (itself).  For the second case, if k + 1 is not a prime number, then by definition k + 1 = xy for some x,y \u2208 Z + satisfying 1 &lt; x, y &lt; k + 1. By the Induction Hypothesis, x and y can each be written as a product of primes (since x, y \u2264 k). But this implies that k +1 can also be written as a product of primes. Then, we get it.</p> <p>(Recursion, programming and induction are also mentioned here, but these will be covered in <code>FDS</code>, so we'll skip them)</p>"},{"location":"notes/DMPT/03-Mathematical%20Induction/#iv-false-proofs","title":"IV False proofs","text":"<p>Let's look at one of history's most famous false proofs which makes us laugh:</p> <p>False theorem All horses are the same color</p> <p>proof proceed by induction 1. Base Case (n = 1): P(1) is certainly true, since if you have a set containing just one horse, all horses in the set have the same color. 2. Induction Hypothesis: Assume P(n) holds for some arbitrary n \u2265 1.  3. Inductive Step: Given a set of n + 1 horses {h1,h2,...,hn+1}, we can exclude the last horse in the set and apply the induction hypothesis just to the first n horses {h1,...,hn}, deducing that they all have the same color. Similarly, we can conclude that the last n horses {h2,...,hn+1} all have the same color. But now the \u201cmiddle\u201d horses {h2,...,hn} (i.e., all but the first and the last) belong to both of these sets, so they have the same color as horse h1 and horse hn+1. It follows, therefore, that all n+1 horses have the same color. We conclude, by the principle of induction, that all horses have the same color.</p>"},{"location":"notes/DMPT/04-undefined/","title":"04 undefined","text":""},{"location":"notes/DMPT/04-undefined/#the-stable-matching-problem","title":"The Stable Matching Problem","text":"<p>The Stable Matching Problem is described below </p>"},{"location":"notes/DMPT/04-undefined/#the-propose-and-reject-algorithm","title":"The Propose-and-Reject Algorithm","text":"<p>(a.k.a. the Gale-Shapley algorithm) We think of the algorithm as proceeding in \u201cdays\u201d to have a clear unambiguous sense of discrete time.</p> <p>Every Morning: Each job proposes (i.e. makes an offer) to the most preferred candidate on its list who has not yet rejected this job.  Every Afternoon: Each candidate collects all the offers she received in the morning; to the job offer she likes best among these, she responds \u201cmaybe\u201d (she now has it in hand or on a string), and to the other offers she says \u201cno\u201d (i.e., she rejects them). (This is just a way for us to virtually model that there are no \u201cexploding offers\u201d and a job can\u2019t withdraw an offer once an offer is made.)  Every Evening: Each rejected job crosses off the candidate who rejected its offer from its list. </p> <p>The above loop is repeated each successive day until there are no offers rejected. At that point, each candidate has a job offer in hand (i.e. on a string); and on this day, each candidate accepts their offered job (i.e. the job offer she has in hand) and the algorithm terminates.</p> <p>Let\u2019s understand the algorithm by running it on our example above. </p>"},{"location":"notes/DMPT/04-undefined/#properties-of-the-propose-and-reject-algorithm","title":"Properties of the Propose-and-Reject Algorithm","text":"<p>There are two properties we wish to show about the propose-and-reject algorithm:  - First, that it doesn\u2019t run forever, i.e., it halts; (it is easy to proof) - and second, that it outputs a \u201cgood\u201d (i.e., stable) matching. We are going to talk about how good it is.</p>"},{"location":"notes/DMPT/04-undefined/#stability","title":"Stability","text":"<p>too difficult!</p>"},{"location":"notes/DMPT/04-undefined/#analysis","title":"Analysis","text":""},{"location":"notes/DMPT/HW/hw-week2/","title":"Hw week2","text":"<p>(1) - P \u8868\u793a\u660e\u5929\u6674\u5230\u591a\u4e91\u3002 - Q \u8868\u793a\u897f\u5317\u98ce\u56db\u7ea7\u3002  - \u8fd9\u4e2a\u53e5\u5b50\u53ef\u4ee5\u8868\u793a\u4e3a P\u2227Q\u3002 (2) - R \u8868\u793a\u5171\u4ea7\u515a\u5b58\u5728\u3002 - S \u8868\u793a\u65b0\u4e2d\u56fd\u5b58\u5728\u3002  - \u8fd9\u4e2a\u53e5\u5b50\u53ef\u4ee5\u8868\u793a\u4e3a R\u2192S\u3002 (3) \u8bb0 P(x)\u5f53\u4e14\u4ec5\u5f53 x \u662f\u7d20\u6570\u65f6\u4e3a\u771f \u8fd9\u4e2a\u53e5\u5b50\u53ef\u4ee5\u8868\u793a\u4e3a \u00ac ( \u00ac ( P(2)\u2227P(4)))</p> <p>  \u4f9d\u6b21\u5982\u4e0b\u6240\u793a\uff0c\u7531\u771f\u503c\u8868\u77e5\u5747\u6210\u7acb (1)P\u2192(Q\u2192R)=Q\u2192(P\u2192R)</p> P Q R Q\u2192R P\u2192(Q\u2192R) P\u2192R Q\u2192(P\u2192R) T T T T T T T T T F F F F F T F T T T T T T F F T T F T F T T T T T T F T F F T F T F F T T T T T F F F T T T T (2)(P\u2192Q)\u2227(R\u2192Q)=(P\u2228R)\u2192Q P Q R P\u2192Q R\u2192Q (P\u2192Q)\u2227(R\u2192Q) P\u2228R (P\u2228R)\u2192Q T T T T T T T T T T F T T T T T T F T F T F T F T F F F T F T F F T T T T T T T F T F T T T F T F F T T F F T F F F F T T T F T (3)P\u2192Q=\u00acP\u2228Q P Q P\u2192Q \u00acP\u2228Q T T T T T F F F F T T T F F T T (4)(P\u2228Q)\u2227\u00acP=\u00acP\u2227Q P Q P\u2228Q \u00acP (P\u2228Q)\u2227\u00acP \u00acP\u2227Q T T T F F F T F T F F F F T T T T T F F F T F F <p> \u4e0d\u96be\u5f97\u77e5\uff1aP Q \u4e3a\u771f\u547d\u9898\uff1bR \u4e3a\u5047\u547d\u9898\uff0c\u90a3\u4e48\uff1a \uff081\uff09\u5047\u547d\u9898\uff0c\u7531 P\u2228Q \u4e3a\u771f\u3001R \u4e3a\u5047\u5f97\uff081\uff09\u4e3a\u5047 \uff084\uff09\u5047\u547d\u9898\uff0c\u7531 R\u2227P \u4e3a\u5047\u3001Q \u4e3a\u771f\u5f97\uff084\uff09\u4e3a\u5047</p> <p></p> <ol> <li>\u00ac(P\u2228\u00acQ)</li> </ol> P Q \u00acQ P\u2228\u00acQ \u00ac(\u00ac(P\u2228\u00acQ) T T F T F T F T T F F T F F T F F T T F \u6210\u771f\u8d4b\u503c\uff1a\u5f53 P \u4e3a\u5047\uff0c Q \u4e3a\u771f\u65f6 \u6210\u5047\u8d4b\u503c\uff1a\u5f53 P \u4e3a\u771f\uff0c Q \u4e3a\u5047\u65f6 <ol> <li>P\u2227(Q\u2228R)</li> </ol> P Q R Q\u2228R P\u2227(Q\u2228R) T T T T T T T F T T T F T T T T F F F F F T T T F F T F T F F F T T F F F F F F \u6210\u771f\u8d4b\u503c\uff1a\u5f53 P \u4e3a\u771f\u4e14 Q \u6216 R \u4e4b\u4e00\u4e3a\u771f\u65f6 \u6210\u5047\u8d4b\u503c\uff1a\u5f53 P \u4e3a\u5047\u6216 Q \u548c R \u5747\u4e3a\u5047\u65f6 <ol> <li>\u00ac(P\u2228Q)\u2194(\u00acP\u2227\u00acQ)</li> </ol> P Q P\u2228Q \u00ac(P\u2228Q) \u00acP \u00acQ \u00acP\u2227\u00acQ \u00ac(P\u2228Q)\u2194(\u00acP\u2227\u00acQ) T T T F F F F T T F T F F T F T F T T F T F F T F F F T T T T T \u6240\u6709\u7684\u8d4b\u503c\u90fd\u662f\u6210\u771f\u8d4b\u503c"}]}