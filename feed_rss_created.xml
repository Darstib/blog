<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"> <channel><title>My_blog</title><link>https://darstib.github.io/blog/</link><atom:link href="https://darstib.github.io/blog/feed_rss_created.xml" rel="self" type="application/rss+xml" /><docs>https://github.com/Darstib/blog</docs><language>zh</language> <pubDate>Fri, 24 May 2024 03:22:23 -0000</pubDate> <lastBuildDate>Fri, 24 May 2024 03:22:23 -0000</lastBuildDate> <ttl>1440</ttl> <generator>MkDocs RSS plugin - v1.12.2</generator> <item> <title>Misc notes</title> <category>blog</category> <description>&lt;hr&gt;&lt;p&gt;今天花了一整个白天做了下面这些事：&lt;/p&gt;&lt;p&gt;按照顺序是：&lt;/p&gt;&lt;p&gt;想白嫖 &lt;a href=&#34;https://chatgpt.com/&#34;&gt;chatgpt-4&lt;/a&gt; =&amp;gt; 需要代理定位到可行地区 =（基于目前在用的 warp+ 的密钥）=&amp;gt; 配置wireguard =（需要 wg-config.conf 文件）=&amp;gt; &lt;a href=&#34;https://replit.com/@misaka-blog/wgcf-profile-generator#main.sh&#34;&gt;replit&lt;/a&gt; 脚本失效，telegram 可直接生成该文件 =&amp;gt; 让朋友用他的 telegram 帮忙搞了个文件 =&amp;gt; 依旧不能改定位，但是发现使用优选 ip 后连接稳定，且访问更加迅速（使用 youtube 测试）&lt;/p&gt;&lt;p&gt;尝试著名的 clash for windows/clash verge （笔者用了后者），需要订阅链接 =&amp;gt; clashfree 搞了个免费的 =&amp;gt; 使用美国节点可行，chatgpt 到手&lt;/p&gt;&lt;p&gt;发现可以用&lt;/p&gt;</description><link>https://darstib.github.io/blog/2024/05/23/misc-notes/</link> <pubDate>Thu, 23 May 2024 00:00:00 +0000</pubDate><source url="https://darstib.github.io/blog/feed_rss_created.xml">My_blog</source><guid isPermaLink="true">https://darstib.github.io/blog/2024/05/23/misc-notes/</guid> </item> <item> <title>Make pdf with typst</title> <category>blog</category> <description>&lt;hr&gt;&lt;p&gt;配置 latex 的环境真是折磨，如果只是想写一个美观工整的 pdf，为什么不试试 &lt;a href=&#34;https://typst.app/&#34;&gt;typst&lt;/a&gt; 呢&lt;/p&gt;</description><link>https://darstib.github.io/blog/2024/05/18/make-pdf-with-typst/</link> <pubDate>Sat, 18 May 2024 00:00:00 +0000</pubDate><source url="https://darstib.github.io/blog/feed_rss_created.xml">My_blog</source><guid isPermaLink="true">https://darstib.github.io/blog/2024/05/18/make-pdf-with-typst/</guid> </item> <item> <title>Where is my ipv6</title> <category>blog</category> <description>&lt;hr&gt;&lt;p&gt;之前在 &lt;a href=&#34;https://mem.ac/about/&#34;&gt;memset 0&lt;/a&gt; 推荐下使用 sunshine+moonlight 串流，在校园网（局域网）的加成下使用平板远程控制电脑，期间我利用到 ipv6 让平板访问到电脑，但是昨天在 &lt;strong&gt;cmd&lt;/strong&gt; 中键入 &lt;code&gt;ipconfig&lt;/code&gt; 发现 ipv6 不见了，这下咋办？&lt;/p&gt;</description><link>https://darstib.github.io/blog/2024/05/15/where-is-my-ipv6/</link> <pubDate>Wed, 15 May 2024 00:00:00 +0000</pubDate><source url="https://darstib.github.io/blog/feed_rss_created.xml">My_blog</source><guid isPermaLink="true">https://darstib.github.io/blog/2024/05/15/where-is-my-ipv6/</guid> </item> <item> <title>some material in MCM</title> <category>blog</category> <description>&lt;hr&gt;&lt;p&gt;随便参加个&lt;a href=&#34;http://kyjs.zju.edu.cn/home/competition/detail?competitionId=400&#34;&gt;学校的数模竞赛&lt;/a&gt;体验一下，然后收集了一些资料（暂时没甄别，简单的筛选了一番）；以及存放了基本的信息（如赛题），以免到处翻来翻去&lt;/p&gt;</description><link>https://darstib.github.io/blog/2024/05/13/some-material-in-mcm/</link> <pubDate>Mon, 13 May 2024 00:00:00 +0000</pubDate><source url="https://darstib.github.io/blog/feed_rss_created.xml">My_blog</source><guid isPermaLink="true">https://darstib.github.io/blog/2024/05/13/some-material-in-mcm/</guid> </item> <item> <title>somenotes in MCM</title> <category>blog</category> <description>&lt;hr&gt;&lt;p&gt;这里记一些参加学校数学建模竞赛过程中学习的一些东西&lt;/p&gt;</description><link>https://darstib.github.io/blog/2024/05/13/somenotes-in-mcm/</link> <pubDate>Mon, 13 May 2024 00:00:00 +0000</pubDate><source url="https://darstib.github.io/blog/feed_rss_created.xml">My_blog</source><guid isPermaLink="true">https://darstib.github.io/blog/2024/05/13/somenotes-in-mcm/</guid> </item> <item> <title>Building my new blog(notebook)</title> <category>blog</category> <description>&lt;hr&gt;&lt;p&gt;记录一下建站过程&lt;/p&gt;</description><link>https://darstib.github.io/blog/2024/05/11/building-my-new-blognotebook/</link> <pubDate>Sat, 11 May 2024 00:00:00 +0000</pubDate><source url="https://darstib.github.io/blog/feed_rss_created.xml">My_blog</source><guid isPermaLink="true">https://darstib.github.io/blog/2024/05/11/building-my-new-blognotebook/</guid> </item> <item> <title>1 3 Git</title> <category>blog</category> <category>git</category> <description>&lt;hr&gt;&lt;p&gt;在“计算机系统” 系列课程中，我们不可避免地使用到课程仓库，而期间频频发生的错误让我绝望（例如将写了一整天的 lab3 保存不当在 &lt;code&gt;git pull&lt;/code&gt; 后全部丢失 QWQ），亦或是在修改后出现因未提交修改而不能够 &lt;code&gt;git pull&lt;/code&gt; 等情况……故决定相对系统地学习一番&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;虽然放在 MIT 系列中，但是本文是学习 &lt;a href=&#34;https://note.tonycrane.cc/&#34;&gt;鹤翔万里&lt;/a&gt; 等学长学姐们根据 MIT 改编的更适合中国宝宝体质的 Git 教程的笔记，原文链接放在文末&lt;/p&gt;&lt;/blockquote&gt;</description><link>https://darstib.github.io/blog/2024/04/05/1-3-git/</link> <pubDate>Fri, 05 Apr 2024 00:00:00 +0000</pubDate><source url="https://darstib.github.io/blog/feed_rss_created.xml">My_blog</source><guid isPermaLink="true">https://darstib.github.io/blog/2024/04/05/1-3-git/</guid> </item> <item> <title>2 1 Emmet</title> <category>blog</category> <category>web</category> <description>&lt;hr&gt;&lt;p&gt;纯手动写一整个网页会累死的，那么多 &lt;code&gt;&amp;lt; / &amp;gt;&lt;/code&gt; 都够喝一壶的了，于是有了 &lt;strong&gt;Emmet&lt;/strong&gt; 语法。&lt;/p&gt;&lt;p&gt;简而言之，Emmet 是 html 等语法的缩写格式，可以显著提高我们写前端的速度。&lt;/p&gt;</description><link>https://darstib.github.io/blog/2024/04/05/2-1-emmet/</link> <pubDate>Fri, 05 Apr 2024 00:00:00 +0000</pubDate><source url="https://darstib.github.io/blog/feed_rss_created.xml">My_blog</source><guid isPermaLink="true">https://darstib.github.io/blog/2024/04/05/2-1-emmet/</guid> </item> <item> <title>2 0 Perface of Network Frontend</title> <category>blog</category> <category>web</category> <description>&lt;hr&gt;&lt;p&gt;以此为序，我想要写一写我的前端学习过程，主要会包括 html, javascript, php 以及一些工具的使用。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;浏览器：Google browser（当然其他浏览器大差不差）&lt;/p&gt;&lt;/blockquote&gt;</description><link>https://darstib.github.io/blog/2024/04/04/2-0-perface-of-network-frontend/</link> <pubDate>Thu, 04 Apr 2024 00:00:00 +0000</pubDate><source url="https://darstib.github.io/blog/feed_rss_created.xml">My_blog</source><guid isPermaLink="true">https://darstib.github.io/blog/2024/04/04/2-0-perface-of-network-frontend/</guid> </item> <item> <title>Disable copilot on windows 11 temporarily</title> <category>blog</category> <description>&lt;hr&gt;&lt;p&gt;最近在 windows 11 更新后，任务栏中出现了一个 &lt;strong&gt;copilot&lt;/strong&gt; ，基于仍然是试用期，而且大陆不能直接访问，懒得用了，放那也碍眼，所以就直接找了个法子暂时让 copilot disable 了，在此记录备忘。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;操作系统：windows 11 家庭版（专业版等也有）&lt;/p&gt;&lt;/blockquote&gt;</description><link>https://darstib.github.io/blog/2024/04/01/disable-copilot-on-windows-11-temporarily/</link> <pubDate>Mon, 01 Apr 2024 00:00:00 +0000</pubDate><source url="https://darstib.github.io/blog/feed_rss_created.xml">My_blog</source><guid isPermaLink="true">https://darstib.github.io/blog/2024/04/01/disable-copilot-on-windows-11-temporarily/</guid> </item> <item> <title>K way merge algorithm</title> <category>blog</category> <description>&lt;hr&gt;&lt;p&gt;如果我们想要对超过内存最大容量的数据进行排序，就需要用到外部排序(External sort)，一个比较有效的方法就是 k-way merge algorithm.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;实现语言：C&lt;/p&gt;&lt;p&gt;知识条件：掌握了合并排序（Merge sort）&lt;/p&gt;&lt;/blockquote&gt;</description><link>https://darstib.github.io/blog/2024/03/23/k-way-merge-algorithm/</link> <pubDate>Sat, 23 Mar 2024 00:00:00 +0000</pubDate><source url="https://darstib.github.io/blog/feed_rss_created.xml">My_blog</source><guid isPermaLink="true">https://darstib.github.io/blog/2024/03/23/k-way-merge-algorithm/</guid> </item> <item> <title>change version of GCC in WSL</title> <category>blog</category> <description>&lt;hr&gt;&lt;p&gt;在 FDS 的第一次 project 中，因我和 PR 的同学 gcc 编译器不同导致跑出来的数据不同给我扣了分，所以我打算学习如何在 WSL 中更换 GCC 的版本&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;WSL(ubuntu22.04) &amp;amp; vscode&lt;/p&gt;&lt;/blockquote&gt;</description><link>https://darstib.github.io/blog/2024/03/22/change-version-of-gcc-in-wsl/</link> <pubDate>Fri, 22 Mar 2024 00:00:00 +0000</pubDate><source url="https://darstib.github.io/blog/feed_rss_created.xml">My_blog</source><guid isPermaLink="true">https://darstib.github.io/blog/2024/03/22/change-version-of-gcc-in-wsl/</guid> </item> <item> <title>Using Mkdocs for writing</title> <description>&lt;p&gt;在使用 Mkdocs 作博客笔记时，发现其他人的文章有一些比较有意思的格式，美观方便，故学习参考，此处主要记录用法备忘，具体配置请转移至&lt;a href=&#34;https://squidfunk.github.io/mkdocs-material/reference/&#34;&gt;官方文档&lt;/a&gt; 进行查看，我只会给出基本的配置教程；大多数格式都是可以嵌套使用的，文中不会过多提及，请自行探索。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;TonyCrane 学长写了一份详尽的&lt;a href=&#34;https://hypotensor.tonycrane.cc/ta/&#34;&gt;降压宝典&lt;/a&gt; ，旨在完善细节以便呈现更好地效果，有兴趣可以看看&lt;/p&gt;&lt;/blockquote&gt;</description><link>https://darstib.github.io/blog/2024/03/19/using-mkdocs-for-writing/</link> <pubDate>Tue, 19 Mar 2024 00:00:00 +0000</pubDate><source url="https://darstib.github.io/blog/feed_rss_created.xml">My_blog</source><guid isPermaLink="true">https://darstib.github.io/blog/2024/03/19/using-mkdocs-for-writing/</guid> </item> <item> <title>Why I connect wifi but can&#39;t use it &amp; how can delete a .iso document when it is used by system？</title> <category>DNS</category> <category>blog</category> <description>&lt;hr&gt;&lt;p&gt;今天碰到两件令我非常着急的事情&lt;/p&gt;&lt;ul&gt;&lt;li&gt;一个是 wifi 连接但是访问网站不可行，电脑自查发现“DNS 服务器未响应”（猜测代理导致）&lt;/li&gt;&lt;li&gt;一个是我在配置 latex 环境时跟着教程打开了.iso 文件，后来想要换 WSL，然后它赖在我的资源管理器不走了，白吃我 6 个 G 硬盘&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;操作系统：windows 11&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;下面是我的解决方法（主要备忘，不一定适用于您的环境）：&lt;/p&gt;</description><link>https://darstib.github.io/blog/2024/03/18/why-i-connect-wifi-but-cant-use-it--how-can-delete-a-iso-document-when-it-is-used-by-system/</link> <pubDate>Mon, 18 Mar 2024 00:00:00 +0000</pubDate><source url="https://darstib.github.io/blog/feed_rss_created.xml">My_blog</source><guid isPermaLink="true">https://darstib.github.io/blog/2024/03/18/why-i-connect-wifi-but-cant-use-it--how-can-delete-a-iso-document-when-it-is-used-by-system/</guid> </item> <item> <title>1 2 learn to use Vim editor</title> <description>&lt;h2&gt;I 为什么学 Vim&lt;/h2&gt;&lt;p&gt;放着好端端的类似于 word 以及像我们现在用的 obsidian 软件不用，为什么要学什么 vim 或者说 Emacs 等类似编辑器呢？&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;写作和写代码其实是两项非常不同的活动。当我们编程的时候，会经常在文件间进行切换、阅读、浏览和修改代码，而不是连续编写一大段的文字。因此代码编辑器和文本编辑器是很不同的两种工具（例如微软的 Word 与 Visual Studio Code）。作为程序员，我们大部分时间都花在代码编辑上，所以花点时间掌握某个适合自己的编辑器是非常值得的&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;missing-semester 上是这么说的，我想这类编辑器意义也正是如此；至于为什么是 vim，理由颇多，读者可以自行了解这类编辑器之间的区别，一个参考是 &lt;a href=&#34;https://insights.stackoverflow.com/survey/2019/#development-environments-and-tools&#34;&gt;Stack Overflow 的调查&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;当然，一个在 Linux 同样使用较多的代替品是 &lt;strong&gt;nano&lt;/strong&gt; ，&lt;a href=&#34;https://www.labno3.com/2021/04/15/guide-to-the-nano-text-editor/&#34;&gt;这里&lt;/a&gt;是一个教程&lt;/p&gt;&lt;/blockquote&gt;</description><link>https://darstib.github.io/blog/2024/03/17/1-2-learn-to-use-vim-editor/</link> <pubDate>Sun, 17 Mar 2024 00:00:00 +0000</pubDate><source url="https://darstib.github.io/blog/feed_rss_created.xml">My_blog</source><guid isPermaLink="true">https://darstib.github.io/blog/2024/03/17/1-2-learn-to-use-vim-editor/</guid> </item> <item> <title>Basic use of logisim</title> <category>blog</category> <description>&lt;hr&gt;&lt;p&gt;对于每一位学习计算机系统或者数字逻辑电路的 zjuer，logisim 是必须使用的，下面将较为详细地介绍其使用方法。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;知识条件：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;安装 logisim-evolution 并学会启动&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;清楚基本的概念，如引脚、反相器及对应图标，线路连接原理&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;实施环境：&lt;/p&gt;&lt;p&gt;logisim-evolution-3.8.0-all.jar&lt;/p&gt;&lt;/blockquote&gt;</description><link>https://darstib.github.io/blog/2024/03/16/basic-use-of-logisim/</link> <pubDate>Sat, 16 Mar 2024 00:00:00 +0000</pubDate><source url="https://darstib.github.io/blog/feed_rss_created.xml">My_blog</source><guid isPermaLink="true">https://darstib.github.io/blog/2024/03/16/basic-use-of-logisim/</guid> </item> <item> <title>1 1 shell script and basic tools</title> <category>Bash</category> <category>Shell</category> <category>script</category> <category>tool</category> <description>&lt;h2&gt;I Shell 脚本&lt;/h2&gt;&lt;p&gt;Shell 脚本（shell script），是一种为 shell 编写的脚本程序。业界所说的 shell 通常都是指 shell 脚本，但读者朋友要知道，shell 和 shell script 是两个不同的概念。由于习惯的原因，简洁起见，本文出现的 &#34;shell 编程&#34; 都是指 shell 脚本编程，不是指开发 shell 自身。&lt;/p&gt;&lt;p&gt;在一般情况下，人们并不区分 Bourne Shell 和 Bourne Again Shell，所以，像 &lt;strong&gt;#!/bin/sh&lt;/strong&gt;，它同样也可以改为 &lt;strong&gt;#!/bin/bash&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;&lt;code&gt;#!&lt;/code&gt; 告诉系统其后路径所指定的程序即是解释此脚本文件的 Shell 程序。&lt;/p&gt;</description><link>https://darstib.github.io/blog/2024/03/16/1-1-shell-script-and-basic-tools/</link> <pubDate>Sat, 16 Mar 2024 00:00:00 +0000</pubDate><source url="https://darstib.github.io/blog/feed_rss_created.xml">My_blog</source><guid isPermaLink="true">https://darstib.github.io/blog/2024/03/16/1-1-shell-script-and-basic-tools/</guid> </item> <item> <title>1 0 linux shell</title> <category>Bash</category> <category>Linux</category> <category>MIT</category> <category>Missing-semester</category> <category>Shell</category> <description>&lt;h2&gt;I 前言&lt;/h2&gt;&lt;h3&gt;I.1 什么是 shell?&lt;/h3&gt;&lt;p&gt;shell是操作系统为用户提供交互界面的命令行解释器的统称，例如Windows中的cmd就是一种shell。bash 是其中最流行的一种。bash 是 Bourne Again shell 的简称。&lt;/p&gt;</description><link>https://darstib.github.io/blog/2024/03/15/1-0-linux-shell/</link> <pubDate>Fri, 15 Mar 2024 00:00:00 +0000</pubDate><source url="https://darstib.github.io/blog/feed_rss_created.xml">My_blog</source><guid isPermaLink="true">https://darstib.github.io/blog/2024/03/15/1-0-linux-shell/</guid> </item> <item> <title>Why we need requirements</title> <category>blog</category> <category>introduction</category> <description>&lt;hr&gt;&lt;blockquote&gt;&lt;p&gt;A fall into the pit, a gain in the wit.吃一堑，长一智&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;使用 mkdocs 建立笔记本时遇到的一个问题：&lt;/p&gt;&lt;p&gt;将代码 push 进 GitHub 时，运行 workflow 时出现错误： &lt;code&gt;ERROR - Config value &#39;plugins&#39;: The &#34;xxx&#34; plugin is not installed&lt;/code&gt; ，也就是我们插件没能够安装，但是我们在配置环境的时候已经安装好这些插件了，为什么说没有？&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt;&lt;p&gt;[!environment] &lt;/p&gt;&lt;ul&gt;&lt;li&gt;WSL(ubuntu 22.04，请对基本 linux 命令有了解)&lt;/li&gt;&lt;li&gt;VScode (需要在 wsl 有安装，在 wsl 中使用命令 &lt;code&gt;code file_path&lt;/code&gt; 打开你想用 vscode 打开的文件夹)&lt;/li&gt;&lt;li&gt;github(请对 repository/branch/workflow 有基本了解)&lt;/li&gt;&lt;li&gt;git(对git与github的关系应有一定了解)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;[!conditions]&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Markdown 是什么？&lt;/li&gt;&lt;li&gt;HTML 是什么？&lt;/li&gt;&lt;li&gt;什么是 &lt;code&gt;pip&lt;/code&gt; ？&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;</description><link>https://darstib.github.io/blog/2024/03/13/why-we-need-requirements/</link> <pubDate>Wed, 13 Mar 2024 00:00:00 +0000</pubDate><source url="https://darstib.github.io/blog/feed_rss_created.xml">My_blog</source><guid isPermaLink="true">https://darstib.github.io/blog/2024/03/13/why-we-need-requirements/</guid> </item> <item> <title>Obsidian begin</title> <category>Obsidian</category> <category>beginner</category> <category>guide</category> <description>&lt;h2&gt;1 引言&lt;/h2&gt;&lt;p&gt;这是我的第一篇笔记，基于 &lt;a href=&#34;https://publish.obsidian.md/help-zh/%E7%94%B1%E6%AD%A4%E5%BC%80%E5%A7%8B&#34;&gt;Begin from here&lt;/a&gt; 写就，下面是一些常用功能&lt;/p&gt;&lt;p&gt;由于 Obsidian 是一个基于 Markdown 进行记录的知识库软件,不少语法相近，因此掌握一定的 Markdown 语法是较为必要的，不妨看看 &lt;a href=&#34;https://markdown.com.cn/&#34;&gt;Markdown官方教程&lt;/a&gt;，学习一些基本的格式化手段和表格构建&lt;/p&gt;</description><link>https://darstib.github.io/blog/2024/02/14/obsidian-begin/</link> <pubDate>Wed, 14 Feb 2024 00:00:00 +0000</pubDate><source url="https://darstib.github.io/blog/feed_rss_created.xml">My_blog</source><guid isPermaLink="true">https://darstib.github.io/blog/2024/02/14/obsidian-begin/</guid> </item> </channel></rss>